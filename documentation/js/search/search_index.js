var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/classes/ActionProcedure.html",[0,0.172,1,3.214]],["body/classes/ActionProcedure.html",[0,0.233,1,4.367,2,0.072,3,0.072,4,0.052,5,1.924,6,3.762,7,2.155,8,1.237,9,0.155,10,0.586,11,1.341,12,7.234,13,1.5,14,3.387,15,3.154,16,3.518,17,3.154,18,2.895,19,3.518,20,3.518,21,3.518,22,3.518,23,3.518,24,3.049,25,3.154,26,3.387,27,0.337,28,2.73,29,3.078,30,3.518,31,2.207,32,0.484,33,3.34,34,2.759,35,0.414,36,0.344,37,5.876,38,0.435,39,0.01,40,0.262,41,0.561,42,1.65,43,1.612,44,1.589,45,2.863,46,1.103,47,1.149,48,3.972,49,2.328,50,1.696,51,2.328,52,2.328,53,0.782,54,2.328,55,3.713,56,2.328,57,1.218,58,2.328,59,2.328,60,2.328,61,2.328,62,2.328,63,2.811,64,2.328,65,2.328,66,3.387,67,3.558,68,4.272,69,2.963,70,0.276,71,0.795,72,2.237,73,1.831,74,2.328,75,1.877,76,2.328,77,2.328,78,2.328,79,2.328,80,5.801,81,4.272,82,4.272,83,0.244,84,0.072,85,0.008,86,0.632,87,1.783,88,3.558,89,4.272,90,2.328,91,2.357,92,1.838,93,5.876,94,4.272,95,2.424,96,3.518,97,3.762,98,3.789,99,3.648,100,3.648,101,2.501,102,5.876,103,4.272,104,5.876,105,5.876,106,4.272,107,5.876,108,5.876,109,4.272,110,2.428,111,2.428,112,2.328,113,3.426,114,2.328,115,3.426,116,2.428,117,4.272,118,4.272,119,4.272,120,0.006]],["title/injectables/ActiveNodeService.html",[121,1.46,122,3.468]],["body/injectables/ActiveNodeService.html",[0,0.239,2,0.101,3,0.101,4,0.074,9,0.218,10,0.733,11,1.2,27,0.421,32,0.899,35,0.342,36,0.334,38,0.362,39,0.01,40,0.218,41,0.467,44,1.446,46,1.206,47,1.25,50,1.643,70,0.278,71,0.662,79,3.283,83,0.248,84,0.101,85,0.008,120,0.008,121,2.675,122,5.89,123,4.235,124,7.669,125,5.304,126,7.264,127,7.264,128,7.264,129,7.345,130,6.024,131,6.024,132,5.653,133,1.863,134,5.113,135,5.304,136,6.024,137,5.304,138,6.024,139,1.113,140,4.194,141,6.468,142,1.071,143,5.304,144,5.304,145,5.304]],["title/components/AppComponent.html",[146,0.272,147,0.992]],["body/components/AppComponent.html",[0,0.204,2,0.112,3,0.087,4,0.081,8,0.928,32,0.837,36,0.2,38,0.444,39,0.01,40,0.241,83,0.174,84,0.087,85,0.007,86,0.416,120,0.007,139,0.781,142,0.916,146,0.509,147,1.789,148,1.307,149,1.307,150,1.243,151,4.538,152,1.212,153,2.286,154,2.223,155,5.864,156,1.732,157,6.659,158,1.647,159,6.659,160,5.153,161,1.182,162,1.689,163,1.689,164,1.647,165,1.978,166,1.307,167,1.307,168,1.152,169,1.566,170,2.244,171,1.152,172,1.152,173,1.152,174,1.307,175,1.212,176,1.307,177,1.182,178,1.307,179,1.124,180,1.978,181,1.182,182,1.182,183,1.689,184,1.182,185,1.123,186,1.307,187,1.124,188,1.182,189,1.182,190,1.152,191,1.275,192,1.182,193,1.243,194,1.307,195,1.212,196,1.307,197,1.152,198,1.834,199,1.307,200,1.152,201,1.307,202,1.152,203,1.152,204,1.182,205,1.307,206,1.182,207,1.307,208,1.182,209,1.307,210,1.182,211,1.386,212,1.182,213,1.307,214,1.182,215,1.182,216,1.307,217,1.182,218,1.182,219,1.307,220,1.182,221,0.916,222,1.307,223,1.152,224,1.307,225,1.182,226,1.182,227,1.152,228,1.182,229,1.182,230,1.307,231,1.212,232,1.307,233,1.182,234,1.275,235,1.307,236,1.182,237,1.307,238,1.489,239,1.689,240,1.152,241,1.182,242,1.212,243,1.307,244,1.527,245,1.152,246,1.068,247,1.212,248,1.307]],["title/modules/AppModule.html",[86,0.349,249,3.214]],["body/modules/AppModule.html",[2,0.053,3,0.053,4,0.039,31,1.043,35,0.148,39,0.01,50,0.71,83,0.306,84,0.053,85,0.005,86,0.383,120,0.005,139,0.481,142,0.564,146,0.425,147,1.831,150,0.766,161,0.728,168,1.69,171,1.69,173,1.69,179,1.648,181,1.733,182,0.728,184,1.626,187,1.648,189,0.728,190,1.69,192,1.626,197,1.585,200,1.585,202,1.69,203,1.69,204,1.626,206,1.626,208,1.626,210,1.733,211,0.564,212,1.685,214,1.685,217,1.626,218,1.733,220,1.626,223,1.585,225,1.626,226,1.733,227,1.69,228,1.626,229,1.626,233,1.733,240,1.69,245,1.69,246,0.658,249,6.852,250,1.98,251,3.96,252,3.529,253,2.961,254,2.796,255,2.796,256,2.796,257,2.796,258,2.796,259,4.936,260,4.936,261,4.936,262,4.704,263,4.704,264,4.704,265,4.44,266,3.285,267,4.44,268,2.409,269,3.84,270,3.407,271,3.538,272,4.214,273,3.306,274,1.731,275,3.176,276,4.748,277,3.808,278,3.12,279,1.731,280,3.12,281,2.796,282,3.176,283,2.546,284,3.176,285,2.087,286,3.176,287,4.181,288,2.546,289,3.176,290,2.796,291,3.547,292,3.176,293,2.36,294,2.087,295,2.796,296,2.546,297,2.546,298,2.309,299,3.176,300,2.177,301,1.31,302,2.211,303,2.211,304,2.087,305,2.211,306,2.796,307,2.796,308,2.211,309,2.546,310,7.066,311,2.546,312,2.546,313,3.176,314,2.546,315,3.176,316,3.306,317,3.306,318,5.687,319,3.176,320,3.529,321,3.306,322,3.808,323,2.36,324,2.36,325,5.845,326,2.546,327,2.36,328,2.546,329,2.36,330,2.546,331,2.36,332,2.546,333,2.546,334,2.36,335,2.36,336,3.176,337,2.796,338,2.36,339,2.36,340,2.796,341,2.546,342,2.36,343,2.546,344,2.546,345,3.176,346,3.176,347,3.176,348,3.12,349,2.36,350,2.546,351,2.36,352,3.176,353,2.36,354,3.176,355,2.36,356,3.176,357,2.546,358,2.546,359,2.546,360,3.176,361,4.147,362,2.546,363,2.546,364,3.176,365,2.546,366,3.176,367,3.176,368,2.546,369,1.395,370,3.176,371,5.687,372,3.176,373,3.176,374,2.546,375,2.36,376,2.796,377,3.529,378,2.36,379,1.98,380,4.748,381,6.311,382,2.36,383,3.176,384,3.176,385,3.176]],["title/components/CesiumViewerComponent.html",[146,0.272,168,0.967]],["body/components/CesiumViewerComponent.html",[0,0.23,2,0.098,3,0.071,4,0.071,8,0.809,9,0.152,10,0.579,11,1.008,13,0.87,27,0.333,32,0.476,35,0.351,36,0.31,38,0.432,39,0.01,40,0.241,41,0.326,46,0.69,47,0.636,53,0.579,70,0.224,71,0.789,83,0.254,84,0.071,85,0.006,86,0.339,120,0.006,133,1.065,139,0.636,142,0.746,146,0.475,147,0.963,148,1.065,149,1.065,150,1.013,152,0.987,153,2.266,154,2.201,156,1.51,158,1.436,161,0.963,162,1.473,163,1.473,164,1.436,165,1.821,166,1.065,167,1.065,168,1.606,169,1.916,170,2.179,171,0.939,172,0.939,173,0.939,174,1.065,175,0.987,176,1.065,177,0.963,178,1.065,179,0.916,180,1.821,181,0.963,182,0.963,183,1.473,184,0.963,185,0.979,186,1.065,187,0.916,188,0.963,189,1.526,190,0.939,191,1.038,192,0.963,193,1.013,194,1.065,195,0.987,196,1.065,197,0.939,198,1.689,199,1.065,200,0.939,201,1.065,202,0.939,203,0.939,204,0.963,205,1.065,206,0.963,207,1.065,208,0.963,209,1.065,210,0.963,211,1.276,212,0.963,213,1.065,214,0.963,215,0.963,216,1.065,217,0.963,218,0.963,219,1.065,220,0.963,221,1.032,222,1.065,223,0.939,224,1.065,225,0.963,226,0.963,227,0.939,228,0.963,229,0.963,230,1.065,231,0.987,232,1.065,233,0.963,234,1.038,235,1.065,236,0.963,237,1.065,238,1.298,239,1.473,240,0.939,241,0.963,242,0.987,243,1.065,244,1.332,245,0.939,246,1.38,247,0.987,248,1.065,268,2.561,300,1.21,301,1.732,330,6.531,331,6.053,369,1.844,379,3.621,386,2.173,387,2.117,388,1.4,389,2.02,390,3.041,391,3.041,392,3.155,393,3.056,394,3.371,395,2.123,396,7.181,397,2.424,398,3.956,399,2.288,400,4.314,401,2.635,402,3.697,403,3.697,404,3.697,405,3.697,406,3.371,407,2.923,408,1.68,409,1.857,410,2.117,411,1.308,412,1.971,413,1.497,414,2.386,415,3.697,416,3.697,417,2.199,418,2.199,419,4.373,420,5.337,421,2.923,422,4.198,423,3.697,424,3.697,425,3.697,426,4.198,427,4.198,428,2.199,429,3.12,430,1.456,431,4.198,432,5.337,433,3.697,434,3.697,435,3.697,436,3.697,437,3.3,438,3.697,439,3.697,440,3.697,441,3.697,442,3.367,443,3.697,444,3.697,445,1.379]],["title/classes/CodeFactory.html",[0,0.172,446,2.697]],["body/classes/CodeFactory.html",[0,0.304,2,0.109,3,0.109,4,0.079,5,2.071,9,0.234,10,0.764,11,1.237,27,0.439,35,0.357,36,0.297,38,0.388,39,0.01,40,0.234,41,0.501,53,0.814,70,0.258,73,2.63,83,0.275,84,0.109,85,0.008,120,0.008,133,1.638,430,2.832,446,4.776,447,5.686,448,7.435,449,7.658,450,3.833,451,6.457,452,7.658,453,6.457,454,6.141,455,6.743,456,6.457,457,4.243,458,5.178,459,6.457,460,3.838,461,4.027,462,5.686]],["title/classes/CodeGenerator.html",[0,0.172,463,3.468]],["body/classes/CodeGenerator.html",[0,0.233,2,0.072,3,0.072,4,0.052,5,2.228,8,0.594,9,0.154,10,0.585,11,1.186,27,0.337,32,0.483,35,0.403,36,0.339,38,0.514,39,0.01,40,0.31,41,0.663,43,2.727,44,1.224,45,2.439,53,0.898,57,1.772,70,0.294,71,0.468,73,2.251,83,0.264,84,0.072,85,0.006,86,0.611,87,2.035,88,3.555,120,0.006,185,0.719,221,1.347,300,1.933,388,2.062,392,2.577,406,3.393,411,2.778,428,2.232,448,6.363,450,3.81,454,4.703,457,2.8,458,3.417,461,5.235,463,6.855,464,3.752,465,7.226,466,4.703,467,5.165,468,5.165,469,5.165,470,5.165,471,5.165,472,5.165,473,5.165,474,5.165,475,5.165,476,6.363,477,5.165,478,7.226,479,5.866,480,5.866,481,4.261,482,4.703,483,3.382,484,4.261,485,5.165,486,5.379,487,5.379,488,5.379,489,4.261,490,3.417,491,5.165,492,3.28,493,4.261,494,5.165,495,4.261,496,5.165,497,5.906,498,5.906,499,4.261,500,5.165,501,4.261,502,5.165,503,5.906,504,4.261,505,5.165,506,3.075,507,4.261,508,5.165,509,4.261,510,5.165,511,4.261,512,4.261,513,5.165,514,4.261,515,4.261,516,3.752,517,2.533,518,3.166,519,2.657,520,6.708,521,1.872,522,4.261,523,8.395]],["title/injectables/CodeService.html",[121,1.46,265,2.842]],["body/injectables/CodeService.html",[0,0.249,2,0.106,3,0.106,4,0.077,9,0.228,10,0.751,11,1.222,32,0.915,35,0.292,36,0.324,38,0.378,39,0.01,40,0.228,41,0.487,46,1.032,47,0.952,70,0.254,71,0.69,73,2.706,79,3.423,83,0.282,84,0.106,85,0.008,120,0.008,121,2.724,123,4.16,139,0.952,142,1.116,265,4.95,409,2.009,446,3.917,521,3.309,524,5.531,525,8.367,526,7.533,527,6.041,528,6.281,529,6.281,530,6.281,531,6.281,532,7.533,533,4.373,534,4.373,535,4.373,536,4.668,537,3.917,538,7.533,539,6.281]],["title/components/CodeViewerComponent.html",[146,0.272,171,0.967]],["body/components/CodeViewerComponent.html",[0,0.177,2,0.102,3,0.075,4,0.074,8,0.844,9,0.162,10,0.604,11,1.231,27,0.347,32,0.506,35,0.32,36,0.299,38,0.443,39,0.01,40,0.249,41,0.346,46,0.733,47,0.676,53,0.685,70,0.204,71,0.666,83,0.26,84,0.075,85,0.007,86,0.36,120,0.007,139,0.676,142,0.794,146,0.485,147,1.024,148,1.133,149,1.133,150,1.077,152,1.05,153,2.272,154,2.208,156,1.576,158,1.498,161,1.024,162,1.536,163,1.536,164,1.498,165,1.869,166,1.133,167,1.133,168,0.999,169,1.424,170,2.199,171,1.648,172,1.817,173,0.999,174,1.133,175,1.05,176,1.133,177,1.024,178,1.133,179,0.974,180,1.869,181,1.024,182,1.024,183,1.536,184,1.024,185,1.021,186,1.133,187,0.974,188,1.024,189,1.024,190,0.999,191,1.104,192,1.024,193,1.077,194,1.133,195,1.05,196,1.133,197,0.999,198,1.733,199,1.133,200,0.999,201,1.133,202,0.999,203,0.999,204,1.024,205,1.133,206,1.024,207,1.133,208,1.024,209,1.133,210,1.024,211,1.31,212,1.024,213,1.133,214,1.024,215,1.024,216,1.133,217,1.024,218,1.024,219,1.133,220,1.024,221,0.794,222,1.133,223,0.999,224,1.133,225,1.024,226,1.024,227,0.999,228,1.024,229,1.024,230,1.133,231,1.05,232,1.133,233,1.024,234,1.104,235,1.133,236,1.024,237,1.133,238,1.354,239,1.536,240,0.999,241,1.024,242,1.05,243,1.133,244,1.389,245,0.999,246,1.425,247,1.05,248,1.133,265,4.842,268,2.628,295,3.932,296,3.58,297,3.58,298,2.171,300,1.745,301,1.842,306,3.932,326,6.369,327,5.903,386,2.119,387,2.251,388,1.461,389,2.085,390,3.172,391,3.172,393,3.136,394,3.46,395,2.179,401,3.12,408,1.787,413,1.592,417,2.338,418,2.338,460,2.654,540,5.107,541,7.369,542,3.932,543,4.5,544,4.856,545,4.465,546,3.58,547,3.58,548,3.932,549,3.58,550,4.465,551,4.465,552,4.465,553,4.465]],["title/components/ConsoleComponent.html",[146,0.272,173,0.967]],["body/components/ConsoleComponent.html",[0,0.174,2,0.101,3,0.074,4,0.073,8,0.834,9,0.159,10,0.597,11,1.032,27,0.343,32,0.498,35,0.317,36,0.319,38,0.44,39,0.01,40,0.247,41,0.341,46,0.721,47,0.665,70,0.247,71,0.868,83,0.23,84,0.074,85,0.006,86,0.354,120,0.006,139,0.665,142,0.78,146,0.482,147,1.006,148,1.113,149,1.113,150,1.058,152,1.032,153,2.271,154,2.206,156,1.557,158,1.48,161,1.006,162,1.518,163,1.518,164,1.48,165,1.856,166,1.113,167,1.113,168,0.981,169,1.408,170,2.194,171,0.981,172,0.981,173,1.636,174,1.113,175,1.032,176,1.113,177,1.006,178,1.113,179,0.957,180,1.856,181,1.006,182,1.006,183,1.518,184,1.006,185,1.009,186,1.113,187,0.957,188,1.006,189,1.006,190,0.981,191,1.085,192,1.006,193,1.058,194,1.113,195,1.032,196,1.113,197,0.981,198,1.721,199,1.113,200,0.981,201,1.113,202,0.981,203,0.981,204,1.006,205,1.113,206,1.006,207,1.113,208,1.006,209,1.113,210,1.006,211,1.3,212,1.006,213,1.113,214,1.006,215,1.006,216,1.113,217,1.006,218,1.006,219,1.113,220,1.006,221,0.78,222,1.113,223,0.981,224,1.113,225,1.006,226,1.006,227,0.981,228,1.006,229,1.006,230,1.113,231,1.032,232,1.113,233,1.006,234,1.085,235,1.113,236,1.006,237,1.113,238,1.339,239,1.518,240,0.981,241,1.006,242,1.032,243,1.113,244,1.373,245,0.981,246,0.91,247,1.032,248,1.113,266,3.842,300,1.264,302,3.055,386,2.227,388,1.444,389,2.067,395,2.163,413,1.565,554,3.864,555,5.985,556,5.985,557,3.733,558,5.985,559,5.985,560,4.808,561,4.808,562,7.316,563,6.442,564,4.563,565,7.316,566,4.388,567,5.985,568,4.388,569,4.388,570,4.388,571,4.388,572,4.388,573,4.349,574,2.392,575,3.402,576,4.388,577,4.388,578,4.388,579,2.884,580,4.388,581,3.519,582,4.388,583,3.864,584,4.448,585,5.985,586,4.388,587,1.992,588,4.388,589,4.388,590,3.864,591,4.388,592,5.985,593,4.388,594,4.388]],["title/injectables/ConsoleService.html",[121,1.46,266,2.103]],["body/injectables/ConsoleService.html",[0,0.185,2,0.105,3,0.079,4,0.057,9,0.169,10,0.623,11,1.065,13,1.294,27,0.358,32,0.797,35,0.398,36,0.342,38,0.452,39,0.01,40,0.272,41,0.582,43,1.763,44,1.283,46,1.233,47,1.137,53,0.843,70,0.29,71,0.929,83,0.237,84,0.118,85,0.007,92,1.709,120,0.007,121,2.373,123,4.302,133,1.784,139,0.708,146,0.294,241,1.071,266,3.036,430,2.792,445,1.535,483,3.148,521,2.743,533,4.895,534,3.252,535,5.721,536,3.471,560,4.932,563,6.609,584,5.225,587,2.121,595,3.746,596,7.506,597,6.019,598,7.506,599,6.243,600,6.609,601,7.506,602,7.506,603,6.609,604,4.103,605,6.243,606,5.497,607,6.243,608,6.243,609,5.578,610,4.672,611,4.446,612,6.243,613,4.672,614,4.672,615,4.672,616,4.672,617,4.672,618,6.243,619,4.672,620,7.032,621,6.243,622,4.672,623,5.497,624,4.672,625,4.672,626,6.609,627,6.243,628,4.672,629,4.672,630,4.672,631,5.497,632,4.386,633,3.746,634,1.713,635,2.546,636,4.114,637,2.655,638,2.777,639,4.114,640,3.471,641,3.746,642,2.355,643,3.746,644,4.672,645,4.672,646,4.672,647,4.672,648,4.672,649,3.746,650,3.252,651,5.497,652,4.114,653,3.471,654,4.672,655,3.746,656,4.672,657,4.672,658,4.672,659,6.243,660,4.672,661,4.672,662,4.672,663,4.672,664,6.243,665,4.672,666,2.355,667,4.672,668,4.672]],["title/classes/Constants.html",[0,0.172,669,3.011]],["body/classes/Constants.html",[0,0.312,2,0.114,3,0.114,4,0.083,9,0.245,13,1.631,36,0.305,39,0.01,53,0.785,70,0.265,79,3.686,84,0.114,85,0.009,120,0.009,430,2.73,669,5.479,670,5.955,671,7.869,672,6.763,673,6.763,674,7.869,675,6.763,676,6.763,677,6.763,678,7.869,679,6.763,680,6.763,681,6.763]],["title/modules/CustomMaterialModule.html",[86,0.349,262,3.011]],["body/modules/CustomMaterialModule.html",[0,0.252,2,0.107,3,0.107,4,0.078,39,0.01,83,0.289,84,0.128,85,0.008,86,0.611,120,0.008,139,0.962,146,0.4,262,5.277,278,4.171,280,4.981,291,4.728,377,6.023,378,4.717,682,6.347,683,6.347,684,6.5,685,7.137,686,8.105,687,8.105,688,6.023,689,8.105,690,8.105,691,8.105,692,8.105,693,6.5,694,8.105,695,8.105,696,6.5,697,8.105,698,8.105,699,8.105,700,3.773,701,6.347,702,4.419,703,5.589]],["title/classes/DataProcedure.html",[0,0.172,704,3.214]],["body/classes/DataProcedure.html",[0,0.243,2,0.077,3,0.077,4,0.056,5,1.884,7,2.249,8,1.245,9,0.165,10,0.612,11,1.349,13,1.539,14,3.498,15,3.257,16,3.634,17,3.257,18,2.972,19,3.634,20,3.634,21,3.634,22,3.634,23,3.634,24,3.149,25,3.257,26,3.498,27,0.352,28,2.802,29,3.212,30,3.634,31,2.279,32,0.516,33,3.486,34,2.879,35,0.415,36,0.345,38,0.447,39,0.01,40,0.269,41,0.576,42,1.722,43,1.717,44,1.564,45,2.894,46,1.22,47,1.237,48,4.004,49,2.479,50,1.734,51,2.479,52,2.479,53,0.773,54,2.479,55,3.768,56,2.479,57,1.607,58,2.479,59,2.479,60,2.479,61,2.479,62,2.479,63,2.885,64,2.479,65,2.479,66,3.498,67,3.625,69,3.092,70,0.261,71,0.816,72,2.382,73,1.91,74,2.479,75,1.998,76,2.479,77,2.479,78,2.479,83,0.25,84,0.077,85,0.008,86,0.494,88,2.784,90,2.479,91,2.302,95,2.53,96,2.982,97,4.005,98,3.212,99,3.092,100,3.092,101,2.61,110,2.586,111,2.586,112,2.479,114,2.479,116,2.586,120,0.007,430,2.407,634,2.249,704,4.557,705,4.005,706,5.954,707,6.133,708,4.549,709,4.549,710,4.549,711,4.549,712,4.549,713,2.704,714,2.837]],["title/classes/DataSubscriber.html",[0,0.172,715,2.697]],["body/classes/DataSubscriber.html",[0,0.292,2,0.102,3,0.102,4,0.074,9,0.219,10,0.735,11,1.305,18,3.179,27,0.423,32,0.686,35,0.394,36,0.328,38,0.443,39,0.01,40,0.267,41,0.572,53,0.792,70,0.204,71,0.665,83,0.268,84,0.102,85,0.008,87,1.837,120,0.008,139,0.917,388,1.46,393,3.517,408,3.39,560,5.43,561,5.43,564,4.595,581,4.854,584,4.499,611,4.188,715,4.595,716,5.66,717,5.331,718,4.608,719,4.841,720,7.367,721,6.054,722,6.054,723,5.475,724,6.054,725,5.331,726,4.499,727,5.331,728,5.331,729,5.331,730,5.331,731,5.331]],["title/classes/DataSubscriber-1.html",[0,0.143,634,1.321,715,2.246]],["body/classes/DataSubscriber-1.html",[0,0.292,2,0.102,3,0.102,4,0.074,9,0.219,10,0.735,11,1.305,18,3.179,27,0.423,32,0.686,35,0.394,36,0.328,38,0.443,39,0.01,40,0.267,41,0.572,53,0.792,70,0.204,71,0.665,83,0.268,84,0.102,85,0.008,87,1.837,120,0.008,139,0.917,388,1.46,393,3.517,408,3.39,560,5.43,561,5.43,564,4.595,581,4.854,584,4.499,611,4.188,715,4.595,718,4.608,719,4.841,723,5.475,725,5.331,726,4.499,727,5.331,728,5.331,729,5.331,730,5.331,731,5.331,732,5.996,733,5.331,734,7.367,735,6.054,736,6.054,737,6.054]],["title/components/DisplayComponent.html",[146,0.272,177,0.992]],["body/components/DisplayComponent.html",[0,0.112,2,0.073,3,0.048,4,0.053,7,1.593,8,0.606,9,0.102,10,0.433,11,1.326,13,1.727,18,1.739,27,0.249,32,0.32,35,0.376,36,0.327,38,0.438,39,0.01,40,0.256,41,0.498,42,1.669,44,1.236,48,2.698,50,1.329,53,0.804,57,1.098,70,0.262,71,0.821,83,0.216,84,0.048,85,0.005,86,0.228,87,0.857,91,1.855,92,1.756,120,0.005,133,1.508,139,0.428,142,0.502,146,0.404,147,0.648,148,0.716,149,0.716,150,0.681,152,0.664,153,2.215,154,2.144,156,1.13,158,1.075,161,0.648,162,1.102,163,1.102,164,1.075,165,2.066,166,0.716,167,0.716,168,0.632,169,1.022,170,2.024,171,0.632,172,0.632,173,0.632,174,0.716,175,0.664,176,0.716,177,1.363,178,0.716,179,0.616,180,1.508,181,0.648,182,0.648,183,1.102,184,0.648,185,0.733,186,0.716,187,0.616,188,0.648,189,0.648,190,0.632,191,0.699,192,0.648,193,0.681,194,0.716,195,0.664,196,0.716,197,0.632,198,1.398,199,0.716,200,0.632,201,0.716,202,0.632,203,0.632,204,0.648,205,0.716,206,0.648,207,0.716,208,0.648,209,0.716,210,0.648,211,1.057,212,0.648,213,0.716,214,0.648,215,0.648,216,0.716,217,0.648,218,0.648,219,0.716,220,0.648,221,0.502,222,0.716,223,0.632,224,0.716,225,0.648,226,0.648,227,0.632,228,0.648,229,0.648,230,0.716,231,0.664,232,0.716,233,0.648,234,0.699,235,0.716,236,0.648,237,0.716,238,0.972,239,1.102,240,0.632,241,0.648,242,0.664,243,0.716,244,1.214,245,0.632,246,1.098,247,0.664,248,0.716,280,1.856,300,0.814,369,2.326,379,4.913,388,1.048,389,1.606,393,1.849,395,1.757,398,3.533,408,2.568,437,3.851,445,1.739,460,1.679,560,3.479,561,3.479,564,3.707,573,3.533,611,2.469,634,1.593,655,4.766,715,4.402,716,5.437,718,3.549,719,2.855,723,3.934,738,2.487,739,2.855,740,4.344,741,4.344,742,6.776,743,6.776,744,5.944,745,5.944,746,5.944,747,7.058,748,6.215,749,4.344,750,5.234,751,5.944,752,4.344,753,4.344,754,2.824,755,2.824,756,2.824,757,2.824,758,2.824,759,2.824,760,4.344,761,2.824,762,2.487,763,2.824,764,2.824,765,2.824,766,2.824,767,2.824,768,2.824,769,2.824,770,2.824,771,2.487,772,2.487,773,2.487,774,2.487,775,1.761,776,1.966,777,3.484,778,2.487,779,2.099,780,2.487,781,2.824,782,2.824,783,2.824,784,2.824,785,2.824,786,2.824,787,2.824,788,2.824,789,2.824,790,5.294,791,4.344,792,2.824,793,2.824,794,4.344,795,5.944,796,4.344,797,2.824,798,4.344,799,5.944,800,4.344,801,2.824,802,4.344,803,2.487,804,4.344,805,2.824,806,2.824,807,3.825,808,2.824,809,5.944,810,2.824,811,3.825,812,2.824,813,5.294,814,2.824,815,2.824,816,4.344,817,2.824,818,2.824,819,2.824,820,7.473,821,2.824,822,7.473,823,2.824,824,2.824,825,2.824,826,7.285,827,6.417,828,5.944,829,4.344,830,2.824,831,2.824,832,4.344,833,2.824,834,2.487,835,2.824,836,2.824,837,2.824,838,4.344,839,4.344,840,4.344,841,2.824,842,2.824,843,2.824,844,2.824,845,2.824,846,2.824,847,3.825,848,4.344,849,4.344,850,4.344,851,4.344,852,2.824,853,2.824,854,4.344,855,5.433,856,4.344,857,3.024,858,4.344,859,2.824,860,2.487,861,2.824,862,2.824,863,4.344,864,4.344,865,2.824,866,2.824,867,2.824,868,4.344,869,2.824,870,2.824,871,2.824,872,2.824,873,2.824,874,2.824,875,2.824,876,2.824,877,2.824,878,2.099,879,4.344,880,2.099,881,2.265,882,2.824,883,5.944,884,4.344,885,2.824,886,2.824,887,2.824,888,2.824,889,2.824,890,7.473,891,2.824,892,2.824,893,5.294,894,2.824,895,2.487,896,2.824,897,4.344,898,2.824,899,2.824,900,3.484,901,2.824,902,4.344,903,4.344,904,2.824,905,2.824,906,2.824,907,5.944,908,4.344,909,3.825,910,4.344]],["title/components/EditorComponent.html",[146,0.272,179,0.943]],["body/components/EditorComponent.html",[0,0.176,2,0.101,3,0.074,4,0.074,8,0.839,9,0.16,10,0.6,11,1.036,27,0.345,32,0.502,35,0.358,36,0.32,38,0.462,39,0.01,40,0.266,41,0.467,44,1.445,46,0.989,47,0.912,50,1.53,70,0.231,71,0.752,83,0.231,84,0.074,85,0.007,86,0.357,91,1.211,92,1.211,120,0.007,139,0.67,142,0.786,146,0.484,147,1.015,148,1.122,149,1.122,150,1.067,152,1.041,153,2.272,154,2.207,156,1.566,158,1.489,161,1.015,162,1.527,163,1.527,164,1.489,165,1.862,166,1.122,167,1.122,168,0.989,169,1.415,170,2.196,171,0.989,172,0.989,173,0.989,174,1.122,175,1.041,176,1.122,177,1.015,178,1.122,179,1.601,180,1.862,181,1.015,182,1.015,183,1.527,184,1.015,185,1.015,186,1.122,187,0.965,188,1.015,189,1.015,190,0.989,191,1.094,192,1.015,193,1.067,194,1.122,195,1.041,196,1.122,197,0.989,198,1.727,199,1.122,200,0.989,201,1.122,202,0.989,203,0.989,204,1.015,205,1.122,206,1.015,207,1.122,208,1.015,209,1.122,210,1.015,211,1.305,212,1.015,213,1.122,214,1.015,215,1.015,216,1.122,217,1.015,218,1.015,219,1.122,220,1.015,221,1.365,222,1.122,223,0.989,224,1.122,225,1.015,226,1.015,227,0.989,228,1.015,229,1.015,230,1.122,231,1.041,232,1.122,233,1.015,234,1.094,235,1.122,236,1.015,237,1.122,238,1.346,239,1.527,240,0.989,241,1.015,242,1.041,243,1.122,244,1.38,245,0.989,246,0.917,247,1.041,248,1.122,268,2.618,298,2.926,300,1.275,301,1.825,386,2.231,388,1.452,389,2.076,394,3.447,395,2.17,399,2.411,401,2.732,409,1.415,411,2.131,412,2.077,413,1.578,540,5.083,911,3.896,912,4.472,913,4.472,914,7.341,915,6.464,916,7.341,917,7.341,918,5.3,919,6.018,920,4.424,921,4.424,922,4.424,923,4.424,924,4.424,925,4.424,926,4.424,927,4.424,928,4.424,929,4.424,930,4.424,931,4.424,932,4.424,933,4.424,934,3.421]],["title/classes/ElseControlProcedure.html",[0,0.172,935,3.214]],["body/classes/ElseControlProcedure.html",[0,0.248,2,0.079,3,0.079,4,0.057,5,1.785,7,2.293,8,1.248,9,0.17,10,0.623,11,1.341,13,1.557,14,3.549,15,3.305,16,3.686,17,3.305,18,3.007,19,3.686,20,3.686,21,3.686,22,3.686,23,3.686,24,3.195,25,3.305,26,3.549,27,0.359,28,2.835,29,3.274,30,3.686,31,2.312,32,0.531,33,3.553,34,2.935,35,0.415,36,0.345,38,0.452,39,0.01,40,0.272,41,0.583,42,1.755,43,1.767,44,1.572,45,2.908,46,1.156,47,1.066,48,4.017,49,2.551,50,1.68,51,2.551,52,2.551,53,0.749,54,2.551,55,3.792,56,2.551,57,1.296,58,2.551,59,2.551,60,2.551,61,2.551,62,2.551,63,2.919,64,2.551,65,2.551,66,3.549,67,3.655,69,3.152,70,0.264,71,0.826,72,2.451,73,1.947,74,2.551,75,2.056,76,2.551,77,2.551,78,2.551,83,0.253,84,0.079,85,0.007,86,0.504,88,2.838,90,2.551,91,2.339,92,1.281,95,2.579,96,3.04,98,3.274,99,3.152,100,3.152,101,2.66,110,2.66,111,2.66,112,2.551,114,2.551,116,2.66,120,0.007,713,2.782,714,2.919,935,4.645,936,4.121,937,4.681,938,4.681,939,3.716,940,4.681,941,3.478,942,3.478]],["title/classes/ElseIfControlProcedure.html",[0,0.172,943,3.214]],["body/classes/ElseIfControlProcedure.html",[0,0.248,2,0.079,3,0.079,4,0.057,5,1.785,7,2.293,8,1.248,9,0.17,10,0.623,11,1.341,13,1.557,14,3.549,15,3.305,16,3.686,17,3.305,18,3.007,19,3.686,20,3.686,21,3.686,22,3.686,23,3.686,24,3.195,25,3.305,26,3.549,27,0.359,28,2.835,29,3.274,30,3.686,31,2.312,32,0.531,33,3.553,34,2.935,35,0.415,36,0.345,38,0.452,39,0.01,40,0.272,41,0.583,42,1.755,43,1.767,44,1.572,45,2.908,46,1.156,47,1.066,48,4.017,49,2.551,50,1.68,51,2.551,52,2.551,53,0.749,54,2.551,55,3.792,56,2.551,57,1.296,58,2.551,59,2.551,60,2.551,61,2.551,62,2.551,63,2.919,64,2.551,65,2.551,66,3.549,67,3.655,69,3.152,70,0.264,71,0.826,72,2.451,73,1.947,74,2.551,75,2.056,76,2.551,77,2.551,78,2.551,83,0.253,84,0.079,85,0.007,86,0.504,88,2.838,90,2.551,91,2.339,92,1.281,95,2.579,96,3.04,98,3.274,99,3.152,100,3.152,101,2.66,110,2.66,111,2.66,112,2.551,114,2.551,116,2.66,120,0.007,713,2.782,714,2.919,939,3.716,941,3.478,942,3.478,943,4.645,944,4.121,945,4.681,946,4.681,947,4.681]],["title/injectables/ExecuteService.html",[121,1.46,267,2.842]],["body/injectables/ExecuteService.html",[0,0.177,2,0.075,3,0.075,4,0.055,9,0.162,10,0.735,11,1.269,13,1.424,27,0.347,32,0.506,35,0.282,36,0.286,38,0.268,39,0.01,40,0.162,41,0.346,46,0.994,47,1.321,50,0.998,53,0.869,70,0.15,73,1.885,75,3.018,83,0.274,84,0.075,85,0.007,87,1.354,120,0.007,121,2.318,123,3.744,132,2.931,139,0.676,185,1.021,246,1.255,266,3.582,267,3.977,268,2.627,270,3.714,271,3.858,300,1.285,369,2.659,397,1.506,399,2.431,401,3.118,409,1.936,413,1.591,430,2.754,483,3.464,492,2.747,537,2.782,544,5.508,557,2.782,587,2.025,609,3.315,666,2.249,948,3.928,949,7.7,950,7.366,951,4.328,952,4.841,953,4.514,954,4.461,955,4.461,956,4.461,957,6.052,958,7.941,959,6.486,960,6.052,961,8.718,962,6.052,963,3.977,964,5.329,965,3.977,966,6.052,967,6.052,968,4.328,969,5.329,970,6.052,971,5.329,972,5.329,973,3.597,974,6.052,975,6.052,976,6.052,977,6.052,978,4.461,979,1.898,980,3.315,981,3.928,982,3.928,983,4.461,984,2.652,985,3.315,986,4.461,987,3.928,988,4.461,989,6.052,990,4.461,991,3.928,992,4.461,993,6.869,994,6.052,995,6.052,996,4.461,997,3.928,998,4.461,999,4.461,1000,4.461,1001,6.052,1002,3.315,1003,4.461,1004,4.461,1005,4.461,1006,4.461,1007,4.461]],["title/components/FileLoadDialogComponent.html",[146,0.272,181,0.992]],["body/components/FileLoadDialogComponent.html",[0,0.181,2,0.103,3,0.077,4,0.103,8,0.857,9,0.165,10,0.613,13,1.275,27,0.353,32,0.518,35,0.346,36,0.301,38,0.481,39,0.01,40,0.269,41,0.477,53,0.797,70,0.207,71,0.764,83,0.234,84,0.077,85,0.007,86,0.368,120,0.007,121,1.541,133,1.158,139,0.692,142,1.093,146,0.504,147,1.047,148,1.158,149,1.158,150,1.101,152,1.074,153,2.275,154,2.208,158,1.521,161,1.047,162,1.56,163,1.56,164,1.521,165,1.886,166,1.158,167,1.158,168,1.021,169,1.446,170,2.207,171,1.021,172,1.021,173,1.021,174,1.158,175,1.074,176,1.158,177,1.047,178,1.158,179,0.996,180,1.886,181,1.706,182,1.983,183,1.56,184,1.047,185,1.037,186,1.158,187,0.996,188,1.047,189,1.047,190,1.021,191,1.129,192,1.047,193,1.101,194,1.158,195,1.074,196,1.158,197,1.021,198,1.749,199,1.158,200,1.021,201,1.158,202,1.021,203,1.021,204,1.047,205,1.158,206,1.047,207,1.158,208,1.047,209,1.158,210,1.047,211,1.38,212,1.047,213,1.158,214,1.047,215,1.047,216,1.158,217,1.047,218,1.047,219,1.158,220,1.047,221,0.812,222,1.158,223,1.021,224,1.158,225,1.047,226,1.047,227,1.021,228,1.047,229,1.047,230,1.158,231,1.074,232,1.158,233,1.047,234,1.129,235,1.158,236,1.047,237,1.158,238,1.375,239,1.56,240,1.021,241,1.047,242,1.074,243,1.158,244,1.41,245,1.021,246,0.947,247,1.074,248,1.158,300,1.315,357,6.411,386,2.133,408,1.827,611,4.412,700,2.714,1008,3.661,1009,3.834,1010,5.414,1011,5.404,1012,6.148,1013,6.548,1014,3.661,1015,5.254,1016,6.148,1017,6.148,1018,4.021,1019,2.848,1020,4.566,1021,4.021,1022,3,1023,3,1024,4.566,1025,4.021,1026,4.566,1027,4.566,1028,4.566,1029,4.566]],["title/classes/FileService.html",[0,0.172,1030,3.214]],["body/classes/FileService.html",[0,0.302,2,0.107,3,0.107,4,0.093,9,0.231,13,1.323,27,0.436,35,0.297,36,0.247,38,0.384,39,0.01,40,0.231,41,0.495,53,0.636,70,0.215,71,0.701,84,0.107,85,0.008,120,0.008,123,3.697,133,1.618,379,4.742,421,4.442,423,5.618,424,5.618,425,5.618,428,3.342,430,2.818,432,6.992,433,5.618,434,5.618,435,5.618,436,5.618,437,4.322,438,5.618,439,5.618,440,5.618,441,5.618,442,5.116,443,5.618,444,5.618,445,2.096,1030,5.651,1031,5.618,1032,7.604,1033,7.604,1034,6.38,1035,4.741,1036,5.618]],["title/classes/FileUtils.html",[0,0.172,429,3.214]],["body/classes/FileUtils.html",[0,0.267,2,0.072,3,0.072,4,0.052,5,1.707,9,0.155,10,0.587,11,1.286,13,1.395,15,2.013,17,2.013,18,2.358,24,1.946,25,2.013,27,0.386,28,1.618,31,1.409,35,0.365,36,0.228,38,0.258,39,0.01,40,0.244,41,0.333,42,1.204,44,1.548,46,1.247,47,1.345,50,1.755,53,0.88,57,1.221,70,0.295,71,0.862,83,0.244,84,0.072,85,0.006,87,1.787,91,2.2,92,1.842,120,0.006,133,1.088,142,1.455,274,2.337,388,1.034,392,3.183,428,3.085,429,4.377,430,2.722,445,1.409,457,2.817,574,2.337,634,1.573,642,2.97,934,2.437,1037,3.775,1038,6.38,1039,5.891,1040,5.891,1041,4.287,1042,5.891,1043,4.317,1044,4.287,1045,2.985,1046,3.775,1047,4.307,1048,3.085,1049,3.348,1050,4.287,1051,3.438,1052,2.985,1053,3.438,1054,3.438,1055,3.438,1056,3.186,1057,3.186,1058,2.985,1059,6.687,1060,3.775,1061,5.926,1062,7.245,1063,3.186,1064,4.287,1065,5.831,1066,4.287,1067,5.891,1068,3.438,1069,4.287,1070,4.287,1071,4.287,1072,5.891,1073,4.723,1074,5.187,1075,2.817,1076,6.729,1077,6.909,1078,4.287,1079,7.245,1080,4.287,1081,4.287,1082,3.949,1083,3.186,1084,7.594,1085,3.775,1086,3.775,1087,3.775,1088,3.775,1089,4.723,1090,2.985,1091,3.775,1092,4.287,1093,3.775,1094,3.186,1095,3.775,1096,4.287,1097,4.287,1098,4.287,1099,5.891,1100,3.438,1101,4.287,1102,3.438,1103,4.287,1104,3.186,1105,3.438,1106,5.81,1107,4.287,1108,4.287,1109,3.438,1110,4.287,1111,3.21,1112,2.985,1113,2.817,1114,4.287,1115,2.245,1116,4.287,1117,3.775,1118,3.438,1119,4.287,1120,4.287,1121,3.438,1122,2.985,1123,4.287,1124,4.287,1125,4.723,1126,4.287,1127,3.186,1128,3.438,1129,2.985,1130,3.775,1131,3.775,1132,4.287,1133,5.891,1134,4.287,1135,4.287,1136,4.287,1137,3.186]],["title/classes/Flowchart.html",[0,0.172,185,0.729]],["body/classes/Flowchart.html",[0,0.219,2,0.066,3,0.066,4,0.048,5,2.285,9,0.266,10,0.549,11,1.367,24,3.154,32,0.442,33,3.131,35,0.408,36,0.349,38,0.496,39,0.01,40,0.305,41,0.64,42,1.094,43,1.47,46,1.05,47,1.285,53,0.893,57,1.801,70,0.296,71,0.893,73,1.213,79,2.123,83,0.247,84,0.066,85,0.006,90,2.123,92,1.066,120,0.006,133,0.988,142,1.445,185,0.929,189,1.263,221,0.979,300,1.587,369,1.711,388,1.329,411,2.284,450,1.768,486,4.418,492,3.154,506,1.657,517,2.315,519,2.429,1052,4.838,1061,6.119,1074,4.851,1087,3.43,1138,3.43,1139,6.119,1140,6.949,1141,6.949,1142,6.949,1143,6.119,1144,6.949,1145,6.949,1146,6.949,1147,6.949,1148,5.509,1149,3.895,1150,3.895,1151,3.895,1152,4.149,1153,3.895,1154,3.895,1155,3.895,1156,3.895,1157,3.895,1158,3.895,1159,3.895,1160,2.712,1161,3.895,1162,3.895,1163,3.895,1164,2.885,1165,2.712,1166,3.895,1167,3.895,1168,3.895,1169,4.094,1170,3.895,1171,3.895,1172,3.895,1173,3.895,1174,4.851,1175,3.895,1176,3.895,1177,3.895,1178,3.895,1179,4.418,1180,3.895,1181,3.895,1182,3.895,1183,3.895,1184,3.895,1185,3.895,1186,3.895,1187,3.895,1188,4.851,1189,3.123,1190,3.895,1191,3.639,1192,3.895,1193,3.895,1194,3.895,1195,3.895,1196,3.835,1197,3.895,1198,3.895,1199,3.895,1200,3.895,1201,4.851,1202,3.895,1203,3.895,1204,3.895,1205,3.895,1206,1.964,1207,2.315,1208,3.895,1209,6.949,1210,3.43,1211,3.895,1212,6.949,1213,3.895,1214,6.949,1215,6.119,1216,5.509,1217,6.392,1218,3.895,1219,3.895,1220,3.895,1221,3.895,1222,3.895,1223,3.895,1224,3.895,1225,3.895,1226,3.895,1227,3.895,1228,5.509,1229,3.895,1230,3.895,1231,3.895,1232,3.895,1233,3.895,1234,5.509,1235,3.895]],["title/classes/FlowchartConnectionUtils.html",[0,0.172,1236,2.697]],["body/classes/FlowchartConnectionUtils.html",[0,0.275,2,0.092,3,0.092,4,0.067,5,2.025,9,0.251,13,1.437,27,0.398,31,1.802,35,0.391,36,0.295,38,0.457,39,0.01,40,0.275,41,0.59,50,1.55,53,0.758,57,1.867,70,0.269,73,1.709,83,0.277,84,0.092,85,0.008,120,0.008,185,1.418,221,1.463,392,2.41,411,1.709,430,2.996,450,2.49,492,4.031,506,2.334,517,3.261,519,3.421,634,2.012,1075,4.992,1152,2.989,1191,4.311,1206,2.766,1207,3.261,1236,4.322,1237,4.83,1238,6.93,1239,6.93,1240,6.93,1241,6.93,1242,6.092,1243,5.646,1244,5.485,1245,6.93,1246,6.4,1247,5.485,1248,5.485,1249,6.102,1250,5.485,1251,2.873,1252,3.421,1253,6.102,1254,2.873,1255,5.485,1256,5.485,1257,4.83,1258,4.83,1259,4.83,1260,4.83,1261,4.83,1262,5.485,1263,6.102,1264,5.485,1265,5.485,1266,5.485,1267,3.261,1268,4.83,1269,4.399]],["title/components/FlowchartControlsComponent.html",[146,0.272,184,0.992]],["body/components/FlowchartControlsComponent.html",[0,0.141,2,0.087,3,0.06,4,0.104,7,1.307,8,0.72,9,0.129,10,0.515,11,1.011,27,0.297,32,0.404,35,0.283,36,0.309,38,0.426,39,0.01,40,0.242,41,0.401,42,1,43,1.345,53,0.706,70,0.257,71,0.918,73,1.11,83,0.279,84,0.06,85,0.006,86,0.417,87,1.568,120,0.006,133,2.019,139,0.54,142,1.081,146,0.446,147,0.817,148,0.904,149,0.904,150,0.859,152,0.838,153,2.247,154,2.18,156,1.345,158,1.278,161,0.817,162,1.311,163,1.311,164,1.278,165,1.797,166,0.904,167,0.904,168,0.797,169,1.216,170,2.119,171,0.797,172,1.156,173,0.797,174,0.904,175,0.838,176,0.904,177,0.817,178,0.904,179,0.777,180,1.692,181,0.817,182,1.694,183,1.311,184,1.53,185,1.396,186,0.904,187,0.777,188,0.817,189,0.817,190,0.797,191,0.881,192,0.817,193,0.859,194,0.904,195,0.838,196,0.904,197,0.797,198,1.569,199,0.904,200,0.797,201,0.904,202,0.797,203,0.797,204,0.817,205,0.904,206,0.817,207,0.904,208,0.817,209,0.904,210,0.817,211,1.259,212,0.817,213,0.904,214,0.817,215,0.817,216,0.904,217,0.817,218,0.817,219,0.904,220,0.817,221,1.186,222,0.904,223,0.797,224,0.904,225,0.817,226,0.817,227,0.797,228,0.817,229,0.817,230,0.904,231,0.838,232,0.904,233,1.185,234,1.752,235,0.904,236,0.817,237,0.904,238,1.156,239,1.311,240,0.797,241,0.817,242,0.838,243,0.904,244,1.185,245,0.797,246,1.072,247,0.838,248,0.904,266,3.244,268,2.526,270,3.364,271,3.494,300,1.922,301,1.47,302,2.48,304,2.341,305,2.48,311,6.481,312,6.481,369,1.565,375,2.648,376,3.137,386,2.157,388,1.247,389,1.846,395,1.973,401,2.761,409,1.945,413,1.271,419,3.997,421,2.48,437,2.025,446,2.222,460,2.118,492,1.617,521,1.565,537,2.222,573,3.966,574,1.942,575,2.938,604,3.997,649,2.857,684,2.857,688,2.648,700,2.118,803,3.137,952,3.396,953,3.997,984,2.118,985,2.648,987,3.137,1009,4.418,1011,2.48,1015,2.341,1022,4.384,1023,2.341,1270,3.137,1271,3.841,1272,5.168,1273,5.168,1274,6.238,1275,5.35,1276,4.144,1277,5.35,1278,5.875,1279,5.875,1280,5.875,1281,3.563,1282,3.563,1283,3.563,1284,5.168,1285,3.563,1286,3.563,1287,3.563,1288,3.563,1289,3.563,1290,3.563,1291,3.563,1292,3.137,1293,2.341,1294,3.598,1295,2.857,1296,3.137,1297,2.341,1298,2.48,1299,5.35,1300,3.137,1301,2.857,1302,5.168,1303,3.563,1304,3.563,1305,3.563,1306,3.563,1307,2.648,1308,3.223,1309,3.563,1310,3.563,1311,1.673,1312,3.563,1313,3.563,1314,3.563,1315,3.563,1316,2.857,1317,2.857,1318,2.857,1319,3.563,1320,3.137,1321,3.137,1322,2.857,1323,5.168,1324,3.563,1325,3.563,1326,3.563,1327,3.137,1328,2.48,1329,3.137,1330,3.563,1331,2.648,1332,3.563,1333,2.222,1334,3.563,1335,2.857,1336,2.857,1337,2.648,1338,2.025,1339,3.563]],["title/classes/FlowchartReader.html",[0,0.172,1293,2.842]],["body/classes/FlowchartReader.html",[0,0.288,2,0.1,3,0.1,4,0.072,5,1.842,9,0.214,27,0.417,35,0.275,36,0.229,38,0.356,39,0.01,40,0.214,41,0.459,42,2.207,44,1.079,63,2.298,70,0.199,83,0.292,84,0.1,85,0.008,92,1.619,120,0.008,133,1.5,185,1.326,221,1.051,411,2.449,428,3.097,430,2.726,445,2.386,492,3.977,517,3.515,650,4.117,984,4.317,1152,3.958,1191,3.803,1206,2.982,1236,4.529,1251,3.097,1267,4.317,1293,5.165,1311,2.777,1340,5.207,1341,7.262,1342,7.262,1343,5.913,1344,4.117,1345,5.913,1346,5.913,1347,5.913,1348,5.824,1349,5.913,1350,7.262,1351,5.913,1352,7.262,1353,5.913,1354,5.913,1355,4.529,1356,7.262,1357,3.886,1358,5.913,1359,5.913,1360,5.913,1361,5.207,1362,5.913,1363,5.913,1364,8.197,1365,5.913,1366,7.86,1367,5.913,1368,5.913,1369,5.913]],["title/classes/FlowchartRenderUtils.html",[0,0.172,1370,3.468]],["body/classes/FlowchartRenderUtils.html",[0,0.269,2,0.062,3,0.062,4,0.045,9,0.134,10,0.528,11,1.262,13,1.286,27,0.304,34,1.731,35,0.359,36,0.278,38,0.373,39,0.01,40,0.279,41,0.481,44,1.131,46,0.87,47,1.133,50,1.516,53,0.8,57,1.848,70,0.26,71,0.822,83,0.278,84,0.062,85,0.006,87,1.119,91,1.697,95,1.521,120,0.006,132,2.423,139,0.559,146,0.334,153,0.912,154,0.889,156,0.959,158,0.912,185,1.143,187,0.804,221,1.448,246,1.098,266,2.576,268,1.889,270,2.672,272,3.304,273,3.689,300,1.953,301,1.521,302,2.567,304,2.423,308,2.567,309,2.957,323,5.555,324,5.555,386,1.995,387,1.859,388,0.889,389,1.608,390,1.931,391,1.931,392,1.62,393,1.569,394,1.731,395,1.09,400,2.74,401,1.674,406,1.731,409,2.391,410,1.859,411,2.595,412,1.731,413,1.315,414,2.096,417,1.931,418,1.931,428,1.931,430,2.958,442,2.957,445,2.456,461,3.304,462,3.247,492,2.405,506,1.569,540,3.937,546,2.957,573,2.192,575,2.096,579,2.423,587,2.405,604,2.423,634,1.943,666,1.859,952,2.423,979,1.569,984,2.192,997,3.247,1043,3.012,1082,2.01,1083,2.74,1089,2.957,1093,3.247,1152,2.01,1191,2.775,1206,1.859,1236,2.3,1243,5.964,1251,1.931,1252,5.005,1292,3.247,1301,5.436,1333,3.304,1348,4.249,1357,3.482,1370,4.249,1371,6.779,1372,6.779,1373,5.298,1374,6.779,1375,5.298,1376,3.149,1377,2.957,1378,5.461,1379,5.298,1380,2.957,1381,5.298,1382,5.298,1383,2.957,1384,2.957,1385,3.687,1386,3.687,1387,3.687,1388,3.687,1389,3.687,1390,3.687,1391,3.687,1392,5.298,1393,5.298,1394,5.298,1395,3.687,1396,3.937,1397,3.687,1398,5.061,1399,6.176,1400,3.687,1401,3.687,1402,2.74,1403,3.687,1404,3.687,1405,3.687,1406,3.687,1407,6.201,1408,3.687,1409,3.687,1410,5.298,1411,5.298,1412,5.298,1413,5.298,1414,5.298,1415,4.666,1416,3.687,1417,3.687,1418,2.74,1419,3.687,1420,3.687,1421,3.687,1422,3.687,1423,3.687,1424,4.666,1425,4.317,1426,3.687,1427,2.192,1428,3.687,1429,3.687,1430,3.687,1431,5.298,1432,3.687,1433,2.192,1434,3.247,1435,3.687,1436,3.247,1437,3.687,1438,3.687,1439,3.687,1440,3.687,1441,3.687,1442,3.687,1443,3.687,1444,3.687,1445,3.687,1446,3.687,1447,3.247,1448,4.608,1449,2.957,1450,3.247,1451,3.687,1452,2.957,1453,2.957,1454,2.957,1455,3.687,1456,3.247,1457,3.687,1458,3.687,1459,3.687,1460,3.687,1461,3.687,1462,3.687,1463,3.687,1464,3.687,1465,3.687,1466,3.687,1467,2.957,1468,3.687,1469,3.247,1470,3.687,1471,5.298,1472,3.687,1473,3.687,1474,3.687,1475,3.687,1476,2.74,1477,3.687,1478,5.298,1479,3.247,1480,3.247,1481,3.687,1482,3.687,1483,3.687,1484,2.01,1485,3.247,1486,3.247,1487,3.687,1488,3.687,1489,2.423,1490,3.687,1491,3.247,1492,3.687,1493,3.687]],["title/injectables/FlowchartService.html",[121,1.46,268,1.542]],["body/injectables/FlowchartService.html",[0,0.156,2,0.066,3,0.093,4,0.068,9,0.142,10,0.552,11,1.322,13,1.582,27,0.318,32,0.444,35,0.408,36,0.345,38,0.502,39,0.01,40,0.302,41,0.648,42,1.554,45,1.323,46,1.253,47,1.188,53,0.847,57,1.829,70,0.286,71,0.955,73,2.171,75,3.062,79,2.136,83,0.288,84,0.066,85,0.006,120,0.006,121,2.165,123,4.332,132,2.576,133,1.627,139,0.594,185,1.24,221,1.239,266,3.119,268,1.974,270,3.234,271,3.36,285,2.576,369,1.722,397,1.323,409,2.351,410,1.977,411,2.29,412,1.841,421,2.729,437,3.646,446,2.445,450,1.779,483,1.977,492,3.336,527,4.438,533,4.466,534,2.729,535,2.729,536,2.913,537,2.445,557,2.445,587,1.779,604,2.576,609,2.913,611,2.228,666,2.79,700,2.33,952,3.637,953,3.637,979,1.668,980,2.913,981,3.452,982,3.452,984,2.33,985,2.913,1009,4.584,1015,2.576,1022,4.83,1023,2.576,1047,2.33,1191,2.898,1206,1.977,1236,2.445,1242,5.894,1243,5.95,1254,2.053,1277,5.144,1293,2.576,1348,3.143,1355,2.445,1434,4.873,1436,4.873,1467,3.143,1469,3.452,1494,3.452,1495,6.415,1496,6.415,1497,6.969,1498,6.137,1499,6.415,1500,6.969,1501,5.534,1502,5.534,1503,5.534,1504,5.534,1505,5.534,1506,5.534,1507,5.534,1508,5.534,1509,6.415,1510,3.143,1511,3.853,1512,4.466,1513,5.534,1514,5.534,1515,6.137,1516,3.92,1517,4.873,1518,5.534,1519,3.92,1520,5.534,1521,5.534,1522,3.92,1523,5.534,1524,3.92,1525,5.534,1526,3.92,1527,3.92,1528,3.92,1529,3.92,1530,3.92,1531,3.92,1532,3.92,1533,3.92,1534,3.92,1535,3.92,1536,3.92,1537,3.92,1538,3.92,1539,3.92,1540,3.92,1541,3.92,1542,3.452,1543,3.92,1544,3.92,1545,3.92,1546,3.92,1547,3.92,1548,3.92,1549,3.92,1550,3.92,1551,5.534,1552,3.92,1553,3.452,1554,3.92,1555,3.92,1556,3.143,1557,2.576,1558,3.92,1559,2.913,1560,2.729,1561,3.92,1562,3.92,1563,3.92,1564,3.92,1565,3.92,1566,3.92,1567,3.452,1568,3.92,1569,3.452,1570,3.92,1571,3.92,1572,3.92,1573,3.92,1574,3.92,1575,3.92,1576,3.92,1577,3.92]],["title/classes/FlowchartUtils.html",[0,0.172,984,2.571]],["body/classes/FlowchartUtils.html",[0,0.192,2,0.055,3,0.055,4,0.04,5,2.083,9,0.247,13,1.612,27,0.277,28,1.824,31,1.588,35,0.402,36,0.315,38,0.489,39,0.01,40,0.294,41,0.631,43,1.227,47,0.732,50,1.081,53,0.844,57,1.848,70,0.291,71,0.786,73,1.797,75,2.534,83,0.241,84,0.055,85,0.006,86,0.465,87,1.75,91,0.89,92,1.748,120,0.005,133,1.226,185,1.436,221,1.427,247,0.765,250,2.028,392,3.253,397,2.5,411,2.126,430,3.087,450,1.476,461,2.028,483,2.909,487,3.876,488,3.876,490,2.608,492,4.095,506,1.384,517,1.933,519,2.028,521,1.429,634,2.716,635,2.634,642,2.437,650,2.264,857,2.264,951,4.146,963,2.137,979,2.455,984,2.873,1038,5.623,1068,2.608,1075,2.137,1082,2.634,1115,1.703,1129,4.016,1152,3.144,1191,4.204,1206,1.64,1207,1.933,1236,3.015,1242,6.233,1243,5.965,1246,2.608,1249,4.256,1251,1.703,1252,2.028,1253,4.256,1254,3.021,1257,4.256,1258,2.864,1260,2.864,1263,4.256,1267,3.429,1268,4.256,1269,3.876,1275,3.876,1308,2.028,1311,2.269,1357,2.137,1447,2.864,1467,2.608,1476,4.287,1515,5.623,1517,6.01,1569,2.864,1578,2.864,1579,4.834,1580,6.386,1581,4.834,1582,3.876,1583,4.834,1584,4.834,1585,4.834,1586,4.834,1587,4.834,1588,3.252,1589,3.252,1590,3.252,1591,4.834,1592,6.386,1593,3.252,1594,4.834,1595,5.769,1596,3.252,1597,3.252,1598,6.825,1599,3.252,1600,4.834,1601,3.252,1602,4.834,1603,3.252,1604,3.252,1605,3.252,1606,4.834,1607,3.252,1608,4.834,1609,3.252,1610,4.834,1611,3.252,1612,4.834,1613,6.386,1614,3.252,1615,4.834,1616,3.252,1617,3.252,1618,2.608,1619,3.252,1620,4.834,1621,4.834,1622,3.252,1623,3.252,1624,4.834,1625,4.834,1626,5.769,1627,3.876,1628,4.834,1629,1.933,1630,3.252,1631,5.769,1632,3.252,1633,3.252,1634,2.264,1635,3.252,1636,3.252,1637,2.864,1638,2.608,1639,3.252,1640,3.252,1641,3.252,1642,3.252,1643,3.252,1644,2.264,1645,2.864,1646,3.252,1647,3.252,1648,3.252,1649,3.252,1650,3.252,1651,3.252,1652,2.864,1653,2.864,1654,3.876,1655,2.608,1656,2.864,1657,4.256,1658,3.252,1659,3.252,1660,3.252,1661,4.834,1662,3.252,1663,3.252,1664,6.298,1665,2.608,1666,4.834,1667,2.137,1668,4.834,1669,3.252,1670,3.252,1671,2.864,1672,5.08,1673,4.834,1674,2.417,1675,2.864,1676,3.252,1677,3.252,1678,3.252,1679,3.252,1680,2.864,1681,3.252,1682,3.252,1683,4.256,1684,3.252,1685,3.252,1686,3.252,1687,4.834,1688,4.256,1689,3.252,1690,3.252,1691,3.252,1692,2.137,1693,2.864,1694,2.608]],["title/classes/FlowchartWriter.html",[0,0.172,1294,3.011]],["body/classes/FlowchartWriter.html",[0,0.297,2,0.104,3,0.104,4,0.091,5,1.898,9,0.225,13,1.287,27,0.429,35,0.289,36,0.241,38,0.374,39,0.01,40,0.225,41,0.482,53,0.746,70,0.209,71,0.822,83,0.281,84,0.104,85,0.008,120,0.008,133,1.575,185,1.047,300,1.789,369,2.728,421,5.208,428,3.252,430,2.785,460,3.691,492,3.933,1030,4.614,1293,4.916,1294,5.208,1559,4.614,1560,4.323,1683,5.467,1695,5.467,1696,7.481,1697,7.481,1698,6.209,1699,6.209,1700,6.209,1701,6.209,1702,7.481,1703,6.209,1704,6.209,1705,6.209,1706,8.529,1707,5.467,1708,6.587,1709,6.209,1710,6.209,1711,6.209,1712,6.209]],["title/classes/ForLoopControlProcedure.html",[0,0.172,1713,3.214]],["body/classes/ForLoopControlProcedure.html",[0,0.247,2,0.078,3,0.078,4,0.057,5,1.781,7,2.285,8,1.248,9,0.169,10,0.621,11,1.34,13,1.554,14,3.54,15,3.297,16,3.677,17,3.297,18,3.001,19,3.677,20,3.677,21,3.677,22,3.677,23,3.677,24,3.187,25,3.297,26,3.54,27,0.358,28,2.83,29,3.263,30,3.677,31,2.307,32,0.528,33,3.542,34,2.926,35,0.415,36,0.345,38,0.451,39,0.01,40,0.272,41,0.582,42,1.75,43,1.758,44,1.571,45,2.906,46,1.153,47,1.064,48,4.015,49,2.539,50,1.677,51,2.539,52,2.539,53,0.779,54,2.539,55,3.788,56,2.539,57,1.292,58,2.539,59,2.539,60,2.539,61,2.539,62,2.539,63,2.913,64,2.539,65,2.539,66,3.54,67,3.65,69,3.142,70,0.263,71,0.824,72,2.44,73,1.941,74,2.539,75,2.046,76,2.539,77,2.539,78,2.539,83,0.253,84,0.078,85,0.007,86,0.502,88,2.828,90,2.539,91,2.313,92,1.275,95,2.571,96,3.03,98,3.263,99,3.142,100,3.142,101,2.652,110,2.648,111,2.648,112,2.539,114,2.539,116,2.648,120,0.007,713,2.769,714,2.905,959,4.102,1713,4.63,1714,4.102,1715,4.658,1716,4.658,1717,3.263,1718,7.022,1719,4.658,1720,4.658,1721,4.658]],["title/classes/Frame.html",[0,0.172,1722,2.458]],["body/classes/Frame.html",[0,0.345,2,0.1,3,0.1,4,0.073,7,2.182,9,0.216,10,0.727,13,1.511,32,0.675,35,0.339,36,0.283,39,0.01,40,0.216,44,1.085,50,1.331,57,1.801,70,0.293,83,0.246,84,0.1,85,0.008,86,0.68,92,1.629,120,0.008,133,2.084,211,1.058,1164,3.116,1542,3.711,1722,4.669,1723,4.48,1724,3.711,1725,5.398,1726,5.398,1727,5.95,1728,5.95,1729,3.544,1730,4.669,1731,4.883,1732,4.79,1733,3.537,1734,1.805,1735,3.537,1736,3.91,1737,3.537,1738,3.91,1739,3.91,1740,3.91,1741,3.91,1742,4.79,1743,3.91,1744,4.79,1745,3.91,1746,3.91,1747,3.91,1748,3.91,1749,3.91,1750,3.91,1751,3.973]],["title/classes/FunctionProcedure.html",[0,0.172,1344,3.011]],["body/classes/FunctionProcedure.html",[0,0.222,2,0.067,3,0.067,4,0.049,5,2.1,7,2.051,8,1.228,9,0.144,10,0.558,11,1.342,13,1.454,14,3.26,15,3.036,16,3.386,17,3.036,18,2.808,19,3.386,20,3.386,21,3.386,22,3.386,23,3.386,24,2.935,25,3.036,26,3.26,27,0.321,28,2.647,29,2.928,30,3.386,31,2.124,32,0.451,33,3.178,34,2.625,35,0.411,36,0.346,38,0.445,39,0.01,40,0.268,41,0.573,42,1.117,43,1.501,44,1.527,45,2.825,46,1.214,47,1.12,48,3.935,49,2.168,50,1.653,51,2.168,52,2.168,53,0.815,54,2.168,55,3.648,56,2.168,57,1.159,58,2.168,59,2.168,60,2.168,61,2.168,62,2.168,63,2.726,64,2.168,65,2.168,66,3.26,67,3.479,69,2.819,70,0.294,71,0.842,72,2.083,73,1.742,74,2.168,75,1.748,76,2.168,77,2.168,78,2.168,83,0.258,84,0.067,85,0.006,86,0.566,88,3.184,90,2.168,91,2.394,92,1.531,95,2.307,96,3.411,98,3.674,99,3.537,100,3.537,101,2.38,110,2.261,111,2.261,112,2.168,113,3.19,114,2.168,115,3.19,116,2.261,120,0.006,221,1.314,392,3.247,411,2.579,415,4.924,506,3.145,979,2.38,1189,5.625,1206,2.819,1344,3.893,1752,3.503,1753,7.015,1754,7.015,1755,5.592,1756,7.015,1757,5.592,1758,3.978,1759,3.978,1760,3.978,1761,3.978,1762,5.592,1763,3.978,1764,3.978,1765,3.978,1766,3.503,1767,3.978,1768,3.978,1769,7.015,1770,3.978,1771,3.978,1772,3.978,1773,3.978,1774,5.592,1775,3.978,1776,5.592,1777,3.978,1778,3.503,1779,3.978,1780,3.978]],["title/modules/GSViewer.html",[86,0.349,263,3.011]],["body/modules/GSViewer.html",[0,0.216,2,0.092,3,0.092,4,0.067,31,1.792,39,0.01,70,0.184,83,0.306,84,0.134,85,0.007,86,0.557,120,0.007,139,0.826,161,1.251,188,2.035,189,1.251,195,1.974,238,1.877,242,1.974,244,1.925,250,3.402,251,5.275,252,4.053,253,4.968,263,6.297,273,4.808,274,2.973,277,6.076,278,4.979,279,3.764,280,4.979,291,3.402,293,5.132,294,3.584,325,4.053,353,4.053,368,4.374,377,5.132,378,4.053,430,1.892,579,3.584,685,6.081,688,5.132,693,5.537,696,5.537,718,4.465,732,3.797,775,3.402,776,3.797,1295,4.374,1781,4.803,1782,4.803,1783,4.803,1784,4.803,1785,5.454,1786,6.081,1787,6.081,1788,4.803,1789,4.803,1790,5.454,1791,5.454,1792,6.906,1793,4.803,1794,5.454,1795,6.081,1796,4.803,1797,4.803,1798,6.906,1799,5.454,1800,4.803]],["title/components/GSViewerComponent.html",[146,0.272,188,0.992]],["body/components/GSViewerComponent.html",[0,0.176,2,0.102,3,0.075,4,0.074,8,0.842,9,0.161,10,0.602,27,0.347,32,0.504,35,0.343,36,0.315,38,0.463,39,0.01,40,0.267,41,0.469,42,2.16,44,1.102,46,0.731,47,0.674,50,0.995,70,0.248,71,0.845,83,0.231,84,0.075,85,0.007,86,0.359,91,1.218,120,0.007,139,0.674,142,0.791,146,0.484,147,1.02,148,1.128,149,1.128,150,1.073,152,1.046,153,2.272,154,2.205,156,1.572,158,1.494,161,1.02,162,1.532,163,1.532,164,1.494,165,1.866,166,1.128,167,1.128,168,0.995,169,1.421,170,2.198,171,0.995,172,0.995,173,0.995,174,1.128,175,1.046,176,1.128,177,1.02,178,1.128,179,0.97,180,1.866,181,1.02,182,1.02,183,1.532,184,1.02,185,1.019,186,1.128,187,0.97,188,1.687,189,1.941,190,0.995,191,1.1,192,1.02,193,1.073,194,1.128,195,1.046,196,1.128,197,0.995,198,1.73,199,1.128,200,0.995,201,1.128,202,0.995,203,0.995,204,1.02,205,1.128,206,1.02,207,1.128,208,1.02,209,1.128,210,1.02,211,1.308,212,1.02,213,1.128,214,1.02,215,1.02,216,1.128,217,1.02,218,1.02,219,1.128,220,1.02,221,0.791,222,1.128,223,0.995,224,1.128,225,1.02,226,1.02,227,0.995,228,1.02,229,1.02,230,1.128,231,1.046,232,1.128,233,1.02,234,1.1,235,1.128,236,1.02,237,1.128,238,1.351,239,1.532,240,0.995,241,1.02,242,1.046,243,1.128,244,1.385,245,0.995,246,1.525,247,1.046,248,1.128,353,6.136,369,1.954,387,2.243,389,1.35,390,3.164,391,3.164,395,2.175,397,2.483,407,3.097,413,1.586,521,1.954,587,2.019,666,2.243,718,4.155,732,5.749,775,2.774,779,4.489,1380,3.567,1383,3.567,1801,6.859,1802,7.358,1803,5.468,1804,5.319,1805,3.567,1806,6.041,1807,7.693,1808,3.917,1809,5.319,1810,3.917,1811,4.449,1812,3.292,1813,3.306,1814,3.917,1815,3.917,1816,5.319,1817,3.917,1818,4.449]],["title/components/GeometryViewerComponent.html",[146,0.272,190,0.967]],["body/components/GeometryViewerComponent.html",[0,0.176,2,0.101,3,0.075,4,0.074,8,0.839,9,0.16,10,0.601,11,1.037,27,0.346,31,2.413,32,0.502,35,0.342,36,0.314,38,0.442,39,0.01,40,0.248,41,0.344,46,0.727,47,0.671,70,0.231,71,0.752,83,0.248,84,0.075,85,0.007,86,0.357,91,1.212,120,0.007,139,0.671,142,0.787,146,0.484,147,1.016,148,1.123,149,1.123,150,1.068,152,1.042,153,2.272,154,2.207,156,1.567,158,1.49,161,1.016,162,1.528,163,1.528,164,1.49,165,1.863,166,1.123,167,1.123,168,0.99,169,1.416,170,2.197,171,0.99,172,0.99,173,0.99,174,1.123,175,1.042,176,1.123,177,1.016,178,1.123,179,0.966,180,1.863,181,1.016,182,1.016,183,1.528,184,1.016,185,1.016,186,1.123,187,0.966,188,1.016,189,1.569,190,1.642,191,2.005,192,1.016,193,1.068,194,1.123,195,1.042,196,1.123,197,0.99,198,1.727,199,1.123,200,0.99,201,1.123,202,0.99,203,0.99,204,1.016,205,1.123,206,1.016,207,1.123,208,1.016,209,1.123,210,1.016,211,1.305,212,1.016,213,1.123,214,1.016,215,1.016,216,1.123,217,1.016,218,1.016,219,1.123,220,1.016,221,1.07,222,1.123,223,0.99,224,1.123,225,1.016,226,1.016,227,0.99,228,1.016,229,1.016,230,1.123,231,1.042,232,1.123,233,1.016,234,1.095,235,1.123,236,1.016,237,1.123,238,1.347,239,1.528,240,0.99,241,1.016,242,1.042,243,1.123,244,1.381,245,0.99,246,1.419,247,1.042,248,1.123,268,2.619,300,1.276,301,1.827,328,6.615,329,6.13,369,1.945,386,2.201,387,2.233,388,1.452,389,2.077,390,3.154,391,3.154,393,3.125,394,3.448,395,2.171,399,2.413,401,2.734,403,3.899,406,3.448,408,1.772,409,1.416,410,2.233,413,1.579,414,2.517,416,3.899,417,2.319,418,2.319,543,4.475,547,3.551,1808,3.899,1812,3.282,1819,7.344,1820,7.344,1821,3.551,1822,3.899,1823,4.428,1824,4.428,1825,3.957]],["title/components/GraphEdgeComponent.html",[146,0.272,192,0.992]],["body/components/GraphEdgeComponent.html",[0,0.137,2,0.085,3,0.058,4,0.062,8,0.704,9,0.125,10,0.503,11,0.904,27,0.29,32,0.677,35,0.278,36,0.34,38,0.395,39,0.01,40,0.216,41,0.268,44,1.276,46,0.829,47,0.995,50,1.129,53,0.503,57,1.76,70,0.292,71,0.867,83,0.116,84,0.058,85,0.005,86,0.278,95,2.711,120,0.005,139,0.522,142,0.613,146,0.44,147,0.791,148,0.875,149,0.875,150,0.832,152,0.811,153,2.243,154,2.175,156,1.313,158,1.248,161,0.791,162,1.28,163,1.28,164,1.248,165,1.667,166,0.875,167,0.875,168,0.771,169,1.187,170,2.107,171,0.771,172,0.771,173,0.771,174,0.875,175,0.811,176,0.875,177,0.791,178,0.875,179,0.752,180,1.667,181,0.791,182,0.791,183,1.28,184,0.791,185,0.851,186,0.875,187,0.752,188,0.791,189,0.791,190,0.771,191,0.853,192,1.507,193,1.82,194,0.875,195,0.811,196,0.875,197,0.771,198,1.545,199,0.875,200,0.771,201,0.875,202,0.771,203,0.771,204,0.791,205,0.875,206,0.791,207,0.875,208,0.791,209,0.875,210,0.791,211,1.168,212,0.791,213,0.875,214,0.791,215,0.791,216,0.875,217,0.791,218,0.791,219,0.875,220,0.791,221,0.613,222,0.875,223,0.771,224,0.875,225,0.791,226,0.791,227,0.771,228,0.791,229,0.791,230,0.875,231,0.811,232,0.875,233,0.791,234,0.853,235,0.875,236,0.791,237,0.875,238,1.129,239,1.28,240,0.771,241,0.791,242,0.811,243,0.875,244,1.158,245,0.771,246,0.715,247,0.811,248,0.875,358,7.057,359,7.057,386,2.348,388,1.217,389,1.812,395,1.942,397,2.547,445,1.133,573,3.905,574,1.88,575,2.869,587,1.565,635,1.88,1191,3.952,1331,4.882,1333,4.098,1376,2.05,1398,3.317,1399,2.766,1418,4.882,1479,3.037,1480,3.037,1803,4.882,1826,3.037,1827,5.047,1828,5.047,1829,6.57,1830,7.305,1831,4.574,1832,6.57,1833,6.57,1834,6.57,1835,5.785,1836,5.047,1837,6.57,1838,6.57,1839,5.785,1840,5.257,1841,6.57,1842,5.97,1843,5.97,1844,6.57,1845,5.047,1846,3.449,1847,3.449,1848,3.449,1849,3.449,1850,3.449,1851,3.449,1852,3.449,1853,3.449,1854,5.047,1855,3.449,1856,3.449,1857,3.449,1858,3.449,1859,3.449,1860,3.449,1861,3.449,1862,3.449,1863,4.445,1864,3.449,1865,3.449,1866,3.449,1867,3.449,1868,3.449,1869,3.449,1870,3.449,1871,3.449,1872,5.047,1873,5.047,1874,4.445,1875,5.047,1876,5.047,1877,3.449,1878,3.449,1879,3.449,1880,5.97,1881,3.449,1882,5.047,1883,5.047,1884,3.449,1885,3.449,1886,3.449,1887,3.449,1888,3.449,1889,5.047,1890,3.449,1891,3.449,1892,3.449,1893,3.449,1894,3.449,1895,3.449,1896,3.449,1897,5.047,1898,5.047,1899,3.449,1900,3.449,1901,5.047,1902,5.047,1903,3.449,1904,3.449,1905,3.449,1906,3.449,1907,3.449,1908,3.449,1909,3.449,1910,3.449,1911,3.449,1912,3.449,1913,3.449,1914,3.449,1915,3.449,1916,3.449,1917,3.037,1918,3.449,1919,3.449,1920,3.449,1921,3.449,1922,3.449,1923,5.047,1924,3.449,1925,3.449,1926,3.449,1927,3.449]],["title/interfaces/HasIsPlanar.html",[1734,1.312,1735,2.571]],["body/interfaces/HasIsPlanar.html",[0,0.341,2,0.102,3,0.102,4,0.074,7,2.212,9,0.218,13,1.524,27,0.422,32,0.684,36,0.234,39,0.01,40,0.218,44,1.341,50,1.349,57,1.644,70,0.296,83,0.248,84,0.102,85,0.008,86,0.682,92,1.651,120,0.008,133,2.094,211,1.072,1164,3.159,1542,3.761,1722,4.507,1723,4.178,1724,3.761,1725,3.963,1726,3.963,1729,3.574,1730,4.691,1731,4.906,1732,4.83,1733,3.585,1734,2.23,1735,4.369,1736,5.423,1737,3.585,1738,3.963,1739,3.963,1740,3.963,1741,3.963,1742,4.83,1743,3.963,1744,4.83,1745,3.963,1746,3.963,1747,3.963,1748,3.963,1749,3.963,1750,3.963,1751,4.006,1928,6.031]],["title/components/HelpFundamentals.html",[146,0.272,197,0.967]],["body/components/HelpFundamentals.html",[0,0.108,2,0.034,3,0.019,4,0.024,8,1.052,9,0.237,27,0.115,32,0.43,35,0.36,36,0.239,38,0.163,39,0.01,40,0.285,42,2.313,43,1.59,44,0.365,46,0.329,47,1.341,50,0.448,53,0.742,57,1.243,70,0.174,71,0.123,83,0.091,84,0.046,85,0.006,86,0.306,87,2.29,92,1.88,95,2.401,96,2.629,101,2.301,120,0.002,133,1.371,139,0.17,142,1.312,146,0.288,147,0.257,148,0.284,149,0.284,150,0.27,152,0.263,153,2.016,154,1.929,156,0.859,158,0.816,161,0.257,162,0.508,163,0.837,164,0.495,165,0.837,166,0.284,167,0.284,168,0.25,169,0.471,170,1.521,171,0.25,172,1.952,173,0.25,174,0.284,175,0.263,176,0.284,177,0.257,178,0.284,179,0.244,180,0.837,181,0.257,182,0.257,183,0.508,184,0.257,185,0.338,186,0.284,187,0.244,188,0.257,189,0.257,190,0.25,191,0.277,192,0.257,193,0.27,194,0.284,195,0.263,196,0.284,197,0.738,198,1.369,199,0.284,200,0.448,201,0.284,202,0.25,203,0.25,204,0.257,205,0.284,206,0.257,207,0.284,208,0.459,209,0.284,210,0.257,211,0.587,212,0.257,213,0.284,214,0.257,215,0.257,216,0.284,217,0.257,218,0.257,219,0.284,220,0.257,221,0.674,222,0.284,223,0.25,224,0.284,225,0.257,226,0.257,227,0.25,228,0.257,229,0.257,230,0.284,231,0.263,232,0.284,233,0.257,234,0.277,235,0.284,236,0.257,237,0.284,238,0.448,239,0.508,240,0.25,241,1.29,242,0.263,243,0.284,244,0.459,245,0.25,246,0.232,247,1.737,248,0.284,251,2.298,253,1.248,274,1.091,348,1.783,386,0.724,388,0.796,389,1.151,395,1.245,397,1.114,409,1.563,445,1.384,457,2.169,521,1.45,597,1.605,632,1.692,634,2.803,635,4.211,637,4.343,638,4.082,640,4.017,641,4.335,649,2.646,706,1.605,860,5.664,878,5.343,939,4.639,951,3.919,965,5.128,973,1.189,979,1.404,1019,2.058,1035,2.452,1073,3.377,1075,1.315,1083,5.826,1094,2.452,1106,2.646,1111,3.506,1122,5.32,1137,2.452,1307,4.78,1308,5.023,1311,1.55,1338,4.546,1376,3.963,1398,3.824,1402,3.13,1418,1.487,1425,1.393,1450,2.906,1452,2.646,1453,1.605,1454,4.666,1476,1.487,1627,3.377,1634,4.641,1638,2.646,1654,3.918,1665,2.646,1674,4.954,1692,1.315,1717,4.585,1729,2.992,1734,0.607,1812,2.067,1813,4.681,1825,1.315,1831,2.298,1863,1.762,1929,0.832,1930,2.932,1931,1.605,1932,1.605,1933,1.12,1934,1.12,1935,0.898,1936,0.898,1937,0.898,1938,0.898,1939,3.631,1940,3.3,1941,4.626,1942,1.762,1943,3.3,1944,4.381,1945,5.624,1946,6.366,1947,5.53,1948,4.765,1949,4.303,1950,2.452,1951,2.906,1952,5.498,1953,5.608,1954,2.001,1955,4.335,1956,5.084,1957,5.158,1958,3.211,1959,3.402,1960,2.001,1961,1.393,1962,1.762,1963,2.646,1964,2.452,1965,3.709,1966,4.212,1967,1.605,1968,1.762,1969,4.76,1970,3.709,1971,4.044,1972,2.906,1973,2.001,1974,4.478,1975,4.335,1976,2.452,1977,1.762,1978,4.212,1979,2.001,1980,2.001,1981,2.906,1982,1.762,1983,1.762,1984,2.001,1985,1.605,1986,3.3,1987,1.605,1988,4.283,1989,2.001,1990,2.001,1991,4.017,1992,3.13,1993,4.335,1994,2.001,1995,1.487,1996,3.918,1997,6.154,1998,5.103,1999,3.13,2000,4.212,2001,1.762,2002,4.212,2003,5.124,2004,2.001,2005,2.001,2006,4.212,2007,2.001,2008,2.646,2009,2.001,2010,2.001,2011,4.212,2012,2.001,2013,2.646,2014,3.3,2015,3.824,2016,1.605,2017,2.001,2018,2.001,2019,2.906,2020,3.3,2021,3.377,2022,4.212,2023,3.3,2024,3.3,2025,5.87,2026,2.001,2027,3.631,2028,1.393,2029,2.001,2030,4.324,2031,4.886,2032,3.3,2033,1.605,2034,1.605,2035,1.762,2036,1.487,2037,1.762,2038,3.3,2039,7.874,2040,2.001,2041,1.762,2042,1.762,2043,2.646,2044,3.402,2045,2.001,2046,2.001,2047,1.762,2048,2.001,2049,2.001,2050,3.3,2051,2.001,2052,5.419,2053,4.212,2054,4.886,2055,3.3,2056,2.001,2057,2.001,2058,2.001,2059,2.001,2060,1.762,2061,1.605,2062,2.646,2063,1.762,2064,4.303,2065,1.762,2066,3.709,2067,2.001,2068,6.154,2069,2.001,2070,1.762,2071,4.935,2072,2.001,2073,2.001,2074,2.001,2075,2.001,2076,2.001,2077,3.3,2078,6.667,2079,2.001,2080,2.001,2081,3.13,2082,2.001,2083,2.001,2084,4.303,2085,6.867,2086,6.432,2087,3.3,2088,2.001,2089,2.001,2090,2.001,2091,2.001,2092,5.442,2093,2.646,2094,1.487,2095,3.377,2096,3.3,2097,4.212,2098,2.001,2099,2.001,2100,3.377,2101,3.631,2102,2.001,2103,1.762,2104,4.324,2105,3.3,2106,2.001,2107,3.3,2108,2.906,2109,1.762,2110,2.001,2111,2.001,2112,1.12,2113,2.646,2114,3.3,2115,2.001,2116,2.001,2117,1.762,2118,3.3,2119,2.001,2120,2.001,2121,2.001,2122,4.212,2123,5.819,2124,4.212,2125,1.962,2126,1.487,2127,3.3,2128,1.393,2129,2.906,2130,2.646,2131,1.605,2132,2.001,2133,2.001,2134,5.852,2135,3.3,2136,3.3,2137,2.646,2138,2.001,2139,2.169,2140,1.762,2141,5.406,2142,4.886,2143,2.001,2144,2.001,2145,1.762,2146,1.762,2147,2.001,2148,1.605,2149,2.646,2150,3.13,2151,2.646,2152,2.001,2153,4.573,2154,1.605,2155,3.3,2156,2.001,2157,4.212,2158,3.3,2159,2.906,2160,5.406,2161,2.001,2162,6.867,2163,1.487,2164,3.3,2165,3.709,2166,3.709,2167,3.3,2168,1.762,2169,2.001,2170,1.762,2171,2.001,2172,2.001,2173,4.212,2174,2.001,2175,2.001,2176,2.001,2177,2.001,2178,5.124,2179,4.212,2180,4.212,2181,3.377,2182,1.248,2183,2.713,2184,3.3,2185,3.3,2186,5.406,2187,2.646,2188,1.762,2189,2.001,2190,4.212,2191,4.212,2192,2.906,2193,1.605,2194,1.605,2195,1.393,2196,3.3,2197,2.001,2198,3.3,2199,1.762,2200,2.001,2201,1.605,2202,2.001,2203,1.487,2204,6.047,2205,1.605,2206,2.001,2207,4.212,2208,1.393,2209,2.001,2210,3.377,2211,2.001,2212,2.001,2213,3.709,2214,2.001,2215,2.001,2216,2.906,2217,2.001,2218,2.001,2219,2.001,2220,1.487,2221,3.3,2222,1.762,2223,1.762,2224,1.762,2225,1.762,2226,2.001,2227,1.487,2228,2.001,2229,1.762,2230,2.001,2231,2.001,2232,2.001,2233,1.762,2234,1.315,2235,2.001,2236,2.001,2237,1.762,2238,2.001,2239,2.001,2240,1.762,2241,2.001,2242,3.3,2243,3.3,2244,2.001,2245,2.001,2246,1.605,2247,1.762,2248,1.12,2249,1.12,2250,1.12,2251,1.12,2252,1.12,2253,1.12,2254,1.12,2255,1.12]],["title/components/HelpModel.html",[146,0.272,200,0.967]],["body/components/HelpModel.html",[0,0.281,2,0.106,3,0.08,4,0.077,8,0.88,9,0.172,27,0.362,32,0.892,36,0.245,38,0.427,39,0.01,40,0.229,70,0.16,71,0.522,83,0.16,84,0.119,85,0.007,86,0.383,120,0.007,139,0.719,142,0.844,146,0.52,147,1.089,148,1.205,149,1.205,150,1.145,152,1.117,153,2.281,154,2.217,156,1.966,158,1.869,161,1.089,162,1.601,163,1.601,164,1.561,165,1.917,166,1.205,167,1.205,168,1.062,169,1.777,170,2.219,171,1.062,172,1.062,173,1.062,174,1.205,175,1.117,176,1.205,177,1.089,178,1.205,179,1.036,180,1.917,181,1.089,182,1.089,183,1.601,184,1.089,185,1.065,186,1.205,187,1.036,188,1.089,189,1.089,190,1.062,191,1.175,192,1.089,193,1.145,194,1.205,195,1.117,196,1.205,197,1.412,198,1.971,199,1.205,200,1.69,201,1.205,202,1.062,203,1.062,204,1.089,205,1.205,206,1.089,207,1.205,208,1.448,209,1.205,210,1.089,211,1.398,212,1.089,213,1.205,214,1.089,215,1.089,216,1.205,217,1.089,218,1.089,219,1.205,220,1.089,221,0.844,222,1.205,223,1.062,224,1.205,225,1.089,226,1.089,227,1.062,228,1.089,229,1.089,230,1.205,231,1.117,232,1.205,233,1.089,234,1.175,235,1.205,236,1.089,237,1.205,238,1.412,239,1.601,240,1.062,241,1.089,242,1.117,243,1.205,244,1.448,245,1.062,246,0.985,247,1.117,248,1.205,348,4.659,386,1.892,388,1.822,389,2.387,395,2.391,1812,3.864,1929,3.529,1930,3.306,1931,3.808,1932,3.808,1935,3.808,1936,3.808,1937,5.062,1938,5.062,2256,4.749,2257,4.749,2258,6.312,2259,4.749]],["title/components/HelpViewerComponent.html",[146,0.272,202,0.967]],["body/components/HelpViewerComponent.html",[0,0.148,2,0.09,3,0.063,4,0.065,8,0.745,9,0.135,10,0.533,11,1.198,27,0.307,32,0.423,34,2.51,35,0.385,36,0.324,38,0.452,39,0.01,40,0.272,41,0.485,44,1.139,46,1.026,47,0.566,50,1.396,53,0.814,70,0.279,71,0.793,83,0.243,84,0.063,85,0.006,86,0.55,87,1.622,92,1.022,120,0.006,139,0.566,142,0.664,146,0.454,147,0.856,148,0.947,149,0.947,150,0.9,152,0.878,153,2.253,154,2.186,156,1.391,158,1.322,161,0.856,162,1.356,163,1.356,164,1.322,165,1.729,166,0.947,167,0.947,168,0.835,169,1.257,170,2.137,171,0.835,172,0.835,173,0.835,174,0.947,175,0.878,176,0.947,177,0.856,178,0.947,179,0.814,180,1.729,181,0.856,182,0.856,183,1.356,184,0.856,185,0.902,186,0.947,187,0.814,188,0.856,189,0.856,190,0.835,191,0.923,192,0.856,193,0.9,194,0.947,195,0.878,196,0.947,197,0.835,198,1.964,199,0.947,200,0.835,201,0.947,202,1.525,203,0.835,204,0.856,205,0.947,206,0.856,207,0.947,208,0.856,209,0.947,210,0.856,211,1.212,212,0.856,213,0.947,214,0.856,215,0.856,216,0.947,217,0.856,218,0.856,219,0.947,220,0.856,221,0.664,222,0.947,223,0.835,224,0.947,225,0.856,226,0.856,227,0.835,228,0.856,229,0.856,230,0.947,231,0.878,232,0.947,233,0.856,234,0.923,235,0.947,236,0.856,237,0.947,238,1.195,239,1.356,240,0.835,241,0.856,242,0.878,243,0.947,244,1.226,245,0.835,246,1.295,247,0.878,248,0.947,268,2.757,271,3.57,278,2.453,279,2.034,300,1.54,301,1.54,305,2.599,350,6.755,351,6.26,386,2.248,387,1.882,388,1.289,389,1.895,390,2.799,391,2.799,393,2.901,395,2.016,400,2.774,402,3.287,407,2.599,413,1.331,445,1.226,547,2.993,561,4.48,564,4.252,583,3.287,587,1.694,666,1.882,726,2.774,953,4.103,1267,2.219,1618,2.993,1821,4.286,1822,3.287,1941,3.512,1956,3.334,1964,3.972,1991,5.066,2195,3.721,2227,3.972,2260,6.817,2261,6.817,2262,6.003,2263,6.817,2264,6.817,2265,5.345,2266,5.345,2267,6.817,2268,3.733,2269,6.817,2270,6.244,2271,5.345,2272,6.244,2273,3.287,2274,3.733,2275,3.733,2276,3.733,2277,5.345,2278,3.733,2279,2.993,2280,3.733,2281,3.733,2282,3.733,2283,2.774,2284,3.733,2285,3.733,2286,3.733,2287,3.287,2288,5.345,2289,3.733,2290,3.733,2291,5.345,2292,5.345,2293,5.345,2294,4.707,2295,5.345,2296,6.817,2297,5.345,2298,5.345,2299,5.345,2300,5.345,2301,5.345,2302,5.345,2303,5.345,2304,5.345,2305,5.345,2306,5.345]],["title/interfaces/ICodeGenerator.html",[73,1.347,1734,1.312]],["body/interfaces/ICodeGenerator.html",[2,0.081,3,0.081,4,0.059,5,2.224,8,0.673,9,0.175,27,0.366,35,0.403,36,0.338,38,0.521,39,0.01,40,0.314,41,0.672,43,2.871,44,1.304,45,2.567,53,0.896,57,1.808,70,0.294,71,0.701,73,1.988,83,0.267,84,0.081,85,0.007,86,0.613,87,2.169,88,3.688,120,0.007,185,0.815,221,1.406,300,2.06,392,2.804,406,3.571,411,2.81,450,3.453,457,3.174,458,3.873,466,5.118,467,5.621,468,5.621,469,5.621,470,5.621,471,5.621,472,5.621,473,5.621,474,5.621,475,5.621,476,6.697,477,5.621,482,5.118,483,3.605,485,5.621,486,5.733,487,5.733,488,5.733,490,3.873,491,5.621,492,3.453,494,5.621,496,5.621,497,6.295,498,6.295,500,5.621,502,5.621,503,6.295,505,5.621,506,3.237,508,5.621,510,5.621,513,5.621,516,4.253,517,2.871,518,3.589,519,3.012,1734,1.937,2307,4.253,2308,4.83,2309,4.83,2310,4.83,2311,4.83,2312,4.83,2313,4.83,2314,4.83,2315,4.83,2316,4.83,2317,4.83,2318,4.83,2319,4.83]],["title/interfaces/IComponent.html",[55,1.963,1734,1.312]],["body/interfaces/IComponent.html",[2,0.109,3,0.109,4,0.079,5,1.644,9,0.235,10,0.766,35,0.407,39,0.01,44,1.492,53,0.907,55,3.484,84,0.109,85,0.008,86,0.682,88,3.838,96,4.111,98,4.428,99,4.263,100,4.263,120,0.008,963,5.374,1734,2.329,2320,5.708,2321,6.483]],["title/interfaces/IEdge.html",[1152,2.357,1734,1.312]],["body/interfaces/IEdge.html",[2,0.115,3,0.115,4,0.084,5,1.737,9,0.248,10,0.791,35,0.369,39,0.009,57,1.836,84,0.115,85,0.009,120,0.009,1152,4.32,1652,7.577,1653,7.577,1734,2.406,2322,6.031]],["title/interfaces/IFlowchart.html",[492,1.963,1734,1.312]],["body/interfaces/IFlowchart.html",[2,0.105,3,0.105,4,0.076,5,1.577,9,0.225,10,0.747,35,0.412,39,0.01,40,0.302,53,0.9,57,1.797,73,1.937,83,0.271,84,0.105,85,0.008,120,0.008,221,1.482,300,2.402,411,2.597,450,2.822,492,3.398,517,3.695,1152,4.544,1164,4.367,1169,6.196,1174,7.342,1179,6.686,1191,4.367,1196,5.805,1201,7.342,1207,4.45,1734,2.272,2323,5.474]],["title/interfaces/IGraphNode.html",[411,1.347,1734,1.312]],["body/interfaces/IGraphNode.html",[2,0.096,3,0.096,4,0.07,5,1.96,8,1.127,9,0.206,10,0.707,27,0.407,31,2.657,35,0.424,36,0.275,38,0.342,39,0.01,40,0.301,41,0.442,42,1.598,44,1.6,45,2.981,53,0.875,57,1.819,70,0.239,73,1.773,83,0.26,84,0.096,85,0.008,120,0.008,397,2.73,406,3.797,411,2.209,506,3.442,518,4.229,519,3.55,642,4.078,979,3.442,1043,4.597,1207,3.383,1425,5.631,1688,7.122,1734,2.152,2324,5.012,2325,6.486,2326,5.315,2327,8.088,2328,8.088,2329,7.122,2330,7.092,2331,5.691,2332,7.092,2333,5.691]],["title/interfaces/IModule.html",[450,1.963,1734,1.312]],["body/interfaces/IModule.html",[0,0.251,2,0.107,3,0.107,4,0.077,9,0.229,11,1.147,27,0.481,36,0.293,39,0.01,40,0.274,53,0.895,70,0.289,84,0.107,85,0.008,86,0.51,120,0.008,133,1.606,142,1.345,388,1.527,450,3.675,653,4.704,973,3.763,1058,4.407,1100,6.069,1160,5.97,1164,4.24,1165,5.97,1723,4.602,1734,2.297,2334,5.076,2335,6.33,2336,6.33,2337,6.664,2338,5.076,2339,5.574,2340,5.574,2341,5.574,2342,5.574,2343,5.574]],["title/interfaces/IPort.html",[1047,2.571,1734,1.312]],["body/interfaces/IPort.html",[2,0.102,3,0.102,4,0.074,5,2.094,9,0.219,10,0.734,27,0.422,28,2.776,31,2.713,35,0.415,36,0.308,38,0.363,39,0.01,40,0.307,41,0.469,44,1.651,47,1.251,53,0.791,70,0.267,71,0.808,83,0.248,84,0.102,85,0.008,120,0.008,642,4.163,1043,4.693,1047,5.031,1048,3.853,1049,4.181,1056,6.136,1057,6.136,1063,5.466,1102,6.621,1104,6.136,1127,6.136,1131,7.27,1734,2.232,2344,5.317,2345,6.039,2346,6.039,2347,6.039,2348,4.842]],["title/interfaces/IProcedure.html",[45,1.46,1734,1.312]],["body/interfaces/IProcedure.html",[2,0.103,3,0.103,4,0.074,5,2.02,9,0.221,10,0.738,26,4.176,27,0.424,28,2.791,31,2.721,35,0.415,36,0.287,38,0.366,39,0.01,40,0.221,41,0.473,44,1.618,45,3.026,55,3.357,63,2.873,66,3.729,67,3.963,69,3.072,70,0.249,73,1.898,83,0.268,84,0.103,85,0.008,95,3.417,101,3.524,120,0.008,483,4.176,632,5.165,642,4.176,1043,4.707,1207,3.621,1734,2.244,2326,5.442,2349,5.364,2350,6.092,2351,6.092]],["title/classes/IdGenerator.html",[0,0.172,1045,3.011]],["body/classes/IdGenerator.html",[0,0.302,2,0.107,3,0.107,4,0.078,5,2.061,9,0.231,11,1.231,27,0.436,36,0.295,39,0.01,53,0.839,70,0.284,84,0.107,85,0.008,120,0.008,428,3.342,430,3.024,1045,5.294,2352,5.618,2353,7.406,2354,8.411,2355,6.38,2356,6.38,2357,6.38,2358,6.38,2359,6.38,2360,6.38,2361,6.38,2362,8.882]],["title/classes/IfControlProcedure.html",[0,0.172,2363,3.214]],["body/classes/IfControlProcedure.html",[0,0.248,2,0.079,3,0.079,4,0.057,5,1.785,7,2.291,8,1.248,9,0.169,10,0.623,11,1.341,13,1.557,14,3.547,15,3.303,16,3.684,17,3.303,18,3.005,19,3.684,20,3.684,21,3.684,22,3.684,23,3.684,24,3.193,25,3.303,26,3.547,27,0.358,28,2.834,29,3.272,30,3.684,31,2.311,32,0.53,33,3.551,34,2.933,35,0.415,36,0.345,38,0.452,39,0.01,40,0.272,41,0.583,42,1.754,43,1.765,44,1.572,45,2.908,46,1.156,47,1.066,48,4.017,49,2.548,50,1.679,51,2.548,52,2.548,53,0.749,54,2.548,55,3.791,56,2.548,57,1.295,58,2.548,59,2.548,60,2.548,61,2.548,62,2.548,63,2.918,64,2.548,65,2.548,66,3.547,67,3.654,69,3.15,70,0.264,71,0.825,72,2.449,73,1.946,74,2.548,75,2.054,76,2.548,77,2.548,78,2.548,83,0.253,84,0.079,85,0.007,86,0.504,88,2.836,90,2.548,91,2.339,92,1.28,95,2.577,96,3.038,98,3.272,99,3.15,100,3.15,101,2.658,110,2.658,111,2.658,112,2.548,114,2.548,116,2.658,120,0.007,713,2.779,714,2.916,939,3.713,941,3.475,942,3.475,2363,4.642,2364,4.117,2365,4.676,2366,4.676,2367,4.676]],["title/classes/IfElseControlProcedure.html",[0,0.172,2368,3.214]],["body/classes/IfElseControlProcedure.html",[0,0.247,2,0.078,3,0.078,4,0.057,5,1.183,7,2.287,8,1.248,9,0.169,10,0.622,11,1.34,13,1.555,14,3.542,15,3.298,16,3.679,17,3.298,18,3.002,19,3.679,20,3.679,21,3.679,22,3.679,23,3.679,24,3.189,25,3.298,26,3.542,27,0.358,28,2.353,29,3.265,30,3.679,31,2.308,35,0.408,36,0.343,38,0.375,39,0.01,40,0.226,41,0.484,42,2.106,44,1.571,45,2.945,46,1.154,47,1.064,48,4.015,49,2.541,50,1.571,51,2.541,52,2.541,53,0.78,54,2.541,55,3.729,56,2.541,57,1.293,58,2.541,59,2.541,60,2.541,61,2.541,62,2.541,63,2.914,64,2.541,65,2.541,66,3.144,67,3.404,69,2.351,70,0.271,71,0.772,72,2.442,73,1.942,74,2.541,75,2.048,76,2.541,77,2.541,78,2.541,83,0.253,84,0.078,85,0.007,86,0.376,88,2.116,90,2.541,91,2.285,92,1.707,95,1.924,96,2.267,98,2.442,99,2.351,100,2.351,112,2.541,114,2.541,116,2.65,120,0.007,133,1.582,713,2.771,714,2.908,1298,3.246,1311,2.189,2368,5.573,2369,4.106,2370,4.663,2371,4.663,2372,6.235,2373,6.235,2374,4.663,2375,4.663,2376,6.235,2377,4.663,2378,4.341,2379,4.663,2380,4.633,2381,4.663,2382,4.663,2383,4.663,2384,6.235,2385,4.663,2386,4.663,2387,4.663,2388,4.663,2389,4.663,2390,4.663,2391,4.663,2392,4.663]],["title/components/InfoViewerComponent.html",[146,0.272,203,0.967]],["body/components/InfoViewerComponent.html",[0,0.193,2,0.142,3,0.082,4,0.078,8,1.064,9,0.177,27,0.368,32,0.814,36,0.249,38,0.432,39,0.01,40,0.233,70,0.164,71,0.536,83,0.216,84,0.082,85,0.007,86,0.393,120,0.007,139,0.738,142,0.866,146,0.5,147,1.118,148,1.236,149,1.236,150,1.175,152,1.146,153,2.281,154,2.218,156,1.67,158,1.588,161,1.118,162,1.629,163,1.629,164,1.588,165,1.936,166,1.236,167,1.236,168,1.09,169,1.51,170,2.227,171,1.09,172,1.09,173,1.09,174,1.236,175,1.146,176,1.236,177,1.118,178,1.236,179,1.063,180,1.936,181,1.118,182,1.118,183,1.629,184,1.118,185,1.083,186,1.236,187,1.063,188,1.118,189,1.118,190,1.09,191,1.205,192,1.118,193,1.175,194,1.236,195,1.146,196,1.236,197,1.436,198,1.795,199,1.236,200,1.436,201,1.236,202,1.09,203,1.707,204,1.118,205,1.236,206,1.118,207,1.236,208,1.473,209,1.236,210,1.118,211,1.357,212,1.118,213,1.236,214,1.118,215,1.118,216,1.236,217,1.118,218,1.118,219,1.236,220,1.118,221,0.866,222,1.236,223,1.09,224,1.236,225,1.118,226,1.118,227,1.09,228,1.118,229,1.118,230,1.236,231,1.146,232,1.236,233,1.118,234,1.205,235,1.236,236,1.118,237,1.236,238,1.436,239,1.629,240,1.09,241,1.118,242,1.146,243,1.236,244,1.473,245,1.09,246,1.489,247,1.146,248,1.236,348,4.719,349,5.336,386,1.916,387,2.457,388,1.549,389,2.179,390,3.363,391,3.363,395,2.257,1812,3.499,1930,4.47,1941,4.219,2393,4.873,2394,4.873,2395,4.873]],["title/classes/InputPort.html",[0,0.172,506,1.84]],["body/classes/InputPort.html",[0,0.238,2,0.074,3,0.074,4,0.073,5,1.729,7,2.197,9,0.159,10,0.597,11,1.33,13,1.517,15,3.199,17,3.199,18,2.929,24,3.093,25,3.199,27,0.344,28,2.762,31,2.239,32,0.498,34,2.812,35,0.421,36,0.348,38,0.461,39,0.01,40,0.293,41,0.594,43,2.572,44,1.567,46,1.298,47,1.265,48,4.06,50,1.524,53,0.868,70,0.287,71,0.905,83,0.247,84,0.074,85,0.006,91,2.096,120,0.006,392,3.959,397,2.021,411,1.368,506,2.549,642,3.436,1047,4.808,1048,4.011,1049,3.404,1051,5.464,1052,4.744,1053,5.464,1054,5.464,1055,5.464,1056,5.064,1057,5.064,1058,4.169,1063,5.064,1065,5.439,1085,3.868,1104,5.064,1105,5.464,1109,3.522,1112,3.058,1113,2.886,1117,3.868,1118,5.464,1121,3.522,1127,5.064,1128,5.464,1129,4.744,1629,2.611,1766,3.868,2348,4.802,2396,3.868,2397,5.273,2398,5.273,2399,4.392,2400,3.868,2401,3.868,2402,3.868,2403,3.868,2404,3.868,2405,3.868,2406,3.868,2407,3.868,2408,3.868,2409,3.868,2410,3.868,2411,3.868,2412,4.392,2413,3.868,2414,3.868,2415,3.868,2416,3.868,2417,3.868,2418,3.868,2419,3.868,2420,3.868,2421,3.868,2422,3.868,2423,3.058,2424,3.264,2425,3.868,2426,4.392,2427,4.392,2428,3.264,2429,4.392,2430,4.392]],["title/components/LandingComponent.html",[146,0.272,204,0.992]],["body/components/LandingComponent.html",[0,0.173,2,0.1,3,0.073,4,0.073,8,1.145,9,0.158,27,0.341,32,0.769,36,0.231,38,0.408,39,0.01,40,0.215,70,0.147,71,0.478,83,0.147,84,0.073,85,0.006,86,0.351,87,1.805,120,0.006,134,4.141,139,0.659,142,0.773,146,0.481,147,0.997,148,1.103,149,1.103,150,1.049,152,1.023,153,2.27,154,2.205,156,1.547,158,1.471,161,0.997,162,1.509,163,1.509,164,1.471,165,1.849,166,1.103,167,1.103,168,0.973,169,1.714,170,2.191,171,0.973,172,0.973,173,0.973,174,1.103,175,1.023,176,1.103,177,0.997,178,1.103,179,0.948,180,1.849,181,0.997,182,0.997,183,1.509,184,0.997,185,1.003,186,1.103,187,0.948,188,0.997,189,0.997,190,0.973,191,1.076,192,0.997,193,1.049,194,1.103,195,1.023,196,1.103,197,0.973,198,1.714,199,1.103,200,0.973,201,1.103,202,0.973,203,0.973,204,1.672,205,1.103,206,0.997,207,1.103,208,0.997,209,1.103,210,0.997,211,1.46,212,0.997,213,1.103,214,0.997,215,0.997,216,1.103,217,0.997,218,0.997,219,1.103,220,0.997,221,0.773,222,1.103,223,0.973,224,1.103,225,0.997,226,0.997,227,0.973,228,0.997,229,0.997,230,1.103,231,1.023,232,1.103,233,0.997,234,1.076,235,1.103,236,0.997,237,1.103,238,1.33,239,1.509,240,0.973,241,0.997,242,1.023,243,1.103,244,1.364,245,0.973,246,1.406,247,1.023,248,1.103,279,3.242,361,4.455,382,4.42,386,1.809,388,1.435,389,2.057,395,2.155,521,2.613,587,2.7,702,4.141,951,3.242,1297,3.909,1308,3.71,1338,3.381,1812,4.734,1941,5.398,1944,3.909,1963,4.77,1971,3.909,2013,5.845,2015,4.79,2033,4.77,2034,4.77,2036,4.42,2128,4.141,2150,5.416,2154,4.77,2182,3.71,2234,3.909,2431,3.829,2432,5.238,2433,5.948,2434,5.948,2435,4.349,2436,4.349,2437,5.238,2438,4.77,2439,4.77,2440,5.948,2441,5.948,2442,5.238,2443,6.319,2444,4.77,2445,5.948,2446,5.948,2447,7.289,2448,4.77,2449,6.939,2450,5.948,2451,5.948,2452,5.948,2453,5.948,2454,5.238,2455,3.536,2456,5.238,2457,5.238,2458,5.948,2459,5.948]],["title/injectables/LayoutService.html",[121,1.46,269,2.458]],["body/injectables/LayoutService.html",[0,0.13,2,0.055,3,0.055,4,0.04,8,0.678,9,0.248,10,0.485,11,1.201,13,0.68,27,0.279,32,0.372,34,3.215,35,0.397,36,0.339,38,0.477,39,0.01,40,0.298,41,0.592,44,0.598,46,1.125,47,1.087,53,0.883,57,1.667,70,0.296,71,0.953,83,0.267,84,0.055,85,0.005,86,0.517,87,1.476,91,0.897,92,1.331,120,0.005,121,1.956,123,4.268,133,1.233,139,0.737,146,0.306,179,1.264,185,0.82,187,1.264,198,0.771,211,0.864,227,1.296,241,0.752,245,1.296,246,1.202,269,2.764,298,3.488,310,5.491,323,2.436,324,2.436,325,3.614,334,2.436,335,2.436,337,2.887,338,2.436,339,2.436,340,2.887,388,1.173,393,1.395,398,3.811,408,2.741,409,1.049,410,1.653,430,2.011,445,2.106,521,1.44,533,4.035,534,2.283,535,5.169,536,2.436,600,5.646,603,5.646,606,4.282,611,2.764,623,4.282,651,4.282,652,2.887,719,3.195,968,3.358,979,2.069,1049,1.864,1094,2.436,1297,4.714,1418,5.089,1456,4.282,1476,2.436,1751,3.159,1813,2.436,1987,5.141,1988,2.045,2044,5.169,2149,2.629,2150,5.089,2193,3.899,2262,5.646,2460,2.887,2461,6.412,2462,5.646,2463,4.464,2464,6.412,2465,6.412,2466,6.412,2467,6.412,2468,4.863,2469,6.412,2470,3.899,2471,4.282,2472,4.282,2473,6.412,2474,6.412,2475,4.863,2476,6.412,2477,5.646,2478,4.282,2479,6.412,2480,4.035,2481,5.141,2482,3.279,2483,3.279,2484,3.279,2485,5.796,2486,5.796,2487,3.279,2488,3.279,2489,3.279,2490,4.863,2491,3.279,2492,6.316,2493,3.279,2494,4.863,2495,3.279,2496,4.863,2497,3.279,2498,4.863,2499,3.279,2500,3.279,2501,3.279,2502,3.279,2503,4.863,2504,3.279,2505,3.279,2506,3.279,2507,4.863,2508,3.279,2509,3.385,2510,3.279,2511,3.279,2512,3.279,2513,3.279,2514,4.282,2515,4.863,2516,8.226,2517,6.412,2518,3.195,2519,4.863,2520,4.863,2521,4.863,2522,4.863,2523,3.279,2524,3.279,2525,3.279,2526,2.629,2527,3.279,2528,2.887,2529,3.279,2530,2.887,2531,3.279,2532,2.887,2533,3.279,2534,2.887,2535,3.279,2536,3.279,2537,3.279,2538,3.279,2539,3.279,2540,3.279,2541,3.279,2542,3.279,2543,4.282,2544,5.796,2545,5.796,2546,3.279,2547,2.629,2548,2.629,2549,3.279,2550,2.887,2551,2.887,2552,4.863,2553,3.279,2554,4.863,2555,3.279,2556,4.863,2557,5.796,2558,4.282,2559,3.279,2560,4.863,2561,3.279,2562,2.887,2563,3.279,2564,4.863,2565,2.887,2566,6.412,2567,6.412,2568,6.412,2569,6.412]],["title/components/MenuComponent.html",[146,0.272,206,0.992]],["body/components/MenuComponent.html",[0,0.193,2,0.108,3,0.082,4,0.107,8,0.893,9,0.176,10,0.639,35,0.226,36,0.188,38,0.431,39,0.01,40,0.232,83,0.242,84,0.082,85,0.007,86,0.392,120,0.007,133,1.626,139,0.736,142,0.864,146,0.499,147,1.114,148,1.232,149,1.232,150,1.172,152,1.143,153,2.281,154,2.217,156,1.667,158,1.585,161,1.114,162,1.626,163,1.626,164,1.585,165,1.934,166,1.232,167,1.232,168,1.087,169,1.507,170,2.226,171,1.087,172,1.604,173,1.087,174,1.232,175,1.143,176,1.232,177,1.114,178,1.232,179,1.06,180,1.934,181,1.114,182,1.645,183,1.626,184,1.114,185,1.081,186,1.232,187,1.06,188,1.114,189,1.114,190,1.087,191,1.202,192,1.114,193,1.172,194,1.232,195,1.143,196,1.232,197,1.087,198,1.914,199,1.232,200,1.087,201,1.232,202,1.087,203,1.087,204,1.114,205,1.232,206,1.748,207,1.232,208,1.114,209,1.232,210,1.114,211,1.447,212,1.114,213,1.232,214,1.114,215,1.114,216,1.232,217,1.114,218,1.114,219,1.232,220,1.114,221,1.275,222,1.232,223,1.087,224,1.232,225,1.114,226,1.114,227,1.087,228,1.114,229,1.114,230,1.232,231,1.143,232,1.232,233,1.114,234,1.202,235,1.232,236,1.114,237,1.232,238,1.433,239,1.626,240,1.087,241,1.114,242,1.143,243,1.232,244,1.47,245,1.087,246,1.007,247,1.143,248,1.232,268,1.733,300,1.4,301,2.005,314,5.139,386,1.71,419,4.211,573,4.532,574,2.648,575,3.642,684,3.896,1274,6.713,1296,4.278,1300,4.278,2208,4.461,2570,4.278,2571,5.643,2572,6.408,2573,6.408,2574,4.859,2575,6.408]],["title/components/MobiusAbout.html",[146,0.272,208,0.992]],["body/components/MobiusAbout.html",[0,0.147,2,0.048,3,0.062,4,0.083,8,1.196,9,0.06,27,0.163,32,0.554,35,0.348,36,0.263,38,0.496,39,0.01,40,0.192,42,2.101,46,0.872,47,1.235,50,0.634,57,1.1,70,0.056,71,0.183,83,0.165,84,0.062,85,0.008,86,0.135,87,2.358,92,0.776,95,2.457,101,3.008,120,0.003,133,1.105,139,0.253,142,1.477,146,0.356,147,0.383,148,0.423,149,0.423,150,0.403,152,0.393,153,2.122,154,2.044,156,1.134,158,1.078,161,0.383,162,0.719,163,0.719,164,0.701,165,1.105,166,0.423,167,0.423,168,0.373,169,0.667,170,1.759,171,0.373,172,1.814,173,0.373,174,0.423,175,0.393,176,0.423,177,0.383,178,0.423,179,0.364,180,1.105,181,0.383,182,1.12,183,0.719,184,0.383,185,1.466,186,0.423,187,0.364,188,0.383,189,0.383,190,0.373,191,0.413,192,0.383,193,0.403,194,0.423,195,0.393,196,0.423,197,0.634,198,1.76,199,0.423,200,0.634,201,0.423,202,0.373,203,0.373,204,0.383,205,0.423,206,0.383,207,0.423,208,0.999,209,0.423,210,0.383,211,0.775,212,0.383,213,0.423,214,0.383,215,0.383,216,0.423,217,0.383,218,0.383,219,0.423,220,0.383,221,1.598,222,0.423,223,0.373,224,0.423,225,0.383,226,0.383,227,0.373,228,0.383,229,0.383,230,0.423,231,0.393,232,0.423,233,0.383,234,0.413,235,0.423,236,0.383,237,0.423,238,0.634,239,0.719,240,0.373,241,1.796,242,0.393,243,0.423,244,0.65,245,0.373,246,1.761,247,1.148,248,0.423,253,2.718,274,1.545,279,2.892,298,1.379,348,2.429,386,0.986,388,1.051,389,1.481,392,3.105,395,1.569,397,2.724,409,1.394,419,5.019,445,0.931,483,3.422,521,2.824,557,4.549,611,3.857,632,3.31,633,3.494,634,1.947,635,2.375,637,2.477,638,1.685,642,1.43,650,3.034,739,4.46,878,4.426,881,2.274,900,2.274,934,4.738,939,3.821,951,4.57,965,1.863,979,3.799,1019,1.768,1075,2.863,1083,3.944,1111,1.545,1122,5.41,1125,2.274,1129,4.147,1137,2.107,1254,3.702,1297,4.224,1299,2.274,1308,4.549,1311,1.331,1328,1.974,1338,4.017,1355,1.768,1376,1.685,1634,3.695,1667,1.863,1692,1.863,1693,4.673,1708,2.497,1717,4,1729,3.3,1734,1.322,1812,3.607,1929,1.24,1930,1.162,1931,1.338,1932,1.338,1935,2.274,1936,2.274,1937,1.338,1938,1.338,1939,2.107,1941,4.224,1944,3.488,1946,3.494,1947,6.107,1948,4.009,1950,5.043,1951,3.837,1952,5.125,1953,4.777,1955,3.494,1956,4.009,1958,3.488,1959,1.974,1962,2.497,1965,4.673,1969,2.497,1970,2.497,1971,4.794,1975,3.494,1985,2.274,1988,2.718,1991,4.777,1992,2.107,1993,4.776,1998,5.043,1999,3.238,2001,2.497,2003,2.497,2008,2.274,2015,4.644,2016,2.274,2021,4.776,2027,2.107,2028,3.034,2033,4.776,2034,2.274,2036,3.944,2041,7.108,2043,4.256,2044,3.034,2061,3.494,2062,4.776,2071,3.494,2081,2.107,2084,5.66,2092,4.426,2093,2.274,2104,2.107,2125,1.685,2126,2.107,2128,1.974,2130,2.274,2131,2.274,2137,2.274,2139,3.488,2148,5.155,2149,4.256,2150,4.777,2151,3.494,2153,3.944,2163,2.107,2165,2.497,2168,2.497,2181,3.494,2187,3.494,2195,4.725,2199,6.224,2201,4.256,2208,1.974,2210,2.274,2220,2.107,2223,3.837,2229,2.497,2234,3.488,2237,2.497,2246,3.494,2437,2.497,2438,2.274,2439,2.274,2444,2.274,2455,4.034,2518,2.863,2576,1.669,2577,1.669,2578,2.497,2579,2.274,2580,3.837,2581,5.66,2582,5.307,2583,4.358,2584,4.673,2585,2.835,2586,8.665,2587,2.497,2588,2.835,2589,2.274,2590,2.835,2591,5.66,2592,4.673,2593,2.835,2594,6.224,2595,3.837,2596,2.835,2597,2.497,2598,2.835,2599,4.256,2600,2.274,2601,1.768,2602,3.837,2603,2.835,2604,2.835,2605,5.307,2606,2.835,2607,2.497,2608,4.358,2609,4.358,2610,2.835,2611,2.835,2612,2.497,2613,2.835,2614,2.497,2615,2.497,2616,2.835,2617,2.497,2618,2.497,2619,2.497,2620,4.673,2621,2.835,2622,2.835,2623,3.837,2624,4.358,2625,5.307,2626,2.835,2627,4.358,2628,2.835,2629,2.835,2630,2.497,2631,4.358,2632,2.835,2633,2.497,2634,2.497,2635,2.835,2636,2.497,2637,2.835,2638,2.835,2639,4.358,2640,2.497,2641,2.835,2642,2.497,2643,2.274,2644,2.274,2645,2.835,2646,2.274,2647,2.835,2648,2.497,2649,3.494,2650,2.497,2651,2.835,2652,2.835]],["title/modules/MobiusCesium.html",[86,0.349,264,3.011]],["body/modules/MobiusCesium.html",[0,0.214,2,0.091,3,0.091,4,0.066,31,1.772,39,0.01,70,0.182,83,0.305,84,0.133,85,0.007,86,0.553,120,0.007,139,0.817,161,1.237,175,1.969,177,1.92,211,0.959,215,2.032,231,1.969,236,1.92,238,1.872,244,1.92,250,3.364,251,5.248,252,4.008,253,4.947,264,6.336,273,4.774,274,2.94,277,5.498,278,4.506,279,2.94,280,4.954,281,6.038,283,4.325,291,3.364,293,5.095,294,3.544,355,4.008,377,5.095,378,4.008,430,1.871,579,3.544,688,5.095,693,5.498,696,5.498,716,3.544,718,4.454,775,3.364,776,3.755,1295,4.325,1786,4.75,1787,6.038,1788,4.75,1789,4.75,1795,6.038,1796,4.75,1797,4.75,1800,4.75,2653,4.75,2654,4.75,2655,4.75,2656,5.394,2657,5.394,2658,5.394,2659,5.394,2660,5.394,2661,5.394,2662,5.394,2663,5.394]],["title/components/MobiusEditorComponent.html",[146,0.272,210,0.992]],["body/components/MobiusEditorComponent.html",[0,0.15,2,0.091,3,0.064,4,0.066,8,0.751,9,0.137,10,0.537,11,0.816,27,0.309,32,0.428,35,0.337,36,0.313,38,0.412,39,0.01,40,0.228,41,0.293,44,1.374,46,0.885,47,0.952,50,1.62,53,0.791,70,0.231,71,0.415,83,0.231,84,0.064,85,0.006,86,0.304,91,1.033,92,1.474,120,0.006,134,4.77,139,0.572,140,2.627,142,0.671,146,0.456,147,0.865,148,0.957,149,0.957,150,0.91,152,0.888,153,2.254,154,2.188,156,1.401,158,1.332,161,0.865,162,1.366,163,1.366,164,1.332,165,1.838,166,0.957,167,0.957,168,0.844,169,1.267,170,2.141,171,0.844,172,0.844,173,0.844,174,0.957,175,0.888,176,0.957,177,0.865,178,0.957,179,0.823,180,1.738,181,0.865,182,0.865,183,1.366,184,0.865,185,0.909,186,0.957,187,0.823,188,0.865,189,0.865,190,0.844,191,0.933,192,0.865,193,0.91,194,0.957,195,0.888,196,0.957,197,0.844,198,1.611,199,0.957,200,0.844,201,0.957,202,0.844,203,0.844,204,0.865,205,0.957,206,0.865,207,0.957,208,0.865,209,0.957,210,1.571,211,1.472,212,0.865,213,0.957,214,0.865,215,0.865,216,0.957,217,0.865,218,0.865,219,0.957,220,0.865,221,0.671,222,0.957,223,0.844,224,0.957,225,0.865,226,0.865,227,0.844,228,0.865,229,0.865,230,0.957,231,0.888,232,0.957,233,0.865,234,0.933,235,0.957,236,0.865,237,0.957,238,1.205,239,1.366,240,0.844,241,1.235,242,0.888,243,0.957,244,1.235,245,0.844,246,1.302,247,0.888,248,0.957,268,2.765,269,4.282,270,3.454,279,2.936,298,3.523,300,1.81,301,1.557,303,2.627,304,2.48,361,5.379,362,6.564,386,2.184,388,1.299,389,1.906,395,2.026,397,2.445,398,4.306,413,1.346,445,1.24,634,2.844,912,4.003,913,4.003,952,4.128,1009,2.353,1191,1.976,1338,3.062,1376,3.202,2030,2.804,2182,4.518,2227,2.804,2463,4.77,2547,3.026,2565,3.323,2579,5.037,2664,2.627,2665,6.033,2666,6.033,2667,5.531,2668,3.774,2669,5.387,2670,3.774,2671,3.774,2672,3.774,2673,3.774,2674,3.774,2675,3.323,2676,3.774,2677,3.323,2678,3.323,2679,3.323,2680,3.323,2681,3.323,2682,4.743,2683,3.774,2684,3.774,2685,3.774,2686,3.774,2687,3.774,2688,3.774,2689,3.026,2690,3.026,2691,5.387,2692,3.774,2693,3.774,2694,5.387,2695,3.774,2696,6.282,2697,3.774,2698,7.106,2699,3.323,2700,3.323,2701,3.323,2702,3.323,2703,3.323,2704,3.323,2705,3.323,2706,3.323,2707,3.323,2708,3.323,2709,5.531,2710,3.323,2711,3.323]],["title/components/MobiusGalleryComponent.html",[146,0.272,212,0.992]],["body/components/MobiusGalleryComponent.html",[0,0.184,2,0.105,3,0.078,4,0.076,8,0.867,9,0.168,10,0.621,11,1.063,27,0.357,32,0.527,35,0.216,36,0.272,38,0.451,39,0.01,40,0.254,41,0.361,42,1.305,70,0.157,71,0.511,83,0.253,84,0.078,85,0.007,86,0.375,120,0.007,139,0.704,142,0.826,146,0.492,147,1.066,148,1.179,149,1.179,150,1.121,152,1.093,153,2.276,154,2.21,156,1.619,158,1.539,161,1.066,162,1.579,163,1.579,164,1.539,165,1.9,166,1.179,167,1.179,168,1.04,169,1.464,170,2.212,171,1.04,172,1.04,173,1.04,174,1.179,175,1.093,176,1.179,177,1.066,178,1.179,179,1.014,180,1.9,181,1.066,182,1.066,183,1.579,184,1.066,185,1.05,186,1.179,187,1.014,188,1.066,189,1.066,190,1.04,191,1.15,192,1.066,193,1.121,194,1.179,195,1.093,196,1.179,197,1.04,198,1.762,199,1.179,200,1.04,201,1.179,202,1.04,203,1.04,204,1.066,205,1.179,206,1.066,207,1.179,208,1.066,209,1.179,210,1.066,211,1.517,212,1.718,213,1.179,214,1.066,215,1.066,216,1.179,217,1.066,218,1.066,219,1.179,220,1.066,221,0.826,222,1.179,223,1.04,224,1.179,225,1.066,226,1.066,227,1.04,228,1.066,229,1.066,230,1.179,231,1.093,232,1.179,233,1.066,234,1.15,235,1.179,236,1.066,237,1.179,238,1.392,239,1.579,240,1.04,241,1.066,242,1.093,243,1.179,244,1.427,245,1.04,246,0.964,247,1.093,248,1.179,285,3.055,361,4.923,365,6.007,382,5.567,386,1.999,388,1.501,389,2.129,395,2.215,413,1.658,669,4.333,739,4.089,1511,4.333,1512,5.215,1556,3.728,1941,4.089,2712,4.094,2713,6.223,2714,6.223,2715,7.491,2716,4.649,2717,6.223,2718,4.649,2719,4.649,2720,4.094,2721,4.649,2722,4.649,2723,4.649,2724,4.649,2725,6.223,2726,4.99,2727,6.223,2728,4.99]],["title/injectables/MobiusService.html",[121,1.46,270,2.181]],["body/injectables/MobiusService.html",[0,0.209,2,0.089,3,0.089,4,0.064,9,0.191,10,0.673,11,1.31,27,0.387,32,0.765,35,0.387,36,0.342,38,0.473,39,0.01,40,0.285,41,0.61,44,1.359,46,1.291,47,1.26,50,1.509,53,0.843,70,0.289,71,0.819,73,2.531,75,2.964,79,2.866,83,0.265,84,0.089,85,0.007,120,0.007,121,2.514,123,4.313,126,6.92,127,6.92,128,6.92,132,5.464,133,1.711,134,4.697,135,4.631,137,4.631,139,1.022,141,5.941,142,1.324,143,4.631,144,4.631,145,4.631,266,3.821,270,3.402,409,1.682,446,3.28,527,5.41,537,3.28,604,4.434,980,3.908,1498,6.92,1510,4.217,2234,4.434,2729,4.631,2730,7.859,2731,6.747,2732,5.259,2733,5.259,2734,5.259,2735,6.747,2736,5.259,2737,5.259,2738,5.259,2739,5.259,2740,5.259,2741,5.259,2742,5.259,2743,6.747,2744,5.259,2745,5.259,2746,5.259,2747,5.259,2748,6.747,2749,6.747,2750,5.259,2751,6.747,2752,5.259]],["title/components/MobiusViewerComponent.html",[146,0.272,214,0.992]],["body/components/MobiusViewerComponent.html",[0,0.133,2,0.083,3,0.057,4,0.06,8,0.69,9,0.122,10,0.494,11,0.983,27,0.284,32,0.381,35,0.348,36,0.328,38,0.416,39,0.01,40,0.235,41,0.384,44,1.43,46,0.813,47,0.75,50,1.547,53,0.831,70,0.259,71,0.713,83,0.269,84,0.057,85,0.005,86,0.271,92,1.609,101,2.106,120,0.005,139,0.509,142,0.597,146,0.436,147,0.77,148,0.852,149,0.852,150,0.81,152,0.79,153,2.239,154,2.171,156,1.288,158,1.224,161,0.77,162,1.255,163,1.255,164,1.224,165,1.645,166,0.852,167,0.852,168,0.751,169,1.164,170,2.096,171,0.751,172,0.751,173,0.751,174,0.852,175,0.79,176,0.852,177,0.77,178,0.852,179,0.732,180,1.645,181,0.77,182,0.77,183,1.255,184,0.77,185,0.835,186,0.852,187,0.732,188,0.77,189,0.77,190,0.751,191,0.831,192,0.77,193,0.81,194,0.852,195,0.79,196,0.852,197,0.751,198,1.526,199,0.852,200,0.751,201,0.852,202,0.751,203,0.751,204,0.77,205,0.852,206,0.77,207,0.852,208,0.77,209,0.852,210,0.77,211,1.437,212,0.77,213,0.852,214,1.488,215,0.77,216,0.852,217,0.77,218,0.77,219,0.852,220,0.77,221,0.597,222,0.852,223,0.751,224,0.852,225,0.77,226,0.77,227,0.751,228,0.77,229,0.77,230,0.852,231,0.79,232,0.852,233,0.77,234,0.831,235,0.852,236,0.77,237,0.852,238,1.107,239,1.255,240,0.751,241,0.77,242,0.79,243,0.852,244,1.135,245,0.751,246,1.219,247,0.79,248,0.852,268,2.313,269,4.253,270,3.271,279,2.697,285,2.207,288,2.693,300,1.694,301,1.385,303,2.338,304,2.207,361,5.59,363,6.822,386,2.27,387,1.693,388,1.194,389,1.784,390,2.592,391,2.592,394,3.046,395,1.918,401,2.668,413,1.198,432,3.969,533,2.338,579,2.207,634,2.654,669,3.446,834,2.957,952,3.863,1191,1.759,1196,4.516,1338,2.813,1376,2.942,1380,2.693,1511,4.092,1512,4.516,1553,4.358,1556,2.693,1831,4.516,2182,4.313,2216,5.712,2227,2.495,2273,2.957,2463,4.516,2547,2.693,2579,4.714,2665,5.712,2666,5.712,2667,6.371,2677,2.957,2678,2.957,2679,2.957,2680,2.957,2681,2.957,2682,4.358,2689,2.693,2690,2.693,2698,6.903,2699,2.957,2700,2.957,2701,2.957,2702,2.957,2703,2.957,2704,2.957,2705,2.957,2706,2.957,2707,2.957,2708,2.957,2709,5.176,2710,2.957,2711,2.957,2753,5.878,2754,6.487,2755,5.176,2756,6.487,2757,6.487,2758,3.358,2759,6.487,2760,4.358,2761,5.878,2762,3.358,2763,4.95,2764,3.358,2765,3.358,2766,3.358,2767,3.358,2768,3.358,2769,3.358,2770,4.95,2771,3.358,2772,3.358,2773,2.957,2774,3.358,2775,3.358,2776,2.693,2777,2.693,2778,4.714,2779,2.957,2780,4.358,2781,2.957,2782,2.693,2783,3.358,2784,3.358,2785,2.957,2786,3.358,2787,3.358,2788,3.358,2789,3.358,2790,5.176,2791,3.358,2792,2.957,2793,3.358,2794,2.957,2795,3.358,2796,3.358,2797,3.358,2798,3.358,2799,3.358,2800,3.358,2801,5.176,2802,5.176,2803,3.358,2804,3.358,2805,3.358,2806,3.358,2807,3.358]],["title/components/MobiuscesiumComponent.html",[146,0.272,215,0.992]],["body/components/MobiuscesiumComponent.html",[0,0.158,2,0.094,3,0.067,4,0.068,8,0.779,9,0.144,10,0.557,11,1.161,13,1.751,27,0.321,32,0.451,35,0.357,36,0.317,38,0.444,39,0.01,40,0.254,41,0.434,42,1.969,44,1.019,46,0.653,47,0.602,53,0.699,70,0.236,71,0.842,83,0.218,84,0.067,85,0.006,86,0.32,91,1.088,120,0.006,139,0.602,142,0.706,146,0.465,147,0.912,148,1.008,149,1.008,150,0.959,152,0.935,153,2.26,154,2.19,156,1.454,158,1.382,161,0.912,162,1.418,163,1.779,164,1.382,165,1.779,166,1.008,167,1.008,168,0.889,169,1.649,170,2.159,171,0.889,172,0.889,173,0.889,174,1.008,175,0.935,176,1.008,177,0.912,178,1.008,179,0.867,180,1.779,181,0.912,182,0.912,183,1.418,184,0.912,185,0.943,186,1.008,187,0.867,188,0.912,189,0.912,190,0.889,191,0.983,192,0.912,193,0.959,194,1.008,195,0.935,196,1.008,197,0.889,198,1.649,199,1.008,200,0.889,201,1.008,202,0.889,203,0.889,204,0.912,205,1.008,206,0.912,207,1.008,208,0.912,209,1.008,210,0.912,211,1.471,212,0.912,213,1.008,214,0.912,215,1.608,216,1.008,217,0.912,218,0.912,219,1.008,220,0.912,221,0.706,222,1.008,223,0.889,224,1.008,225,0.912,226,0.912,227,0.889,228,0.912,229,0.912,230,1.008,231,0.935,232,1.008,233,0.912,234,0.983,235,1.008,236,0.912,237,1.008,238,1.25,239,1.418,240,0.889,241,0.912,242,0.935,243,1.008,244,1.282,245,0.889,246,0.824,247,0.935,248,1.008,355,6.151,369,3.246,389,1.206,395,2.073,397,2.494,398,3.842,413,1.417,521,1.746,587,1.804,666,2.004,716,5.439,718,4.013,775,2.479,779,4.153,1333,3.485,1717,2.082,1803,5.211,1804,4.921,1805,3.187,1809,4.921,1812,2.166,1814,3.5,1815,3.5,1816,4.921,1817,3.5,1953,2.954,1988,3.485,1996,3.187,2644,3.187,2755,5.691,2776,3.187,2777,4.481,2778,5.925,2779,4.921,2780,5.691,2781,3.5,2782,3.187,2785,3.5,2790,6.931,2792,3.5,2794,3.5,2801,4.921,2802,5.691,2808,3.5,2809,5.588,2810,5.588,2811,6.463,2812,7.012,2813,5.588,2814,3.975,2815,3.975,2816,3.975,2817,3.975,2818,3.975,2819,3.975,2820,3.975,2821,3.975,2822,3.975,2823,3.975,2824,5.588,2825,3.975,2826,3.975,2827,3.975,2828,3.975,2829,5.588,2830,5.691,2831,3.975,2832,3.975,2833,3.975,2834,3.975,2835,3.975,2836,3.975,2837,5.588,2838,3.975,2839,5.588,2840,3.975]],["title/classes/Module.html",[0,0.172,86,0.349]],["body/classes/Module.html",[0,0.288,2,0.1,3,0.1,4,0.072,9,0.214,10,0.724,11,1.298,27,0.47,32,0.671,35,0.366,36,0.332,38,0.356,39,0.01,40,0.314,41,0.459,53,0.909,70,0.289,84,0.1,85,0.008,86,0.586,120,0.008,133,1.5,142,1.397,388,1.752,450,3.568,653,4.394,973,3.515,1058,5.056,1100,5.824,1160,5.858,1164,4.589,1165,5.858,1723,4.931,1734,1.794,2334,4.742,2337,6.395,2338,6.573,2339,5.207,2340,5.207,2341,5.207,2342,5.207,2343,5.207,2841,7.262,2842,5.913,2843,5.913,2844,5.913,2845,5.913]],["title/injectables/ModuleService.html",[121,1.46,271,2.265]],["body/injectables/ModuleService.html",[0,0.213,2,0.09,3,0.09,4,0.066,9,0.195,10,0.682,13,1.419,27,0.393,32,0.853,35,0.319,36,0.324,39,0.01,40,0.195,46,1.124,47,1.037,53,0.536,70,0.267,71,0.752,79,2.93,83,0.254,84,0.09,85,0.007,86,0.674,87,1.631,91,1.873,120,0.007,121,2.54,123,4.132,139,0.814,140,3.743,142,0.956,182,1.233,271,3.583,409,1.72,430,2.901,450,3.596,537,3.353,968,3.583,991,4.734,1267,3.195,1311,2.524,1448,3.995,1557,3.533,1618,4.311,1959,3.743,1996,4.311,2134,3.995,2283,3.995,2287,6.025,2455,4.067,2509,3.743,2846,4.734,2847,7.923,2848,7.923,2849,7.923,2850,6.842,2851,5.376,2852,5.376,2853,5.376,2854,5.376,2855,5.376,2856,3.995,2857,5.487,2858,4.734,2859,6.842,2860,5.376,2861,7.527,2862,5.376,2863,5.376,2864,5.376,2865,5.376,2866,5.376,2867,5.376,2868,5.376,2869,6.842,2870,5.376,2871,7.527,2872,7.923,2873,6.842,2874,5.376,2875,5.376,2876,5.376,2877,5.376,2878,5.376,2879,5.376,2880,6.842,2881,5.376,2882,5.376,2883,5.376,2884,5.376,2885,5.376,2886,5.376]],["title/classes/ModuleUtils.html",[0,0.172,1557,2.842]],["body/classes/ModuleUtils.html",[0,0.214,2,0.064,3,0.064,4,0.046,5,2.103,9,0.137,27,0.31,34,2.538,35,0.399,36,0.318,38,0.493,39,0.01,40,0.319,41,0.636,43,2.04,44,1.474,46,0.623,47,0.954,50,1.409,53,0.876,70,0.3,80,4.334,83,0.128,84,0.064,85,0.007,86,0.436,87,2.451,91,1.879,92,1.724,120,0.009,198,1.707,379,3.371,430,3.11,445,1.246,450,4.023,634,2.31,635,2.066,653,4.016,968,1.986,973,3.213,1052,3.763,1115,3.298,1139,4.759,1160,3.763,1165,3.763,1267,4.081,1333,2.364,1402,4.016,1491,3.338,1557,3.552,1672,6.045,1839,4.759,1948,2.364,1976,2.817,2025,3.338,2070,3.338,2093,3.04,2101,2.817,2279,3.04,2283,5.899,2480,2.639,2509,3.763,2857,4.334,2887,7.301,2888,3.338,2889,5.405,2890,5.405,2891,5.405,2892,5.405,2893,5.405,2894,5.405,2895,5.405,2896,6.866,2897,6.866,2898,3.791,2899,5.405,2900,3.791,2901,5.405,2902,3.791,2903,5.405,2904,3.791,2905,5.405,2906,3.791,2907,5.405,2908,3.791,2909,5.405,2910,5.405,2911,3.791,2912,5.405,2913,3.791,2914,5.405,2915,6.866,2916,3.791,2917,3.791,2918,5.405,2919,3.791,2920,5.405,2921,3.791,2922,5.405,2923,3.791,2924,3.791,2925,3.791,2926,3.791,2927,5.405,2928,5.405,2929,4.334,2930,3.791,2931,3.791,2932,6.866,2933,3.791,2934,5.405,2935,3.791,2936,3.791,2937,3.791,2938,3.791,2939,3.791,2940,3.791,2941,3.791,2942,3.791,2943,3.791,2944,3.791,2945,5.405,2946,3.791,2947,3.791,2948,3.791,2949,5.405,2950,3.791,2951,3.791,2952,5.405,2953,3.791,2954,3.791,2955,5.405,2956,3.791,2957,3.791,2958,3.791,2959,3.791,2960,3.791,2961,6.298,2962,3.791,2963,3.338,2964,3.791,2965,3.791,2966,5.405,2967,3.791,2968,3.791,2969,3.791,2970,6.298,2971,3.791,2972,3.791,2973,3.791,2974,3.791,2975,3.791,2976,3.791,2977,3.791,2978,3.791,2979,3.791,2980,3.791,2981,3.791,2982,3.791,2983,5.405,2984,3.791,2985,3.791,2986,3.791,2987,3.791,2988,3.791,2989,6.298,2990,3.791,2991,5.405,2992,3.338,2993,3.791,2994,3.791,2995,3.791,2996,3.791,2997,3.791,2998,3.338]],["title/components/ModuleViewerComponent.html",[146,0.272,217,0.992]],["body/components/ModuleViewerComponent.html",[0,0.187,2,0.106,3,0.079,4,0.077,8,0.875,9,0.171,10,0.626,32,0.712,35,0.329,36,0.274,38,0.453,39,0.01,40,0.256,41,0.365,46,0.773,47,0.713,53,0.704,70,0.159,83,0.212,84,0.079,85,0.007,86,0.69,87,2.285,100,2.374,120,0.007,139,0.713,142,0.837,146,0.494,147,1.08,148,1.194,149,1.194,150,1.135,152,1.107,153,2.278,154,2.214,156,1.633,158,1.552,161,1.08,162,1.592,163,1.592,164,1.552,165,1.91,166,1.194,167,1.194,168,1.053,169,1.476,170,2.216,171,1.053,172,1.053,173,1.053,174,1.194,175,1.107,176,1.194,177,1.08,178,1.194,179,1.027,180,1.91,181,1.08,182,1.08,183,1.592,184,1.08,185,1.058,186,1.194,187,1.027,188,1.08,189,1.08,190,1.053,191,1.164,192,1.08,193,1.135,194,1.194,195,1.107,196,1.194,197,1.053,198,1.771,199,1.194,200,1.053,201,1.194,202,1.053,203,1.053,204,1.08,205,1.194,206,1.08,207,1.194,208,1.08,209,1.194,210,1.08,211,1.338,212,1.08,213,1.194,214,1.08,215,1.08,216,1.194,217,1.727,218,1.08,219,1.194,220,1.08,221,0.837,222,1.194,223,1.053,224,1.194,225,1.08,226,1.08,227,1.053,228,1.08,229,1.08,230,1.194,231,1.107,232,1.194,233,1.08,234,1.164,235,1.194,236,1.08,237,1.194,238,1.403,239,1.592,240,1.053,241,1.08,242,1.107,243,1.194,244,1.439,245,1.053,246,1.463,247,1.107,248,1.194,271,3.943,300,1.356,305,3.278,332,6.037,333,6.037,386,2.009,387,2.374,389,1.429,390,3.287,391,3.287,408,3.139,719,4.124,1810,4.145,2509,4.369,2999,7.529,3000,6.276,3001,4.708,3002,4.708,3003,4.708,3004,4.708,3005,4.145,3006,4.708,3007,4.708]],["title/components/ModuleboxComponent.html",[146,0.272,218,0.992]],["body/components/ModuleboxComponent.html",[0,0.128,2,0.081,3,0.054,4,0.059,8,0.888,9,0.117,10,0.48,11,1.151,27,0.276,32,0.367,34,2.259,35,0.394,36,0.324,38,0.457,39,0.01,40,0.281,41,0.528,44,0.878,45,1.091,46,1.172,47,1.281,53,0.818,63,3.154,70,0.256,71,0.853,80,4.609,83,0.262,84,0.054,85,0.007,86,0.575,87,2.066,88,2.609,91,1.573,99,3.211,120,0.005,139,0.49,142,0.575,146,0.429,147,0.741,148,0.82,149,0.82,150,0.78,152,0.76,153,2.234,154,2.166,156,1.252,158,1.19,161,0.741,162,1.221,163,1.221,164,1.19,165,1.615,166,0.82,167,0.82,168,0.723,169,1.132,170,2.081,171,0.723,172,0.723,173,0.723,174,0.82,175,0.76,176,0.82,177,0.741,178,0.82,179,0.705,180,1.615,181,0.741,182,0.741,183,1.221,184,0.741,185,0.812,186,0.82,187,0.705,188,0.741,189,0.741,190,0.723,191,0.8,192,0.741,193,0.78,194,0.82,195,0.76,196,0.82,197,0.723,198,1.601,199,0.82,200,0.723,201,0.82,202,0.723,203,0.723,204,0.741,205,0.82,206,0.741,207,0.82,208,0.741,209,0.82,210,0.741,211,1.132,212,0.741,213,0.82,214,0.741,215,0.741,216,0.82,217,0.741,218,1.46,219,0.82,220,0.741,221,1.132,222,0.82,223,0.723,224,0.82,225,0.741,226,0.741,227,0.723,228,0.741,229,0.741,230,0.82,231,0.76,232,0.82,233,0.741,234,0.8,235,0.82,236,0.741,237,0.82,238,1.076,239,1.221,240,0.723,241,0.741,242,0.76,243,0.82,244,1.104,245,0.723,246,0.998,247,0.76,248,0.82,268,2.271,269,4.201,271,3.335,300,1.656,301,1.334,303,2.251,305,2.251,379,2.016,386,2.227,388,1.161,389,1.744,392,2.114,393,2.71,394,2.99,395,1.883,397,2.149,399,1.762,401,2.184,408,1.294,409,2.177,410,1.63,411,1.984,412,1.518,413,1.153,417,1.693,418,1.693,537,2.016,915,5.607,934,1.837,953,3.777,979,2.71,1082,1.762,1111,4.305,1115,4.198,1251,1.693,1252,4.451,1267,1.922,1299,2.592,1311,3.644,1427,3.785,1433,3.417,1484,2.623,1489,3.162,1557,2.124,1717,2.52,1948,3.971,1961,2.251,2015,2.124,2128,2.251,2283,2.402,2294,5.062,2378,4.002,2380,4.271,2455,1.922,2509,2.251,2562,2.847,2601,2.016,2689,2.592,3008,2.592,3009,4.237,3010,4.812,3011,4.812,3012,6.367,3013,6.834,3014,6.367,3015,6.367,3016,4.812,3017,4.812,3018,4.812,3019,4.812,3020,4.812,3021,4.812,3022,3.233,3023,4.812,3024,3.233,3025,4.812,3026,4.812,3027,3.233,3028,3.233,3029,3.233,3030,4.812,3031,3.233,3032,3.233,3033,3.233,3034,4.609,3035,3.233,3036,4.609,3037,4.609,3038,4.609,3039,4.271,3040,4.271,3041,4.271,3042,4.271,3043,3.233,3044,3.233,3045,3.233,3046,2.016,3047,2.402,3048,2.847,3049,2.847,3050,2.847,3051,2.402,3052,3.859,3053,3.233,3054,3.233,3055,3.233,3056,3.233,3057,5.748,3058,3.233,3059,3.233,3060,4.812,3061,3.233,3062,3.859,3063,2.251,3064,3.233,3065,3.233,3066,3.233,3067,4.812,3068,4.812,3069,4.237,3070,4.812]],["title/components/NodeLibraryComponent.html",[146,0.272,220,0.992]],["body/components/NodeLibraryComponent.html",[0,0.172,2,0.1,3,0.073,4,0.073,8,0.828,9,0.157,10,0.592,27,0.341,31,2.392,32,0.768,35,0.355,36,0.318,38,0.459,39,0.01,40,0.264,41,0.461,57,1.404,70,0.265,71,0.915,83,0.228,84,0.073,85,0.006,86,0.35,120,0.006,121,1.464,139,0.657,142,0.771,146,0.48,147,0.995,148,1.1,149,1.1,150,1.046,152,1.02,153,2.269,154,2.205,156,1.545,158,1.469,161,0.995,162,1.506,163,1.506,164,1.469,165,1.847,166,1.1,167,1.1,168,0.97,169,1.396,170,2.19,171,0.97,172,0.97,173,0.97,174,1.1,175,1.02,176,1.1,177,0.995,178,1.1,179,0.946,180,1.847,181,0.995,182,1.362,183,1.506,184,0.995,185,1.001,186,1.1,187,0.946,188,0.995,189,0.995,190,0.97,191,1.073,192,0.995,193,1.046,194,1.1,195,1.02,196,1.1,197,0.97,198,1.712,199,1.1,200,0.97,201,1.1,202,0.97,203,0.97,204,0.995,205,1.1,206,0.995,207,1.1,208,0.995,209,1.1,210,0.995,211,1.294,212,0.995,213,1.1,214,0.995,215,0.995,216,1.1,217,0.995,218,0.995,219,1.1,220,1.67,221,1.497,222,1.1,223,0.97,224,1.1,225,0.995,226,0.995,227,0.97,228,0.995,229,0.995,230,1.1,231,1.02,232,1.1,233,0.995,234,1.073,235,1.1,236,0.995,237,1.1,238,1.328,239,1.506,240,0.97,241,0.995,242,1.02,243,1.1,244,1.362,245,0.97,246,0.899,247,1.02,248,1.1,272,2.705,300,1.25,308,3.02,309,3.478,343,6.677,344,6.677,386,2.222,389,1.316,408,1.736,409,1.387,411,2.268,412,2.036,419,3.902,1082,3.236,1152,2.364,1206,2.187,1398,3.902,1484,3.236,1489,2.85,1692,3.902,2455,4.792,3071,3.819,3072,5.937,3073,5.937,3074,7.28,3075,5.937,3076,7.28,3077,5.937,3078,7.28,3079,7.28,3080,5.937,3081,5.937,3082,4.337,3083,4.337,3084,5.937,3085,4.337,3086,4.337,3087,4.337,3088,4.337,3089,4.337,3090,4.337,3091,4.337,3092,4.337,3093,5.937,3094,4.337]],["title/injectables/NodeLibraryService.html",[121,1.46,272,2.697]],["body/injectables/NodeLibraryService.html",[0,0.217,2,0.092,3,0.092,4,0.067,9,0.198,10,0.757,11,1.15,13,1.435,27,0.397,32,0.621,35,0.383,36,0.331,38,0.48,39,0.01,40,0.289,41,0.619,43,2.066,46,0.899,47,0.829,53,0.69,70,0.277,71,0.904,79,2.983,83,0.283,84,0.092,85,0.008,120,0.008,121,2.562,123,4.197,139,0.829,142,0.973,211,0.973,221,1.462,266,3.878,272,4.316,308,6.01,369,2.404,409,1.751,411,2.364,412,2.57,413,1.952,430,3.063,542,4.819,544,5.549,980,4.067,1189,4.389,1206,2.76,1267,3.253,1357,3.596,1402,4.067,1559,4.067,1560,3.81,1694,4.389,2856,4.067,2857,4.389,2858,4.819,3095,4.819,3096,8.226,3097,6.92,3098,6.92,3099,7.975,3100,5.473,3101,5.473,3102,5.473,3103,5.473,3104,5.473,3105,5.473,3106,5.473,3107,5.473,3108,5.473,3109,5.473,3110,5.473,3111,5.473,3112,7.589,3113,5.473,3114,5.473,3115,5.473,3116,5.473,3117,5.473,3118,7.589,3119,5.473,3120,5.473,3121,5.473,3122,5.473,3123,5.473,3124,5.473]],["title/classes/NodeSubscriber.html",[0,0.172,3125,3.468]],["body/classes/NodeSubscriber.html",[0,0.319,2,0.118,3,0.118,4,0.086,5,1.777,39,0.01,83,0.236,84,0.118,85,0.009,120,0.009,411,2.183,517,4.165,3125,6.441,3126,6.17]],["title/classes/NodeUtils.html",[0,0.172,1251,2.265]],["body/classes/NodeUtils.html",[0,0.182,2,0.051,3,0.051,4,0.075,5,2.032,8,1.228,9,0.276,13,1.582,27,0.264,35,0.398,36,0.306,38,0.475,39,0.01,40,0.305,41,0.613,42,1.861,43,2.33,44,1.126,45,2.808,53,0.743,57,1.66,63,1.785,67,2.802,70,0.288,71,0.505,73,1.923,75,2.433,83,0.235,84,0.051,85,0.007,86,0.498,87,1.873,88,2.514,91,1.982,92,0.832,120,0.005,133,1.405,140,2.115,172,1.239,182,0.697,221,1.543,274,1.656,300,1.778,379,2.865,392,3.472,397,1.55,406,2.157,411,2.803,428,1.591,430,3.057,437,3.148,445,2.449,450,1.379,461,3.454,466,3.683,482,3.683,483,3.113,506,1.955,518,2.258,519,1.895,521,1.335,587,2.085,590,2.675,634,2.431,637,1.727,666,2.316,702,2.115,706,2.436,857,2.115,939,1.806,951,3.018,979,1.293,1035,2.258,1036,4.045,1043,3.509,1048,1.591,1082,2.503,1113,1.997,1115,1.591,1122,2.115,1206,2.792,1207,1.806,1246,2.436,1251,2.406,1252,3.85,1254,3.472,1298,3.198,1308,1.895,1311,2.6,1338,3.148,1355,3.454,1357,3.639,1361,2.675,1425,4.298,1449,2.436,1567,4.877,1582,3.683,1629,2.73,1637,2.675,1654,2.436,1655,2.436,1664,2.675,1667,1.997,1694,2.436,1952,1.895,1967,2.436,1971,1.997,1974,2.115,1995,2.258,1998,2.258,2028,2.115,2071,2.436,2100,2.436,2125,1.806,2139,3.018,2208,2.115,2325,4.95,2326,1.997,2378,2.115,2455,1.806,2600,3.683,2929,4.441,3039,3.413,3063,3.198,3127,2.675,3128,4.593,3129,4.593,3130,4.593,3131,4.593,3132,4.593,3133,4.593,3134,4.045,3135,4.593,3136,4.593,3137,4.593,3138,3.038,3139,4.593,3140,3.038,3141,4.593,3142,3.038,3143,4.593,3144,5.837,3145,3.038,3146,4.593,3147,3.038,3148,4.593,3149,5.538,3150,3.038,3151,4.593,3152,7.24,3153,3.038,3154,3.038,3155,4.593,3156,3.038,3157,3.038,3158,3.038,3159,3.038,3160,3.038,3161,1.997,3162,3.038,3163,5.538,3164,3.038,3165,4.593,3166,4.045,3167,4.593,3168,5.538,3169,3.038,3170,3.038,3171,3.038,3172,3.038,3173,3.038,3174,4.593,3175,3.038,3176,3.038,3177,2.675,3178,3.038,3179,3.038,3180,3.038,3181,3.038,3182,3.038,3183,3.038,3184,5.538,3185,4.593,3186,3.038,3187,3.038,3188,3.038,3189,3.038,3190,3.038,3191,3.038,3192,5.38,3193,6.972,3194,3.038,3195,5.837,3196,3.038,3197,3.038,3198,4.593,3199,4.593,3200,4.877,3201,2.675,3202,3.038,3203,3.038,3204,3.038,3205,3.038,3206,4.045,3207,3.038,3208,2.675,3209,3.038,3210,3.038,3211,3.038,3212,3.038,3213,3.038,3214,4.593,3215,2.675,3216,4.593,3217,4.045,3218,2.675,3219,3.038,3220,3.038,3221,3.038,3222,3.038,3223,2.436,3224,3.038,3225,2.436,3226,2.675,3227,2.675,3228,3.038,3229,3.038,3230,3.038,3231,3.038,3232,3.038,3233,3.038,3234,3.038,3235,6.173,3236,3.038,3237,3.038,3238,4.045,3239,3.038,3240,3.038,3241,3.038,3242,3.038,3243,3.038,3244,5.538,3245,3.038,3246,3.038,3247,3.038,3248,4.593,3249,3.038,3250,3.038,3251,3.038,3252,3.038]],["title/classes/OutputPort.html",[0,0.172,406,2.031]],["body/classes/OutputPort.html",[0,0.248,2,0.079,3,0.079,4,0.057,5,1.586,7,2.293,9,0.17,10,0.623,11,1.341,13,1.557,15,3.305,17,3.305,18,3.007,24,3.195,25,3.305,27,0.359,28,2.359,31,2.312,32,0.531,35,0.418,36,0.349,38,0.452,39,0.01,40,0.284,41,0.583,43,2.359,44,1.583,46,1.323,47,1.266,48,4.083,50,1.574,53,0.859,70,0.288,71,0.885,83,0.211,84,0.079,85,0.007,91,2.056,120,0.007,392,3.979,406,2.935,642,3.549,1047,3.716,1048,3.274,1049,4.673,1051,5.644,1052,4.9,1053,5.644,1054,5.644,1055,5.644,1056,5.23,1057,5.23,1058,4.352,1063,3.478,1065,4.645,1104,5.23,1105,5.644,1109,3.753,1118,5.644,1121,3.753,1127,5.23,1128,5.644,1129,4.9,1629,2.782,2348,3.753,2397,5.505,2398,5.505,2400,4.121,2401,4.121,2402,4.121,2403,4.121,2404,4.121,2405,4.121,2406,4.121,2407,4.121,2408,4.121,2409,4.121,2410,4.121,2411,4.121,2413,4.121,2414,4.121,2415,4.121,2416,4.121,2417,4.121,2418,4.121,2419,4.121,2420,4.121,2421,4.121,2422,4.121,2425,4.121,3253,4.121,3254,4.681,3255,3.753]],["title/components/PanelComponent.html",[146,0.272,223,0.967]],["body/components/PanelComponent.html",[0,0.159,2,0.094,3,0.067,4,0.069,8,0.782,9,0.145,10,0.56,11,0.85,27,0.322,32,0.453,35,0.357,36,0.33,38,0.423,39,0.01,40,0.235,41,0.31,46,0.657,47,0.606,53,0.738,70,0.259,71,0.899,83,0.25,84,0.067,85,0.006,86,0.322,120,0.006,139,0.606,142,0.711,146,0.507,147,0.917,148,1.014,149,1.014,150,0.964,152,0.94,153,2.261,154,2.195,156,1.46,158,1.388,161,0.917,162,1.423,163,1.423,164,1.388,165,1.783,166,1.014,167,1.014,168,0.894,169,1.32,170,2.162,171,0.894,172,0.894,173,0.894,174,1.014,175,0.94,176,1.014,177,0.917,178,1.014,179,0.872,180,1.783,181,0.917,182,0.917,183,1.423,184,0.917,185,0.946,186,1.014,187,0.872,188,0.917,189,0.917,190,0.894,191,0.989,192,0.917,193,0.964,194,1.014,195,0.94,196,1.014,197,0.894,198,1.653,199,1.014,200,0.894,201,1.014,202,0.894,203,0.894,204,0.917,205,1.014,206,0.917,207,1.014,208,0.917,209,1.014,210,0.917,211,1.25,212,0.917,213,1.014,214,0.917,215,0.917,216,1.014,217,0.917,218,0.917,219,1.014,220,0.917,221,1.152,222,1.014,223,1.572,224,1.014,225,0.917,226,0.917,227,0.894,228,0.917,229,0.917,230,1.014,231,0.94,232,1.014,233,0.917,234,0.989,235,1.014,236,0.917,237,1.014,238,1.255,239,1.423,240,0.894,241,0.917,242,0.94,243,1.014,244,1.287,245,0.894,246,0.829,247,1.741,248,1.014,268,2.507,269,4.481,300,1.617,301,1.649,303,2.783,386,2.289,388,1.353,389,1.967,393,3.424,394,3.301,395,2.078,397,2.373,399,2.179,401,2.547,408,1.6,413,1.426,414,2.272,417,2.094,418,2.094,445,1.313,574,2.179,575,3.189,634,1.466,726,2.971,1328,2.783,1415,3.52,1427,4.179,1433,2.376,1751,3.058,2044,2.783,2463,2.783,2470,5.637,2471,6.19,2472,6.19,2480,4.514,2481,5.637,2492,5.709,2526,3.206,2548,5.199,3256,3.52,3257,5.611,3258,5.611,3259,7.03,3260,6.76,3261,7.03,3262,5.611,3263,3.998,3264,3.998,3265,3.998,3266,3.998,3267,3.998,3268,3.998,3269,3.998,3270,3.998,3271,3.998,3272,3.998,3273,6.52,3274,3.998,3275,3.998,3276,3.998,3277,5.611,3278,3.998,3279,3.998,3280,3.998,3281,3.52,3282,5.611,3283,3.52,3284,3.998,3285,3.998,3286,3.998,3287,2.627,3288,3.998,3289,3.998,3290,3.998,3291,3.998,3292,3.998,3293,5.611,3294,5.611]],["title/components/ParameterEditorComponent.html",[146,0.272,225,0.992]],["body/components/ParameterEditorComponent.html",[0,0.138,2,0.085,3,0.058,4,0.062,8,0.708,9,0.126,10,0.506,11,1.11,13,1.243,27,0.291,32,0.394,35,0.384,36,0.319,38,0.508,39,0.01,40,0.274,41,0.544,42,0.976,44,0.926,45,1.713,46,0.985,47,1.063,50,0.777,63,1.351,70,0.261,71,0.852,83,0.261,84,0.058,85,0.006,86,0.28,87,1.82,91,0.951,92,0.951,120,0.006,121,1.173,139,0.527,142,1.247,146,0.442,147,0.797,148,0.882,149,0.882,150,0.838,152,0.818,153,2.244,154,2.176,156,1.321,158,1.256,161,0.797,162,1.288,163,1.288,164,1.256,165,1.673,166,0.882,167,0.882,168,0.777,169,1.194,170,2.11,171,0.777,172,0.777,173,0.777,174,0.882,175,0.818,176,0.882,177,0.797,178,0.882,179,0.758,180,1.673,181,0.797,182,0.797,183,1.288,184,0.797,185,0.856,186,0.882,187,0.758,188,0.797,189,0.797,190,0.777,191,0.86,192,0.797,193,1.224,194,0.882,195,0.818,196,0.882,197,0.777,198,1.551,199,0.882,200,0.777,201,0.882,202,0.777,203,0.777,204,0.797,205,0.882,206,0.797,207,0.882,208,0.797,209,0.882,210,0.797,211,1.172,212,0.797,213,0.882,214,0.797,215,0.797,216,0.882,217,0.797,218,0.797,219,0.882,220,0.797,221,1.345,222,0.882,223,0.777,224,0.882,225,1.512,226,1.164,227,0.777,228,0.797,229,0.797,230,0.882,231,0.818,232,0.882,233,0.797,234,0.86,235,0.882,236,0.797,237,0.882,238,1.135,239,1.288,240,0.777,241,0.797,242,0.818,243,0.882,244,1.164,245,0.777,246,0.721,247,0.818,248,0.882,268,2.352,298,2.468,300,1.001,301,1.434,320,6.18,321,5.79,322,2.787,386,2.219,392,3.218,393,2.806,394,3.096,395,1.95,397,2.367,399,1.894,401,2.304,406,2.816,408,1.391,409,2.109,410,1.753,411,2.054,412,1.632,413,1.24,414,1.976,417,1.82,418,1.82,506,3.505,635,1.894,700,2.066,912,3.772,913,3.772,934,2.885,979,2.16,1009,4.836,1011,2.42,1015,2.284,1022,4.813,1023,2.284,1048,3.674,1049,3.748,1068,4.071,1089,4.071,1090,3.534,1112,3.534,1113,3.336,1251,1.82,1254,3.454,1331,2.583,1333,2.168,1335,2.787,1336,2.787,1337,2.583,1398,4.334,1427,3.92,1433,3.017,1484,1.894,1489,2.284,1582,4.071,1939,2.583,2428,3.772,2664,2.42,2675,3.061,3013,6.45,3046,2.168,3047,2.583,3048,3.061,3062,2.787,3063,3.534,3177,3.061,3255,4.071,3295,5.807,3296,6.595,3297,5.076,3298,4.47,3299,5.076,3300,4.47,3301,5.076,3302,3.476,3303,5.076,3304,3.476,3305,3.476,3306,3.061,3307,4.47,3308,3.476,3309,5.076,3310,3.061,3311,3.476,3312,4.071,3313,4.47,3314,4.47,3315,4.47,3316,4.47,3317,3.476,3318,3.061,3319,3.476,3320,3.061,3321,3.061,3322,3.061,3323,3.061,3324,3.476,3325,3.476,3326,3.476,3327,3.476,3328,3.476,3329,3.476,3330,5.076,3331,5.076,3332,4.47]],["title/components/ParameterSettingsDialogComponent.html",[146,0.272,226,0.992]],["body/components/ParameterSettingsDialogComponent.html",[0,0.136,2,0.084,3,0.058,4,0.094,8,0.7,9,0.124,10,0.501,11,0.518,13,1.51,27,0.288,32,0.569,35,0.386,36,0.327,38,0.51,39,0.01,40,0.297,41,0.599,42,2.046,46,1.145,47,1.213,53,0.695,57,1.04,70,0.277,71,0.88,83,0.221,84,0.058,85,0.005,86,0.276,87,1.038,120,0.005,121,1.694,133,0.868,139,0.518,142,1.549,146,0.459,147,0.785,148,0.868,149,0.868,150,0.825,152,0.805,153,2.242,154,2.169,158,1.241,161,0.785,162,1.273,163,1.273,164,1.241,165,1.909,166,0.868,167,0.868,168,0.765,169,1.18,170,2.104,171,0.765,172,0.765,173,0.765,174,0.868,175,0.805,176,0.868,177,0.785,178,0.868,179,0.746,180,1.66,181,0.785,182,1.363,183,1.273,184,0.785,185,0.846,186,0.868,187,0.746,188,0.785,189,0.785,190,0.765,191,0.846,192,0.785,193,0.825,194,0.868,195,0.805,196,0.868,197,0.765,198,1.54,199,0.868,200,0.765,201,0.868,202,0.765,203,0.765,204,0.785,205,0.868,206,0.785,207,0.868,208,0.785,209,0.868,210,0.785,211,1.163,212,0.785,213,0.868,214,0.785,215,0.785,216,0.868,217,0.785,218,0.785,219,0.868,220,0.785,221,0.608,222,0.868,223,0.765,224,0.868,225,0.785,226,1.501,227,0.765,228,0.785,229,0.785,230,0.868,231,0.805,232,0.868,233,0.785,234,0.846,235,0.868,236,0.785,237,0.868,238,1.122,239,1.273,240,0.765,241,0.785,242,0.805,243,0.868,244,1.151,245,0.765,246,0.709,247,0.805,248,0.868,285,2.249,320,6.303,321,5.905,386,2.263,397,2.92,408,1.37,409,1.095,410,1.725,437,3.378,445,2.15,506,3.203,574,1.865,700,2.034,1008,2.744,1009,3.13,1010,4.419,1011,4.852,1013,5.764,1014,2.744,1015,4.787,1018,3.013,1021,3.013,1022,2.249,1023,2.249,1048,4.194,1090,2.382,1091,3.013,1102,5.249,1316,4.024,1317,2.744,1318,2.744,1322,2.744,1484,3.799,1511,4.137,1512,4.557,1692,3.298,1952,2.134,2438,2.744,2518,3.298,2929,4.766,3238,3.013,3333,5.019,3334,4.419,3335,5.019,3336,5.019,3337,4.419,3338,5.019,3339,5.019,3340,3.422,3341,5.019,3342,3.422,3343,5.019,3344,3.422,3345,5.019,3346,3.422,3347,3.013,3348,3.422,3349,5.019,3350,3.422,3351,5.019,3352,3.422,3353,4.419,3354,3.422,3355,3.422,3356,3.422,3357,3.422,3358,3.013,3359,3.422,3360,3.422,3361,3.422,3362,3.422,3363,5.233,3364,5.019,3365,3.422,3366,3.422,3367,5.019,3368,3.422,3369,3.422,3370,3.422,3371,5.019,3372,3.422,3373,3.422,3374,3.013,3375,3.013,3376,3.013,3377,2.744,3378,3.013,3379,3.013,3380,3.013,3381,3.013,3382,3.422,3383,3.422,3384,3.422,3385,3.422,3386,3.422,3387,3.422,3388,3.422,3389,3.422,3390,3.422,3391,3.422,3392,5.019,3393,3.422]],["title/components/ParameterViewerComponent.html",[146,0.272,227,0.967]],["body/components/ParameterViewerComponent.html",[0,0.137,2,0.085,3,0.058,4,0.092,8,0.702,9,0.125,10,0.503,11,1.195,27,0.289,31,1.131,32,0.39,35,0.34,36,0.322,38,0.507,39,0.01,40,0.264,41,0.509,42,1.415,44,0.919,46,1.147,47,1.215,50,1.468,70,0.254,71,0.802,83,0.254,84,0.058,85,0.005,86,0.277,87,1.044,92,1.797,120,0.005,133,0.873,134,4.569,139,0.521,142,0.612,146,0.44,147,0.789,148,0.873,149,0.873,150,0.83,152,0.809,153,2.243,154,2.175,156,1.311,158,1.246,161,0.789,162,1.278,163,1.278,164,1.246,165,1.772,166,0.873,167,0.873,168,0.77,169,1.185,170,2.106,171,0.77,172,0.77,173,0.77,174,0.873,175,0.809,176,0.873,177,0.789,178,0.873,179,0.75,180,1.665,181,0.789,182,1.505,183,1.278,184,0.789,185,1.107,186,0.873,187,0.75,188,0.789,189,0.789,190,0.77,191,0.851,192,0.789,193,0.83,194,0.873,195,0.809,196,0.873,197,0.77,198,1.544,199,0.873,200,0.77,201,0.873,202,0.77,203,0.77,204,0.789,205,0.873,206,0.789,207,0.873,208,0.789,209,0.873,210,0.789,211,1.167,212,0.789,213,0.873,214,0.789,215,0.789,216,0.873,217,0.789,218,0.789,219,0.873,220,0.789,221,1.242,222,0.873,223,0.77,224,0.873,225,0.789,226,0.789,227,1.468,228,0.789,229,0.789,230,0.873,231,0.809,232,0.873,233,0.789,234,0.851,235,0.873,236,0.789,237,0.873,238,1.127,239,1.278,240,0.77,241,0.789,242,0.809,243,0.873,244,1.156,245,0.77,246,1.236,247,0.809,248,0.873,267,4.313,268,2.341,270,3.309,285,2.261,300,2.103,301,1.42,304,2.261,307,3.03,334,6.221,335,6.221,369,1.512,386,2.234,387,1.735,390,2.639,391,2.639,393,2.793,394,3.082,395,1.941,397,2.706,399,1.876,401,2.288,404,4.438,407,2.396,408,1.377,409,1.612,410,1.735,411,2.045,412,1.616,413,1.227,414,1.956,417,1.802,418,1.802,445,1.131,506,1.465,543,2.557,546,2.76,573,3.544,574,1.876,575,2.864,587,2.288,666,1.735,934,2.864,951,2.747,953,3.918,968,2.639,1002,2.557,1048,3.949,1082,1.876,1143,5.78,1301,4.781,1316,4.041,1317,2.76,1318,2.76,1320,3.03,1321,3.03,1322,2.76,1377,2.76,1427,3.901,1433,2.046,1484,3.25,1489,2.261,1511,4.151,1512,4.569,1644,2.396,1667,2.261,1751,1.876,1821,2.76,2027,2.557,2518,3.312,2601,2.146,2728,4.041,2760,3.03,2773,3.03,3334,4.438,3337,4.438,3347,3.03,3353,4.438,3363,3.03,3375,3.03,3376,3.03,3377,2.76,3378,3.03,3379,3.03,3380,3.03,3381,3.03,3394,5.04,3395,5.962,3396,5.04,3397,3.441,3398,5.04,3399,3.441,3400,3.441,3401,3.441,3402,3.441,3403,3.441,3404,3.441,3405,5.04,3406,3.441,3407,5.04,3408,3.441,3409,3.441,3410,3.441,3411,3.441,3412,3.03,3413,3.441,3414,3.441,3415,3.441,3416,3.441,3417,3.441,3418,5.04,3419,3.441,3420,3.441,3421,3.441,3422,5.04,3423,3.441,3424,3.441,3425,3.441,3426,3.441,3427,3.441,3428,3.441,3429,3.441,3430,5.04,3431,5.04,3432,5.04,3433,5.04,3434,5.04]],["title/classes/Point.html",[0,0.172,1730,2.458]],["body/classes/Point.html",[0,0.347,2,0.103,3,0.103,4,0.075,7,2.246,13,1.538,32,0.694,39,0.01,40,0.222,44,1.117,50,1.369,57,1.655,70,0.295,83,0.25,84,0.103,85,0.008,86,0.685,92,1.676,120,0.008,133,2.104,211,1.088,1164,3.207,1542,3.818,1722,4.536,1723,3.48,1724,3.818,1725,4.023,1726,4.023,1729,3.607,1730,4.829,1731,4.931,1732,4.875,1733,3.639,1734,1.858,1735,3.639,1736,4.023,1737,3.639,1738,4.023,1739,4.023,1740,4.023,1741,4.023,1742,4.875,1743,4.023,1744,4.875,1745,4.023,1746,4.023,1747,4.023,1748,4.023,1749,4.023,1750,4.023,1751,4.043]],["title/classes/Polygon.html",[0,0.172,1733,2.571]],["body/classes/Polygon.html",[0,0.346,2,0.102,3,0.102,4,0.074,7,2.212,9,0.218,13,1.524,27,0.422,32,0.684,36,0.234,39,0.01,40,0.218,44,1.341,50,1.349,57,1.644,70,0.296,83,0.248,84,0.102,85,0.008,86,0.682,92,1.651,120,0.008,133,2.094,211,1.072,1164,3.159,1542,3.761,1722,4.507,1723,4.178,1724,3.761,1725,3.963,1726,3.963,1729,3.574,1730,4.691,1731,4.906,1732,4.83,1733,4.369,1734,1.83,1735,3.585,1736,5.423,1737,3.585,1738,3.963,1739,3.963,1740,3.963,1741,3.963,1742,4.83,1743,3.963,1744,4.83,1745,3.963,1746,3.963,1747,3.963,1748,3.963,1749,3.963,1750,3.963,1751,4.006,3435,6.031]],["title/classes/Polyline.html",[0,0.172,1731,2.571]],["body/classes/Polyline.html",[0,0.346,2,0.102,3,0.102,4,0.074,7,2.212,9,0.218,13,1.524,27,0.422,32,0.684,36,0.234,39,0.01,40,0.218,44,1.341,50,1.349,57,1.644,70,0.296,83,0.248,84,0.102,85,0.008,86,0.682,92,1.651,120,0.008,133,2.094,211,1.072,1164,3.159,1542,3.761,1722,4.507,1723,4.178,1724,3.761,1725,3.963,1726,3.963,1729,3.574,1730,4.691,1731,5.029,1732,4.83,1733,3.585,1734,1.83,1735,3.585,1736,5.423,1737,3.585,1738,3.963,1739,3.963,1740,3.963,1741,3.963,1742,4.83,1743,3.963,1744,4.83,1745,3.963,1746,3.963,1747,3.963,1748,3.963,1749,3.963,1750,3.963,1751,4.006,3436,6.031]],["title/pipes/PortTypePipe.html",[259,3.011,3437,2.571]],["body/pipes/PortTypePipe.html",[0,0.219,2,0.093,3,0.093,4,0.067,11,1.212,27,0.317,35,0.412,36,0.295,38,0.458,39,0.01,40,0.29,41,0.591,46,0.907,53,0.84,70,0.301,83,0.235,84,0.093,85,0.008,91,1.512,120,0.008,139,0.837,152,1.299,169,1.299,172,1.235,191,1.366,241,1.267,246,1.443,259,4.846,388,1.332,406,2.593,409,1.767,410,2.785,437,3.139,506,2.35,557,3.444,1048,4.32,1049,4.688,1090,3.845,1111,4.659,1112,3.845,1113,3.629,1115,4.477,1276,4.429,1629,5.006,2423,3.845,2424,4.104,2428,4.104,3051,4.104,3255,4.429,3312,4.429,3313,4.863,3314,4.863,3315,4.863,3316,4.863,3332,6.129,3437,4.137,3438,7.046,3439,4.104,3440,4.863,3441,6.129,3442,5.523,3443,5.523,3444,6.96,3445,5.523,3446,4.429,3447,6.96,3448,5.523,3449,5.581,3450,4.429,3451,5.523,3452,5.523,3453,8.79,3454,5.523,3455,4.863,3456,4.863,3457,4.429,3458,5.523,3459,4.429,3460,5.172]],["title/classes/Procedure.html",[0,0.172,8,0.603]],["body/classes/Procedure.html",[0,0.208,2,0.061,3,0.061,4,0.044,5,2.28,8,0.856,9,0.131,10,0.522,11,1.337,13,1.541,14,3.392,15,3.159,16,3.523,17,3.159,18,2.975,19,3.523,20,3.523,21,3.523,22,3.523,23,3.523,24,3.054,25,3.159,26,3.956,27,0.3,28,1.976,29,2.742,30,3.523,31,2.21,32,0.411,35,0.413,36,0.348,38,0.494,39,0.01,40,0.298,41,0.638,44,1.635,45,2.903,46,1.009,47,1.303,50,1.755,53,0.797,55,3.561,57,1.274,63,3.153,66,2.64,67,3.374,69,1.829,70,0.297,71,0.913,72,2.742,73,2.096,75,1.593,79,1.977,83,0.24,84,0.061,85,0.006,91,0.993,92,0.993,95,2.16,101,2.228,113,4.927,115,4.927,120,0.006,142,1.442,388,1.263,428,1.899,445,1.72,483,2.64,632,3.265,634,1.33,642,2.64,1043,2.976,1045,2.525,1046,3.194,1059,5.924,1060,3.194,1065,4.566,1077,5.41,1082,1.977,1086,3.194,1088,3.194,1130,3.194,1207,2.156,1835,3.194,2139,2.383,2326,4.421,2353,3.194,2612,3.194,2640,3.194,3223,2.908,3461,3.194,3462,4.61,3463,5.235,3464,3.627,3465,3.627,3466,3.627,3467,3.627,3468,3.627,3469,3.627,3470,3.627,3471,3.627,3472,3.627,3473,3.627,3474,3.627,3475,3.627,3476,3.627,3477,3.627,3478,3.627,3479,3.627,3480,3.627,3481,3.627,3482,3.627,3483,3.627,3484,3.627,3485,3.627,3486,3.627,3487,3.627,3488,3.627,3489,3.627,3490,3.627,3491,3.627,3492,3.627,3493,3.627,3494,3.627,3495,3.627,3496,3.627,3497,3.627,3498,3.627,3499,3.627,3500,3.627,3501,3.627,3502,3.627,3503,3.627,3504,3.627,3505,3.627,3506,3.627,3507,3.627,3508,3.627,3509,6.727,3510,3.627,3511,7.134,3512,3.627,3513,3.627,3514,3.627,3515,6.144,3516,3.627,3517,3.627,3518,5.235,3519,3.627,3520,6.144,3521,3.627,3522,3.627,3523,3.627,3524,3.627,3525,3.627,3526,3.627,3527,3.627,3528,3.627,3529,3.627,3530,3.627,3531,3.627,3532,3.627]],["title/components/ProcedureEditorComponent.html",[146,0.272,228,0.992]],["body/components/ProcedureEditorComponent.html",[0,0.121,2,0.078,3,0.051,4,0.056,8,1.182,9,0.167,10,0.46,11,1.132,27,0.265,28,2.099,32,0.347,35,0.348,36,0.32,38,0.449,39,0.01,40,0.263,41,0.516,45,2.521,46,0.758,47,0.463,53,0.555,57,1.549,67,2.524,70,0.283,71,0.84,83,0.224,84,0.078,85,0.005,86,0.247,87,0.928,91,1.696,95,1.905,101,1.965,120,0.005,139,0.463,142,0.544,146,0.419,147,0.702,148,0.776,149,0.776,150,0.738,152,0.72,153,2.227,154,2.157,156,1.201,158,1.142,161,0.702,162,1.171,163,1.171,164,1.142,165,1.841,166,0.776,167,0.776,168,0.684,169,1.086,170,2.058,171,0.684,172,0.684,173,0.684,174,0.776,175,0.72,176,0.776,177,0.702,178,0.776,179,0.667,180,1.571,181,0.702,182,0.702,183,1.171,184,0.702,185,0.779,186,0.776,187,0.667,188,0.702,189,0.702,190,0.684,191,0.757,192,0.702,193,0.738,194,0.776,195,0.72,196,0.776,197,0.684,198,1.457,199,0.776,200,0.684,201,0.776,202,0.684,203,0.684,204,0.702,205,0.776,206,0.702,207,0.776,208,0.702,209,0.776,210,0.702,211,1.101,212,0.702,213,0.776,214,0.702,215,0.702,216,0.776,217,0.702,218,0.702,219,0.776,220,0.702,221,1.243,222,0.776,223,0.684,224,0.776,225,0.702,226,0.702,227,0.684,228,1.421,229,0.702,230,0.776,231,0.72,232,0.776,233,0.702,234,0.757,235,0.776,236,0.702,237,0.776,238,1.033,239,1.171,240,0.684,241,0.702,242,0.72,243,0.776,244,1.059,245,0.684,246,0.634,247,0.72,248,0.776,266,3.012,268,2.209,298,2.704,300,1.33,301,1.262,302,2.13,316,5.798,317,5.798,386,2.222,393,2.636,394,2.908,395,1.831,401,2.524,409,1.477,411,1.93,412,1.436,413,1.091,414,1.739,417,1.602,418,1.602,445,1.827,587,2.524,604,3.034,631,2.694,634,2.439,666,2.804,739,2.01,912,3.431,913,3.431,951,1.667,973,4.823,1002,2.273,1019,2.88,1111,4.167,1115,4.004,1179,3.702,1251,1.602,1254,2.418,1298,2.13,1327,2.694,1384,4.459,1396,2.273,1425,4.313,1427,3.682,1433,1.818,1484,3.81,1489,2.01,1510,2.453,1638,2.453,1667,3.034,1717,1.602,1957,3.702,1988,1.908,2028,2.13,2092,2.273,2094,2.273,2100,2.453,2125,3.952,2178,2.694,2182,1.908,2187,2.453,2194,2.453,2220,2.273,2326,2.01,2599,2.453,2620,2.694,2646,2.453,2649,3.702,2664,2.13,2776,2.453,3047,2.273,3062,2.453,3161,2.01,3192,2.273,3206,2.694,3208,2.694,3223,3.702,3225,2.453,3226,2.694,3227,2.694,3287,3.034,3300,4.066,3306,2.694,3310,2.694,3318,2.694,3533,6.195,3534,6.195,3535,6.195,3536,4.617,3537,6.195,3538,4.617,3539,6.195,3540,4.066,3541,4.617,3542,4.617,3543,3.059,3544,4.617,3545,3.059,3546,3.059,3547,3.059,3548,4.617,3549,3.059,3550,3.059,3551,4.617,3552,3.059,3553,3.059,3554,3.059,3555,4.066,3556,3.059,3557,2.694,3558,4.617,3559,3.059,3560,2.694,3561,4.133,3562,2.694,3563,2.694,3564,4.603,3565,2.694,3566,2.694,3567,2.694,3568,2.694,3569,2.694,3570,4.066,3571,2.694,3572,2.453,3573,3.059,3574,3.059,3575,3.059,3576,3.059,3577,3.059,3578,3.059,3579,3.059,3580,3.059,3581,3.059,3582,3.059,3583,3.059,3584,3.059,3585,3.059,3586,3.059,3587,3.059,3588,3.059,3589,3.059,3590,3.059,3591,4.617,3592,3.059,3593,4.066,3594,4.617,3595,3.059,3596,3.059,3597,3.059,3598,3.059,3599,3.059,3600,3.059,3601,4.617,3602,3.059,3603,5.561,3604,3.059,3605,4.617,3606,3.059,3607,3.059,3608,4.617,3609,3.059,3610,3.059,3611,2.694,3612,7.257,3613,3.059,3614,3.059,3615,3.059,3616,6.195,3617,4.617,3618,3.059,3619,3.059,3620,3.059,3621,2.694,3622,2.694,3623,3.059,3624,3.059,3625,3.059,3626,3.059,3627,3.059,3628,5.561,3629,3.059,3630,3.059,3631,3.059,3632,3.059,3633,6.195,3634,4.617,3635,3.059,3636,4.617]],["title/classes/ProcedureFactory.html",[0,0.172,3046,2.697]],["body/classes/ProcedureFactory.html",[0,0.29,1,5.433,2,0.101,3,0.101,4,0.073,5,1.855,8,0.833,9,0.217,27,0.42,35,0.383,36,0.232,38,0.36,39,0.009,40,0.217,41,0.464,42,2.218,43,2.257,45,2.777,46,0.982,63,3.28,70,0.3,83,0.303,84,0.101,85,0.008,120,0.008,133,2.244,430,2.74,461,3.729,704,5.433,935,5.433,943,5.433,1111,4.874,1344,5.09,1713,5.433,2363,5.433,2368,5.433,2378,4.163,2380,4.443,3036,4.795,3037,4.795,3038,4.795,3039,4.443,3040,4.443,3041,4.443,3042,4.443,3046,4.56,3051,4.443,3052,4.795,3637,5.265,3638,7.312,3639,7.312,3640,5.979,3641,5.869,3642,5.433,3643,5.979,3644,5.979,3645,5.979,3646,5.979,3647,5.979,3648,5.979,3649,5.979,3650,5.979,3651,5.979,3652,5.979]],["title/components/ProcedureItemComponent.html",[146,0.272,229,0.992]],["body/components/ProcedureItemComponent.html",[0,0.147,2,0.09,3,0.062,4,0.065,8,1.12,9,0.134,27,0.305,35,0.349,36,0.331,38,0.497,39,0.01,40,0.295,41,0.612,45,2.429,53,0.62,57,1.103,63,1.44,70,0.278,71,0.932,83,0.21,84,0.062,85,0.006,86,0.299,120,0.006,132,4.466,133,1.349,139,0.562,142,0.659,146,0.453,147,0.85,148,0.94,149,0.94,150,0.894,152,0.872,153,2.252,154,2.185,155,5.477,156,1.384,158,1.316,161,0.85,162,1.349,163,1.349,164,1.316,165,1.724,166,0.94,167,0.94,168,0.829,169,1.251,170,2.134,171,0.829,172,0.829,173,0.829,174,0.94,175,0.872,176,0.94,177,0.85,178,0.94,179,0.808,180,1.724,181,0.85,182,0.85,183,1.349,184,0.85,185,0.897,186,0.94,187,0.808,188,0.85,189,0.85,190,0.829,191,0.917,192,0.85,193,0.894,194,0.94,195,0.872,196,0.94,197,0.829,198,1.598,199,0.94,200,0.829,201,0.94,202,0.829,203,0.829,204,0.85,205,0.94,206,0.85,207,0.94,208,0.85,209,0.94,210,0.85,211,1.208,212,0.85,213,0.94,214,0.85,215,0.85,216,0.94,217,0.85,218,0.85,219,0.94,220,0.85,221,0.659,222,0.94,223,0.829,224,0.94,225,0.85,226,0.85,227,0.829,228,0.85,229,1.559,230,0.94,231,0.872,232,0.94,233,0.85,234,0.917,235,0.94,236,0.85,237,0.94,238,1.189,239,1.349,240,0.829,241,0.85,242,0.872,243,0.94,244,1.22,245,0.829,246,0.769,247,0.872,248,0.94,316,5.976,317,5.976,386,2.29,388,1.283,389,1.887,394,3.191,395,2.009,397,2.604,409,1.701,411,1.938,412,1.741,445,2.233,483,2.682,540,4.622,575,2.107,597,4.988,965,3.495,979,3.062,1019,4.238,1251,1.942,1254,3.559,1384,2.973,1484,4.204,1840,4.683,1947,3.952,2125,3.161,2325,4.988,3046,2.312,3047,2.755,3063,5.214,3161,2.436,3218,3.264,3540,4.683,3555,4.683,3557,3.264,3561,3.952,3564,3.952,3653,3.264,3654,5.319,3655,5.319,3656,5.319,3657,5.319,3658,3.707,3659,3.707,3660,3.707,3661,3.707,3662,3.707,3663,5.319,3664,3.707,3665,5.319,3666,3.707,3667,5.319,3668,3.707,3669,3.707,3670,3.707,3671,3.707,3672,5.319,3673,3.707,3674,5.319,3675,3.707,3676,5.319,3677,3.707,3678,5.319,3679,6.22,3680,3.707,3681,3.707,3682,3.707,3683,3.707,3684,6.796,3685,3.707,3686,3.707,3687,3.707,3688,3.707,3689,3.707,3690,6.796,3691,5.319,3692,5.319,3693,5.319,3694,5.319,3695,5.319,3696,5.319,3697,5.319,3698,5.319]],["title/classes/ProcedureUtils.html",[0,0.172,3161,2.842]],["body/classes/ProcedureUtils.html",[0,0.242,2,0.076,3,0.076,4,0.055,5,2.101,8,1.25,9,0.295,10,0.449,13,1.688,14,3.073,27,0.35,35,0.386,36,0.316,38,0.49,39,0.01,40,0.295,41,0.632,42,1.265,45,3.113,57,1.651,67,3.134,70,0.3,83,0.233,84,0.076,85,0.007,91,1.234,120,0.007,428,2.36,430,3.103,445,2.002,461,4.306,587,2.046,634,2.235,666,2.272,857,3.137,968,2.36,1002,3.349,1043,3.464,1082,3.321,1298,6.156,1311,2.116,1355,2.811,1357,4.537,1449,3.614,1644,5.15,1944,2.961,2094,3.349,2163,3.349,2326,4.005,2448,3.614,3046,3.801,3063,3.137,3134,5.366,3161,4.005,3166,5.366,3200,3.968,3215,6.08,3217,3.968,3225,3.614,3287,2.961,3621,5.366,3622,3.968,3699,3.968,3700,6.094,3701,6.094,3702,6.094,3703,6.094,3704,6.094,3705,6.094,3706,6.094,3707,4.507,3708,6.094,3709,4.507,3710,6.094,3711,4.507,3712,6.094,3713,4.507,3714,6.094,3715,4.507,3716,6.094,3717,4.507,3718,6.094,3719,4.507,3720,6.094,3721,4.507,3722,4.507,3723,4.507,3724,4.507,3725,4.507,3726,4.507,3727,4.507,3728,6.094,3729,4.507,3730,4.507,3731,4.507,3732,4.507,3733,4.507,3734,4.507,3735,4.507,3736,4.507,3737,4.507,3738,4.507,3739,4.507,3740,4.507,3741,4.507,3742,6.094,3743,6.094,3744,6.905,3745,4.507,3746,4.507,3747,4.507,3748,4.507]],["title/components/PublishSettingsComponent.html",[146,0.272,233,0.992]],["body/components/PublishSettingsComponent.html",[0,0.141,2,0.087,3,0.06,4,0.09,8,0.718,9,0.187,10,0.514,13,1.617,27,0.296,32,0.402,35,0.37,36,0.321,38,0.458,39,0.01,40,0.282,41,0.517,42,0.996,46,0.583,47,0.537,53,0.514,57,1.258,70,0.284,71,0.887,83,0.249,84,0.06,85,0.006,86,0.286,120,0.006,121,1.739,133,1.539,139,0.537,142,1.386,146,0.445,147,0.814,148,0.9,149,0.9,150,0.856,152,0.834,153,2.246,154,2.179,156,1.34,158,1.274,161,0.814,162,1.307,163,1.307,164,1.274,165,1.689,166,0.9,167,0.9,168,0.793,169,1.212,170,2.117,171,0.793,172,0.793,173,0.793,174,0.9,175,0.834,176,0.9,177,0.814,178,0.9,179,0.774,180,1.689,181,0.814,182,0.814,183,1.307,184,0.814,185,1.38,186,0.9,187,0.774,188,0.814,189,0.814,190,0.793,191,0.877,192,0.814,193,0.856,194,0.9,195,0.834,196,0.9,197,0.793,198,1.566,199,0.9,200,0.793,201,0.9,202,0.793,203,0.793,204,0.814,205,0.9,206,0.814,207,0.9,208,0.814,209,0.9,210,0.814,211,1.183,212,0.814,213,0.9,214,0.814,215,0.814,216,0.9,217,0.814,218,0.814,219,0.9,220,0.814,221,1.257,222,0.9,223,0.793,224,0.9,225,0.814,226,1.182,227,0.793,228,0.814,229,0.814,230,0.9,231,0.834,232,0.9,233,1.527,234,1.883,235,0.9,236,0.814,237,0.9,238,1.152,239,1.307,240,0.793,241,0.814,242,0.834,243,0.9,244,1.182,245,0.793,246,1.258,247,0.834,248,0.9,300,1.484,321,2.47,322,2.844,374,6.694,375,6.203,386,2.227,397,2.247,406,1.665,408,1.42,409,1.941,410,1.789,411,1.105,412,1.665,419,4.848,492,3.349,506,3.009,574,1.933,634,1.301,700,2.108,985,2.636,1009,4.747,1011,5.136,1014,2.844,1015,4.848,1022,4.848,1023,2.331,1025,3.123,1048,4.084,1049,2.016,1082,2.808,1090,4.224,1112,4.224,1113,3.987,1169,3.829,1196,3.587,1210,3.123,1215,3.123,1254,2.698,1294,2.47,1311,2.419,1331,2.636,1333,2.212,1335,2.844,1336,2.844,1337,5.656,1629,4.524,1717,2.698,1831,3.587,2159,3.123,2423,2.47,2424,2.636,2428,4.508,3295,5.863,3298,4.537,3307,4.537,3312,4.865,3320,3.123,3321,3.123,3322,3.123,3323,3.123,3358,3.123,3374,3.123,3440,4.537,3441,4.537,3455,3.123,3456,3.123,3457,2.844,3459,2.844,3460,2.636,3749,3.123,3750,5.152,3751,5.152,3752,6.658,3753,6.658,3754,5.152,3755,3.547,3756,3.547,3757,3.547,3758,5.152,3759,3.547,3760,3.547,3761,3.547,3762,3.547,3763,3.547,3764,3.547,3765,3.547,3766,3.547,3767,3.547,3768,3.547,3769,3.547,3770,3.547,3771,3.547,3772,3.547,3773,3.547,3774,3.547,3775,3.547,3776,3.547,3777,3.547,3778,5.152,3779,5.152,3780,5.152,3781,5.152]],["title/components/SelectComponent.html",[146,0.272,236,0.992]],["body/components/SelectComponent.html",[0,0.15,2,0.091,3,0.064,4,0.066,7,1.982,8,0.753,9,0.137,10,0.539,11,1.346,13,1.675,18,2.163,27,0.31,32,0.43,35,0.39,36,0.332,38,0.454,39,0.01,40,0.263,41,0.489,42,1.928,48,3.116,53,0.792,70,0.231,71,0.798,83,0.245,84,0.064,85,0.006,86,0.306,120,0.006,139,0.574,142,0.674,146,0.457,147,0.87,148,0.962,149,0.962,150,0.914,152,0.892,153,2.255,154,2.188,156,1.406,158,1.337,161,0.87,162,1.371,163,1.371,164,1.337,165,1.742,166,0.962,167,0.962,168,0.848,169,1.271,170,2.142,171,0.848,172,0.848,173,0.848,174,0.962,175,0.892,176,0.962,177,0.87,178,0.962,179,0.827,180,1.742,181,0.87,182,0.87,183,1.371,184,0.87,185,0.912,186,0.962,187,0.827,188,0.87,189,0.87,190,0.848,191,0.938,192,0.87,193,0.914,194,0.962,195,0.892,196,0.962,197,0.848,198,1.615,199,0.962,200,0.848,201,0.962,202,0.848,203,0.848,204,0.87,205,0.962,206,0.87,207,0.962,208,0.87,209,0.962,210,0.87,211,1.22,212,0.87,213,0.962,214,0.87,215,0.87,216,0.962,217,0.87,218,0.87,219,0.962,220,0.87,221,0.674,222,0.962,223,0.848,224,0.962,225,0.87,226,0.87,227,0.848,228,0.87,229,0.87,230,0.962,231,0.892,232,0.962,233,0.87,234,0.938,235,0.962,236,1.575,237,0.962,238,1.209,239,1.371,240,0.848,241,0.87,242,0.892,243,0.962,244,1.444,245,0.848,246,1.505,247,0.892,248,0.962,280,2.491,298,1.843,369,2.767,388,1.304,389,1.911,393,2.3,395,2.03,398,4.081,408,2.905,460,2.254,560,4.139,561,4.139,564,4.282,573,4.081,611,3.072,715,4.843,716,5.503,718,3.952,719,3.552,723,4.68,748,6.838,762,3.338,771,3.338,772,3.338,773,3.338,774,3.338,775,2.364,776,2.639,777,4.334,778,3.338,779,4.016,780,4.759,847,3.338,857,2.639,934,3.072,968,3.952,1043,4.512,1803,5.102,2065,3.338,2830,4.759,3782,3.338,3783,5.405,3784,5.405,3785,7.545,3786,6.866,3787,5.405,3788,3.791,3789,3.791,3790,3.791,3791,3.791,3792,3.791,3793,3.791,3794,3.791,3795,3.791,3796,3.791,3797,5.405,3798,3.791,3799,5.405,3800,5.405,3801,3.791,3802,3.791,3803,3.791,3804,3.791,3805,3.791,3806,3.791,3807,5.405,3808,3.791,3809,3.791,3810,5.405,3811,3.791,3812,3.791,3813,3.791,3814,3.791,3815,5.405,3816,3.791,3817,3.791,3818,5.405,3819,5.405]],["title/components/SettingComponent.html",[146,0.272,238,0.967]],["body/components/SettingComponent.html",[0,0.121,2,0.078,3,0.051,4,0.056,8,0.643,9,0.111,10,0.46,27,0.265,32,0.346,35,0.397,36,0.342,38,0.46,39,0.01,40,0.27,41,0.542,44,1.507,57,1.767,70,0.27,71,0.881,83,0.224,84,0.051,85,0.005,86,0.246,91,1.52,120,0.005,139,0.463,142,1.289,146,0.418,147,0.7,148,0.775,149,0.775,150,0.736,152,0.718,153,2.226,154,2.157,156,1.199,158,1.14,161,0.7,162,1.17,163,1.17,164,1.14,165,1.894,166,0.775,167,0.775,168,0.683,169,1.084,170,2.057,171,0.683,172,0.683,173,0.683,174,0.775,175,0.718,176,0.775,177,0.7,178,0.775,179,0.666,180,1.57,181,0.7,182,0.7,183,1.17,184,0.7,185,0.778,186,0.775,187,0.666,188,0.7,189,0.7,190,0.683,191,0.755,192,0.7,193,0.736,194,0.775,195,0.718,196,0.775,197,0.683,198,1.456,199,0.775,200,0.683,201,0.775,202,0.683,203,0.683,204,0.7,205,0.775,206,0.7,207,0.775,208,0.7,209,0.775,210,0.7,211,1.1,212,0.7,213,0.775,214,0.7,215,0.7,216,0.775,217,0.7,218,0.7,219,0.775,220,0.7,221,0.543,222,0.775,223,0.683,224,0.775,225,0.7,226,0.7,227,0.683,228,0.7,229,0.7,230,0.775,231,0.718,232,0.775,233,0.7,234,0.755,235,0.775,236,0.7,237,0.775,238,1.486,239,1.17,240,0.683,241,0.7,242,0.718,243,0.775,244,1.274,245,0.683,246,0.633,247,0.718,248,0.775,291,1.904,293,2.269,294,2.007,388,1.112,389,1.686,395,1.83,397,1.031,413,1.089,445,1.003,718,3.798,732,6.162,750,4.891,775,1.904,776,2.126,909,4.06,1094,3.426,1398,3.03,1399,2.449,1484,1.664,1707,5.449,1722,2.621,1729,2.242,1730,3.971,1751,2.513,1805,2.449,1917,2.689,1952,2.876,1976,2.269,2030,2.269,2134,2.269,2424,2.269,2480,2.126,3287,2.007,3820,2.689,3821,4.611,3822,4.611,3823,5.555,3824,5.555,3825,5.555,3826,5.555,3827,5.555,3828,5.555,3829,5.555,3830,5.555,3831,6.189,3832,5.555,3833,6.189,3834,6.189,3835,6.986,3836,5.555,3837,5.555,3838,6.189,3839,6.643,3840,6.189,3841,5.555,3842,4.611,3843,5.555,3844,6.189,3845,4.611,3846,4.611,3847,5.555,3848,6.189,3849,4.611,3850,3.054,3851,3.054,3852,3.054,3853,4.611,3854,4.611,3855,4.611,3856,3.054,3857,3.054,3858,3.054,3859,3.054,3860,3.054,3861,4.611,3862,4.611,3863,3.054,3864,3.054,3865,4.611,3866,3.054,3867,3.054,3868,3.054,3869,3.054,3870,3.054,3871,3.054,3872,3.054,3873,3.054,3874,3.054,3875,3.054,3876,3.054,3877,3.054,3878,3.054,3879,3.054,3880,3.054,3881,3.054,3882,3.054,3883,3.054,3884,4.611,3885,3.054,3886,3.054,3887,3.054,3888,3.054,3889,3.054,3890,3.054,3891,3.054,3892,3.054,3893,4.611,3894,3.054,3895,3.054,3896,4.611,3897,3.054,3898,3.054,3899,3.054,3900,3.054,3901,3.054,3902,3.054,3903,3.054,3904,3.054,3905,3.054,3906,3.054,3907,3.054,3908,3.054,3909,3.054,3910,3.054,3911,3.054,3912,3.054,3913,3.054,3914,3.054,3915,3.054,3916,3.054,3917,4.611,3918,3.054,3919,3.054,3920,4.611,3921,3.054,3922,3.054,3923,3.054,3924,4.611,3925,3.054,3926,3.054,3927,3.054,3928,3.054,3929,3.054,3930,3.054,3931,3.054,3932,4.611,3933,3.054,3934,3.054,3935,4.611,3936,3.054,3937,3.054,3938,4.611,3939,3.054,3940,3.054,3941,4.611,3942,4.611,3943,3.054,3944,3.054,3945,4.611,3946,3.054,3947,3.054,3948,4.611,3949,3.054,3950,3.054,3951,4.611,3952,2.689,3953,3.054,3954,3.054,3955,3.054,3956,4.611,3957,4.611,3958,4.611,3959,3.054,3960,3.054,3961,3.054,3962,3.054,3963,3.054,3964,3.054,3965,3.054,3966,3.054,3967,3.054,3968,3.054,3969,3.054,3970,3.054,3971,3.054,3972,3.054,3973,3.054,3974,3.054,3975,3.054,3976,3.054,3977,3.054,3978,3.054,3979,3.054,3980,3.054,3981,3.054,3982,3.054,3983,3.054,3984,4.611,3985,3.054,3986,3.054,3987,3.054,3988,6.189,3989,4.611,3990,4.611,3991,4.611,3992,3.054,3993,3.054,3994,3.054,3995,3.054,3996,3.054,3997,3.054,3998,5.85,3999,4.611,4000,4.611,4001,3.054,4002,4.611,4003,4.611,4004,3.054,4005,3.054,4006,4.611,4007,4.611,4008,4.611,4009,3.054,4010,4.611,4011,3.054,4012,3.054,4013,3.054,4014,4.611,4015,3.054,4016,4.611,4017,3.054,4018,4.611,4019,3.054,4020,3.054,4021,3.054,4022,3.054]],["title/pipes/ShortNamePipe.html",[260,3.011,3437,2.571]],["body/pipes/ShortNamePipe.html",[0,0.25,2,0.106,3,0.106,4,0.077,27,0.362,35,0.294,36,0.244,38,0.379,39,0.01,40,0.293,41,0.489,47,1.225,53,0.854,57,1.676,70,0.272,83,0.213,84,0.106,85,0.008,120,0.008,139,0.955,152,1.483,260,5.257,388,1.521,637,4.292,880,4.686,1956,3.933,2101,6.462,2203,4.686,3377,5.056,3437,4.488,3439,4.686,3446,5.056,3449,6.055,3450,5.056,4023,6.649,4024,7.551,4025,6.649,4026,5.552,4027,5.552,4028,5.552,4029,5.552,4030,5.552,4031,5.552,4032,5.552,4033,5.552,4034,5.552,4035,6.306]],["title/pipes/SimpleNamePipe.html",[261,3.011,3437,2.571]],["body/pipes/SimpleNamePipe.html",[0,0.25,2,0.106,3,0.106,4,0.077,27,0.362,35,0.294,36,0.245,38,0.38,39,0.01,40,0.293,41,0.49,47,1.318,53,0.855,70,0.255,83,0.213,84,0.106,85,0.008,120,0.008,139,0.957,152,1.485,261,5.261,388,1.523,638,3.753,880,4.692,964,5.56,1956,3.938,2101,4.692,2203,4.692,2728,6.06,3437,4.492,3439,4.692,3446,5.063,3449,6.06,3450,5.063,4025,6.654,4026,5.56,4027,5.56,4028,5.56,4029,5.56,4030,5.56,4031,5.56,4032,5.56,4033,5.56,4034,5.56,4036,6.654,4037,6.314,4038,6.314,4039,6.314,4040,6.314,4041,5.56]],["title/classes/StatementProcedure.html",[0,0.172,3642,3.214]],["body/classes/StatementProcedure.html",[0,0.249,2,0.079,3,0.079,4,0.058,5,1.791,7,2.303,8,1.249,9,0.171,10,0.626,11,1.342,13,1.562,14,3.561,15,3.316,16,3.699,17,3.316,18,3.015,19,3.699,20,3.699,21,3.699,22,3.699,23,3.699,24,3.206,25,3.316,26,3.561,27,0.36,28,2.843,29,3.289,30,3.699,31,2.32,32,0.534,35,0.414,36,0.346,38,0.453,39,0.01,40,0.273,41,0.584,44,1.574,45,2.912,46,1.16,47,1.07,48,4.02,49,2.568,50,1.684,51,2.568,52,2.568,53,0.751,54,2.568,55,3.739,56,2.568,57,1.302,58,2.568,59,2.568,60,2.568,61,2.568,62,2.568,63,3.2,64,2.568,65,2.568,66,3.561,67,3.663,69,3.166,70,0.264,71,0.828,72,2.468,73,1.956,74,2.568,75,2.07,76,2.568,77,2.568,78,2.568,83,0.254,84,0.079,85,0.007,86,0.38,88,2.139,91,2.147,95,2.591,96,2.291,98,2.468,99,2.376,100,2.376,110,2.678,111,2.678,112,2.568,114,2.568,120,0.007,713,2.801,1115,2.468,1311,2.213,1629,4.198,1955,3.779,1961,3.281,2601,2.939,3040,3.502,3041,3.502,3042,3.502,3462,5.53,3642,4.666,4042,4.15,4043,4.712,4044,4.712,4045,4.712,4046,7.845]],["title/components/TextViewerComponent.html",[146,0.272,240,0.967]],["body/components/TextViewerComponent.html",[0,0.14,2,0.087,3,0.06,4,0.063,8,0.717,9,0.128,10,0.513,11,1.252,27,0.295,32,0.401,35,0.392,36,0.313,38,0.458,39,0.01,40,0.288,41,0.516,44,0.938,46,0.581,47,1.07,53,0.704,57,0.733,70,0.276,71,0.731,83,0.248,84,0.06,85,0.009,86,0.285,120,0.006,139,0.536,140,2.462,142,0.629,146,0.445,147,0.811,148,0.897,149,0.897,150,0.853,152,0.832,153,2.246,154,2.179,156,1.337,158,1.272,161,0.811,162,1.304,163,1.304,164,1.272,165,1.687,166,0.897,167,0.897,168,0.791,169,1.209,170,2.116,171,0.791,172,0.791,173,0.791,174,0.897,175,0.832,176,0.897,177,0.811,178,0.897,179,0.771,180,1.687,181,0.811,182,0.811,183,1.304,184,0.811,185,0.867,186,0.897,187,0.771,188,0.811,189,0.811,190,0.791,191,0.875,192,0.811,193,0.853,194,0.897,195,0.832,196,0.897,197,0.791,198,1.564,199,0.897,200,0.791,201,0.897,202,0.791,203,0.791,204,0.811,205,0.897,206,0.811,207,0.897,208,0.811,209,0.897,210,0.811,211,1.182,212,0.811,213,0.897,214,0.811,215,0.811,216,0.897,217,0.811,218,0.811,219,0.897,220,0.811,221,1.385,222,0.897,223,0.791,224,0.897,225,0.811,226,0.811,227,0.791,228,0.811,229,0.811,230,0.897,231,0.832,232,0.897,233,0.811,234,0.875,235,0.897,236,0.811,237,0.897,238,1.15,239,1.304,240,1.487,241,1.851,242,0.832,243,0.897,244,1.179,245,0.791,246,1.256,247,0.832,248,0.897,268,2.371,300,1.019,301,1.459,341,6.555,342,6.075,369,2.259,386,2.181,387,1.783,388,1.24,389,1.838,390,2.692,391,2.692,392,2.921,393,2.829,394,3.122,395,1.966,397,1.194,399,1.928,400,2.628,401,2.334,405,3.114,406,3.571,407,2.462,408,1.416,409,1.644,410,1.783,411,2.369,412,1.661,413,1.261,414,2.01,417,1.852,418,1.852,460,2.102,521,1.554,543,2.628,548,3.114,549,2.836,587,2.334,632,2.206,666,2.592,934,3.779,963,3.378,965,3.378,968,4.081,969,3.114,971,3.114,972,3.114,973,2.102,979,2.188,1047,3.952,1259,3.114,1261,6.22,1377,4.123,1383,2.836,1427,3.952,1433,2.102,1559,2.628,1560,2.462,1629,3.6,1778,5.855,1825,2.324,4041,3.114,4047,6.649,4048,5.141,4049,7.063,4050,5.141,4051,5.141,4052,3.537,4053,5.141,4054,3.537,4055,3.537,4056,5.141,4057,3.537,4058,3.537,4059,3.537,4060,3.537,4061,5.141,4062,6.057,4063,3.537,4064,3.537,4065,3.537,4066,3.537,4067,5.141,4068,3.537,4069,3.537,4070,3.537,4071,3.537,4072,3.537,4073,5.141,4074,3.537,4075,3.537,4076,5.141]],["title/components/ViewerContainerComponent.html",[146,0.272,245,0.967]],["body/components/ViewerContainerComponent.html",[0,0.129,2,0.128,3,0.055,4,0.059,8,0.673,9,0.118,10,0.482,11,1.216,13,1.002,27,0.277,28,1.823,32,0.369,35,0.368,36,0.324,38,0.43,39,0.01,40,0.247,41,0.447,44,0.881,46,1.174,47,1.034,50,1.08,53,0.738,70,0.262,71,0.786,83,0.267,84,0.055,85,0.005,86,0.262,91,0.89,120,0.005,139,0.492,142,0.578,146,0.45,147,0.745,148,0.824,149,0.824,150,0.784,152,0.764,153,2.235,154,2.167,156,1.257,158,1.195,161,0.745,162,1.225,163,1.225,164,1.195,165,1.619,166,0.824,167,0.824,168,1.428,169,1.741,170,2.083,171,1.428,172,1.656,173,1.428,174,0.824,175,0.764,176,0.824,177,0.745,178,0.824,179,0.709,180,1.619,181,0.745,182,0.745,183,1.225,184,0.745,185,0.815,186,0.824,187,0.709,188,0.745,189,0.745,190,1.428,191,1.195,192,0.745,193,0.784,194,0.824,195,0.764,196,0.824,197,0.727,198,1.741,199,0.824,200,0.727,201,0.824,202,1.428,203,1.428,204,0.745,205,0.824,206,0.745,207,0.824,208,0.745,209,0.824,210,0.745,211,1.135,212,0.745,213,0.824,214,0.745,215,0.745,216,0.824,217,0.745,218,0.745,219,0.824,220,0.745,221,1.135,222,0.824,223,0.727,224,0.824,225,0.745,226,0.745,227,0.727,228,0.745,229,0.745,230,0.824,231,0.764,232,0.824,233,0.745,234,0.804,235,0.824,236,0.745,237,0.824,238,1.08,239,1.225,240,1.428,241,1.565,242,0.764,243,0.824,244,1.108,245,1.428,246,1.845,247,1.356,248,0.824,268,2.277,298,1.58,300,0.936,301,1.341,325,5.314,327,2.415,329,2.415,331,2.415,338,6.251,339,6.251,342,2.415,349,2.415,351,2.415,386,2.245,388,1.165,389,1.75,393,2.717,394,2.998,395,1.887,397,2.155,399,1.771,401,2.193,408,2.964,409,1.04,411,2.307,412,1.526,413,1.159,414,1.847,417,1.702,418,1.702,430,2,445,1.068,557,4.255,574,1.771,575,2.746,634,1.192,635,1.771,637,2.746,638,1.932,918,5.622,968,2.53,1111,3.718,1115,3.745,1169,3.59,1252,3.596,1297,4.866,1328,2.263,1427,3.795,1433,2.872,1729,2.804,1974,2.263,2462,5.622,2477,5.622,2478,5.622,2480,4.014,2481,5.119,2528,4.254,2530,2.862,2532,2.862,2534,2.862,2543,6.698,3069,4.254,3260,5.622,3273,6.008,3281,2.862,3283,6.008,4077,2.862,4078,4.831,4079,4.831,4080,6.384,4081,4.831,4082,4.831,4083,5.766,4084,4.831,4085,3.25,4086,3.25,4087,3.25,4088,3.25,4089,3.25,4090,4.831,4091,3.25,4092,3.25,4093,3.25,4094,3.25,4095,3.25,4096,3.25,4097,3.25,4098,3.25,4099,3.25,4100,3.25,4101,3.25,4102,3.25,4103,3.25,4104,3.25,4105,3.25,4106,3.25,4107,3.25,4108,3.25,4109,3.25,4110,3.25,4111,4.831,4112,3.25,4113,3.25,4114,3.25,4115,3.25,4116,3.25,4117,3.25,4118,3.25,4119,3.25,4120,3.25,4121,4.831,4122,4.831,4123,4.831]],["title/classes/WhileControlProcedure.html",[0,0.172,3641,3.214]],["body/classes/WhileControlProcedure.html",[0,0.248,2,0.079,3,0.079,4,0.057,5,1.785,7,2.291,8,1.248,9,0.169,10,0.623,11,1.341,13,1.557,14,3.547,15,3.303,16,3.684,17,3.303,18,3.005,19,3.684,20,3.684,21,3.684,22,3.684,23,3.684,24,3.193,25,3.303,26,3.547,27,0.358,28,2.834,29,3.272,30,3.684,31,2.311,32,0.53,33,3.551,34,2.933,35,0.415,36,0.345,38,0.452,39,0.01,40,0.272,41,0.583,42,1.754,43,1.765,44,1.572,45,2.908,46,1.156,47,1.066,48,4.017,49,2.548,50,1.679,51,2.548,52,2.548,53,0.749,54,2.548,55,3.791,56,2.548,57,1.295,58,2.548,59,2.548,60,2.548,61,2.548,62,2.548,63,2.918,64,2.548,65,2.548,66,3.547,67,3.654,69,3.15,70,0.264,71,0.825,72,2.449,73,1.946,74,2.548,75,2.054,76,2.548,77,2.548,78,2.548,83,0.253,84,0.079,85,0.007,86,0.504,88,2.836,90,2.548,91,2.339,92,1.28,95,2.577,96,3.038,98,3.272,99,3.15,100,3.15,101,2.658,110,2.658,111,2.658,112,2.548,114,2.548,116,2.658,120,0.007,713,2.779,714,2.916,939,3.713,941,3.475,942,3.475,3641,4.642,4124,4.117,4125,4.676,4126,4.676,4127,4.676]],["title/coverage.html",[4128,4.752]],["body/coverage.html",[0,0.356,1,2.311,4,0.038,5,2.266,6,2.739,8,0.434,35,0.218,39,0.01,45,1.05,55,1.412,73,0.969,85,0.005,86,0.251,120,0.005,121,2.682,122,2.494,123,3.864,124,2.739,125,2.739,133,0.789,142,0.553,146,0.566,147,0.713,151,2.739,168,0.696,171,0.696,173,0.696,175,0.732,177,0.713,179,0.678,181,0.713,182,0.713,184,0.713,185,0.525,187,0.678,188,0.713,190,0.696,192,0.713,195,0.732,197,0.696,200,0.696,202,0.696,203,0.696,204,0.713,206,0.713,208,0.713,210,0.713,211,0.553,212,0.713,214,0.713,215,0.713,217,0.713,218,0.713,220,0.713,223,0.696,225,0.713,226,0.713,227,0.696,228,0.713,229,0.713,231,0.732,233,0.713,236,0.713,238,1.046,240,0.696,242,0.732,244,1.072,245,0.696,259,2.165,260,2.165,261,2.165,265,2.044,266,1.512,267,2.044,268,1.109,269,1.768,270,1.568,271,1.629,272,1.94,308,2.165,311,2.494,312,2.494,314,2.494,316,3.255,317,3.255,320,3.474,321,3.255,323,3.474,324,3.474,326,2.494,327,2.311,328,2.494,329,2.311,330,3.749,331,3.474,332,2.494,333,2.494,334,2.311,335,2.311,338,2.311,339,2.311,341,2.494,342,2.311,343,2.494,344,2.494,348,4.105,349,2.311,350,2.494,351,2.311,353,2.311,355,2.311,357,2.494,358,2.494,359,2.494,361,4.105,362,2.494,363,2.494,365,2.494,374,2.494,375,2.311,386,2.369,387,4.105,392,1.366,406,1.46,411,0.969,429,4.174,445,3.038,446,1.94,447,2.739,450,2.122,455,2.739,463,2.494,464,2.739,492,1.412,506,1.324,524,2.739,554,2.739,595,2.494,669,2.165,670,2.739,704,2.311,705,2.739,715,2.916,716,5.142,717,2.739,718,2.448,732,5.081,733,2.739,738,2.739,911,2.739,935,2.311,936,2.739,943,2.311,944,2.739,948,2.739,984,1.849,1008,3.749,1030,2.311,1031,2.739,1037,4.117,1045,2.165,1047,1.849,1138,2.739,1152,1.695,1206,1.568,1236,1.94,1237,2.739,1251,1.629,1270,2.739,1293,2.044,1294,2.165,1340,2.739,1344,2.165,1370,2.494,1494,2.739,1557,2.044,1578,2.739,1695,2.739,1713,2.311,1714,2.739,1717,3.684,1722,1.768,1723,4.268,1724,4.387,1730,1.768,1731,1.849,1733,1.849,1734,2.374,1735,1.849,1737,1.849,1752,2.739,1826,2.739,1929,4.174,1964,2.311,1992,2.311,2307,2.739,2320,2.739,2322,2.739,2323,2.739,2324,2.739,2334,3.749,2344,2.739,2349,2.739,2352,2.739,2363,2.311,2364,2.739,2368,2.311,2369,2.739,2396,2.739,2431,2.739,2460,2.739,2570,2.739,2664,3.911,2712,2.739,2729,2.739,2808,2.739,2846,2.739,2856,2.311,2887,4.117,2888,2.739,3008,3.749,3034,2.494,3046,1.94,3071,2.739,3095,2.739,3125,2.494,3126,2.739,3127,2.739,3161,2.044,3253,2.739,3256,2.739,3437,3.339,3438,2.739,3439,4.174,3460,2.311,3461,2.739,3637,2.739,3641,2.311,3642,2.311,3653,2.739,3699,2.739,3749,2.739,3782,2.739,3820,2.739,4023,2.739,4036,2.739,4042,2.739,4077,2.739,4124,2.739,4128,2.494,4129,7.946,4130,8.05,4131,6.246,4132,7.298,4133,3.11,4134,8.141,4135,5.617,4136,3.11,4137,3.11,4138,5.617,4139,3.11,4140,3.11,4141,3.11,4142,6.246,4143,4.675,4144,5.617,4145,4.675,4146,7.035,4147,5.617,4148,5.617,4149,3.11,4150,6.246,4151,7.035,4152,4.675,4153,2.739,4154,7.298,4155,3.11,4156,3.11,4157,3.11,4158,3.11,4159,4.675,4160,3.11,4161,3.11,4162,3.11,4163,3.11,4164,3.11,4165,5.617,4166,3.11,4167,3.11,4168,3.11,4169,3.11,4170,3.11,4171,3.11,4172,4.675,4173,3.11,4174,5.617,4175,3.11,4176,3.11,4177,3.749,4178,2.739,4179,2.739,4180,3.749,4181,2.739,4182,3.11,4183,3.11]],["title/dependencies.html",[250,3.248,4184,2.887]],["body/dependencies.html",[39,0.01,53,0.581,85,0.008,120,0.008,139,0.882,146,0.367,150,1.404,169,1.369,189,1.65,211,1.517,246,1.207,250,3.631,278,4.726,279,3.92,283,4.668,288,4.668,291,4.486,294,3.825,296,4.668,297,4.668,298,2.83,368,5.767,369,3.429,420,4.668,460,4.639,534,4.053,549,4.668,579,3.825,700,3.46,777,4.668,963,3.825,1125,4.668,1271,4.326,1486,5.126,1560,4.053,1729,3.497,1793,5.126,1812,3.92,2782,4.668,4185,8.736,4186,5.821,4187,5.821,4188,5.821,4189,5.821,4190,5.821,4191,4.668,4192,5.821,4193,5.821,4194,5.821,4195,5.821,4196,5.821,4197,5.821,4198,5.821,4199,5.821,4200,5.821,4201,5.821,4202,5.821,4203,5.821,4204,5.821,4205,5.821,4206,5.821,4207,5.821,4208,5.821,4209,5.821,4210,5.821,4211,5.821,4212,5.821,4213,5.821,4214,5.821,4215,5.126,4216,7.192,4217,5.821,4218,5.126,4219,5.821,4220,6.333,4221,5.821,4222,5.821,4223,5.821,4224,5.821,4225,5.821,4226,5.821,4227,5.821,4228,5.821,4229,5.821,4230,5.821,4231,5.821,4232,5.821,4233,5.821,4234,5.821,4235,5.126,4236,5.821,4237,5.821,4238,5.821]],["title/miscellaneous/enumerations.html",[4239,2.676,4240,4.586]],["body/miscellaneous/enumerations.html",[2,0.093,5,2.031,8,0.772,9,0.201,38,0.419,39,0.008,42,1.957,47,1.406,53,0.552,63,2.708,85,0.008,87,2.115,95,2.284,101,2.356,120,0.008,123,2.691,169,1.302,172,1.238,185,1.176,241,1.27,246,1.148,298,2.691,316,3.854,317,3.854,386,1.86,397,2.703,420,4.439,437,3.962,445,1.819,483,3.515,521,3.062,557,3.452,595,4.439,609,5.18,626,6.138,632,4.758,633,4.439,634,2.03,635,3.017,636,4.874,637,3.146,638,3.29,639,4.874,640,4.113,641,4.439,963,3.638,979,3.247,1019,4.347,1048,3.65,1049,3.962,1115,2.899,1188,4.874,1252,4.347,1254,2.899,1729,2.691,1948,4.758,1961,4.853,2094,4.113,2125,3.29,2194,4.439,2279,4.439,2423,4.853,2526,5.589,2599,4.439,2601,3.452,2664,4.853,3195,4.874,3201,4.874,3287,3.638,3457,5.589,3459,5.589,3560,6.138,3561,4.113,3562,4.874,3563,4.874,3564,4.113,3565,4.874,3566,4.874,3567,4.874,3568,4.874,3569,4.874,3570,4.874,3571,4.874,3572,4.439,4177,4.439,4215,4.874,4218,6.138,4220,4.874,4239,4.113,4240,4.874,4241,6.97,4242,5.535,4243,5.535,4244,5.535,4245,6.97,4246,4.874,4247,5.535,4248,5.535,4249,5.535,4250,5.535,4251,5.535,4252,6.97,4253,6.97,4254,6.97,4255,4.874,4256,5.535,4257,5.535,4258,5.535,4259,5.535,4260,5.535,4261,5.535,4262,5.535,4263,5.535,4264,5.535]],["title/classes/gis_module.html",[0,0.172,1737,2.571]],["body/classes/gis_module.html",[0,0.334,2,0.086,3,0.086,4,0.063,7,2.437,9,0.186,10,0.663,11,1.18,13,1.713,27,0.381,32,0.835,35,0.392,36,0.343,38,0.443,39,0.01,40,0.299,41,0.516,44,1.212,48,3.662,50,1.149,53,0.824,57,1.672,70,0.301,83,0.224,84,0.086,85,0.007,86,0.705,92,1.406,120,0.007,133,1.976,142,0.913,211,0.913,855,4.119,1160,5.129,1164,4.079,1165,5.129,1542,3.204,1722,4.427,1723,4.895,1724,3.204,1725,3.375,1726,3.375,1729,3.231,1730,4.585,1731,4.795,1732,4.367,1733,3.053,1734,1.559,1735,3.053,1736,4.841,1737,3.95,1738,5.119,1739,5.119,1740,3.375,1741,5.119,1742,4.367,1743,5.119,1744,4.367,1745,3.375,1746,3.375,1747,5.119,1748,4.367,1749,3.375,1750,3.375,1751,4.015,2338,5.907,3005,6.487,4265,6.645,4266,6.645,4267,5.137,4268,5.137,4269,5.137,4270,5.137,4271,5.137,4272,5.137,4273,5.137,4274,5.137,4275,5.137,4276,5.137,4277,5.137,4278,5.137]],["title/index.html",[9,0.13,1958,2.366,1999,2.676]],["body/index.html",[4,0.056,8,1.081,28,2.928,35,0.286,39,0.009,40,0.289,41,0.354,42,1.28,46,0.749,47,0.69,85,0.007,86,0.599,87,2.425,101,1.939,120,0.007,142,1.091,146,0.568,154,1.675,168,1.019,171,1.019,172,1.019,173,1.019,179,1.514,185,1.447,187,0.994,190,1.019,193,1.099,197,1.019,198,1.072,200,1.019,202,1.019,203,1.019,211,1.554,221,1.511,223,1.019,240,1.019,246,1.803,247,2.056,274,2.484,287,5.407,291,2.842,294,4.035,298,3.971,310,3.654,382,5.161,397,2.073,398,2.709,409,1.458,521,2.002,642,2.298,702,3.173,739,4.563,934,2.59,951,2.484,979,2.613,1191,2.387,1196,3.173,1206,2.298,1254,3.216,1271,3.387,1275,3.654,1276,3.654,1277,3.654,1278,4.013,1279,4.013,1280,4.013,1307,4.563,1308,4.635,1311,3.899,1338,4.409,1355,2.842,1396,3.387,1448,4.563,1453,3.654,1634,3.173,1644,4.275,1656,4.013,1674,3.387,1717,2.387,1825,2.995,1944,2.995,1948,3.83,1950,4.563,1952,4.331,1956,2.842,1958,4.035,1959,3.173,1971,5.097,1972,4.013,1974,3.173,1987,3.654,1988,3.83,1995,3.387,2015,4.563,2019,6.115,2030,4.563,2036,4.563,2043,3.654,2044,4.835,2081,5.161,2095,3.654,2103,4.013,2104,4.563,2108,4.013,2113,3.654,2125,2.709,2126,3.387,2128,4.835,2139,2.995,2153,3.387,2195,3.173,2205,3.654,2234,2.995,2423,3.173,2432,4.013,2443,3.654,2455,3.65,2463,4.835,2470,4.924,2518,4.035,2548,6.22,2587,4.013,2589,3.654,2591,4.013,2630,4.013,2634,4.013,2636,4.013,2643,3.654,2649,3.654,2720,4.013,2726,4.924,2778,3.654,3009,4.013,3192,3.387,3287,4.035,3561,3.387,3564,3.387,3952,4.013,4180,5.569,4184,3.654,4191,4.924,4255,4.013,4279,4.557,4280,4.013,4281,4.557,4282,4.557,4283,6.14,4284,4.557,4285,6.945,4286,4.013,4287,4.557,4288,7.757,4289,4.557,4290,4.557,4291,4.557,4292,4.557,4293,4.557,4294,6.14,4295,4.013,4296,6.945,4297,4.557,4298,6.115,4299,4.557,4300,4.557,4301,4.557,4302,4.557,4303,4.557,4304,4.557,4305,4.557,4306,4.013,4307,4.013,4308,4.013,4309,6.14,4310,4.557,4311,4.557,4312,4.557,4313,4.557,4314,4.557,4315,4.557,4316,4.557,4317,4.013,4318,4.557,4319,4.557,4320,4.557,4321,4.557,4322,4.557,4323,4.557,4324,4.557,4325,5.407,4326,4.557,4327,4.557,4328,4.557]],["title/license.html",[1958,2.366,1999,2.676,4329,3.17]],["body/license.html",[0,0.052,3,0.138,4,0.057,7,1.136,8,0.184,10,0.132,11,0.2,13,1.579,18,2.011,27,0.076,28,0.499,35,0.108,36,0.051,39,0.003,40,0.135,41,0.289,42,0.87,57,0.772,70,0.045,71,0.145,83,0.078,85,0.005,87,0.401,96,1.506,101,3.133,120,0.003,133,1.274,146,0.267,164,0.574,172,1.784,234,1.047,247,0.875,253,4.381,274,0.721,290,1.165,388,0.747,398,1.379,409,1.491,454,1.86,457,2.036,521,3.321,535,0.921,564,1.447,634,1.553,635,2.307,637,2.406,638,1.841,640,0.983,642,1.17,643,6.013,650,0.921,655,1.061,702,5.221,703,5.767,739,2.782,807,2.728,811,2.043,855,1.86,878,2.766,880,0.983,881,4.999,900,1.061,939,3.974,951,2.307,965,0.869,968,3.817,973,1.379,979,1.318,1019,0.825,1035,0.983,1073,3.395,1075,2.446,1095,1.165,1106,1.86,1111,2.028,1122,2.157,1137,0.983,1164,3.501,1269,1.86,1271,3.733,1297,0.869,1307,3.964,1311,1.748,1328,1.615,1329,1.165,1337,0.983,1338,4.708,1355,1.932,1376,1.841,1378,2.043,1396,0.983,1424,1.165,1448,1.724,1452,1.86,1454,4.493,1484,0.721,1485,2.043,1627,1.86,1634,0.921,1644,2.157,1645,2.043,1655,2.985,1657,2.043,1665,1.061,1667,1.524,1671,2.728,1674,2.766,1675,2.728,1680,1.165,1692,0.869,1729,1.128,1734,1.772,1812,0.721,1813,0.983,1825,3.682,1831,0.921,1874,1.165,1930,0.921,1939,1.724,1942,1.165,1944,5.554,1946,1.86,1947,4.34,1949,1.165,1950,1.724,1952,1.447,1953,3.733,1956,2.64,1957,2.484,1958,1.524,1959,1.615,1963,5.844,1964,2.766,1967,2.484,1968,1.165,1971,3.063,1974,2.948,1975,1.86,1976,0.983,1977,2.043,1981,1.165,1982,1.165,1983,1.165,1985,1.061,1988,3.133,1991,3.733,1992,1.724,1993,1.061,1995,3.146,1998,1.724,2008,1.061,2013,2.985,2015,2.446,2016,7.141,2021,1.061,2027,2.302,2028,3.497,2035,6.756,2037,3.277,2042,3.277,2047,2.728,2052,4.423,2060,1.165,2061,2.484,2062,5.632,2063,3.277,2064,2.728,2066,1.165,2081,1.724,2092,0.983,2095,1.86,2104,3.464,2109,1.165,2113,1.061,2117,2.043,2125,4.897,2126,3.146,2129,1.165,2130,5.708,2131,1.061,2134,3.464,2137,5.961,2139,1.524,2140,2.043,2145,4.934,2146,3.277,2148,2.484,2151,3.395,2153,3.146,2154,1.86,2163,4.867,2166,2.043,2170,1.165,2181,2.484,2182,2.321,2188,4.104,2192,1.165,2193,1.061,2195,2.948,2201,5.844,2203,2.766,2204,1.165,2205,1.061,2208,4.34,2210,1.86,2213,4.697,2220,2.302,2222,2.043,2224,3.277,2225,1.165,2233,2.043,2234,4.928,2240,2.043,2246,1.061,2247,4.934,2329,7.162,2439,4.683,2442,3.728,2443,3.395,2444,4.493,2448,4.028,2449,2.043,2454,1.165,2455,2.771,2456,1.165,2457,6.094,2514,2.043,2518,1.524,2550,6.546,2551,2.043,2571,1.165,2578,6.346,2580,1.165,2581,1.165,2584,5.142,2589,1.061,2592,4.697,2594,2.043,2595,1.165,2597,2.043,2600,1.061,2601,1.932,2602,1.165,2607,6.346,2614,2.728,2615,3.277,2617,3.277,2618,2.728,2619,1.165,2623,7.274,2633,3.728,2642,1.165,2643,2.484,2644,3.395,2646,1.86,2648,2.043,2650,3.728,2690,1.061,2726,1.061,2777,4.85,2963,2.043,2992,2.043,2998,1.165,3144,1.165,3192,2.766,3412,2.043,3460,0.983,3572,1.86,3593,2.728,3611,1.165,3998,2.043,4128,1.86,4184,1.86,4191,1.061,4235,3.277,4280,4.934,4286,3.728,4295,2.728,4298,2.728,4306,2.043,4307,1.165,4308,3.277,4317,6.843,4325,2.043,4329,7.856,4330,7.119,4331,1.323,4332,1.323,4333,3.098,4334,7.9,4335,4.661,4336,1.323,4337,1.323,4338,2.32,4339,5.604,4340,6.234,4341,3.098,4342,1.323,4343,1.323,4344,3.098,4345,1.323,4346,5.604,4347,1.323,4348,1.323,4349,1.323,4350,3.098,4351,3.722,4352,2.32,4353,1.323,4354,3.722,4355,5.334,4356,2.32,4357,2.32,4358,3.098,4359,3.098,4360,2.32,4361,3.098,4362,2.32,4363,2.32,4364,3.722,4365,6.048,4366,8.043,4367,5.023,4368,1.323,4369,6.048,4370,6.048,4371,7.499,4372,4.234,4373,1.323,4374,6.921,4375,1.323,4376,2.32,4377,1.323,4378,1.323,4379,6.048,4380,1.323,4381,1.323,4382,1.323,4383,1.323,4384,1.323,4385,1.323,4386,1.323,4387,1.323,4388,1.323,4389,4.234,4390,6.55,4391,2.32,4392,3.098,4393,1.323,4394,3.098,4395,1.323,4396,1.323,4397,7.771,4398,5.023,4399,5.334,4400,1.323,4401,3.098,4402,1.323,4403,5.604,4404,6.234,4405,1.323,4406,1.323,4407,3.098,4408,3.722,4409,1.323,4410,6.808,4411,1.323,4412,2.32,4413,8.188,4414,3.098,4415,6.55,4416,1.323,4417,2.32,4418,5.334,4419,4.661,4420,3.722,4421,8.326,4422,7.119,4423,1.323,4424,5.023,4425,3.098,4426,5.604,4427,7.119,4428,4.661,4429,1.323,4430,3.722,4431,1.323,4432,2.32,4433,2.32,4434,1.323,4435,1.323,4436,3.722,4437,1.323,4438,1.323,4439,1.323,4440,4.234,4441,3.098,4442,4.234,4443,1.323,4444,3.098,4445,1.323,4446,4.661,4447,2.32,4448,2.32,4449,2.32,4450,1.323,4451,2.32,4452,1.323,4453,6.685,4454,1.323,4455,1.323,4456,2.32,4457,2.32,4458,1.323,4459,1.323,4460,1.323,4461,1.323,4462,3.098,4463,3.098,4464,1.323,4465,3.722,4466,3.722,4467,2.32,4468,1.323,4469,1.323,4470,1.323,4471,1.323,4472,2.32,4473,1.323,4474,1.323,4475,4.234,4476,4.234,4477,1.323,4478,3.098,4479,3.722,4480,1.323,4481,4.661,4482,1.323,4483,2.043,4484,1.323,4485,1.323,4486,1.323,4487,1.323,4488,1.323,4489,1.323,4490,1.323,4491,2.32,4492,4.234,4493,4.234,4494,1.323,4495,5.604,4496,3.722,4497,2.32,4498,3.098,4499,4.661,4500,1.323,4501,3.098,4502,4.234,4503,1.323,4504,4.234,4505,2.32,4506,3.722,4507,3.722,4508,4.234,4509,1.323,4510,3.098,4511,1.323,4512,1.323,4513,1.323,4514,1.323,4515,1.323,4516,3.098,4517,1.323,4518,1.323,4519,1.323,4520,1.323,4521,1.323,4522,2.32,4523,5.023,4524,3.722,4525,2.32,4526,2.32,4527,1.323,4528,5.023,4529,2.32,4530,1.323,4531,1.323,4532,1.323,4533,2.32,4534,1.323,4535,5.334,4536,1.323,4537,1.323,4538,1.323,4539,2.32,4540,4.234,4541,2.32,4542,1.323,4543,2.32,4544,3.722,4545,1.323,4546,1.323,4547,1.323,4548,1.323,4549,1.323,4550,1.323,4551,1.323,4552,1.323,4553,1.323,4554,2.32,4555,1.323,4556,1.323,4557,4.234,4558,1.323,4559,1.323,4560,1.323,4561,1.323,4562,2.32,4563,5.023,4564,1.323,4565,1.323,4566,1.323,4567,1.323,4568,1.323,4569,1.323,4570,1.323,4571,4.661,4572,1.323,4573,2.32,4574,1.323,4575,1.323,4576,2.32,4577,1.323,4578,1.323,4579,3.098,4580,1.323,4581,2.32,4582,6.234,4583,5.023,4584,1.323,4585,1.323,4586,3.098,4587,3.722,4588,1.323,4589,2.32,4590,1.323,4591,1.323,4592,2.32,4593,3.098,4594,4.234,4595,2.32,4596,2.32,4597,1.323,4598,5.023,4599,1.323,4600,1.323,4601,3.098,4602,1.323,4603,3.098,4604,1.323,4605,3.722,4606,3.098,4607,1.323,4608,1.323,4609,1.323,4610,1.323,4611,1.323,4612,1.323,4613,4.661,4614,1.323,4615,3.098,4616,1.323,4617,2.32,4618,1.323,4619,1.323,4620,1.323,4621,1.323,4622,1.323,4623,1.323,4624,3.098,4625,1.323,4626,1.323,4627,3.098,4628,1.323,4629,1.323,4630,1.323,4631,4.661,4632,1.323,4633,1.323,4634,1.323,4635,3.098,4636,2.32,4637,5.023,4638,3.098,4639,1.323,4640,2.32,4641,1.323,4642,3.098,4643,1.323,4644,3.098,4645,2.32,4646,1.323,4647,1.323,4648,2.32,4649,2.32,4650,1.323,4651,4.234,4652,1.323,4653,1.323,4654,1.323,4655,1.323,4656,1.323,4657,1.323,4658,1.323,4659,1.323,4660,2.32,4661,1.323,4662,1.323,4663,1.323,4664,1.323,4665,1.323,4666,1.323,4667,1.323,4668,3.722,4669,1.323,4670,2.32,4671,1.323,4672,1.323,4673,1.323,4674,1.323,4675,2.32,4676,1.323,4677,3.098,4678,1.323,4679,2.32,4680,1.323,4681,1.323,4682,3.098,4683,1.323,4684,1.323,4685,1.323,4686,2.32,4687,2.32,4688,1.323,4689,1.323,4690,1.323,4691,1.323,4692,1.323,4693,1.323,4694,3.098,4695,1.323,4696,1.323,4697,1.323,4698,2.32,4699,1.323,4700,1.323,4701,1.323,4702,2.32,4703,1.323,4704,2.32,4705,2.32,4706,1.323,4707,1.323,4708,1.323,4709,1.323,4710,1.323,4711,1.323,4712,1.323,4713,3.098,4714,1.323,4715,1.323,4716,1.323,4717,1.323,4718,1.323,4719,2.32,4720,1.323,4721,1.323,4722,1.323,4723,1.323,4724,2.32,4725,1.323,4726,1.323,4727,1.323,4728,1.323,4729,1.323,4730,1.323,4731,1.323,4732,1.323,4733,1.323,4734,1.323,4735,1.323,4736,1.323,4737,1.323]],["title/modules.html",[86,0.478]],["body/modules.html",[39,0.009,85,0.009,86,0.562,120,0.009,193,1.68,249,5.177,262,4.85,263,4.85,264,4.85,279,4.591,1825,4.578,2182,5.254,4738,8.425,4739,8.651]],["title/overview.html",[4740,5.218]],["body/overview.html",[0,0.177,31,1.467,39,0.01,84,0.075,85,0.007,86,0.488,120,0.007,121,1.507,146,0.281,147,1.863,161,1.024,168,1.537,171,1.537,173,1.537,175,1.616,177,1.576,179,1.499,181,1.576,184,1.576,187,1.499,188,1.863,190,1.537,192,1.576,195,1.616,197,1.537,200,1.537,202,1.537,203,1.537,204,1.576,206,1.576,208,1.576,210,1.576,212,1.576,214,1.576,215,1.863,217,1.576,218,1.576,220,1.576,223,1.537,225,1.576,226,1.576,227,1.537,228,1.576,229,1.576,231,1.616,233,1.576,236,1.576,238,1.648,240,1.537,242,1.616,244,1.69,245,1.537,249,6.911,250,2.785,251,3.109,252,3.318,253,2.785,254,3.932,255,3.932,256,3.932,257,3.932,258,3.932,259,4.784,260,4.784,261,4.784,262,4.784,263,6.126,264,6.207,265,4.516,266,3.342,267,4.516,268,2.451,269,3.906,270,3.465,271,3.599,272,4.286,273,4.216,274,2.433,637,2.538,638,2.654,718,3.859,895,3.932,1376,2.654,1734,1.355,1781,3.932,1782,3.932,1783,3.932,1784,3.932,2653,3.932,2654,3.932,2655,3.932,3437,2.654,4483,3.932,4740,3.932,4741,4.465]],["title/miscellaneous/variables.html",[1717,2.728,4239,2.676]],["body/miscellaneous/variables.html",[9,0.21,10,0.579,35,0.39,39,0.01,46,1.401,47,1.375,50,1.299,53,0.778,63,2.256,70,0.196,85,0.008,87,1.762,92,1.59,120,0.008,123,2.824,185,0.979,211,1.386,221,1.032,386,1.55,643,5.759,968,4.466,1111,4.828,1115,4.665,1717,3.761,1948,4.479,1961,4.043,2378,4.043,2380,4.315,2558,5.114,2601,3.622,2856,5.794,3008,4.657,3034,6.252,3036,4.657,3037,4.657,3038,4.657,3039,4.315,3040,4.315,3041,4.315,3042,4.315,3049,5.114,3050,5.114,3051,4.315,3052,4.657,4153,5.114,4177,4.657,4178,6.866,4179,5.114,4180,6.838,4181,5.114,4239,4.315,4246,6.324,4742,5.807,4743,5.807,4744,5.807,4745,5.807,4746,5.807,4747,5.807]]],"invertedIndex":[["",{"_index":39,"title":{},"body":{"classes/ActionProcedure.html":{},"injectables/ActiveNodeService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"classes/CodeFactory.html":{},"classes/CodeGenerator.html":{},"injectables/CodeService.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"injectables/ConsoleService.html":{},"classes/Constants.html":{},"modules/CustomMaterialModule.html":{},"classes/DataProcedure.html":{},"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"injectables/ExecuteService.html":{},"components/FileLoadDialogComponent.html":{},"classes/FileService.html":{},"classes/FileUtils.html":{},"classes/Flowchart.html":{},"classes/FlowchartConnectionUtils.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"classes/FlowchartWriter.html":{},"classes/ForLoopControlProcedure.html":{},"classes/Frame.html":{},"classes/FunctionProcedure.html":{},"modules/GSViewer.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"interfaces/HasIsPlanar.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IComponent.html":{},"interfaces/IEdge.html":{},"interfaces/IFlowchart.html":{},"interfaces/IGraphNode.html":{},"interfaces/IModule.html":{},"interfaces/IPort.html":{},"interfaces/IProcedure.html":{},"classes/IdGenerator.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"components/InfoViewerComponent.html":{},"classes/InputPort.html":{},"components/LandingComponent.html":{},"injectables/LayoutService.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"modules/MobiusCesium.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"injectables/MobiusService.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"classes/ModuleUtils.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"injectables/NodeLibraryService.html":{},"classes/NodeSubscriber.html":{},"classes/NodeUtils.html":{},"classes/OutputPort.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"pipes/PortTypePipe.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{},"classes/ProcedureFactory.html":{},"components/ProcedureItemComponent.html":{},"classes/ProcedureUtils.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{},"classes/StatementProcedure.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"classes/WhileControlProcedure.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"classes/gis_module.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":445,"title":{},"body":{"components/CesiumViewerComponent.html":{},"injectables/ConsoleService.html":{},"components/DisplayComponent.html":{},"classes/FileService.html":{},"classes/FileUtils.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartRenderUtils.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpViewerComponent.html":{},"injectables/LayoutService.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"classes/ModuleUtils.html":{},"classes/NodeUtils.html":{},"components/PanelComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"classes/ProcedureUtils.html":{},"components/SettingComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["0,0",{"_index":1426,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["0.0.14",{"_index":4217,"title":{},"body":{"dependencies.html":{}}}],["0.0.6",{"_index":4216,"title":{},"body":{"dependencies.html":{}}}],["0.0.8",{"_index":4214,"title":{},"body":{"dependencies.html":{}}}],["0.0.9",{"_index":4219,"title":{},"body":{"dependencies.html":{}}}],["0.01",{"_index":1917,"title":{},"body":{"components/GraphEdgeComponent.html":{},"components/SettingComponent.html":{}}}],["0.1",{"_index":1491,"title":{},"body":{"classes/FlowchartRenderUtils.html":{},"classes/ModuleUtils.html":{}}}],["0.1.16",{"_index":4221,"title":{},"body":{"dependencies.html":{}}}],["0.1.69",{"_index":4207,"title":{},"body":{"dependencies.html":{}}}],["0.1.82",{"_index":4208,"title":{},"body":{"dependencies.html":{}}}],["0.1.9",{"_index":4233,"title":{},"body":{"dependencies.html":{}}}],["0.154",{"_index":2645,"title":{},"body":{"components/MobiusAbout.html":{}}}],["0.16.0",{"_index":4193,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":1493,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["0.25;//canvas.width",{"_index":1927,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["0.3",{"_index":1918,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["0.3*2/math.pi)*math.tanh(x",{"_index":1924,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["0.3*2/math.pi)*tanh(x",{"_index":1920,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["0.3.4",{"_index":4222,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":4203,"title":{},"body":{"dependencies.html":{}}}],["0.47",{"_index":3923,"title":{},"body":{"components/SettingComponent.html":{}}}],["0.5",{"_index":1451,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["0.8.26",{"_index":4238,"title":{},"body":{"dependencies.html":{}}}],["0.84.27",{"_index":4197,"title":{},"body":{"dependencies.html":{}}}],["0.88.0",{"_index":4230,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":4134,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":4165,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":4135,"title":{},"body":{"coverage.html":{}}}],["0/110",{"_index":4156,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":4141,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":4132,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":4142,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":4175,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":4151,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":4131,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":4149,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":4146,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":4129,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":4145,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":4166,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":4140,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":4144,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":4143,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":4147,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":4137,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":4130,"title":{},"body":{"coverage.html":{}}}],["0/33",{"_index":4157,"title":{},"body":{"coverage.html":{}}}],["0/35",{"_index":4168,"title":{},"body":{"coverage.html":{}}}],["0/36",{"_index":4173,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":4138,"title":{},"body":{"coverage.html":{}}}],["0/45",{"_index":4171,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":4152,"title":{},"body":{"coverage.html":{}}}],["0/54",{"_index":4176,"title":{},"body":{"coverage.html":{}}}],["0/55",{"_index":4159,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":4154,"title":{},"body":{"coverage.html":{}}}],["0/65",{"_index":4161,"title":{},"body":{"coverage.html":{}}}],["0/67",{"_index":4163,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":4148,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":4150,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":4174,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":2785,"title":{},"body":{"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{}}}],["0x10000",{"_index":2359,"title":{},"body":{"classes/IdGenerator.html":{}}}],["1",{"_index":634,"title":{"classes/DataSubscriber-1.html":{}},"body":{"injectables/ConsoleService.html":{},"classes/DataProcedure.html":{},"components/DisplayComponent.html":{},"classes/FileUtils.html":{},"classes/FlowchartConnectionUtils.html":{},"classes/FlowchartRenderUtils.html":{},"classes/FlowchartUtils.html":{},"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{},"classes/ModuleUtils.html":{},"classes/NodeUtils.html":{},"components/PanelComponent.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{},"classes/ProcedureUtils.html":{},"components/PublishSettingsComponent.html":{},"components/ViewerContainerComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["1.0.0",{"_index":4198,"title":{},"body":{"dependencies.html":{}}}],["1.2.4",{"_index":4204,"title":{},"body":{"dependencies.html":{}}}],["1.3.6",{"_index":4202,"title":{},"body":{"dependencies.html":{}}}],["1.4.1",{"_index":4236,"title":{},"body":{"dependencies.html":{}}}],["1.43.0",{"_index":4201,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":4211,"title":{},"body":{"dependencies.html":{}}}],["1/ln(x",{"_index":1921,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["1/math.log(x",{"_index":1925,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["10",{"_index":1376,"title":{},"body":{"classes/FlowchartRenderUtils.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{},"license.html":{},"overview.html":{}}}],["100",{"_index":1094,"title":{},"body":{"classes/FileUtils.html":{},"components/HelpFundamentals.html":{},"injectables/LayoutService.html":{},"components/SettingComponent.html":{}}}],["1000",{"_index":2090,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["11",{"_index":4483,"title":{},"body":{"license.html":{},"overview.html":{}}}],["120.50",{"_index":2018,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["123",{"_index":1997,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["123.456",{"_index":2050,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["13",{"_index":4678,"title":{},"body":{"license.html":{}}}],["15",{"_index":1378,"title":{},"body":{"classes/FlowchartRenderUtils.html":{},"license.html":{}}}],["16",{"_index":3572,"title":{},"body":{"components/ProcedureEditorComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["17",{"_index":3571,"title":{},"body":{"components/ProcedureEditorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["1996",{"_index":4488,"title":{},"body":{"license.html":{}}}],["1:the",{"_index":2214,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["2",{"_index":635,"title":{},"body":{"injectables/ConsoleService.html":{},"classes/FlowchartUtils.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"classes/ModuleUtils.html":{},"components/ParameterEditorComponent.html":{},"components/ViewerContainerComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["2*this._buff",{"_index":1892,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["2.0.8",{"_index":4210,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":4223,"title":{},"body":{"dependencies.html":{}}}],["2.5.5",{"_index":4206,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":2192,"title":{},"body":{"components/HelpFundamentals.html":{},"license.html":{}}}],["200",{"_index":3432,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["2000",{"_index":2091,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["2007",{"_index":4333,"title":{},"body":{"license.html":{}}}],["28",{"_index":4665,"title":{},"body":{"license.html":{}}}],["280px",{"_index":2823,"title":{},"body":{"components/MobiuscesiumComponent.html":{}}}],["29",{"_index":4331,"title":{},"body":{"license.html":{}}}],["2:the",{"_index":2215,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["3",{"_index":637,"title":{},"body":{"injectables/ConsoleService.html":{},"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"classes/NodeUtils.html":{},"pipes/ShortNamePipe.html":{},"components/ViewerContainerComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"overview.html":{}}}],["3.0.3",{"_index":4224,"title":{},"body":{"dependencies.html":{}}}],["3.4.2",{"_index":4229,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":2193,"title":{},"body":{"components/HelpFundamentals.html":{},"injectables/LayoutService.html":{},"license.html":{}}}],["300",{"_index":3409,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["33",{"_index":2516,"title":{},"body":{"injectables/LayoutService.html":{}}}],["358",{"_index":1633,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["37",{"_index":3566,"title":{},"body":{"components/ProcedureEditorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["38",{"_index":3567,"title":{},"body":{"components/ProcedureEditorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["380px",{"_index":2788,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["3812",{"_index":841,"title":{},"body":{"components/DisplayComponent.html":{}}}],["3845",{"_index":846,"title":{},"body":{"components/DisplayComponent.html":{}}}],["39",{"_index":3568,"title":{},"body":{"components/ProcedureEditorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["395d73",{"_index":1908,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["3:thi",{"_index":2218,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["3d",{"_index":2033,"title":{},"body":{"components/HelpFundamentals.html":{},"components/LandingComponent.html":{},"components/MobiusAbout.html":{}}}],["3d_rotat",{"_index":4121,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["4",{"_index":638,"title":{},"body":{"injectables/ConsoleService.html":{},"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"pipes/SimpleNamePipe.html":{},"components/ViewerContainerComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"overview.html":{}}}],["4.1.2",{"_index":4213,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":4226,"title":{},"body":{"dependencies.html":{}}}],["4.5",{"_index":2088,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["40",{"_index":2194,"title":{},"body":{"components/HelpFundamentals.html":{},"components/ProcedureEditorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["400",{"_index":3429,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["400px",{"_index":3321,"title":{},"body":{"components/ParameterEditorComponent.html":{},"components/PublishSettingsComponent.html":{}}}],["43",{"_index":4741,"title":{},"body":{"overview.html":{}}}],["44",{"_index":895,"title":{},"body":{"components/DisplayComponent.html":{},"overview.html":{}}}],["450px",{"_index":1334,"title":{},"body":{"components/FlowchartControlsComponent.html":{}}}],["456",{"_index":2002,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["46",{"_index":3569,"title":{},"body":{"components/ProcedureEditorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["47",{"_index":2023,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["4:thi",{"_index":2219,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["5",{"_index":640,"title":{},"body":{"injectables/ConsoleService.html":{},"components/HelpFundamentals.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["5.0.0",{"_index":4189,"title":{},"body":{"dependencies.html":{}}}],["5.1.6",{"_index":4195,"title":{},"body":{"dependencies.html":{}}}],["5.2.10",{"_index":4185,"title":{},"body":{"dependencies.html":{}}}],["5.2.5",{"_index":4187,"title":{},"body":{"dependencies.html":{}}}],["5.5.2",{"_index":4227,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1863,"title":{},"body":{"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{}}}],["500",{"_index":1456,"title":{},"body":{"classes/FlowchartRenderUtils.html":{},"injectables/LayoutService.html":{}}}],["500px",{"_index":1332,"title":{},"body":{"components/FlowchartControlsComponent.html":{}}}],["6",{"_index":641,"title":{},"body":{"injectables/ConsoleService.html":{},"components/HelpFundamentals.html":{},"miscellaneous/enumerations.html":{}}}],["6.0.0",{"_index":4200,"title":{},"body":{"dependencies.html":{}}}],["6.7",{"_index":2089,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["60",{"_index":4607,"title":{},"body":{"license.html":{}}}],["600px",{"_index":3322,"title":{},"body":{"components/ParameterEditorComponent.html":{},"components/PublishSettingsComponent.html":{}}}],["67",{"_index":3563,"title":{},"body":{"components/ProcedureEditorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["6b",{"_index":4534,"title":{},"body":{"license.html":{}}}],["6d",{"_index":4542,"title":{},"body":{"license.html":{}}}],["7",{"_index":2514,"title":{},"body":{"injectables/LayoutService.html":{},"license.html":{}}}],["70",{"_index":2515,"title":{},"body":{"injectables/LayoutService.html":{}}}],["8",{"_index":803,"title":{},"body":{"components/DisplayComponent.html":{},"components/FlowchartControlsComponent.html":{}}}],["82.1.0",{"_index":4232,"title":{},"body":{"dependencies.html":{}}}],["86",{"_index":3565,"title":{},"body":{"components/ProcedureEditorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["88",{"_index":3562,"title":{},"body":{"components/ProcedureEditorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["8aa8c0",{"_index":1907,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["9",{"_index":2161,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["_",{"_index":2558,"title":{},"body":{"injectables/LayoutService.html":{},"miscellaneous/variables.html":{}}}],["_active_nod",{"_index":1495,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["_activemod",{"_index":2260,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["_author",{"_index":1139,"title":{},"body":{"classes/Flowchart.html":{},"classes/ModuleUtils.html":{}}}],["_authorcheck",{"_index":2955,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["_buffer",{"_index":1829,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["_c",{"_index":544,"title":{},"body":{"components/CodeViewerComponent.html":{},"injectables/ExecuteService.html":{},"injectables/NodeLibraryService.html":{}}}],["_categori",{"_index":3012,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["_centeri",{"_index":3825,"title":{},"body":{"components/SettingComponent.html":{}}}],["_centers",{"_index":3823,"title":{},"body":{"components/SettingComponent.html":{}}}],["_centersize:numb",{"_index":3908,"title":{},"body":{"components/SettingComponent.html":{}}}],["_centerx",{"_index":3824,"title":{},"body":{"components/SettingComponent.html":{}}}],["_centerx:numb",{"_index":3905,"title":{},"body":{"components/SettingComponent.html":{}}}],["_centery:numb",{"_index":3906,"title":{},"body":{"components/SettingComponent.html":{}}}],["_centerz",{"_index":3826,"title":{},"body":{"components/SettingComponent.html":{}}}],["_centerz:numb",{"_index":3907,"title":{},"body":{"components/SettingComponent.html":{}}}],["_children",{"_index":14,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/Procedure.html":{},"classes/ProcedureUtils.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["_code_gen",{"_index":2730,"title":{},"body":{"injectables/MobiusService.html":{}}}],["_codegener",{"_index":525,"title":{},"body":{"injectables/CodeService.html":{}}}],["_codestr",{"_index":541,"title":{},"body":{"components/CodeViewerComponent.html":{}}}],["_colorpro",{"_index":3810,"title":{},"body":{"components/SelectComponent.html":{}}}],["_comput",{"_index":1055,"title":{},"body":{"classes/FileUtils.html":{},"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["_connect",{"_index":1053,"title":{},"body":{"classes/FileUtils.html":{},"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["_date",{"_index":742,"title":{},"body":{"components/DisplayComponent.html":{}}}],["_default",{"_index":1054,"title":{},"body":{"classes/FileUtils.html":{},"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["_descript",{"_index":1140,"title":{},"body":{"classes/Flowchart.html":{}}}],["_disabl",{"_index":15,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/FileUtils.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/InputPort.html":{},"classes/OutputPort.html":{},"classes/Procedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["_displayed_nod",{"_index":1141,"title":{},"body":{"classes/Flowchart.html":{}}}],["_edg",{"_index":1142,"title":{},"body":{"classes/Flowchart.html":{}}}],["_edit",{"_index":1143,"title":{},"body":{"classes/Flowchart.html":{},"components/ParameterViewerComponent.html":{}}}],["_error",{"_index":16,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/Procedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["_ex",{"_index":3395,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["_executionaddr",{"_index":1104,"title":{},"body":{"classes/FileUtils.html":{},"interfaces/IPort.html":{},"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["_f",{"_index":401,"title":{},"body":{"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/EditorComponent.html":{},"injectables/ExecuteService.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartRenderUtils.html":{},"components/GeometryViewerComponent.html":{},"components/MobiusViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["_flowchart",{"_index":1496,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["_fnobj",{"_index":2461,"title":{},"body":{"injectables/LayoutService.html":{}}}],["_freez",{"_index":914,"title":{},"body":{"components/EditorComponent.html":{}}}],["_global",{"_index":1144,"title":{},"body":{"classes/Flowchart.html":{}}}],["_hascomput",{"_index":1057,"title":{},"body":{"classes/FileUtils.html":{},"interfaces/IPort.html":{},"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["_hasdefault",{"_index":1056,"title":{},"body":{"classes/FileUtils.html":{},"interfaces/IPort.html":{},"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["_hasreturn",{"_index":12,"title":{},"body":{"classes/ActionProcedure.html":{}}}],["_helpobj",{"_index":2928,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["_hue",{"_index":3864,"title":{},"body":{"components/SettingComponent.html":{}}}],["_id",{"_index":17,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/FileUtils.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/InputPort.html":{},"classes/OutputPort.html":{},"classes/Procedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["_imageri",{"_index":743,"title":{},"body":{"components/DisplayComponent.html":{}}}],["_imagerylist",{"_index":744,"title":{},"body":{"components/DisplayComponent.html":{}}}],["_languag",{"_index":465,"title":{},"body":{"classes/CodeGenerator.html":{}}}],["_leftcompon",{"_index":19,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/Procedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["_level",{"_index":20,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/Procedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["_light",{"_index":3862,"title":{},"body":{"components/SettingComponent.html":{}}}],["_linepr",{"_index":3827,"title":{},"body":{"components/SettingComponent.html":{}}}],["_linepre:numb",{"_index":3910,"title":{},"body":{"components/SettingComponent.html":{}}}],["_loadedmodul",{"_index":2261,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["_lsubscript",{"_index":3259,"title":{},"body":{"components/PanelComponent.html":{}}}],["_m",{"_index":953,"title":{},"body":{"injectables/ExecuteService.html":{},"components/FlowchartControlsComponent.html":{},"injectables/FlowchartService.html":{},"components/HelpViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/ParameterViewerComponent.html":{}}}],["_margin",{"_index":1371,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["_mb",{"_index":952,"title":{},"body":{"injectables/ExecuteService.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{}}}],["_mb.process",{"_index":2684,"title":{},"body":{"components/MobiusEditorComponent.html":{}}}],["_mb.statechangedemitter().subscrib",{"_index":2685,"title":{},"body":{"components/MobiusEditorComponent.html":{}}}],["_messag",{"_index":560,"title":{},"body":{"components/ConsoleComponent.html":{},"injectables/ConsoleService.html":{},"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/DisplayComponent.html":{},"components/SelectComponent.html":{}}}],["_modul",{"_index":448,"title":{},"body":{"classes/CodeFactory.html":{},"classes/CodeGenerator.html":{}}}],["_modulelist",{"_index":915,"title":{},"body":{"components/EditorComponent.html":{},"components/ModuleboxComponent.html":{}}}],["_n",{"_index":1428,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["_name",{"_index":1052,"title":{},"body":{"classes/FileUtils.html":{},"classes/Flowchart.html":{},"classes/InputPort.html":{},"classes/ModuleUtils.html":{},"classes/OutputPort.html":{}}}],["_namecheck",{"_index":2949,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["_node",{"_index":1145,"title":{},"body":{"classes/Flowchart.html":{}}}],["_nodex",{"_index":916,"title":{},"body":{"components/EditorComponent.html":{}}}],["_opt",{"_index":1051,"title":{},"body":{"classes/FileUtils.html":{},"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["_origdata",{"_index":1497,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["_outresult",{"_index":4047,"title":{},"body":{"components/TextViewerComponent.html":{}}}],["_parent",{"_index":21,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/Procedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["_pointpr",{"_index":3828,"title":{},"body":{"components/SettingComponent.html":{}}}],["_pointpre:numb",{"_index":3911,"title":{},"body":{"components/SettingComponent.html":{}}}],["_pointsiz",{"_index":3829,"title":{},"body":{"components/SettingComponent.html":{}}}],["_pointsize:numb",{"_index":3912,"title":{},"body":{"components/SettingComponent.html":{}}}],["_port",{"_index":1819,"title":{},"body":{"components/GeometryViewerComponent.html":{}}}],["_portwidth",{"_index":1372,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["_printtoconsol",{"_index":22,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/Procedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["_process",{"_index":126,"title":{},"body":{"injectables/ActiveNodeService.html":{},"injectables/MobiusService.html":{}}}],["_properti",{"_index":3785,"title":{},"body":{"components/SelectComponent.html":{}}}],["_property.nam",{"_index":3813,"title":{},"body":{"components/SelectComponent.html":{}}}],["_property.valu",{"_index":3815,"title":{},"body":{"components/SelectComponent.html":{}}}],["_rightcompon",{"_index":23,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/Procedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["_router",{"_index":2761,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["_satur",{"_index":3861,"title":{},"body":{"components/SettingComponent.html":{}}}],["_savednod",{"_index":3074,"title":{},"body":{"components/NodeLibraryComponent.html":{}}}],["_select",{"_index":24,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/FileUtils.html":{},"classes/Flowchart.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/InputPort.html":{},"classes/OutputPort.html":{},"classes/Procedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["_selectednod",{"_index":1419,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["_selectednode.getnam",{"_index":4076,"title":{},"body":{"components/TextViewerComponent.html":{}}}],["_selectednodeindex",{"_index":1420,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["_selectedportindex",{"_index":1421,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["_shadow",{"_index":745,"title":{},"body":{"components/DisplayComponent.html":{}}}],["_sortord",{"_index":1146,"title":{},"body":{"classes/Flowchart.html":{}}}],["_subscript",{"_index":561,"title":{},"body":{"components/ConsoleComponent.html":{},"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/DisplayComponent.html":{},"components/HelpViewerComponent.html":{},"components/SelectComponent.html":{}}}],["_summari",{"_index":1147,"title":{},"body":{"classes/Flowchart.html":{}}}],["_sun",{"_index":746,"title":{},"body":{"components/DisplayComponent.html":{}}}],["_type",{"_index":25,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/FileUtils.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/InputPort.html":{},"classes/OutputPort.html":{},"classes/Procedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["_url",{"_index":2262,"title":{},"body":{"components/HelpViewerComponent.html":{},"injectables/LayoutService.html":{}}}],["_url\"].indexof(prop",{"_index":2996,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["_user",{"_index":1498,"title":{},"body":{"injectables/FlowchartService.html":{},"injectables/MobiusService.html":{}}}],["_utc",{"_index":747,"title":{},"body":{"components/DisplayComponent.html":{}}}],["_version",{"_index":2927,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["_versioncheck",{"_index":2952,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["a.click",{"_index":441,"title":{},"body":{"components/CesiumViewerComponent.html":{},"classes/FileService.html":{}}}],["a.download",{"_index":440,"title":{},"body":{"components/CesiumViewerComponent.html":{},"classes/FileService.html":{}}}],["a.href",{"_index":439,"title":{},"body":{"components/CesiumViewerComponent.html":{},"classes/FileService.html":{}}}],["a[\"_name\"].tolowercase().localecompare(b[\"_name\"].tolowercas",{"_index":2885,"title":{},"body":{"injectables/ModuleService.html":{}}}],["a_numb",{"_index":2051,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["abil",{"_index":4567,"title":{},"body":{"license.html":{}}}],["about'},{'nam",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["abov",{"_index":1957,"title":{},"body":{"components/HelpFundamentals.html":{},"components/ProcedureEditorComponent.html":{},"license.html":{}}}],["absenc",{"_index":4503,"title":{},"body":{"license.html":{}}}],["absolut",{"_index":1485,"title":{},"body":{"classes/FlowchartRenderUtils.html":{},"license.html":{}}}],["abstract",{"_index":428,"title":{},"body":{"components/CesiumViewerComponent.html":{},"classes/CodeGenerator.html":{},"classes/FileService.html":{},"classes/FileUtils.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartRenderUtils.html":{},"classes/FlowchartWriter.html":{},"classes/IdGenerator.html":{},"classes/NodeUtils.html":{},"classes/Procedure.html":{},"classes/ProcedureUtils.html":{}}}],["abus",{"_index":4386,"title":{},"body":{"license.html":{}}}],["ac",{"_index":297,"title":{},"body":{"modules/AppModule.html":{},"components/CodeViewerComponent.html":{},"dependencies.html":{}}}],["accept",{"_index":4613,"title":{},"body":{"license.html":{}}}],["access",{"_index":2052,"title":{},"body":{"components/HelpFundamentals.html":{},"license.html":{}}}],["accessor",{"_index":79,"title":{},"body":{"classes/ActionProcedure.html":{},"injectables/ActiveNodeService.html":{},"injectables/CodeService.html":{},"classes/Constants.html":{},"classes/Flowchart.html":{},"injectables/FlowchartService.html":{},"injectables/MobiusService.html":{},"injectables/ModuleService.html":{},"injectables/NodeLibraryService.html":{},"classes/Procedure.html":{}}}],["accompani",{"_index":4524,"title":{},"body":{"license.html":{}}}],["accord",{"_index":4502,"title":{},"body":{"license.html":{}}}],["account",{"_index":4281,"title":{},"body":{"index.html":{}}}],["aceeditormodul",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"components/CodeViewerComponent.html":{}}}],["achiev",{"_index":4712,"title":{},"body":{"license.html":{}}}],["acknowledg",{"_index":4460,"title":{},"body":{"license.html":{}}}],["acquir",{"_index":4640,"title":{},"body":{"license.html":{}}}],["act",{"_index":4318,"title":{},"body":{"index.html":{}}}],["action",{"_index":1019,"title":{},"body":{"components/FileLoadDialogComponent.html":{},"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["actionprocedur",{"_index":1,"title":{"classes/ActionProcedure.html":{}},"body":{"classes/ActionProcedure.html":{},"classes/ProcedureFactory.html":{},"coverage.html":{}}}],["actionprocedure(data",{"_index":3644,"title":{},"body":{"classes/ProcedureFactory.html":{}}}],["actionstr",{"_index":3557,"title":{},"body":{"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{}}}],["activ",{"_index":3192,"title":{},"body":{"classes/NodeUtils.html":{},"components/ProcedureEditorComponent.html":{},"index.html":{},"license.html":{}}}],["activatedrout",{"_index":2759,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["active_nod",{"_index":1427,"title":{},"body":{"classes/FlowchartRenderUtils.html":{},"components/ModuleboxComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["active_node.inputs.length",{"_index":3330,"title":{},"body":{"components/ParameterEditorComponent.html":{}}}],["active_node.outputs.length",{"_index":3331,"title":{},"body":{"components/ParameterEditorComponent.html":{}}}],["active_node?.nam",{"_index":3293,"title":{},"body":{"components/PanelComponent.html":{}}}],["active_node?.procedure.length",{"_index":3636,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["active_procedur",{"_index":2325,"title":{},"body":{"interfaces/IGraphNode.html":{},"classes/NodeUtils.html":{},"components/ProcedureItemComponent.html":{}}}],["active_procedure.haschildren",{"_index":3203,"title":{},"body":{"classes/NodeUtils.html":{}}}],["active_procedure.par",{"_index":3205,"title":{},"body":{"classes/NodeUtils.html":{}}}],["active_procedure.typ",{"_index":3199,"title":{},"body":{"classes/NodeUtils.html":{}}}],["active_view",{"_index":3260,"title":{},"body":{"components/PanelComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["activenodeservic",{"_index":122,"title":{"injectables/ActiveNodeService.html":{}},"body":{"injectables/ActiveNodeService.html":{},"coverage.html":{}}}],["actual",{"_index":1959,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"injectables/ModuleService.html":{},"index.html":{},"license.html":{}}}],["actual_compon",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["ad",{"_index":1355,"title":{},"body":{"classes/FlowchartReader.html":{},"injectables/FlowchartService.html":{},"components/MobiusAbout.html":{},"classes/NodeUtils.html":{},"classes/ProcedureUtils.html":{},"index.html":{},"license.html":{}}}],["adapt",{"_index":4409,"title":{},"body":{"license.html":{}}}],["add",{"_index":1311,"title":{},"body":{"components/FlowchartControlsComponent.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartUtils.html":{},"components/HelpFundamentals.html":{},"classes/IfElseControlProcedure.html":{},"components/MobiusAbout.html":{},"injectables/ModuleService.html":{},"components/ModuleboxComponent.html":{},"classes/NodeUtils.html":{},"classes/ProcedureUtils.html":{},"components/PublishSettingsComponent.html":{},"classes/StatementProcedure.html":{},"index.html":{},"license.html":{}}}],["add_child",{"_index":3700,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["add_child(procedur",{"_index":3706,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["add_child_at_posit",{"_index":3701,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["add_child_at_position(procedur",{"_index":3708,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["add_child_from_data",{"_index":3702,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["add_child_from_data(procedur",{"_index":3710,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["add_edg",{"_index":1579,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["add_edge(flowchart",{"_index":1587,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["add_file_to_memori",{"_index":1039,"title":{},"body":{"classes/FileUtils.html":{}}}],["add_file_to_memory(valu",{"_index":1042,"title":{},"body":{"classes/FileUtils.html":{}}}],["add_nod",{"_index":1275,"title":{},"body":{"components/FlowchartControlsComponent.html":{},"classes/FlowchartUtils.html":{},"index.html":{}}}],["add_node(flowchart",{"_index":1589,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["add_port",{"_index":3128,"title":{},"body":{"classes/NodeUtils.html":{}}}],["add_port(nod",{"_index":3137,"title":{},"body":{"classes/NodeUtils.html":{}}}],["add_procedur",{"_index":3129,"title":{},"body":{"classes/NodeUtils.html":{}}}],["add_procedure(nod",{"_index":3139,"title":{},"body":{"classes/NodeUtils.html":{}}}],["add_procedure_at_posit",{"_index":3130,"title":{},"body":{"classes/NodeUtils.html":{}}}],["add_procedure_at_position(nod",{"_index":3141,"title":{},"body":{"classes/NodeUtils.html":{}}}],["addactionprocedur",{"_index":3016,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["addactionprocedure(fn",{"_index":3021,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["addchild(prod",{"_index":2387,"title":{},"body":{"classes/IfElseControlProcedure.html":{}}}],["addedg",{"_index":1501,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["addedge(outputaddress",{"_index":1514,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["addfunctiontoprocedur",{"_index":3297,"title":{},"body":{"components/ParameterEditorComponent.html":{}}}],["addfunctiontoprocedure(inp",{"_index":3301,"title":{},"body":{"components/ParameterEditorComponent.html":{}}}],["addglob",{"_index":3753,"title":{},"body":{"components/PublishSettingsComponent.html":{}}}],["addit",{"_index":2163,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"classes/ProcedureUtils.html":{},"license.html":{}}}],["addmessag",{"_index":599,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["addmessage(messag",{"_index":608,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["addnod",{"_index":3075,"title":{},"body":{"components/NodeLibraryComponent.html":{}}}],["addnode($ev",{"_index":3081,"title":{},"body":{"components/NodeLibraryComponent.html":{}}}],["addport",{"_index":3017,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["addport(port_typ",{"_index":3023,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["addprocedur",{"_index":3018,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["addprocedure($ev",{"_index":3026,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["address",{"_index":1657,"title":{},"body":{"classes/FlowchartUtils.html":{},"license.html":{}}}],["adopt",{"_index":4486,"title":{},"body":{"license.html":{}}}],["advers",{"_index":4570,"title":{},"body":{"license.html":{}}}],["advis",{"_index":4703,"title":{},"body":{"license.html":{}}}],["affect",{"_index":2129,"title":{},"body":{"components/HelpFundamentals.html":{},"license.html":{}}}],["affero",{"_index":4677,"title":{},"body":{"license.html":{}}}],["affirm",{"_index":4457,"title":{},"body":{"license.html":{}}}],["afterviewinit",{"_index":2753,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["again",{"_index":1450,"title":{},"body":{"classes/FlowchartRenderUtils.html":{},"components/HelpFundamentals.html":{}}}],["against",{"_index":4497,"title":{},"body":{"license.html":{}}}],["aggreg",{"_index":4516,"title":{},"body":{"license.html":{}}}],["agre",{"_index":4675,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":4644,"title":{},"body":{"license.html":{}}}],["aim",{"_index":4383,"title":{},"body":{"license.html":{}}}],["akm",{"_index":1542,"title":{},"body":{"injectables/FlowchartService.html":{},"classes/Frame.html":{},"interfaces/HasIsPlanar.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"classes/gis_module.html":{}}}],["akshata",{"_index":2078,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["alert(\"cannot",{"_index":2389,"title":{},"body":{"classes/IfElseControlProcedure.html":{}}}],["alert(\"oop",{"_index":2689,"title":{},"body":{"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{},"components/ModuleboxComponent.html":{}}}],["alert(\"oops...error",{"_index":3249,"title":{},"body":{"classes/NodeUtils.html":{}}}],["alert(\"slid",{"_index":3367,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["alert(\"to",{"_index":2556,"title":{},"body":{"injectables/LayoutService.html":{}}}],["alert(typ",{"_index":3454,"title":{},"body":{"pipes/PortTypePipe.html":{}}}],["alight",{"_index":3830,"title":{},"body":{"components/SettingComponent.html":{}}}],["alight:three.hemispherelight",{"_index":3900,"title":{},"body":{"components/SettingComponent.html":{}}}],["all_fil",{"_index":2715,"title":{},"body":{"components/MobiusGalleryComponent.html":{}}}],["all_files.length",{"_index":2725,"title":{},"body":{"components/MobiusGalleryComponent.html":{}}}],["alldoc",{"_index":2274,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["alleg",{"_index":4634,"title":{},"body":{"license.html":{}}}],["allmodul",{"_index":2856,"title":{},"body":{"injectables/ModuleService.html":{},"injectables/NodeLibraryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["allow",{"_index":2015,"title":{},"body":{"components/HelpFundamentals.html":{},"components/LandingComponent.html":{},"components/MobiusAbout.html":{},"components/ModuleboxComponent.html":{},"index.html":{},"license.html":{}}}],["alon",{"_index":1984,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["along",{"_index":4504,"title":{},"body":{"license.html":{}}}],["alreadi",{"_index":1665,"title":{},"body":{"classes/FlowchartUtils.html":{},"components/HelpFundamentals.html":{},"license.html":{}}}],["altern",{"_index":4530,"title":{},"body":{"license.html":{}}}],["although",{"_index":4380,"title":{},"body":{"license.html":{}}}],["alway",{"_index":4314,"title":{},"body":{"index.html":{}}}],["analys",{"_index":2211,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["ancillari",{"_index":4614,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":4372,"title":{},"body":{"license.html":{}}}],["andshow",{"_index":4728,"title":{},"body":{"license.html":{}}}],["angular",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomMaterialModule.html":{},"modules/GSViewer.html":{},"modules/MobiusCesium.html":{},"components/SettingComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/anim",{"_index":2782,"title":{},"body":{"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":4186,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":579,"title":{},"body":{"components/ConsoleComponent.html":{},"classes/FlowchartRenderUtils.html":{},"modules/GSViewer.html":{},"modules/MobiusCesium.html":{},"components/MobiusViewerComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"injectables/FlowchartService.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{}}}],["angular/compil",{"_index":4188,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":139,"title":{},"body":{"injectables/ActiveNodeService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"injectables/CodeService.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"injectables/ConsoleService.html":{},"modules/CustomMaterialModule.html":{},"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"injectables/ExecuteService.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"modules/GSViewer.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"injectables/LayoutService.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"modules/MobiusCesium.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"injectables/MobiusService.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"injectables/ModuleService.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"injectables/NodeLibraryService.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"pipes/PortTypePipe.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"modules/MobiusCesium.html":{},"dependencies.html":{}}}],["angular/materi",{"_index":700,"title":{},"body":{"modules/CustomMaterialModule.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"injectables/FlowchartService.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/PublishSettingsComponent.html":{},"dependencies.html":{}}}],["angular/material/expans",{"_index":1794,"title":{},"body":{"modules/GSViewer.html":{}}}],["angular/material/menu",{"_index":1296,"title":{},"body":{"components/FlowchartControlsComponent.html":{},"components/MenuComponent.html":{}}}],["angular/material/slid",{"_index":1788,"title":{},"body":{"modules/GSViewer.html":{},"modules/MobiusCesium.html":{}}}],["angular/material/sort",{"_index":1799,"title":{},"body":{"modules/GSViewer.html":{}}}],["angular/material/tab",{"_index":1796,"title":{},"body":{"modules/GSViewer.html":{},"modules/MobiusCesium.html":{}}}],["angular/material/tooltip",{"_index":1295,"title":{},"body":{"components/FlowchartControlsComponent.html":{},"modules/GSViewer.html":{},"modules/MobiusCesium.html":{}}}],["angular/platform",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomMaterialModule.html":{},"modules/GSViewer.html":{},"components/HelpViewerComponent.html":{},"modules/MobiusCesium.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"components/MobiusViewerComponent.html":{},"dependencies.html":{}}}],["angularsplitmodul",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"modules/GSViewer.html":{},"modules/MobiusCesium.html":{},"components/SettingComponent.html":{}}}],["anim",{"_index":2780,"title":{},"body":{"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{}}}],["animate(\"3",{"_index":2793,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["animate('300m",{"_index":2791,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["animate(300",{"_index":2827,"title":{},"body":{"components/MobiuscesiumComponent.html":{}}}],["animation_st",{"_index":2835,"title":{},"body":{"components/MobiuscesiumComponent.html":{}}}],["annoy",{"_index":2228,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["anomali",{"_index":4312,"title":{},"body":{"index.html":{}}}],["anoth",{"_index":2826,"title":{},"body":{"components/MobiuscesiumComponent.html":{}}}],["answer",{"_index":2136,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["anti",{"_index":4474,"title":{},"body":{"license.html":{}}}],["anyon",{"_index":4506,"title":{},"body":{"license.html":{}}}],["anyth",{"_index":2224,"title":{},"body":{"components/HelpFundamentals.html":{},"license.html":{}}}],["app",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartRenderUtils.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"index.html":{}}}],["app.compon",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["app_panel",{"_index":4288,"title":{},"body":{"index.html":{}}}],["appcompon",{"_index":147,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":2639,"title":{},"body":{"components/MobiusAbout.html":{}}}],["append",{"_index":4028,"title":{},"body":{"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{}}}],["appli",{"_index":2457,"title":{},"body":{"components/LandingComponent.html":{},"license.html":{}}}],["applic",{"_index":2439,"title":{},"body":{"components/LandingComponent.html":{},"components/MobiusAbout.html":{},"license.html":{}}}],["application/json",{"_index":425,"title":{},"body":{"components/CesiumViewerComponent.html":{},"classes/FileService.html":{}}}],["appmodul",{"_index":249,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approach",{"_index":2103,"title":{},"body":{"components/HelpFundamentals.html":{},"index.html":{}}}],["appropri",{"_index":4426,"title":{},"body":{"license.html":{}}}],["approut",{"_index":380,"title":{},"body":{"modules/AppModule.html":{}}}],["approxim",{"_index":4706,"title":{},"body":{"license.html":{}}}],["architectur",{"_index":2446,"title":{},"body":{"components/LandingComponent.html":{}}}],["area",{"_index":4387,"title":{},"body":{"license.html":{}}}],["argument",{"_index":1638,"title":{},"body":{"classes/FlowchartUtils.html":{},"components/HelpFundamentals.html":{},"components/ProcedureEditorComponent.html":{}}}],["aris",{"_index":4391,"title":{},"body":{"license.html":{}}}],["arithmet",{"_index":2157,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["around",{"_index":2122,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["arr",{"_index":1188,"title":{},"body":{"classes/Flowchart.html":{},"miscellaneous/enumerations.html":{}}}],["arrang",{"_index":4651,"title":{},"body":{"license.html":{}}}],["array",{"_index":963,"title":{},"body":{"injectables/ExecuteService.html":{},"classes/FlowchartUtils.html":{},"interfaces/IComponent.html":{},"components/TextViewerComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["array.isarray(val[k",{"_index":4071,"title":{},"body":{"components/TextViewerComponent.html":{}}}],["array_nam",{"_index":1718,"title":{},"body":{"classes/ForLoopControlProcedure.html":{}}}],["arrya",{"_index":1660,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["articl",{"_index":4482,"title":{},"body":{"license.html":{}}}],["ask",{"_index":2205,"title":{},"body":{"components/HelpFundamentals.html":{},"index.html":{},"license.html":{}}}],["aspect_ratio",{"_index":3294,"title":{},"body":{"components/PanelComponent.html":{}}}],["assert",{"_index":4368,"title":{},"body":{"license.html":{}}}],["asset",{"_index":4619,"title":{},"body":{"license.html":{}}}],["assetid",{"_index":840,"title":{},"body":{"components/DisplayComponent.html":{}}}],["assets/modules/allmodul",{"_index":2858,"title":{},"body":{"injectables/ModuleService.html":{},"injectables/NodeLibraryService.html":{}}}],["assign",{"_index":1083,"title":{},"body":{"classes/FileUtils.html":{},"classes/FlowchartRenderUtils.html":{},"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{}}}],["assignment.vari",{"_index":2249,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["associ",{"_index":2589,"title":{},"body":{"components/MobiusAbout.html":{},"index.html":{},"license.html":{}}}],["assum",{"_index":1981,"title":{},"body":{"components/HelpFundamentals.html":{},"license.html":{}}}],["assumpt",{"_index":4593,"title":{},"body":{"license.html":{}}}],["assur",{"_index":4402,"title":{},"body":{"license.html":{}}}],["asyncpip",{"_index":2774,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["attach",{"_index":2594,"title":{},"body":{"components/MobiusAbout.html":{},"license.html":{}}}],["attempt",{"_index":4600,"title":{},"body":{"license.html":{}}}],["attent",{"_index":2185,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["attribut",{"_index":4376,"title":{},"body":{"license.html":{}}}],["attributes.component.css",{"_index":3783,"title":{},"body":{"components/SelectComponent.html":{}}}],["attributes.component.html",{"_index":3784,"title":{},"body":{"components/SelectComponent.html":{}}}],["author",{"_index":1164,"title":{},"body":{"classes/Flowchart.html":{},"classes/Frame.html":{},"interfaces/HasIsPlanar.html":{},"interfaces/IFlowchart.html":{},"interfaces/IModule.html":{},"classes/Module.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"classes/gis_module.html":{},"license.html":{}}}],["author(valu",{"_index":1226,"title":{},"body":{"classes/Flowchart.html":{}}}],["autom",{"_index":2440,"title":{},"body":{"components/LandingComponent.html":{}}}],["automat",{"_index":2650,"title":{},"body":{"components/MobiusAbout.html":{},"license.html":{}}}],["automation/mobiu",{"_index":678,"title":{},"body":{"classes/Constants.html":{}}}],["avail",{"_index":1825,"title":{},"body":{"components/GeometryViewerComponent.html":{},"components/HelpFundamentals.html":{},"components/TextViewerComponent.html":{},"index.html":{},"license.html":{},"modules.html":{}}}],["avoid",{"_index":1976,"title":{},"body":{"components/HelpFundamentals.html":{},"classes/ModuleUtils.html":{},"components/SettingComponent.html":{},"license.html":{}}}],["away",{"_index":4345,"title":{},"body":{"license.html":{}}}],["axi",{"_index":3989,"title":{},"body":{"components/SettingComponent.html":{}}}],["axisvis",{"_index":3831,"title":{},"body":{"components/SettingComponent.html":{}}}],["b",{"_index":2134,"title":{},"body":{"components/HelpFundamentals.html":{},"injectables/ModuleService.html":{},"components/SettingComponent.html":{},"license.html":{}}}],["backeground",{"_index":4021,"title":{},"body":{"components/SettingComponent.html":{}}}],["background",{"_index":834,"title":{},"body":{"components/DisplayComponent.html":{},"components/MobiusViewerComponent.html":{}}}],["bad",{"_index":3723,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["base",{"_index":409,"title":{},"body":{"components/CesiumViewerComponent.html":{},"injectables/CodeService.html":{},"components/EditorComponent.html":{},"injectables/ExecuteService.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"components/GeometryViewerComponent.html":{},"components/HelpFundamentals.html":{},"injectables/LayoutService.html":{},"components/MobiusAbout.html":{},"injectables/MobiusService.html":{},"injectables/ModuleService.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"injectables/NodeLibraryService.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"pipes/PortTypePipe.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"index.html":{},"license.html":{}}}],["basic",{"_index":1993,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"license.html":{}}}],["be",{"_index":2139,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"classes/NodeUtils.html":{},"classes/Procedure.html":{},"index.html":{},"license.html":{}}}],["beautifi",{"_index":549,"title":{},"body":{"components/CodeViewerComponent.html":{},"components/TextViewerComponent.html":{},"dependencies.html":{}}}],["becom",{"_index":2178,"title":{},"body":{"components/HelpFundamentals.html":{},"components/ProcedureEditorComponent.html":{}}}],["befor",{"_index":4108,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["behalf",{"_index":4469,"title":{},"body":{"license.html":{}}}],["behav",{"_index":2613,"title":{},"body":{"components/MobiusAbout.html":{}}}],["behaviorsubject",{"_index":1555,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["behaviorsubject(this._active_nod",{"_index":1551,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["behaviorsubject(this._flowchart",{"_index":1546,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["behaviour",{"_index":1990,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["believ",{"_index":4657,"title":{},"body":{"license.html":{}}}],["below",{"_index":2021,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"license.html":{}}}],["benefit",{"_index":4654,"title":{},"body":{"license.html":{}}}],["best",{"_index":4711,"title":{},"body":{"license.html":{}}}],["better",{"_index":1453,"title":{},"body":{"classes/FlowchartRenderUtils.html":{},"components/HelpFundamentals.html":{},"index.html":{}}}],["between",{"_index":650,"title":{},"body":{"injectables/ConsoleService.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartUtils.html":{},"components/MobiusAbout.html":{},"license.html":{}}}],["beyond",{"_index":4518,"title":{},"body":{"license.html":{}}}],["blackmarbl",{"_index":826,"title":{},"body":{"components/DisplayComponent.html":{}}}],["blank",{"_index":4323,"title":{},"body":{"index.html":{}}}],["blob",{"_index":423,"title":{},"body":{"components/CesiumViewerComponent.html":{},"classes/FileService.html":{}}}],["blob([filestr",{"_index":424,"title":{},"body":{"components/CesiumViewerComponent.html":{},"classes/FileService.html":{}}}],["block",{"_index":2039,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["blue",{"_index":2787,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["bodi",{"_index":4439,"title":{},"body":{"license.html":{}}}],["book",{"_index":2048,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["boolean",{"_index":44,"title":{},"body":{"classes/ActionProcedure.html":{},"injectables/ActiveNodeService.html":{},"classes/CodeGenerator.html":{},"injectables/ConsoleService.html":{},"classes/DataProcedure.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/FileUtils.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartRenderUtils.html":{},"classes/ForLoopControlProcedure.html":{},"classes/Frame.html":{},"classes/FunctionProcedure.html":{},"components/GSViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"interfaces/HasIsPlanar.html":{},"components/HelpFundamentals.html":{},"components/HelpViewerComponent.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IComponent.html":{},"interfaces/IGraphNode.html":{},"interfaces/IPort.html":{},"interfaces/IProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/InputPort.html":{},"injectables/LayoutService.html":{},"components/MobiusEditorComponent.html":{},"injectables/MobiusService.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"classes/ModuleUtils.html":{},"components/ModuleboxComponent.html":{},"classes/NodeUtils.html":{},"classes/OutputPort.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterViewerComponent.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"classes/Procedure.html":{},"components/SettingComponent.html":{},"classes/StatementProcedure.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"classes/WhileControlProcedure.html":{},"classes/gis_module.html":{}}}],["boolean(this.edg",{"_index":1896,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["bootstrap",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"modules/GSViewer.html":{},"modules/MobiusCesium.html":{},"overview.html":{}}}],["both",{"_index":2166,"title":{},"body":{"components/HelpFundamentals.html":{},"license.html":{}}}],["bottom",{"_index":1987,"title":{},"body":{"components/HelpFundamentals.html":{},"injectables/LayoutService.html":{},"index.html":{}}}],["box",{"_index":1329,"title":{},"body":{"components/FlowchartControlsComponent.html":{},"license.html":{}}}],["bracket",{"_index":2054,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["break",{"_index":1115,"title":{},"body":{"classes/FileUtils.html":{},"classes/FlowchartUtils.html":{},"classes/ModuleUtils.html":{},"components/ModuleboxComponent.html":{},"classes/NodeUtils.html":{},"pipes/PortTypePipe.html":{},"components/ProcedureEditorComponent.html":{},"classes/StatementProcedure.html":{},"components/ViewerContainerComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["brief",{"_index":4717,"title":{},"body":{"license.html":{}}}],["brows",{"_index":4739,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"modules/GSViewer.html":{},"components/HelpViewerComponent.html":{},"components/LandingComponent.html":{},"components/MobiusAbout.html":{},"modules/MobiusCesium.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomMaterialModule.html":{},"modules/GSViewer.html":{},"modules/MobiusCesium.html":{}}}],["browseranimationsmodul",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomMaterialModule.html":{},"modules/GSViewer.html":{},"modules/MobiusCesium.html":{}}}],["browsermodul",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"modules/GSViewer.html":{},"modules/MobiusCesium.html":{}}}],["brw",{"_index":2698,"title":{},"body":{"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{}}}],["build",{"_index":2451,"title":{},"body":{"components/LandingComponent.html":{}}}],["built",{"_index":2634,"title":{},"body":{"components/MobiusAbout.html":{},"index.html":{}}}],["busi",{"_index":4661,"title":{},"body":{"license.html":{}}}],["button",{"_index":2591,"title":{},"body":{"components/MobiusAbout.html":{},"index.html":{}}}],["byxypoint",{"_index":1747,"title":{},"body":{"classes/Frame.html":{},"interfaces/HasIsPlanar.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"classes/gis_module.html":{}}}],["c",{"_index":2213,"title":{},"body":{"components/HelpFundamentals.html":{},"license.html":{}}}],["cach",{"_index":1693,"title":{},"body":{"classes/FlowchartUtils.html":{},"components/MobiusAbout.html":{}}}],["calcul",{"_index":2242,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["call",{"_index":1122,"title":{},"body":{"classes/FileUtils.html":{},"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"classes/NodeUtils.html":{},"license.html":{}}}],["can't",{"_index":3202,"title":{},"body":{"classes/NodeUtils.html":{}}}],["canva",{"_index":1830,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["canvas.getcontext('2d",{"_index":1875,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["canvas.height",{"_index":1902,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["canvas.width",{"_index":1901,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["capabl",{"_index":4303,"title":{},"body":{"index.html":{}}}],["captur",{"_index":1980,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["care",{"_index":2612,"title":{},"body":{"components/MobiusAbout.html":{},"classes/Procedure.html":{}}}],["carri",{"_index":4505,"title":{},"body":{"license.html":{}}}],["case",{"_index":1111,"title":{},"body":{"classes/FileUtils.html":{},"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"components/ModuleboxComponent.html":{},"pipes/PortTypePipe.html":{},"components/ProcedureEditorComponent.html":{},"classes/ProcedureFactory.html":{},"components/ViewerContainerComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["cat.replace(\"_",{"_index":3068,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["catch",{"_index":2231,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["catch(err",{"_index":590,"title":{},"body":{"components/ConsoleComponent.html":{},"classes/NodeUtils.html":{}}}],["catch(ex",{"_index":666,"title":{},"body":{"injectables/ConsoleService.html":{},"injectables/ExecuteService.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"components/GSViewerComponent.html":{},"components/HelpViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"classes/NodeUtils.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"classes/ProcedureUtils.html":{},"components/TextViewerComponent.html":{}}}],["catcherror",{"_index":2719,"title":{},"body":{"components/MobiusGalleryComponent.html":{}}}],["categori",{"_index":99,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"interfaces/IComponent.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"components/ModuleboxComponent.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["caus",{"_index":3412,"title":{},"body":{"components/ParameterViewerComponent.html":{},"license.html":{}}}],["ceas",{"_index":4602,"title":{},"body":{"license.html":{}}}],["center",{"_index":3991,"title":{},"body":{"components/SettingComponent.html":{}}}],["centeri",{"_index":3853,"title":{},"body":{"components/SettingComponent.html":{}}}],["centers",{"_index":3855,"title":{},"body":{"components/SettingComponent.html":{}}}],["centerx",{"_index":3857,"title":{},"body":{"components/SettingComponent.html":{}}}],["centerz",{"_index":3854,"title":{},"body":{"components/SettingComponent.html":{}}}],["certain",{"_index":2203,"title":{},"body":{"components/HelpFundamentals.html":{},"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{},"license.html":{}}}],["cesium",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"pipes/PortTypePipe.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["cesium'},{'nam",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["cesium.buildmoduleurl(\"assets/textures/naturalearthii",{"_index":844,"title":{},"body":{"components/DisplayComponent.html":{}}}],["cesium.color.gray",{"_index":824,"title":{},"body":{"components/DisplayComponent.html":{}}}],["cesium.compon",{"_index":2659,"title":{},"body":{"modules/MobiusCesium.html":{}}}],["cesium.component.html",{"_index":2810,"title":{},"body":{"components/MobiuscesiumComponent.html":{}}}],["cesium.component.scss",{"_index":2809,"title":{},"body":{"components/MobiuscesiumComponent.html":{}}}],["cesium.component.t",{"_index":2808,"title":{},"body":{"components/MobiuscesiumComponent.html":{},"coverage.html":{}}}],["cesium.component.ts:25",{"_index":2814,"title":{},"body":{"components/MobiuscesiumComponent.html":{}}}],["cesium.component.ts:26",{"_index":2815,"title":{},"body":{"components/MobiuscesiumComponent.html":{}}}],["cesium.component.ts:27",{"_index":2813,"title":{},"body":{"components/MobiuscesiumComponent.html":{}}}],["cesium.component.ts:32",{"_index":2818,"title":{},"body":{"components/MobiuscesiumComponent.html":{}}}],["cesium.component.ts:43",{"_index":2817,"title":{},"body":{"components/MobiuscesiumComponent.html":{}}}],["cesium.component.ts:50",{"_index":2816,"title":{},"body":{"components/MobiuscesiumComponent.html":{}}}],["cesium.component.ts:57",{"_index":2820,"title":{},"body":{"components/MobiuscesiumComponent.html":{}}}],["cesium.component.ts:58",{"_index":2819,"title":{},"body":{"components/MobiuscesiumComponent.html":{}}}],["cesium.ionimageryprovid",{"_index":839,"title":{},"body":{"components/DisplayComponent.html":{}}}],["cesium.juliand",{"_index":886,"title":{},"body":{"components/DisplayComponent.html":{}}}],["cesium.juliandate.addhours(datetime,8,juliandt",{"_index":887,"title":{},"body":{"components/DisplayComponent.html":{}}}],["cesium.juliandate.addhours(now,this._utc,now",{"_index":866,"title":{},"body":{"components/DisplayComponent.html":{}}}],["cesium.juliandate.fromiso8601(this._d",{"_index":861,"title":{},"body":{"components/DisplayComponent.html":{}}}],["cesium.juliandate.togregoriandate(juliandt",{"_index":889,"title":{},"body":{"components/DisplayComponent.html":{}}}],["cesium.modul",{"_index":356,"title":{},"body":{"modules/AppModule.html":{}}}],["cesium.module.t",{"_index":2657,"title":{},"body":{"modules/MobiusCesium.html":{}}}],["cesium.shadowmode.en",{"_index":849,"title":{},"body":{"components/DisplayComponent.html":{}}}],["cesium.sprintf(\"%02d:%02d:%02d",{"_index":904,"title":{},"body":{"components/DisplayComponent.html":{}}}],["cesium/data/data.service.t",{"_index":4164,"title":{},"body":{"coverage.html":{}}}],["cesium/data/datasubscriber.t",{"_index":717,"title":{},"body":{"classes/DataSubscriber.html":{},"coverage.html":{}}}],["cesium/data/datasubscriber.ts:19",{"_index":724,"title":{},"body":{"classes/DataSubscriber.html":{}}}],["cesium/data/datasubscriber.ts:7",{"_index":722,"title":{},"body":{"classes/DataSubscriber.html":{}}}],["cesium/data/datasubscriber.ts:8",{"_index":721,"title":{},"body":{"classes/DataSubscriber.html":{}}}],["cesium/data/datasubscriber.ts:9",{"_index":720,"title":{},"body":{"classes/DataSubscriber.html":{}}}],["cesium/mobiu",{"_index":355,"title":{},"body":{"modules/AppModule.html":{},"modules/MobiusCesium.html":{},"components/MobiuscesiumComponent.html":{},"coverage.html":{}}}],["cesium/setting/attributes.copmponent.t",{"_index":3782,"title":{},"body":{"components/SelectComponent.html":{},"coverage.html":{}}}],["cesium/setting/attributes.copmponent.ts:13",{"_index":3795,"title":{},"body":{"components/SelectComponent.html":{}}}],["cesium/setting/attributes.copmponent.ts:14",{"_index":3791,"title":{},"body":{"components/SelectComponent.html":{}}}],["cesium/setting/attributes.copmponent.ts:15",{"_index":3794,"title":{},"body":{"components/SelectComponent.html":{}}}],["cesium/setting/attributes.copmponent.ts:16",{"_index":3796,"title":{},"body":{"components/SelectComponent.html":{}}}],["cesium/setting/attributes.copmponent.ts:17",{"_index":3792,"title":{},"body":{"components/SelectComponent.html":{}}}],["cesium/setting/attributes.copmponent.ts:18",{"_index":3793,"title":{},"body":{"components/SelectComponent.html":{}}}],["cesium/setting/attributes.copmponent.ts:19",{"_index":3787,"title":{},"body":{"components/SelectComponent.html":{}}}],["cesium/setting/attributes.copmponent.ts:24",{"_index":3789,"title":{},"body":{"components/SelectComponent.html":{}}}],["cesium/setting/attributes.copmponent.ts:30",{"_index":3790,"title":{},"body":{"components/SelectComponent.html":{}}}],["cesium/setting/attributes.copmponent.ts:38",{"_index":3788,"title":{},"body":{"components/SelectComponent.html":{}}}],["cesium/setting/display.copmponent.t",{"_index":738,"title":{},"body":{"components/DisplayComponent.html":{},"coverage.html":{}}}],["cesium/setting/display.copmponent.ts:107",{"_index":757,"title":{},"body":{"components/DisplayComponent.html":{}}}],["cesium/setting/display.copmponent.ts:121",{"_index":756,"title":{},"body":{"components/DisplayComponent.html":{}}}],["cesium/setting/display.copmponent.ts:13",{"_index":770,"title":{},"body":{"components/DisplayComponent.html":{}}}],["cesium/setting/display.copmponent.ts:14",{"_index":768,"title":{},"body":{"components/DisplayComponent.html":{}}}],["cesium/setting/display.copmponent.ts:141",{"_index":755,"title":{},"body":{"components/DisplayComponent.html":{}}}],["cesium/setting/display.copmponent.ts:15",{"_index":769,"title":{},"body":{"components/DisplayComponent.html":{}}}],["cesium/setting/display.copmponent.ts:16",{"_index":765,"title":{},"body":{"components/DisplayComponent.html":{}}}],["cesium/setting/display.copmponent.ts:17",{"_index":764,"title":{},"body":{"components/DisplayComponent.html":{}}}],["cesium/setting/display.copmponent.ts:18",{"_index":767,"title":{},"body":{"components/DisplayComponent.html":{}}}],["cesium/setting/display.copmponent.ts:19",{"_index":766,"title":{},"body":{"components/DisplayComponent.html":{}}}],["cesium/setting/display.copmponent.ts:20",{"_index":763,"title":{},"body":{"components/DisplayComponent.html":{}}}],["cesium/setting/display.copmponent.ts:21",{"_index":753,"title":{},"body":{"components/DisplayComponent.html":{}}}],["cesium/setting/display.copmponent.ts:26",{"_index":758,"title":{},"body":{"components/DisplayComponent.html":{}}}],["cesium/setting/display.copmponent.ts:60",{"_index":759,"title":{},"body":{"components/DisplayComponent.html":{}}}],["cesium/setting/display.copmponent.ts:62",{"_index":761,"title":{},"body":{"components/DisplayComponent.html":{}}}],["cesium/setting/publish.component.t",{"_index":4167,"title":{},"body":{"coverage.html":{}}}],["cesium/setting/setting.component.t",{"_index":4169,"title":{},"body":{"coverage.html":{}}}],["cesium/setting/visualise.component.t",{"_index":4170,"title":{},"body":{"coverage.html":{}}}],["cesium/viewer/viewer.component.t",{"_index":4172,"title":{},"body":{"coverage.html":{}}}],["cesiumviewercompon",{"_index":168,"title":{"components/CesiumViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["cessat",{"_index":4608,"title":{},"body":{"license.html":{}}}],["cg",{"_index":2743,"title":{},"body":{"injectables/MobiusService.html":{}}}],["chain",{"_index":2593,"title":{},"body":{"components/MobiusAbout.html":{}}}],["chang",{"_index":1988,"title":{},"body":{"components/HelpFundamentals.html":{},"injectables/LayoutService.html":{},"components/MobiusAbout.html":{},"components/MobiuscesiumComponent.html":{},"components/ProcedureEditorComponent.html":{},"index.html":{},"license.html":{}}}],["changeaxi",{"_index":3841,"title":{},"body":{"components/SettingComponent.html":{}}}],["changecent",{"_index":3842,"title":{},"body":{"components/SettingComponent.html":{}}}],["changecenter(centerx",{"_index":3852,"title":{},"body":{"components/SettingComponent.html":{}}}],["changecenter(centerx,centery,centerz,centers",{"_index":3968,"title":{},"body":{"components/SettingComponent.html":{}}}],["changed",{"_index":749,"title":{},"body":{"components/DisplayComponent.html":{}}}],["changedate(_d",{"_index":754,"title":{},"body":{"components/DisplayComponent.html":{}}}],["changedate(_date,_utc",{"_index":859,"title":{},"body":{"components/DisplayComponent.html":{}}}],["changedetectionstrategi",{"_index":1870,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["changefram",{"_index":3843,"title":{},"body":{"components/SettingComponent.html":{}}}],["changegrid",{"_index":3844,"title":{},"body":{"components/SettingComponent.html":{}}}],["changelight",{"_index":3845,"title":{},"body":{"components/SettingComponent.html":{}}}],["changelight(_hu",{"_index":3860,"title":{},"body":{"components/SettingComponent.html":{}}}],["changelin",{"_index":3846,"title":{},"body":{"components/SettingComponent.html":{}}}],["changeline(lineprecis",{"_index":3865,"title":{},"body":{"components/SettingComponent.html":{}}}],["changenorm",{"_index":3847,"title":{},"body":{"components/SettingComponent.html":{}}}],["changepoint",{"_index":3848,"title":{},"body":{"components/SettingComponent.html":{}}}],["changepoints",{"_index":3849,"title":{},"body":{"components/SettingComponent.html":{}}}],["changepointsize(points",{"_index":3870,"title":{},"body":{"components/SettingComponent.html":{}}}],["changeshadow",{"_index":750,"title":{},"body":{"components/DisplayComponent.html":{},"components/SettingComponent.html":{}}}],["changesun",{"_index":751,"title":{},"body":{"components/DisplayComponent.html":{}}}],["charact",{"_index":2014,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["character",{"_index":4565,"title":{},"body":{"license.html":{}}}],["charg",{"_index":4355,"title":{},"body":{"license.html":{}}}],["check",{"_index":1654,"title":{},"body":{"classes/FlowchartUtils.html":{},"components/HelpFundamentals.html":{},"classes/NodeUtils.html":{}}}],["check_circl",{"_index":3694,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["checkbox",{"_index":3459,"title":{},"body":{"pipes/PortTypePipe.html":{},"components/PublishSettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["checkbrows",{"_index":2666,"title":{},"body":{"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{}}}],["child",{"_index":1298,"title":{},"body":{"components/FlowchartControlsComponent.html":{},"classes/IfElseControlProcedure.html":{},"classes/NodeUtils.html":{},"components/ProcedureEditorComponent.html":{},"classes/ProcedureUtils.html":{}}}],["child.id",{"_index":3741,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["child.nam",{"_index":2924,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["child.par",{"_index":3744,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["child_prop",{"_index":3727,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["children",{"_index":2326,"title":{},"body":{"interfaces/IGraphNode.html":{},"interfaces/IProcedure.html":{},"classes/NodeUtils.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{},"classes/ProcedureUtils.html":{}}}],["children(children",{"_index":3516,"title":{},"body":{"classes/Procedure.html":{}}}],["children:ani",{"_index":3985,"title":{},"body":{"components/SettingComponent.html":{}}}],["choos",{"_index":4682,"title":{},"body":{"license.html":{}}}],["chroma",{"_index":777,"title":{},"body":{"components/DisplayComponent.html":{},"components/SelectComponent.html":{},"dependencies.html":{}}}],["chrome",{"_index":2579,"title":{},"body":{"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{}}}],["circular",{"_index":1560,"title":{},"body":{"injectables/FlowchartService.html":{},"classes/FlowchartWriter.html":{},"injectables/NodeLibraryService.html":{},"components/TextViewerComponent.html":{},"dependencies.html":{}}}],["circularjson",{"_index":1559,"title":{},"body":{"injectables/FlowchartService.html":{},"classes/FlowchartWriter.html":{},"injectables/NodeLibraryService.html":{},"components/TextViewerComponent.html":{}}}],["circularjson.pars",{"_index":3121,"title":{},"body":{"injectables/NodeLibraryService.html":{}}}],["circularjson.stringify(fil",{"_index":1705,"title":{},"body":{"classes/FlowchartWriter.html":{}}}],["circularjson.stringify({n",{"_index":3122,"title":{},"body":{"injectables/NodeLibraryService.html":{}}}],["circumst",{"_index":4471,"title":{},"body":{"license.html":{}}}],["circumvent",{"_index":4475,"title":{},"body":{"license.html":{}}}],["civil",{"_index":4708,"title":{},"body":{"license.html":{}}}],["claim",{"_index":4631,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/ActionProcedure.html":{},"classes/CodeFactory.html":{},"classes/CodeGenerator.html":{},"classes/Constants.html":{},"classes/DataProcedure.html":{},"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/FileService.html":{},"classes/FileUtils.html":{},"classes/Flowchart.html":{},"classes/FlowchartConnectionUtils.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartRenderUtils.html":{},"classes/FlowchartUtils.html":{},"classes/FlowchartWriter.html":{},"classes/ForLoopControlProcedure.html":{},"classes/Frame.html":{},"classes/FunctionProcedure.html":{},"classes/IdGenerator.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/InputPort.html":{},"classes/Module.html":{},"classes/ModuleUtils.html":{},"classes/NodeSubscriber.html":{},"classes/NodeUtils.html":{},"classes/OutputPort.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"classes/Procedure.html":{},"classes/ProcedureFactory.html":{},"classes/ProcedureUtils.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{},"classes/gis_module.html":{}},"body":{"classes/ActionProcedure.html":{},"injectables/ActiveNodeService.html":{},"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"classes/CodeFactory.html":{},"classes/CodeGenerator.html":{},"injectables/CodeService.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"injectables/ConsoleService.html":{},"classes/Constants.html":{},"modules/CustomMaterialModule.html":{},"classes/DataProcedure.html":{},"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"injectables/ExecuteService.html":{},"components/FileLoadDialogComponent.html":{},"classes/FileService.html":{},"classes/FileUtils.html":{},"classes/Flowchart.html":{},"classes/FlowchartConnectionUtils.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"classes/FlowchartWriter.html":{},"classes/ForLoopControlProcedure.html":{},"classes/Frame.html":{},"classes/FunctionProcedure.html":{},"modules/GSViewer.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"interfaces/HasIsPlanar.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"interfaces/IModule.html":{},"classes/IdGenerator.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"components/InfoViewerComponent.html":{},"classes/InputPort.html":{},"components/LandingComponent.html":{},"injectables/LayoutService.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"modules/MobiusCesium.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"injectables/MobiusService.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"classes/ModuleUtils.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"injectables/NodeLibraryService.html":{},"classes/NodeSubscriber.html":{},"classes/NodeUtils.html":{},"classes/OutputPort.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"pipes/PortTypePipe.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{},"classes/ProcedureFactory.html":{},"components/ProcedureItemComponent.html":{},"classes/ProcedureUtils.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{},"classes/StatementProcedure.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"classes/WhileControlProcedure.html":{},"coverage.html":{},"classes/gis_module.html":{},"license.html":{},"overview.html":{}}}],["classes/code/codefactory.t",{"_index":447,"title":{},"body":{"classes/CodeFactory.html":{},"coverage.html":{}}}],["classes/code/codefactory.ts:7",{"_index":451,"title":{},"body":{"classes/CodeFactory.html":{}}}],["classes/code/codefactory.ts:9",{"_index":453,"title":{},"body":{"classes/CodeFactory.html":{}}}],["classes/code/codegenerator.t",{"_index":464,"title":{},"body":{"classes/CodeGenerator.html":{},"coverage.html":{}}}],["classes/code/codegenerator.ts:12",{"_index":481,"title":{},"body":{"classes/CodeGenerator.html":{}}}],["classes/code/codegenerator.ts:13",{"_index":480,"title":{},"body":{"classes/CodeGenerator.html":{}}}],["classes/code/codegenerator.ts:17",{"_index":515,"title":{},"body":{"classes/CodeGenerator.html":{}}}],["classes/code/codegenerator.ts:21",{"_index":514,"title":{},"body":{"classes/CodeGenerator.html":{}}}],["classes/code/codegenerator.ts:23",{"_index":512,"title":{},"body":{"classes/CodeGenerator.html":{}}}],["classes/code/codegenerator.ts:25",{"_index":493,"title":{},"body":{"classes/CodeGenerator.html":{}}}],["classes/code/codegenerator.ts:26",{"_index":501,"title":{},"body":{"classes/CodeGenerator.html":{}}}],["classes/code/codegenerator.ts:27",{"_index":495,"title":{},"body":{"classes/CodeGenerator.html":{}}}],["classes/code/codegenerator.ts:28",{"_index":499,"title":{},"body":{"classes/CodeGenerator.html":{}}}],["classes/code/codegenerator.ts:29",{"_index":504,"title":{},"body":{"classes/CodeGenerator.html":{}}}],["classes/code/codegenerator.ts:30",{"_index":489,"title":{},"body":{"classes/CodeGenerator.html":{}}}],["classes/code/codegenerator.ts:31",{"_index":511,"title":{},"body":{"classes/CodeGenerator.html":{}}}],["classes/code/codegenerator.ts:32",{"_index":507,"title":{},"body":{"classes/CodeGenerator.html":{}}}],["classes/code/codegenerator.ts:33",{"_index":509,"title":{},"body":{"classes/CodeGenerator.html":{}}}],["classes/code/codegenerator.ts:34",{"_index":484,"title":{},"body":{"classes/CodeGenerator.html":{}}}],["classes/code/codemodul",{"_index":537,"title":{},"body":{"injectables/CodeService.html":{},"injectables/ExecuteService.html":{},"components/FlowchartControlsComponent.html":{},"injectables/FlowchartService.html":{},"injectables/MobiusService.html":{},"injectables/ModuleService.html":{},"components/ModuleboxComponent.html":{}}}],["classes/code/comput",{"_index":2887,"title":{},"body":{"classes/ModuleUtils.html":{},"coverage.html":{}}}],["classes/code/generators/javascript_generator.t",{"_index":4136,"title":{},"body":{"coverage.html":{}}}],["classes/code/icodegenerator.t",{"_index":2307,"title":{},"body":{"interfaces/ICodeGenerator.html":{},"coverage.html":{}}}],["classes/code/icodegenerator.ts:13",{"_index":2318,"title":{},"body":{"interfaces/ICodeGenerator.html":{}}}],["classes/code/icodegenerator.ts:14",{"_index":2319,"title":{},"body":{"interfaces/ICodeGenerator.html":{}}}],["classes/code/icodegenerator.ts:16",{"_index":2310,"title":{},"body":{"interfaces/ICodeGenerator.html":{}}}],["classes/code/icodegenerator.ts:18",{"_index":2313,"title":{},"body":{"interfaces/ICodeGenerator.html":{}}}],["classes/code/icodegenerator.ts:19",{"_index":2311,"title":{},"body":{"interfaces/ICodeGenerator.html":{}}}],["classes/code/icodegenerator.ts:21",{"_index":2312,"title":{},"body":{"interfaces/ICodeGenerator.html":{}}}],["classes/code/icodegenerator.ts:22",{"_index":2314,"title":{},"body":{"interfaces/ICodeGenerator.html":{}}}],["classes/code/icodegenerator.ts:24",{"_index":2309,"title":{},"body":{"interfaces/ICodeGenerator.html":{}}}],["classes/code/icodegenerator.ts:25",{"_index":2317,"title":{},"body":{"interfaces/ICodeGenerator.html":{}}}],["classes/code/icodegenerator.ts:27",{"_index":2315,"title":{},"body":{"interfaces/ICodeGenerator.html":{}}}],["classes/code/icodegenerator.ts:28",{"_index":2316,"title":{},"body":{"interfaces/ICodeGenerator.html":{}}}],["classes/code/icodegenerator.ts:30",{"_index":2308,"title":{},"body":{"interfaces/ICodeGenerator.html":{}}}],["classes/flowchart/flowchart.t",{"_index":1138,"title":{},"body":{"classes/Flowchart.html":{},"coverage.html":{}}}],["classes/flowchart/flowchart.ts:101",{"_index":1187,"title":{},"body":{"classes/Flowchart.html":{}}}],["classes/flowchart/flowchart.ts:105",{"_index":1190,"title":{},"body":{"classes/Flowchart.html":{}}}],["classes/flowchart/flowchart.ts:109",{"_index":1193,"title":{},"body":{"classes/Flowchart.html":{}}}],["classes/flowchart/flowchart.ts:113",{"_index":1195,"title":{},"body":{"classes/Flowchart.html":{}}}],["classes/flowchart/flowchart.ts:117",{"_index":1200,"title":{},"body":{"classes/Flowchart.html":{}}}],["classes/flowchart/flowchart.ts:121",{"_index":1198,"title":{},"body":{"classes/Flowchart.html":{}}}],["classes/flowchart/flowchart.ts:125",{"_index":1203,"title":{},"body":{"classes/Flowchart.html":{}}}],["classes/flowchart/flowchart.ts:129",{"_index":1205,"title":{},"body":{"classes/Flowchart.html":{}}}],["classes/flowchart/flowchart.ts:16",{"_index":1155,"title":{},"body":{"classes/Flowchart.html":{}}}],["classes/flowchart/flowchart.ts:17",{"_index":1150,"title":{},"body":{"classes/Flowchart.html":{}}}],["classes/flowchart/flowchart.ts:18",{"_index":1149,"title":{},"body":{"classes/Flowchart.html":{}}}],["classes/flowchart/flowchart.ts:19",{"_index":1157,"title":{},"body":{"classes/Flowchart.html":{}}}],["classes/flowchart/flowchart.ts:20",{"_index":1159,"title":{},"body":{"classes/Flowchart.html":{}}}],["classes/flowchart/flowchart.ts:22",{"_index":1156,"title":{},"body":{"classes/Flowchart.html":{}}}],["classes/flowchart/flowchart.ts:23",{"_index":1153,"title":{},"body":{"classes/Flowchart.html":{}}}],["classes/flowchart/flowchart.ts:25",{"_index":1158,"title":{},"body":{"classes/Flowchart.html":{}}}],["classes/flowchart/flowchart.ts:27",{"_index":1154,"title":{},"body":{"classes/Flowchart.html":{}}}],["classes/flowchart/flowchart.ts:28",{"_index":1151,"title":{},"body":{"classes/Flowchart.html":{}}}],["classes/flowchart/flowchart.ts:30",{"_index":1148,"title":{},"body":{"classes/Flowchart.html":{}}}],["classes/flowchart/flowchart.ts:57",{"_index":1161,"title":{},"body":{"classes/Flowchart.html":{}}}],["classes/flowchart/flowchart.ts:61",{"_index":1163,"title":{},"body":{"classes/Flowchart.html":{}}}],["classes/flowchart/flowchart.ts:65",{"_index":1166,"title":{},"body":{"classes/Flowchart.html":{}}}],["classes/flowchart/flowchart.ts:69",{"_index":1168,"title":{},"body":{"classes/Flowchart.html":{}}}],["classes/flowchart/flowchart.ts:73",{"_index":1171,"title":{},"body":{"classes/Flowchart.html":{}}}],["classes/flowchart/flowchart.ts:77",{"_index":1173,"title":{},"body":{"classes/Flowchart.html":{}}}],["classes/flowchart/flowchart.ts:81",{"_index":1176,"title":{},"body":{"classes/Flowchart.html":{}}}],["classes/flowchart/flowchart.ts:85",{"_index":1178,"title":{},"body":{"classes/Flowchart.html":{}}}],["classes/flowchart/flowchart.ts:89",{"_index":1181,"title":{},"body":{"classes/Flowchart.html":{}}}],["classes/flowchart/flowchart.ts:93",{"_index":1183,"title":{},"body":{"classes/Flowchart.html":{}}}],["classes/flowchart/flowchart.ts:97",{"_index":1185,"title":{},"body":{"classes/Flowchart.html":{}}}],["classes/flowchart/flowchartconnectionutil",{"_index":1387,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["classes/flowchart/flowchartconnectionutils.t",{"_index":1237,"title":{},"body":{"classes/FlowchartConnectionUtils.html":{},"coverage.html":{}}}],["classes/flowchart/flowchartconnectionutils.ts:18",{"_index":1247,"title":{},"body":{"classes/FlowchartConnectionUtils.html":{}}}],["classes/flowchart/flowchartconnectionutils.ts:38",{"_index":1244,"title":{},"body":{"classes/FlowchartConnectionUtils.html":{}}}],["classes/flowchart/flowchartconnectionutils.ts:66",{"_index":1250,"title":{},"body":{"classes/FlowchartConnectionUtils.html":{}}}],["classes/flowchart/flowchartmodul",{"_index":985,"title":{},"body":{"injectables/ExecuteService.html":{},"components/FlowchartControlsComponent.html":{},"injectables/FlowchartService.html":{},"components/PublishSettingsComponent.html":{}}}],["classes/flowchart/flowchartreader.t",{"_index":1340,"title":{},"body":{"classes/FlowchartReader.html":{},"coverage.html":{}}}],["classes/flowchart/flowchartreader.ts:13",{"_index":1343,"title":{},"body":{"classes/FlowchartReader.html":{}}}],["classes/flowchart/flowchartutil",{"_index":1292,"title":{},"body":{"components/FlowchartControlsComponent.html":{},"classes/FlowchartRenderUtils.html":{}}}],["classes/flowchart/flowchartutils.t",{"_index":1578,"title":{},"body":{"classes/FlowchartUtils.html":{},"coverage.html":{}}}],["classes/flowchart/flowchartutils.ts:12",{"_index":1607,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["classes/flowchart/flowchartutils.ts:147",{"_index":1588,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["classes/flowchart/flowchartutils.ts:17",{"_index":1609,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["classes/flowchart/flowchartutils.ts:191",{"_index":1593,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["classes/flowchart/flowchartutils.ts:199",{"_index":1596,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["classes/flowchart/flowchartutils.ts:213",{"_index":1614,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["classes/flowchart/flowchartutils.ts:246",{"_index":1605,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["classes/flowchart/flowchartutils.ts:324",{"_index":1611,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["classes/flowchart/flowchartutils.ts:39",{"_index":1590,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["classes/flowchart/flowchartutils.ts:53",{"_index":1599,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["classes/flowchart/flowchartutils.ts:92",{"_index":1601,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["classes/flowchart/flowchartutils.ts:98",{"_index":1603,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["classes/flowchart/flowchartwriter.t",{"_index":1695,"title":{},"body":{"classes/FlowchartWriter.html":{},"coverage.html":{}}}],["classes/flowchart/flowchartwriter.ts:8",{"_index":1698,"title":{},"body":{"classes/FlowchartWriter.html":{}}}],["classes/flowchart/iflowchart",{"_index":1386,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["classes/flowchart/iflowchart.t",{"_index":2323,"title":{},"body":{"interfaces/IFlowchart.html":{},"coverage.html":{}}}],["classes/misc/guid.t",{"_index":2352,"title":{},"body":{"classes/IdGenerator.html":{},"coverage.html":{}}}],["classes/misc/guid.ts:3",{"_index":2356,"title":{},"body":{"classes/IdGenerator.html":{}}}],["classes/misc/guid.ts:9",{"_index":2355,"title":{},"body":{"classes/IdGenerator.html":{}}}],["classes/node/graphnode.t",{"_index":4139,"title":{},"body":{"coverage.html":{}}}],["classes/node/iedge.t",{"_index":2322,"title":{},"body":{"interfaces/IEdge.html":{},"coverage.html":{}}}],["classes/node/igraphnode.t",{"_index":2324,"title":{},"body":{"interfaces/IGraphNode.html":{},"coverage.html":{}}}],["classes/node/igraphnode.ts:24",{"_index":2333,"title":{},"body":{"interfaces/IGraphNode.html":{}}}],["classes/node/igraphnode.ts:25",{"_index":2331,"title":{},"body":{"interfaces/IGraphNode.html":{}}}],["classes/node/nodemodul",{"_index":412,"title":{},"body":{"components/CesiumViewerComponent.html":{},"components/EditorComponent.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"injectables/NodeLibraryService.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["classes/node/nodeutil",{"_index":3048,"title":{},"body":{"components/ModuleboxComponent.html":{},"components/ParameterEditorComponent.html":{}}}],["classes/node/nodeutils.t",{"_index":3127,"title":{},"body":{"classes/NodeUtils.html":{},"coverage.html":{}}}],["classes/node/nodeutils.ts:145",{"_index":3142,"title":{},"body":{"classes/NodeUtils.html":{}}}],["classes/node/nodeutils.ts:15",{"_index":3145,"title":{},"body":{"classes/NodeUtils.html":{}}}],["classes/node/nodeutils.ts:152",{"_index":3156,"title":{},"body":{"classes/NodeUtils.html":{}}}],["classes/node/nodeutils.ts:167",{"_index":3153,"title":{},"body":{"classes/NodeUtils.html":{}}}],["classes/node/nodeutils.ts:210",{"_index":3160,"title":{},"body":{"classes/NodeUtils.html":{}}}],["classes/node/nodeutils.ts:242",{"_index":3154,"title":{},"body":{"classes/NodeUtils.html":{}}}],["classes/node/nodeutils.ts:320",{"_index":3158,"title":{},"body":{"classes/NodeUtils.html":{}}}],["classes/node/nodeutils.ts:37",{"_index":3138,"title":{},"body":{"classes/NodeUtils.html":{}}}],["classes/node/nodeutils.ts:61",{"_index":3147,"title":{},"body":{"classes/NodeUtils.html":{}}}],["classes/node/nodeutils.ts:85",{"_index":3150,"title":{},"body":{"classes/NodeUtils.html":{}}}],["classes/node/nodeutils.ts:96",{"_index":3140,"title":{},"body":{"classes/NodeUtils.html":{}}}],["classes/port/inputport.t",{"_index":2396,"title":{},"body":{"classes/InputPort.html":{},"coverage.html":{}}}],["classes/port/inputport.ts:26",{"_index":2412,"title":{},"body":{"classes/InputPort.html":{}}}],["classes/port/inputport.ts:6",{"_index":2399,"title":{},"body":{"classes/InputPort.html":{}}}],["classes/port/inputporttypes.t",{"_index":4251,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["classes/port/iport.t",{"_index":2344,"title":{},"body":{"interfaces/IPort.html":{},"coverage.html":{}}}],["classes/port/iport.ts:19",{"_index":2345,"title":{},"body":{"interfaces/IPort.html":{}}}],["classes/port/iport.ts:21",{"_index":2347,"title":{},"body":{"interfaces/IPort.html":{}}}],["classes/port/iport.ts:23",{"_index":2346,"title":{},"body":{"interfaces/IPort.html":{}}}],["classes/port/outputport.t",{"_index":3253,"title":{},"body":{"classes/OutputPort.html":{},"coverage.html":{}}}],["classes/port/outputport.ts:4",{"_index":3254,"title":{},"body":{"classes/OutputPort.html":{}}}],["classes/port/outputporttypes.t",{"_index":4256,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["classes/port/port.t",{"_index":1037,"title":{},"body":{"classes/FileUtils.html":{},"coverage.html":{}}}],["classes/port/port.ts:210",{"_index":1041,"title":{},"body":{"classes/FileUtils.html":{}}}],["classes/port/port.ts:212",{"_index":1044,"title":{},"body":{"classes/FileUtils.html":{}}}],["classes/port/portmodul",{"_index":410,"title":{},"body":{"components/CesiumViewerComponent.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"components/GeometryViewerComponent.html":{},"injectables/LayoutService.html":{},"components/ModuleboxComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"pipes/PortTypePipe.html":{},"components/PublishSettingsComponent.html":{},"components/TextViewerComponent.html":{}}}],["classes/port/porttypes.t",{"_index":4257,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["classes/procedure/actionprocedure.t",{"_index":6,"title":{},"body":{"classes/ActionProcedure.html":{},"coverage.html":{}}}],["classes/procedure/actionprocedure.ts:42",{"_index":82,"title":{},"body":{"classes/ActionProcedure.html":{}}}],["classes/procedure/actionprocedure.ts:46",{"_index":68,"title":{},"body":{"classes/ActionProcedure.html":{}}}],["classes/procedure/actionprocedure.ts:8",{"_index":37,"title":{},"body":{"classes/ActionProcedure.html":{}}}],["classes/procedure/dataprocedure.t",{"_index":705,"title":{},"body":{"classes/DataProcedure.html":{},"coverage.html":{}}}],["classes/procedure/dataprocedure.ts:36",{"_index":708,"title":{},"body":{"classes/DataProcedure.html":{}}}],["classes/procedure/dataprocedure.ts:8",{"_index":707,"title":{},"body":{"classes/DataProcedure.html":{}}}],["classes/procedure/elsecontrolprocedure.t",{"_index":936,"title":{},"body":{"classes/ElseControlProcedure.html":{},"coverage.html":{}}}],["classes/procedure/elsecontrolprocedure.ts:35",{"_index":938,"title":{},"body":{"classes/ElseControlProcedure.html":{}}}],["classes/procedure/elsecontrolprocedure.ts:6",{"_index":937,"title":{},"body":{"classes/ElseControlProcedure.html":{}}}],["classes/procedure/elseifcontrolprocedure.t",{"_index":944,"title":{},"body":{"classes/ElseIfControlProcedure.html":{},"coverage.html":{}}}],["classes/procedure/elseifcontrolprocedure.ts:36",{"_index":946,"title":{},"body":{"classes/ElseIfControlProcedure.html":{}}}],["classes/procedure/elseifcontrolprocedure.ts:6",{"_index":945,"title":{},"body":{"classes/ElseIfControlProcedure.html":{}}}],["classes/procedure/forloopcontrolprocedure.t",{"_index":1714,"title":{},"body":{"classes/ForLoopControlProcedure.html":{},"coverage.html":{}}}],["classes/procedure/forloopcontrolprocedure.ts:35",{"_index":1716,"title":{},"body":{"classes/ForLoopControlProcedure.html":{}}}],["classes/procedure/forloopcontrolprocedure.ts:6",{"_index":1715,"title":{},"body":{"classes/ForLoopControlProcedure.html":{}}}],["classes/procedure/functionprocedure.t",{"_index":1752,"title":{},"body":{"classes/FunctionProcedure.html":{},"coverage.html":{}}}],["classes/procedure/functionprocedure.ts:10",{"_index":1758,"title":{},"body":{"classes/FunctionProcedure.html":{}}}],["classes/procedure/functionprocedure.ts:11",{"_index":1757,"title":{},"body":{"classes/FunctionProcedure.html":{}}}],["classes/procedure/functionprocedure.ts:45",{"_index":1760,"title":{},"body":{"classes/FunctionProcedure.html":{}}}],["classes/procedure/functionprocedure.ts:49",{"_index":1763,"title":{},"body":{"classes/FunctionProcedure.html":{}}}],["classes/procedure/functionprocedure.ts:53",{"_index":1759,"title":{},"body":{"classes/FunctionProcedure.html":{}}}],["classes/procedure/functionprocedure.ts:57",{"_index":1765,"title":{},"body":{"classes/FunctionProcedure.html":{}}}],["classes/procedure/functionprocedure.ts:64",{"_index":1761,"title":{},"body":{"classes/FunctionProcedure.html":{}}}],["classes/procedure/functionprocedure.ts:71",{"_index":1764,"title":{},"body":{"classes/FunctionProcedure.html":{}}}],["classes/procedure/icomponent.t",{"_index":2320,"title":{},"body":{"interfaces/IComponent.html":{},"coverage.html":{}}}],["classes/procedure/ifcontrolprocedure.t",{"_index":2364,"title":{},"body":{"classes/IfControlProcedure.html":{},"coverage.html":{}}}],["classes/procedure/ifcontrolprocedure.ts:36",{"_index":2366,"title":{},"body":{"classes/IfControlProcedure.html":{}}}],["classes/procedure/ifcontrolprocedure.ts:6",{"_index":2365,"title":{},"body":{"classes/IfControlProcedure.html":{}}}],["classes/procedure/ifelsecontrolprocedure.t",{"_index":2369,"title":{},"body":{"classes/IfElseControlProcedure.html":{},"coverage.html":{}}}],["classes/procedure/iprocedur",{"_index":1558,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["classes/procedure/iprocedure.t",{"_index":2349,"title":{},"body":{"interfaces/IProcedure.html":{},"coverage.html":{}}}],["classes/procedure/iprocedure.ts:36",{"_index":2350,"title":{},"body":{"interfaces/IProcedure.html":{}}}],["classes/procedure/iprocedure.ts:37",{"_index":2351,"title":{},"body":{"interfaces/IProcedure.html":{}}}],["classes/procedure/procedure.t",{"_index":3461,"title":{},"body":{"classes/Procedure.html":{},"coverage.html":{}}}],["classes/procedure/procedure.ts:10",{"_index":3465,"title":{},"body":{"classes/Procedure.html":{}}}],["classes/procedure/procedure.ts:11",{"_index":3468,"title":{},"body":{"classes/Procedure.html":{}}}],["classes/procedure/procedure.ts:117",{"_index":3477,"title":{},"body":{"classes/Procedure.html":{}}}],["classes/procedure/procedure.ts:124",{"_index":3475,"title":{},"body":{"classes/Procedure.html":{}}}],["classes/procedure/procedure.ts:128",{"_index":3476,"title":{},"body":{"classes/Procedure.html":{}}}],["classes/procedure/procedure.ts:13",{"_index":3473,"title":{},"body":{"classes/Procedure.html":{}}}],["classes/procedure/procedure.ts:137",{"_index":3478,"title":{},"body":{"classes/Procedure.html":{}}}],["classes/procedure/procedure.ts:14",{"_index":3472,"title":{},"body":{"classes/Procedure.html":{}}}],["classes/procedure/procedure.ts:15",{"_index":3464,"title":{},"body":{"classes/Procedure.html":{}}}],["classes/procedure/procedure.ts:16",{"_index":3470,"title":{},"body":{"classes/Procedure.html":{}}}],["classes/procedure/procedure.ts:18",{"_index":3469,"title":{},"body":{"classes/Procedure.html":{}}}],["classes/procedure/procedure.ts:20",{"_index":3467,"title":{},"body":{"classes/Procedure.html":{}}}],["classes/procedure/procedure.ts:21",{"_index":3471,"title":{},"body":{"classes/Procedure.html":{}}}],["classes/procedure/procedure.ts:23",{"_index":3474,"title":{},"body":{"classes/Procedure.html":{}}}],["classes/procedure/procedure.ts:24",{"_index":3463,"title":{},"body":{"classes/Procedure.html":{}}}],["classes/procedure/procedure.ts:36",{"_index":3480,"title":{},"body":{"classes/Procedure.html":{}}}],["classes/procedure/procedure.ts:40",{"_index":3482,"title":{},"body":{"classes/Procedure.html":{}}}],["classes/procedure/procedure.ts:44",{"_index":3483,"title":{},"body":{"classes/Procedure.html":{}}}],["classes/procedure/procedure.ts:48",{"_index":3485,"title":{},"body":{"classes/Procedure.html":{}}}],["classes/procedure/procedure.ts:53",{"_index":3487,"title":{},"body":{"classes/Procedure.html":{}}}],["classes/procedure/procedure.ts:57",{"_index":3489,"title":{},"body":{"classes/Procedure.html":{}}}],["classes/procedure/procedure.ts:61",{"_index":3490,"title":{},"body":{"classes/Procedure.html":{}}}],["classes/procedure/procedure.ts:65",{"_index":3492,"title":{},"body":{"classes/Procedure.html":{}}}],["classes/procedure/procedure.ts:69",{"_index":3494,"title":{},"body":{"classes/Procedure.html":{}}}],["classes/procedure/procedure.ts:73",{"_index":3496,"title":{},"body":{"classes/Procedure.html":{}}}],["classes/procedure/procedure.ts:77",{"_index":3498,"title":{},"body":{"classes/Procedure.html":{}}}],["classes/procedure/procedure.ts:81",{"_index":3500,"title":{},"body":{"classes/Procedure.html":{}}}],["classes/procedure/procedure.ts:85",{"_index":3502,"title":{},"body":{"classes/Procedure.html":{}}}],["classes/procedure/procedure.ts:89",{"_index":3504,"title":{},"body":{"classes/Procedure.html":{}}}],["classes/procedure/procedure.ts:9",{"_index":3466,"title":{},"body":{"classes/Procedure.html":{}}}],["classes/procedure/procedure.ts:93",{"_index":3506,"title":{},"body":{"classes/Procedure.html":{}}}],["classes/procedure/procedure.ts:97",{"_index":3508,"title":{},"body":{"classes/Procedure.html":{}}}],["classes/procedure/procedurefactory.t",{"_index":3637,"title":{},"body":{"classes/ProcedureFactory.html":{},"coverage.html":{}}}],["classes/procedure/procedurefactory.ts:16",{"_index":3640,"title":{},"body":{"classes/ProcedureFactory.html":{}}}],["classes/procedure/proceduremodul",{"_index":3047,"title":{},"body":{"components/ModuleboxComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{}}}],["classes/procedure/proceduretypes.t",{"_index":4258,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["classes/procedure/procedureutils.t",{"_index":3699,"title":{},"body":{"classes/ProcedureUtils.html":{},"coverage.html":{}}}],["classes/procedure/procedureutils.ts:34",{"_index":3719,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["classes/procedure/procedureutils.ts:48",{"_index":3717,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["classes/procedure/procedureutils.ts:60",{"_index":3707,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["classes/procedure/procedureutils.ts:7",{"_index":3713,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["classes/procedure/procedureutils.ts:77",{"_index":3711,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["classes/procedure/procedureutils.ts:89",{"_index":3709,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["classes/procedure/procedureutils.ts:96",{"_index":3715,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["classes/procedure/statementprocedure.t",{"_index":4042,"title":{},"body":{"classes/StatementProcedure.html":{},"coverage.html":{}}}],["classes/procedure/statementprocedure.ts:35",{"_index":4044,"title":{},"body":{"classes/StatementProcedure.html":{}}}],["classes/procedure/statementprocedure.ts:6",{"_index":4043,"title":{},"body":{"classes/StatementProcedure.html":{}}}],["classes/procedure/whilecontrolprocedure.t",{"_index":4124,"title":{},"body":{"classes/WhileControlProcedure.html":{},"coverage.html":{}}}],["classes/procedure/whilecontrolprocedure.ts:36",{"_index":4126,"title":{},"body":{"classes/WhileControlProcedure.html":{}}}],["classes/procedure/whilecontrolprocedure.ts:6",{"_index":4125,"title":{},"body":{"classes/WhileControlProcedure.html":{}}}],["classes/subscribers/nodesubscriber.t",{"_index":3126,"title":{},"body":{"classes/NodeSubscriber.html":{},"coverage.html":{}}}],["clear",{"_index":1692,"title":{},"body":{"classes/FlowchartUtils.html":{},"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"components/NodeLibraryComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"license.html":{}}}],["clear($ev",{"_index":3339,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["clearconsol",{"_index":563,"title":{},"body":{"components/ConsoleComponent.html":{},"injectables/ConsoleService.html":{}}}],["clearli",{"_index":4373,"title":{},"body":{"license.html":{}}}],["clearlibrari",{"_index":3076,"title":{},"body":{"components/NodeLibraryComponent.html":{}}}],["clearmessag",{"_index":600,"title":{},"body":{"injectables/ConsoleService.html":{},"injectables/LayoutService.html":{}}}],["click",{"_index":2605,"title":{},"body":{"components/MobiusAbout.html":{}}}],["client",{"_index":2441,"title":{},"body":{"components/LandingComponent.html":{}}}],["close",{"_index":1337,"title":{},"body":{"components/FlowchartControlsComponent.html":{},"components/ParameterEditorComponent.html":{},"components/PublishSettingsComponent.html":{},"license.html":{}}}],["closedialog",{"_index":1012,"title":{},"body":{"components/FileLoadDialogComponent.html":{}}}],["closedialog(act",{"_index":1017,"title":{},"body":{"components/FileLoadDialogComponent.html":{}}}],["cluster_appmodul",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_gsview",{"_index":1781,"title":{},"body":{"modules/GSViewer.html":{},"overview.html":{}}}],["cluster_gsviewer_declar",{"_index":1782,"title":{},"body":{"modules/GSViewer.html":{},"overview.html":{}}}],["cluster_gsviewer_export",{"_index":1783,"title":{},"body":{"modules/GSViewer.html":{},"overview.html":{}}}],["cluster_gsviewer_provid",{"_index":1784,"title":{},"body":{"modules/GSViewer.html":{},"overview.html":{}}}],["cluster_mobiuscesium",{"_index":2653,"title":{},"body":{"modules/MobiusCesium.html":{},"overview.html":{}}}],["cluster_mobiuscesium_declar",{"_index":2654,"title":{},"body":{"modules/MobiusCesium.html":{},"overview.html":{}}}],["cluster_mobiuscesium_export",{"_index":2655,"title":{},"body":{"modules/MobiusCesium.html":{},"overview.html":{}}}],["cluster_mobiuscesium_provid",{"_index":2656,"title":{},"body":{"modules/MobiusCesium.html":{}}}],["cn",{"_index":899,"title":{},"body":{"components/DisplayComponent.html":{}}}],["code",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"classes/NodeUtils.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"pipes/PortTypePipe.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{}}}],["code/codemodul",{"_index":1207,"title":{},"body":{"classes/Flowchart.html":{},"classes/FlowchartConnectionUtils.html":{},"classes/FlowchartUtils.html":{},"interfaces/IFlowchart.html":{},"interfaces/IGraphNode.html":{},"interfaces/IProcedure.html":{},"classes/NodeUtils.html":{},"classes/Procedure.html":{}}}],["code_gener",{"_index":75,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"injectables/ExecuteService.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"injectables/MobiusService.html":{},"classes/NodeUtils.html":{},"classes/Procedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["code_generator(cg",{"_index":2750,"title":{},"body":{"injectables/MobiusService.html":{}}}],["code_generator.execute_node(nod",{"_index":3252,"title":{},"body":{"classes/NodeUtils.html":{}}}],["code_generator.get_code_procedure(thi",{"_index":3526,"title":{},"body":{"classes/Procedure.html":{}}}],["codefactori",{"_index":446,"title":{"classes/CodeFactory.html":{}},"body":{"classes/CodeFactory.html":{},"injectables/CodeService.html":{},"components/FlowchartControlsComponent.html":{},"injectables/FlowchartService.html":{},"injectables/MobiusService.html":{},"coverage.html":{}}}],["codefactory.getcodegenerator(\"j",{"_index":527,"title":{},"body":{"injectables/CodeService.html":{},"injectables/FlowchartService.html":{},"injectables/MobiusService.html":{}}}],["codegener",{"_index":463,"title":{"classes/CodeGenerator.html":{}},"body":{"classes/CodeGenerator.html":{},"coverage.html":{}}}],["codegeneratorj",{"_index":455,"title":{},"body":{"classes/CodeFactory.html":{},"coverage.html":{}}}],["codeservic",{"_index":265,"title":{"injectables/CodeService.html":{}},"body":{"modules/AppModule.html":{},"injectables/CodeService.html":{},"components/CodeViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["codeviewercompon",{"_index":171,"title":{"components/CodeViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["collect",{"_index":2066,"title":{},"body":{"components/HelpFundamentals.html":{},"license.html":{}}}],["color",{"_index":2424,"title":{},"body":{"classes/InputPort.html":{},"pipes/PortTypePipe.html":{},"components/PublishSettingsComponent.html":{},"components/SettingComponent.html":{}}}],["color&nbsp;&nbsp",{"_index":4012,"title":{},"body":{"components/SettingComponent.html":{}}}],["colorpick",{"_index":4252,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["combin",{"_index":2037,"title":{},"body":{"components/HelpFundamentals.html":{},"license.html":{}}}],["come",{"_index":2210,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"license.html":{}}}],["command",{"_index":3593,"title":{},"body":{"components/ProcedureEditorComponent.html":{},"license.html":{}}}],["comment",{"_index":1961,"title":{},"body":{"components/HelpFundamentals.html":{},"components/ModuleboxComponent.html":{},"classes/StatementProcedure.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["commerci",{"_index":4555,"title":{},"body":{"license.html":{}}}],["commit",{"_index":4645,"title":{},"body":{"license.html":{}}}],["common",{"_index":4553,"title":{},"body":{"license.html":{}}}],["commonmodul",{"_index":1787,"title":{},"body":{"modules/GSViewer.html":{},"modules/MobiusCesium.html":{}}}],["commun",{"_index":4451,"title":{},"body":{"license.html":{}}}],["comp",{"_index":3679,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["comparison",{"_index":2158,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["compat",{"_index":2647,"title":{},"body":{"components/MobiusAbout.html":{}}}],["compil",{"_index":4235,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["compilation'",{"_index":4517,"title":{},"body":{"license.html":{}}}],["complex",{"_index":2156,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["compli",{"_index":4468,"title":{},"body":{"license.html":{}}}],["complianc",{"_index":4618,"title":{},"body":{"license.html":{}}}],["compon",{"_index":146,"title":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"injectables/ConsoleService.html":{},"modules/CustomMaterialModule.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartRenderUtils.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"injectables/LayoutService.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["component_nam",{"_index":4087,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["component_templ",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["componentfactoryresolv",{"_index":2481,"title":{},"body":{"injectables/LayoutService.html":{},"components/PanelComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["componentmap",{"_index":2462,"title":{},"body":{"injectables/LayoutService.html":{},"components/ViewerContainerComponent.html":{}}}],["componentref",{"_index":2532,"title":{},"body":{"injectables/LayoutService.html":{},"components/ViewerContainerComponent.html":{}}}],["componentref.hostview",{"_index":2534,"title":{},"body":{"injectables/LayoutService.html":{},"components/ViewerContainerComponent.html":{}}}],["componentref.instance[\"mod",{"_index":4119,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["components/console/console.compon",{"_index":347,"title":{},"body":{"modules/AppModule.html":{}}}],["components/console/console.component.t",{"_index":554,"title":{},"body":{"components/ConsoleComponent.html":{},"coverage.html":{}}}],["components/console/console.component.ts:13",{"_index":576,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["components/console/console.component.ts:15",{"_index":572,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["components/console/console.component.ts:16",{"_index":567,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["components/console/console.component.ts:24",{"_index":569,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["components/console/console.component.ts:29",{"_index":571,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["components/console/console.component.ts:35",{"_index":570,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["components/console/console.component.ts:39",{"_index":568,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["components/controls/flowchart",{"_index":311,"title":{},"body":{"modules/AppModule.html":{},"components/FlowchartControlsComponent.html":{},"coverage.html":{}}}],["components/controls/main",{"_index":314,"title":{},"body":{"modules/AppModule.html":{},"components/MenuComponent.html":{},"coverage.html":{}}}],["components/controls/modulebox/modulebox.compon",{"_index":336,"title":{},"body":{"modules/AppModule.html":{}}}],["components/controls/modulebox/modulebox.component.t",{"_index":3008,"title":{},"body":{"components/ModuleboxComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["components/controls/modulebox/modulebox.component.ts:110",{"_index":3028,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["components/controls/modulebox/modulebox.component.ts:119",{"_index":3022,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["components/controls/modulebox/modulebox.component.ts:135",{"_index":3027,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["components/controls/modulebox/modulebox.component.ts:146",{"_index":3024,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["components/controls/modulebox/modulebox.component.ts:153",{"_index":3031,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["components/controls/modulebox/modulebox.component.ts:70",{"_index":3043,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["components/controls/modulebox/modulebox.component.ts:83",{"_index":3044,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["components/controls/modulebox/modulebox.component.ts:84",{"_index":3035,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["components/controls/modulebox/modulebox.component.ts:86",{"_index":3045,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["components/controls/modulebox/modulebox.component.ts:87",{"_index":3033,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["components/controls/modulebox/modulebox.component.ts:89",{"_index":3032,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["components/controls/modulebox/modulebox.component.ts:90",{"_index":3020,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["components/controls/modulebox/modulebox.component.ts:96",{"_index":3029,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["components/controls/publish",{"_index":374,"title":{},"body":{"modules/AppModule.html":{},"components/PublishSettingsComponent.html":{},"coverage.html":{}}}],["components/dialogs/fil",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"components/FileLoadDialogComponent.html":{},"coverage.html":{}}}],["components/editors/editor/editor.compon",{"_index":337,"title":{},"body":{"modules/AppModule.html":{},"injectables/LayoutService.html":{}}}],["components/editors/editor/editor.component.t",{"_index":911,"title":{},"body":{"components/EditorComponent.html":{},"coverage.html":{}}}],["components/editors/editor/editor.component.ts:12",{"_index":926,"title":{},"body":{"components/EditorComponent.html":{}}}],["components/editors/editor/editor.component.ts:14",{"_index":925,"title":{},"body":{"components/EditorComponent.html":{}}}],["components/editors/editor/editor.component.ts:15",{"_index":924,"title":{},"body":{"components/EditorComponent.html":{}}}],["components/editors/editor/editor.component.ts:17",{"_index":919,"title":{},"body":{"components/EditorComponent.html":{}}}],["components/editors/editor/editor.component.ts:21",{"_index":921,"title":{},"body":{"components/EditorComponent.html":{}}}],["components/editors/editor/editor.component.ts:25",{"_index":920,"title":{},"body":{"components/EditorComponent.html":{}}}],["components/editors/editor/editor.component.ts:29",{"_index":923,"title":{},"body":{"components/EditorComponent.html":{}}}],["components/editors/flowchart",{"_index":323,"title":{},"body":{"modules/AppModule.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/LayoutService.html":{},"coverage.html":{}}}],["components/editors/paramet",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"coverage.html":{}}}],["components/editors/procedur",{"_index":316,"title":{},"body":{"modules/AppModule.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["components/graph/graph",{"_index":358,"title":{},"body":{"modules/AppModule.html":{},"components/GraphEdgeComponent.html":{},"coverage.html":{}}}],["components/help/help",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"components/HelpViewerComponent.html":{},"coverage.html":{}}}],["components/help/info",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/InfoViewerComponent.html":{},"components/MobiusAbout.html":{},"coverage.html":{}}}],["components/layout/panel/panel.compon",{"_index":346,"title":{},"body":{"modules/AppModule.html":{}}}],["components/layout/panel/panel.component.t",{"_index":3256,"title":{},"body":{"components/PanelComponent.html":{},"coverage.html":{}}}],["components/layout/panel/panel.component.ts:19",{"_index":3274,"title":{},"body":{"components/PanelComponent.html":{}}}],["components/layout/panel/panel.component.ts:20",{"_index":3263,"title":{},"body":{"components/PanelComponent.html":{}}}],["components/layout/panel/panel.component.ts:22",{"_index":3270,"title":{},"body":{"components/PanelComponent.html":{}}}],["components/layout/panel/panel.component.ts:23",{"_index":3272,"title":{},"body":{"components/PanelComponent.html":{}}}],["components/layout/panel/panel.component.ts:25",{"_index":3271,"title":{},"body":{"components/PanelComponent.html":{}}}],["components/layout/panel/panel.component.ts:26",{"_index":3262,"title":{},"body":{"components/PanelComponent.html":{}}}],["components/layout/panel/panel.component.ts:34",{"_index":3267,"title":{},"body":{"components/PanelComponent.html":{}}}],["components/layout/panel/panel.component.ts:43",{"_index":3266,"title":{},"body":{"components/PanelComponent.html":{}}}],["components/layout/panel/panel.component.ts:50",{"_index":3269,"title":{},"body":{"components/PanelComponent.html":{}}}],["components/layout/panel/panel.component.ts:71",{"_index":3264,"title":{},"body":{"components/PanelComponent.html":{}}}],["components/layout/panel/panel.component.ts:76",{"_index":3265,"title":{},"body":{"components/PanelComponent.html":{}}}],["components/layout/panel/panel.component.ts:81",{"_index":3268,"title":{},"body":{"components/PanelComponent.html":{}}}],["components/main/mobiu",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"components/LandingComponent.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"coverage.html":{}}}],["components/viewers/cesium",{"_index":330,"title":{},"body":{"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"coverage.html":{}}}],["components/viewers/cod",{"_index":326,"title":{},"body":{"modules/AppModule.html":{},"components/CodeViewerComponent.html":{},"coverage.html":{}}}],["components/viewers/eview",{"_index":2527,"title":{},"body":{"injectables/LayoutService.html":{}}}],["components/viewers/eviewer.t",{"_index":4250,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["components/viewers/geometri",{"_index":328,"title":{},"body":{"modules/AppModule.html":{},"components/GeometryViewerComponent.html":{},"coverage.html":{}}}],["components/viewers/modul",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"components/ModuleViewerComponent.html":{},"coverage.html":{}}}],["components/viewers/nod",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"components/NodeLibraryComponent.html":{},"coverage.html":{}}}],["components/viewers/paramet",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"injectables/LayoutService.html":{},"components/ParameterViewerComponent.html":{},"coverage.html":{}}}],["components/viewers/text",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"components/TextViewerComponent.html":{},"coverage.html":{}}}],["components/viewers/view",{"_index":338,"title":{},"body":{"modules/AppModule.html":{},"injectables/LayoutService.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{}}}],["comput",{"_index":457,"title":{},"body":{"classes/CodeFactory.html":{},"classes/CodeGenerator.html":{},"classes/FileUtils.html":{},"components/HelpFundamentals.html":{},"interfaces/ICodeGenerator.html":{},"license.html":{}}}],["concept",{"_index":2115,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["concern",{"_index":2222,"title":{},"body":{"components/HelpFundamentals.html":{},"license.html":{}}}],["condit",{"_index":939,"title":{},"body":{"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"components/HelpFundamentals.html":{},"classes/IfControlProcedure.html":{},"components/MobiusAbout.html":{},"classes/NodeUtils.html":{},"classes/WhileControlProcedure.html":{},"license.html":{}}}],["conditional_express",{"_index":941,"title":{},"body":{"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["configur",{"_index":2588,"title":{},"body":{"components/MobiusAbout.html":{}}}],["confirm(`th",{"_index":3410,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["connect",{"_index":1075,"title":{},"body":{"classes/FileUtils.html":{},"classes/FlowchartConnectionUtils.html":{},"classes/FlowchartUtils.html":{},"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"license.html":{}}}],["consequ",{"_index":4615,"title":{},"body":{"license.html":{}}}],["consequenti",{"_index":4696,"title":{},"body":{"license.html":{}}}],["consid",{"_index":2240,"title":{},"body":{"components/HelpFundamentals.html":{},"license.html":{}}}],["consist",{"_index":1950,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"index.html":{},"license.html":{}}}],["consol",{"_index":557,"title":{},"body":{"components/ConsoleComponent.html":{},"injectables/ExecuteService.html":{},"injectables/FlowchartService.html":{},"components/MobiusAbout.html":{},"pipes/PortTypePipe.html":{},"components/ViewerContainerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["console'},{'nam",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["console.component.html",{"_index":559,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console.component.scss",{"_index":558,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console.error(\"error",{"_index":1815,"title":{},"body":{"components/GSViewerComponent.html":{},"components/MobiuscesiumComponent.html":{}}}],["console.error(\"not",{"_index":3421,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["console.error(`error",{"_index":3246,"title":{},"body":{"classes/NodeUtils.html":{}}}],["console.log(\"data",{"_index":2834,"title":{},"body":{"components/MobiuscesiumComponent.html":{}}}],["console.log(\"error",{"_index":1327,"title":{},"body":{"components/FlowchartControlsComponent.html":{},"components/ProcedureEditorComponent.html":{}}}],["console.log(\"mod",{"_index":2829,"title":{},"body":{"components/MobiuscesiumComponent.html":{}}}],["console.log(\"mousedown",{"_index":1483,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["console.log(\"not",{"_index":2868,"title":{},"body":{"injectables/ModuleService.html":{}}}],["console.log(\"origin",{"_index":1354,"title":{},"body":{"classes/FlowchartReader.html":{}}}],["console.log(\"set",{"_index":2831,"title":{},"body":{"components/MobiuscesiumComponent.html":{}}}],["console.log(\"unknown",{"_index":3631,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["console.log('fail",{"_index":667,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["console.log('th",{"_index":1336,"title":{},"body":{"components/FlowchartControlsComponent.html":{},"components/ParameterEditorComponent.html":{},"components/PublishSettingsComponent.html":{}}}],["console.log(`${node.nam",{"_index":1664,"title":{},"body":{"classes/FlowchartUtils.html":{},"classes/NodeUtils.html":{}}}],["console.log(`[${(new",{"_index":661,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["console.log(`ad",{"_index":1360,"title":{},"body":{"classes/FlowchartReader.html":{}}}],["console.log(`attempt",{"_index":1368,"title":{},"body":{"classes/FlowchartReader.html":{}}}],["console.log(`edg",{"_index":1447,"title":{},"body":{"classes/FlowchartRenderUtils.html":{},"classes/FlowchartUtils.html":{}}}],["console.log(`el",{"_index":1397,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["console.log(`error",{"_index":1449,"title":{},"body":{"classes/FlowchartRenderUtils.html":{},"classes/NodeUtils.html":{},"classes/ProcedureUtils.html":{}}}],["console.log(`found",{"_index":2974,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["console.log(`get",{"_index":1119,"title":{},"body":{"classes/FileUtils.html":{}}}],["console.log(`log",{"_index":663,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["console.log(`print",{"_index":976,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["console.log(`set",{"_index":1099,"title":{},"body":{"classes/FileUtils.html":{}}}],["console.log(`successfulli",{"_index":3228,"title":{},"body":{"classes/NodeUtils.html":{}}}],["console.log(data",{"_index":3389,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["console.log(en",{"_index":2972,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["console.log(ex",{"_index":3598,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["console.log(gridhelp",{"_index":3972,"title":{},"body":{"components/SettingComponent.html":{}}}],["console.log(m[\"_nam",{"_index":2865,"title":{},"body":{"injectables/ModuleService.html":{}}}],["console.log(objdt",{"_index":896,"title":{},"body":{"components/DisplayComponent.html":{}}}],["console.log(object.keys(fnsobj",{"_index":2870,"title":{},"body":{"injectables/ModuleService.html":{}}}],["console.log(object.keys(mobj[m[\"_nam",{"_index":2869,"title":{},"body":{"injectables/ModuleService.html":{}}}],["console.log(this._f",{"_index":998,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["console.log(this._fs.flowchart.nodes.length",{"_index":1466,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["console.log(this.data",{"_index":2833,"title":{},"body":{"components/MobiuscesiumComponent.html":{}}}],["console.log(viewer.animation.viewmodel.timeformatt",{"_index":876,"title":{},"body":{"components/DisplayComponent.html":{}}}],["console.servic",{"_index":980,"title":{},"body":{"injectables/ExecuteService.html":{},"injectables/FlowchartService.html":{},"injectables/MobiusService.html":{},"injectables/NodeLibraryService.html":{}}}],["console.warn(\"cannot",{"_index":1651,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["console.warn(\"delet",{"_index":3220,"title":{},"body":{"classes/NodeUtils.html":{}}}],["console.warn(\"id",{"_index":3512,"title":{},"body":{"classes/Procedure.html":{}}}],["console.warn(\"notifi",{"_index":731,"title":{},"body":{"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{}}}],["console.warn(\"reach",{"_index":1632,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["console/console.compon",{"_index":4100,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["consolecompon",{"_index":173,"title":{"components/ConsoleComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["consolehtml",{"_index":958,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["consolemessag",{"_index":949,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["consoleservic",{"_index":266,"title":{"injectables/ConsoleService.html":{}},"body":{"modules/AppModule.html":{},"components/ConsoleComponent.html":{},"injectables/ConsoleService.html":{},"injectables/ExecuteService.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"injectables/MobiusService.html":{},"injectables/NodeLibraryService.html":{},"components/ProcedureEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["consoleservice.ip",{"_index":647,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["conspicu",{"_index":4500,"title":{},"body":{"license.html":{}}}],["const",{"_index":379,"title":{},"body":{"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/DisplayComponent.html":{},"classes/FileService.html":{},"classes/ModuleUtils.html":{},"components/ModuleboxComponent.html":{},"classes/NodeUtils.html":{}}}],["constant",{"_index":669,"title":{"classes/Constants.html":{}},"body":{"classes/Constants.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"coverage.html":{}}}],["constantli",{"_index":4396,"title":{},"body":{"license.html":{}}}],["constants.file_url",{"_index":2806,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["constitut",{"_index":4459,"title":{},"body":{"license.html":{}}}],["constru",{"_index":4667,"title":{},"body":{"license.html":{}}}],["construct",{"_index":1943,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["constructor",{"_index":32,"title":{},"body":{"classes/ActionProcedure.html":{},"injectables/ActiveNodeService.html":{},"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"classes/CodeGenerator.html":{},"injectables/CodeService.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"injectables/ConsoleService.html":{},"classes/DataProcedure.html":{},"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"injectables/ExecuteService.html":{},"components/FileLoadDialogComponent.html":{},"classes/Flowchart.html":{},"components/FlowchartControlsComponent.html":{},"injectables/FlowchartService.html":{},"classes/ForLoopControlProcedure.html":{},"classes/Frame.html":{},"classes/FunctionProcedure.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"interfaces/HasIsPlanar.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"classes/IfControlProcedure.html":{},"components/InfoViewerComponent.html":{},"classes/InputPort.html":{},"components/LandingComponent.html":{},"injectables/LayoutService.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"injectables/MobiusService.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"injectables/NodeLibraryService.html":{},"classes/OutputPort.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"classes/StatementProcedure.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"classes/WhileControlProcedure.html":{},"classes/gis_module.html":{}}}],["constructor($log",{"_index":1510,"title":{},"body":{"injectables/FlowchartService.html":{},"injectables/MobiusService.html":{},"components/ProcedureEditorComponent.html":{}}}],["constructor(_c",{"_index":542,"title":{},"body":{"components/CodeViewerComponent.html":{},"injectables/NodeLibraryService.html":{}}}],["constructor(_f",{"_index":399,"title":{},"body":{"components/CesiumViewerComponent.html":{},"components/EditorComponent.html":{},"injectables/ExecuteService.html":{},"components/GeometryViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterViewerComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["constructor(_mb",{"_index":1281,"title":{},"body":{"components/FlowchartControlsComponent.html":{}}}],["constructor(_rout",{"_index":2758,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["constructor(consoleservic",{"_index":566,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["constructor(data",{"_index":33,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/Flowchart.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["constructor(dataservic",{"_index":1805,"title":{},"body":{"components/GSViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/SettingComponent.html":{}}}],["constructor(dialogref",{"_index":1014,"title":{},"body":{"components/FileLoadDialogComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/PublishSettingsComponent.html":{}}}],["constructor(http",{"_index":2716,"title":{},"body":{"components/MobiusGalleryComponent.html":{}}}],["constructor(injector",{"_index":719,"title":{},"body":{"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/DisplayComponent.html":{},"injectables/LayoutService.html":{},"components/ModuleViewerComponent.html":{},"components/SelectComponent.html":{}}}],["constructor(languag",{"_index":479,"title":{},"body":{"classes/CodeGenerator.html":{}}}],["constructor(layoutservic",{"_index":2668,"title":{},"body":{"components/MobiusEditorComponent.html":{}}}],["constructor(nam",{"_index":1058,"title":{},"body":{"classes/FileUtils.html":{},"interfaces/IModule.html":{},"classes/InputPort.html":{},"classes/Module.html":{},"classes/OutputPort.html":{}}}],["constructor(priv",{"_index":413,"title":{},"body":{"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/EditorComponent.html":{},"injectables/ExecuteService.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartRenderUtils.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/HelpViewerComponent.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleboxComponent.html":{},"injectables/NodeLibraryService.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["constructor(publ",{"_index":1025,"title":{},"body":{"components/FileLoadDialogComponent.html":{},"components/PublishSettingsComponent.html":{}}}],["constructor(sanit",{"_index":2268,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["constructor(titl",{"_index":2370,"title":{},"body":{"classes/IfElseControlProcedure.html":{}}}],["constructor(typ",{"_index":3462,"title":{},"body":{"classes/Procedure.html":{},"classes/StatementProcedure.html":{}}}],["consum",{"_index":4544,"title":{},"body":{"license.html":{}}}],["contact",{"_index":2456,"title":{},"body":{"components/LandingComponent.html":{},"license.html":{}}}],["contain",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartUtils.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"index.html":{},"license.html":{}}}],["container.compon",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"injectables/LayoutService.html":{}}}],["container.component.html",{"_index":4079,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["container.component.scss",{"_index":4078,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["container.component.t",{"_index":4077,"title":{},"body":{"components/ViewerContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:102",{"_index":4094,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["container.component.ts:112",{"_index":4092,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["container.component.ts:116",{"_index":4093,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["container.component.ts:120",{"_index":4086,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["container.component.ts:23",{"_index":4096,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["container.component.ts:33",{"_index":4098,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["container.component.ts:34",{"_index":4085,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["container.component.ts:37",{"_index":4097,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["container.component.ts:38",{"_index":4095,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["container.component.ts:40",{"_index":4099,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["container.component.ts:41",{"_index":4084,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["container.component.ts:47",{"_index":4089,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["container.component.ts:51",{"_index":4088,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["container.component.ts:57",{"_index":4091,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["container/view",{"_index":339,"title":{},"body":{"modules/AppModule.html":{},"injectables/LayoutService.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{}}}],["content",{"_index":2518,"title":{},"body":{"injectables/LayoutService.html":{},"components/MobiusAbout.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"index.html":{},"license.html":{}}}],["content_copi",{"_index":3696,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["content_cut",{"_index":3695,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["content_past",{"_index":3697,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["contents.split('\\n",{"_index":3382,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["context",{"_index":1874,"title":{},"body":{"components/GraphEdgeComponent.html":{},"license.html":{}}}],["context.clearrect(0",{"_index":1903,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["context.linewidth",{"_index":1904,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["context.setlinedash([5",{"_index":1910,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["context.strokestyl",{"_index":1905,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["continu",{"_index":2601,"title":{},"body":{"components/MobiusAbout.html":{},"components/ModuleboxComponent.html":{},"components/ParameterViewerComponent.html":{},"classes/StatementProcedure.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":2622,"title":{},"body":{"components/MobiusAbout.html":{}}}],["contractu",{"_index":4592,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":4671,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":4347,"title":{},"body":{"license.html":{}}}],["contribut",{"_index":2458,"title":{},"body":{"components/LandingComponent.html":{}}}],["contributor",{"_index":4637,"title":{},"body":{"license.html":{}}}],["contributor'",{"_index":4638,"title":{},"body":{"license.html":{}}}],["control",{"_index":1271,"title":{},"body":{"components/FlowchartControlsComponent.html":{},"dependencies.html":{},"index.html":{},"license.html":{}}}],["controls'},{'nam",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["controls.compon",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["controls.component.html",{"_index":1273,"title":{},"body":{"components/FlowchartControlsComponent.html":{}}}],["controls.component.scss",{"_index":1272,"title":{},"body":{"components/FlowchartControlsComponent.html":{}}}],["controls.component.t",{"_index":1270,"title":{},"body":{"components/FlowchartControlsComponent.html":{},"coverage.html":{}}}],["controls.component.ts:105",{"_index":1290,"title":{},"body":{"components/FlowchartControlsComponent.html":{}}}],["controls.component.ts:29",{"_index":1291,"title":{},"body":{"components/FlowchartControlsComponent.html":{}}}],["controls.component.ts:30",{"_index":1288,"title":{},"body":{"components/FlowchartControlsComponent.html":{}}}],["controls.component.ts:33",{"_index":1282,"title":{},"body":{"components/FlowchartControlsComponent.html":{}}}],["controls.component.ts:45",{"_index":1287,"title":{},"body":{"components/FlowchartControlsComponent.html":{}}}],["controls.component.ts:53",{"_index":1286,"title":{},"body":{"components/FlowchartControlsComponent.html":{}}}],["controls.component.ts:60",{"_index":1283,"title":{},"body":{"components/FlowchartControlsComponent.html":{}}}],["controls.component.ts:70",{"_index":1285,"title":{},"body":{"components/FlowchartControlsComponent.html":{}}}],["controls.component.ts:89",{"_index":1289,"title":{},"body":{"components/FlowchartControlsComponent.html":{}}}],["controls/flowchart",{"_index":312,"title":{},"body":{"modules/AppModule.html":{},"components/FlowchartControlsComponent.html":{},"coverage.html":{}}}],["conveni",{"_index":4429,"title":{},"body":{"license.html":{}}}],["convent",{"_index":2007,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["convers",{"_index":1314,"title":{},"body":{"components/FlowchartControlsComponent.html":{}}}],["convert",{"_index":1125,"title":{},"body":{"classes/FileUtils.html":{},"components/MobiusAbout.html":{},"dependencies.html":{}}}],["convey",{"_index":4421,"title":{},"body":{"license.html":{}}}],["coordin",{"_index":1486,"title":{},"body":{"classes/FlowchartRenderUtils.html":{},"dependencies.html":{}}}],["copi",{"_index":2125,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"classes/NodeUtils.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{}}}],["copiedprod",{"_index":3533,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["copy($ev",{"_index":3663,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["copy_nod",{"_index":3131,"title":{},"body":{"classes/NodeUtils.html":{}}}],["copy_node(nod",{"_index":3143,"title":{},"body":{"classes/NodeUtils.html":{}}}],["copy_procedur",{"_index":3703,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["copy_procedure(procedur",{"_index":3712,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["copyleft",{"_index":4343,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":4334,"title":{},"body":{"license.html":{}}}],["core",{"_index":4205,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":4693,"title":{},"body":{"license.html":{}}}],["correspond",{"_index":2550,"title":{},"body":{"injectables/LayoutService.html":{},"license.html":{}}}],["cost",{"_index":4529,"title":{},"body":{"license.html":{}}}],["count",{"_index":706,"title":{},"body":{"classes/DataProcedure.html":{},"components/HelpFundamentals.html":{},"classes/NodeUtils.html":{}}}],["counterclaim",{"_index":4632,"title":{},"body":{"license.html":{}}}],["countri",{"_index":4420,"title":{},"body":{"license.html":{}}}],["cours",{"_index":1968,"title":{},"body":{"components/HelpFundamentals.html":{},"license.html":{}}}],["court",{"_index":4670,"title":{},"body":{"license.html":{}}}],["coven",{"_index":4646,"title":{},"body":{"license.html":{}}}],["cover",{"_index":4413,"title":{},"body":{"license.html":{}}}],["coverag",{"_index":4128,"title":{"coverage.html":{}},"body":{"coverage.html":{},"license.html":{}}}],["crash",{"_index":3414,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["creat",{"_index":1308,"title":{},"body":{"components/FlowchartControlsComponent.html":{},"classes/FlowchartUtils.html":{},"components/HelpFundamentals.html":{},"components/LandingComponent.html":{},"components/MobiusAbout.html":{},"classes/NodeUtils.html":{},"index.html":{}}}],["createmodul",{"_index":2889,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["createmodule(nam",{"_index":2895,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["createview",{"_index":4081,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["createview(component_nam",{"_index":2528,"title":{},"body":{"injectables/LayoutService.html":{},"components/ViewerContainerComponent.html":{}}}],["createview(eviewer.editor",{"_index":2536,"title":{},"body":{"injectables/LayoutService.html":{}}}],["createview(eviewer.flowchart",{"_index":2540,"title":{},"body":{"injectables/LayoutService.html":{}}}],["createview(eviewer.paramet",{"_index":2542,"title":{},"body":{"injectables/LayoutService.html":{}}}],["createview(eviewer.view",{"_index":2538,"title":{},"body":{"injectables/LayoutService.html":{}}}],["creation",{"_index":2202,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["criterion",{"_index":4434,"title":{},"body":{"license.html":{}}}],["cross",{"_index":4630,"title":{},"body":{"license.html":{}}}],["css",{"_index":2824,"title":{},"body":{"components/MobiuscesiumComponent.html":{}}}],["csv",{"_index":4215,"title":{},"body":{"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["ctrl",{"_index":3570,"title":{},"body":{"components/ProcedureEditorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["ctrldown",{"_index":3577,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["cure",{"_index":4610,"title":{},"body":{"license.html":{}}}],["current",{"_index":2128,"title":{},"body":{"components/HelpFundamentals.html":{},"components/LandingComponent.html":{},"components/MobiusAbout.html":{},"components/ModuleboxComponent.html":{},"index.html":{}}}],["current_main",{"_index":2554,"title":{},"body":{"injectables/LayoutService.html":{}}}],["custom",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"license.html":{}}}],["customarili",{"_index":4526,"title":{},"body":{"license.html":{}}}],["customis",{"_index":2453,"title":{},"body":{"components/LandingComponent.html":{}}}],["customiz",{"_index":4279,"title":{},"body":{"index.html":{}}}],["custommaterialmodul",{"_index":262,"title":{"modules/CustomMaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CustomMaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["cut",{"_index":3561,"title":{},"body":{"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["cut($ev",{"_index":3665,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["d",{"_index":4510,"title":{},"body":{"license.html":{}}}],["damag",{"_index":4694,"title":{},"body":{"license.html":{}}}],["danger",{"_index":4400,"title":{},"body":{"license.html":{}}}],["data",{"_index":42,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"components/DisplayComponent.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/FileUtils.html":{},"classes/Flowchart.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartReader.html":{},"injectables/FlowchartService.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"components/GSViewerComponent.html":{},"components/HelpFundamentals.html":{},"interfaces/IGraphNode.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"components/MobiusAbout.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiuscesiumComponent.html":{},"classes/NodeUtils.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"classes/ProcedureFactory.html":{},"classes/ProcedureUtils.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"classes/WhileControlProcedure.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{}}}],["data'},{'nam",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["data.array_nam",{"_index":1721,"title":{},"body":{"classes/ForLoopControlProcedure.html":{}}}],["data.categori",{"_index":103,"title":{},"body":{"classes/ActionProcedure.html":{}}}],["data.condit",{"_index":942,"title":{},"body":{"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["data.funct",{"_index":104,"title":{},"body":{"classes/ActionProcedure.html":{}}}],["data.hasreturn",{"_index":94,"title":{},"body":{"classes/ActionProcedure.html":{}}}],["data.if_condit",{"_index":2385,"title":{},"body":{"classes/IfElseControlProcedure.html":{}}}],["data.input",{"_index":3362,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["data.input.typ",{"_index":3360,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["data.ip",{"_index":648,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["data.modul",{"_index":102,"title":{},"body":{"classes/ActionProcedure.html":{}}}],["data.nod",{"_index":1770,"title":{},"body":{"classes/FunctionProcedure.html":{}}}],["data.params.map(function(p",{"_index":106,"title":{},"body":{"classes/ActionProcedure.html":{}}}],["data.port",{"_index":1771,"title":{},"body":{"classes/FunctionProcedure.html":{}}}],["data.result",{"_index":97,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{}}}],["data.servic",{"_index":725,"title":{},"body":{"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{}}}],["data.valu",{"_index":712,"title":{},"body":{"classes/DataProcedure.html":{}}}],["data.vari",{"_index":1720,"title":{},"body":{"classes/ForLoopControlProcedure.html":{}}}],["data/data.servic",{"_index":775,"title":{},"body":{"components/DisplayComponent.html":{},"modules/GSViewer.html":{},"components/GSViewerComponent.html":{},"modules/MobiusCesium.html":{},"components/MobiuscesiumComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{}}}],["data/datasubscrib",{"_index":774,"title":{},"body":{"components/DisplayComponent.html":{},"components/SelectComponent.html":{}}}],["data[\"_author",{"_index":1220,"title":{},"body":{"classes/Flowchart.html":{}}}],["data[\"_descript",{"_index":1219,"title":{},"body":{"classes/Flowchart.html":{}}}],["data[\"_edg",{"_index":1353,"title":{},"body":{"classes/FlowchartReader.html":{}}}],["data[\"_edit",{"_index":1221,"title":{},"body":{"classes/Flowchart.html":{}}}],["data[\"_globals\"].map(function(in_data",{"_index":1223,"title":{},"body":{"classes/Flowchart.html":{}}}],["data[\"_nam",{"_index":1218,"title":{},"body":{"classes/Flowchart.html":{}}}],["data[\"_nod",{"_index":1351,"title":{},"body":{"classes/FlowchartReader.html":{}}}],["dataarr",{"_index":3786,"title":{},"body":{"components/SelectComponent.html":{}}}],["databas",{"_index":664,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["datacompon",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"modules/MobiusCesium.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dataflow",{"_index":2038,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["dataprocedur",{"_index":704,"title":{"classes/DataProcedure.html":{}},"body":{"classes/DataProcedure.html":{},"classes/ProcedureFactory.html":{},"coverage.html":{}}}],["dataprocedure(data",{"_index":3643,"title":{},"body":{"classes/ProcedureFactory.html":{}}}],["dataprocedure.count",{"_index":711,"title":{},"body":{"classes/DataProcedure.html":{}}}],["dataservic",{"_index":718,"title":{},"body":{"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/DisplayComponent.html":{},"modules/GSViewer.html":{},"components/GSViewerComponent.html":{},"modules/MobiusCesium.html":{},"components/MobiuscesiumComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datasource.entities.valu",{"_index":856,"title":{},"body":{"components/DisplayComponent.html":{}}}],["datasubscrib",{"_index":715,"title":{"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{}},"body":{"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/DisplayComponent.html":{},"components/SelectComponent.html":{},"coverage.html":{}}}],["datasubscriber:19",{"_index":762,"title":{},"body":{"components/DisplayComponent.html":{},"components/SelectComponent.html":{}}}],["datasubscriber:7",{"_index":773,"title":{},"body":{"components/DisplayComponent.html":{},"components/SelectComponent.html":{}}}],["datasubscriber:8",{"_index":772,"title":{},"body":{"components/DisplayComponent.html":{},"components/SelectComponent.html":{}}}],["datasubscriber:9",{"_index":771,"title":{},"body":{"components/DisplayComponent.html":{},"components/SelectComponent.html":{}}}],["date",{"_index":655,"title":{},"body":{"injectables/ConsoleService.html":{},"components/DisplayComponent.html":{},"license.html":{}}}],["date()).gettim",{"_index":1683,"title":{},"body":{"classes/FlowchartUtils.html":{},"classes/FlowchartWriter.html":{}}}],["date()).toisostr",{"_index":662,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["date(gregoriandt.year",{"_index":891,"title":{},"body":{"components/DisplayComponent.html":{}}}],["date:'mediumtim",{"_index":593,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["date:\\'mediumtim",{"_index":594,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["datepip",{"_index":578,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["day",{"_index":811,"title":{},"body":{"components/DisplayComponent.html":{},"license.html":{}}}],["debug",{"_index":633,"title":{},"body":{"injectables/ConsoleService.html":{},"components/MobiusAbout.html":{},"miscellaneous/enumerations.html":{}}}],["decemb",{"_index":4487,"title":{},"body":{"license.html":{}}}],["decid",{"_index":4684,"title":{},"body":{"license.html":{}}}],["declar",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"modules/GSViewer.html":{},"components/HelpFundamentals.html":{},"modules/MobiusCesium.html":{},"overview.html":{}}}],["declin",{"_index":4588,"title":{},"body":{"license.html":{}}}],["decor",{"_index":574,"title":{},"body":{"components/ConsoleComponent.html":{},"classes/FileUtils.html":{},"components/FlowchartControlsComponent.html":{},"components/GraphEdgeComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/PublishSettingsComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["decreas",{"_index":2177,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["decrement",{"_index":2176,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["deem",{"_index":4477,"title":{},"body":{"license.html":{}}}],["deeper",{"_index":2114,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["def",{"_index":2991,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["default",{"_index":46,"title":{},"body":{"classes/ActionProcedure.html":{},"injectables/ActiveNodeService.html":{},"components/CesiumViewerComponent.html":{},"injectables/CodeService.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"injectables/ConsoleService.html":{},"classes/DataProcedure.html":{},"components/EditorComponent.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"injectables/ExecuteService.html":{},"classes/FileUtils.html":{},"classes/Flowchart.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpViewerComponent.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/InputPort.html":{},"injectables/LayoutService.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"injectables/MobiusService.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"injectables/ModuleService.html":{},"classes/ModuleUtils.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"injectables/NodeLibraryService.html":{},"classes/OutputPort.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"pipes/PortTypePipe.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{},"classes/ProcedureFactory.html":{},"components/PublishSettingsComponent.html":{},"classes/StatementProcedure.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"classes/WhileControlProcedure.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["default(input",{"_index":3341,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["default_nam",{"_index":3174,"title":{},"body":{"classes/NodeUtils.html":{}}}],["default_node_nam",{"_index":1615,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["defect",{"_index":4691,"title":{},"body":{"license.html":{}}}],["defens",{"_index":4669,"title":{},"body":{"license.html":{}}}],["defin",{"_index":36,"title":{},"body":{"classes/ActionProcedure.html":{},"injectables/ActiveNodeService.html":{},"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"classes/CodeFactory.html":{},"classes/CodeGenerator.html":{},"injectables/CodeService.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"injectables/ConsoleService.html":{},"classes/Constants.html":{},"classes/DataProcedure.html":{},"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"injectables/ExecuteService.html":{},"components/FileLoadDialogComponent.html":{},"classes/FileService.html":{},"classes/FileUtils.html":{},"classes/Flowchart.html":{},"classes/FlowchartConnectionUtils.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"classes/FlowchartWriter.html":{},"classes/ForLoopControlProcedure.html":{},"classes/Frame.html":{},"classes/FunctionProcedure.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"interfaces/HasIsPlanar.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IGraphNode.html":{},"interfaces/IModule.html":{},"interfaces/IPort.html":{},"interfaces/IProcedure.html":{},"classes/IdGenerator.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"components/InfoViewerComponent.html":{},"classes/InputPort.html":{},"components/LandingComponent.html":{},"injectables/LayoutService.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"injectables/MobiusService.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"classes/ModuleUtils.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"injectables/NodeLibraryService.html":{},"classes/NodeUtils.html":{},"classes/OutputPort.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"pipes/PortTypePipe.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{},"classes/ProcedureFactory.html":{},"components/ProcedureItemComponent.html":{},"classes/ProcedureUtils.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{},"classes/StatementProcedure.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"classes/WhileControlProcedure.html":{},"classes/gis_module.html":{},"license.html":{}}}],["definit",{"_index":4295,"title":{},"body":{"index.html":{},"license.html":{}}}],["delet",{"_index":1254,"title":{},"body":{"classes/FlowchartConnectionUtils.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"components/MobiusAbout.html":{},"classes/NodeUtils.html":{},"components/ParameterEditorComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["delete($ev",{"_index":3667,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["delete_child",{"_index":3704,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["delete_child(procedur",{"_index":3714,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["delete_edg",{"_index":1580,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["delete_edge(flowchart",{"_index":1591,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["delete_edges(flowchart",{"_index":1594,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["delete_library_nod",{"_index":3097,"title":{},"body":{"injectables/NodeLibraryService.html":{}}}],["delete_library_node(nodeid",{"_index":3101,"title":{},"body":{"injectables/NodeLibraryService.html":{}}}],["delete_nod",{"_index":1581,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["delete_node(flowchart",{"_index":1597,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["delete_node(node_id",{"_index":1468,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["delete_port",{"_index":1582,"title":{},"body":{"classes/FlowchartUtils.html":{},"classes/NodeUtils.html":{},"components/ParameterEditorComponent.html":{}}}],["delete_port(ev",{"_index":3303,"title":{},"body":{"components/ParameterEditorComponent.html":{}}}],["delete_port(flowchart",{"_index":1600,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["delete_port(nod",{"_index":3146,"title":{},"body":{"classes/NodeUtils.html":{}}}],["delete_port_by_index",{"_index":3132,"title":{},"body":{"classes/NodeUtils.html":{}}}],["delete_port_by_index(nod",{"_index":3148,"title":{},"body":{"classes/NodeUtils.html":{}}}],["delete_procedur",{"_index":3133,"title":{},"body":{"classes/NodeUtils.html":{}}}],["delete_procedure(nod",{"_index":3151,"title":{},"body":{"classes/NodeUtils.html":{}}}],["deleteedg",{"_index":1502,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["deleteedge(edgeindex",{"_index":1518,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["deleteglob",{"_index":3754,"title":{},"body":{"components/PublishSettingsComponent.html":{}}}],["deleteglobal(index",{"_index":3758,"title":{},"body":{"components/PublishSettingsComponent.html":{}}}],["deletenod",{"_index":3077,"title":{},"body":{"components/NodeLibraryComponent.html":{}}}],["deletenode($ev",{"_index":3084,"title":{},"body":{"components/NodeLibraryComponent.html":{}}}],["deleteport",{"_index":1503,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["deleteport(typ",{"_index":1521,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["deni",{"_index":4359,"title":{},"body":{"license.html":{}}}],["denomin",{"_index":2170,"title":{},"body":{"components/HelpFundamentals.html":{},"license.html":{}}}],["depend",{"_index":250,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"classes/FlowchartUtils.html":{},"modules/GSViewer.html":{},"modules/MobiusCesium.html":{},"dependencies.html":{},"overview.html":{}}}],["depriv",{"_index":4652,"title":{},"body":{"license.html":{}}}],["derek",{"_index":2112,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["derek\"pass",{"_index":2252,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["descript",{"_index":1169,"title":{},"body":{"classes/Flowchart.html":{},"interfaces/IFlowchart.html":{},"components/PublishSettingsComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["description(valu",{"_index":1227,"title":{},"body":{"classes/Flowchart.html":{}}}],["design",{"_index":2448,"title":{},"body":{"components/LandingComponent.html":{},"classes/ProcedureUtils.html":{},"license.html":{}}}],["detail",{"_index":2061,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"license.html":{}}}],["details.th",{"_index":4726,"title":{},"body":{"license.html":{}}}],["determin",{"_index":1680,"title":{},"body":{"classes/FlowchartUtils.html":{},"license.html":{}}}],["develop",{"_index":2443,"title":{},"body":{"components/LandingComponent.html":{},"index.html":{},"license.html":{}}}],["devic",{"_index":4378,"title":{},"body":{"license.html":{}}}],["dialog",{"_index":1009,"title":{},"body":{"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"injectables/FlowchartService.html":{},"components/MobiusEditorComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/PublishSettingsComponent.html":{}}}],["dialog'},{'nam",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["dialog.compon",{"_index":322,"title":{},"body":{"modules/AppModule.html":{},"components/ParameterEditorComponent.html":{},"components/PublishSettingsComponent.html":{}}}],["dialog.component.t",{"_index":1008,"title":{},"body":{"components/FileLoadDialogComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:103",{"_index":3340,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["dialog.component.ts:111",{"_index":3344,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["dialog.component.ts:14",{"_index":1016,"title":{},"body":{"components/FileLoadDialogComponent.html":{}}}],["dialog.component.ts:15",{"_index":3357,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["dialog.component.ts:16",{"_index":1021,"title":{},"body":{"components/FileLoadDialogComponent.html":{},"components/ParameterSettingsDialogComponent.html":{}}}],["dialog.component.ts:17",{"_index":3356,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":3338,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["dialog.component.ts:19",{"_index":1020,"title":{},"body":{"components/FileLoadDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":3355,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["dialog.component.ts:23",{"_index":1018,"title":{},"body":{"components/FileLoadDialogComponent.html":{},"components/ParameterSettingsDialogComponent.html":{}}}],["dialog.component.ts:28",{"_index":3350,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["dialog.component.ts:47",{"_index":3352,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["dialog.component.ts:66",{"_index":3342,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["dialog.component.ts:70",{"_index":3348,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["dialog.component.ts:74",{"_index":3354,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["dialog.component.ts:86",{"_index":3346,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["dialog.html",{"_index":1010,"title":{},"body":{"components/FileLoadDialogComponent.html":{},"components/ParameterSettingsDialogComponent.html":{}}}],["dialogref",{"_index":1011,"title":{},"body":{"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/PublishSettingsComponent.html":{}}}],["dialogref.afterclosed().subscribe(result",{"_index":1335,"title":{},"body":{"components/FlowchartControlsComponent.html":{},"components/ParameterEditorComponent.html":{},"components/PublishSettingsComponent.html":{}}}],["dialogtext",{"_index":2696,"title":{},"body":{"components/MobiusEditorComponent.html":{}}}],["differ",{"_index":1971,"title":{},"body":{"components/HelpFundamentals.html":{},"components/LandingComponent.html":{},"components/MobiusAbout.html":{},"classes/NodeUtils.html":{},"index.html":{},"license.html":{}}}],["direct",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"license.html":{}}}],["directli",{"_index":2646,"title":{},"body":{"components/MobiusAbout.html":{},"components/ProcedureEditorComponent.html":{},"license.html":{}}}],["disabl",{"_index":1129,"title":{},"body":{"classes/FileUtils.html":{},"classes/FlowchartUtils.html":{},"classes/InputPort.html":{},"components/MobiusAbout.html":{},"classes/OutputPort.html":{}}}],["disable\",\"stamen",{"_index":782,"title":{},"body":{"components/DisplayComponent.html":{}}}],["discard",{"_index":2004,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["disclaim",{"_index":4493,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":1253,"title":{},"body":{"classes/FlowchartConnectionUtils.html":{},"classes/FlowchartUtils.html":{}}}],["disconnect_edges_with_port_idx",{"_index":1238,"title":{},"body":{"classes/FlowchartConnectionUtils.html":{}}}],["disconnect_edges_with_port_idx(flowchart",{"_index":1241,"title":{},"body":{"classes/FlowchartConnectionUtils.html":{}}}],["disconnect_nod",{"_index":1239,"title":{},"body":{"classes/FlowchartConnectionUtils.html":{}}}],["disconnect_node(flowchart",{"_index":1245,"title":{},"body":{"classes/FlowchartConnectionUtils.html":{}}}],["disconnect_port",{"_index":1583,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["disconnect_port(flowchart",{"_index":1602,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["disconnectnod",{"_index":1504,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["disconnectnode(nodeindex",{"_index":1523,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["disconnectport",{"_index":1505,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["disconnectport(typ",{"_index":1525,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["discriminatori",{"_index":4660,"title":{},"body":{"license.html":{}}}],["disk",{"_index":1313,"title":{},"body":{"components/FlowchartControlsComponent.html":{}}}],["display",{"_index":739,"title":{},"body":{"components/DisplayComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusGalleryComponent.html":{},"components/ProcedureEditorComponent.html":{},"index.html":{},"license.html":{}}}],["display'},{'nam",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["display.copmponent.css",{"_index":740,"title":{},"body":{"components/DisplayComponent.html":{}}}],["display.copmponent.html",{"_index":741,"title":{},"body":{"components/DisplayComponent.html":{}}}],["display_nod",{"_index":1201,"title":{},"body":{"classes/Flowchart.html":{},"interfaces/IFlowchart.html":{}}}],["display_node(index",{"_index":1235,"title":{},"body":{"classes/Flowchart.html":{}}}],["displaycompon",{"_index":177,"title":{"components/DisplayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"modules/MobiusCesium.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["display{{fw.display_nod",{"_index":3780,"title":{},"body":{"components/PublishSettingsComponent.html":{}}}],["distance_factor",{"_index":1923,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["distinguish",{"_index":4681,"title":{},"body":{"license.html":{}}}],["distribut",{"_index":4340,"title":{},"body":{"license.html":{}}}],["divid",{"_index":2168,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{}}}],["divis",{"_index":2167,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["document",{"_index":1964,"title":{},"body":{"components/HelpFundamentals.html":{},"components/HelpViewerComponent.html":{},"coverage.html":{},"license.html":{}}}],["document.body.appendchild(a",{"_index":436,"title":{},"body":{"components/CesiumViewerComponent.html":{},"classes/FileService.html":{}}}],["document.body.removechild(a",{"_index":444,"title":{},"body":{"components/CesiumViewerComponent.html":{},"classes/FileService.html":{}}}],["document.createelement('a",{"_index":435,"title":{},"body":{"components/CesiumViewerComponent.html":{},"classes/FileService.html":{}}}],["document.getelementbyid(nam",{"_index":1393,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["document[\"documentmod",{"_index":2708,"title":{},"body":{"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{}}}],["doesn't",{"_index":1305,"title":{},"body":{"components/FlowchartControlsComponent.html":{}}}],["dom",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["domain",{"_index":2449,"title":{},"body":{"components/LandingComponent.html":{},"license.html":{}}}],["domsanit",{"_index":2269,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["don't",{"_index":4109,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["dont",{"_index":1643,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["doubt",{"_index":4550,"title":{},"body":{"license.html":{}}}],["down",{"_index":2599,"title":{},"body":{"components/MobiusAbout.html":{},"components/ProcedureEditorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["download",{"_index":1036,"title":{},"body":{"classes/FileService.html":{},"classes/NodeUtils.html":{}}}],["downloadasjson",{"_index":1032,"title":{},"body":{"classes/FileService.html":{}}}],["downloadasjson(filestr",{"_index":1033,"title":{},"body":{"classes/FileService.html":{}}}],["downloadcontent(blob",{"_index":431,"title":{},"body":{"components/CesiumViewerComponent.html":{}}}],["downloadlibrari",{"_index":3078,"title":{},"body":{"components/NodeLibraryComponent.html":{}}}],["downstream",{"_index":4617,"title":{},"body":{"license.html":{}}}],["drag",{"_index":2187,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"components/ProcedureEditorComponent.html":{}}}],["drawedg",{"_index":1832,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["drop",{"_index":2620,"title":{},"body":{"components/MobiusAbout.html":{},"components/ProcedureEditorComponent.html":{}}}],["dropdown",{"_index":3457,"title":{},"body":{"pipes/PortTypePipe.html":{},"components/PublishSettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["duplic",{"_index":3163,"title":{},"body":{"classes/NodeUtils.html":{}}}],["duplicate_nod",{"_index":1464,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["durabl",{"_index":4525,"title":{},"body":{"license.html":{}}}],["dure",{"_index":3596,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["dwell",{"_index":4549,"title":{},"body":{"license.html":{}}}],["dynam",{"_index":4191,"title":{},"body":{"dependencies.html":{},"index.html":{},"license.html":{}}}],["e",{"_index":1269,"title":{},"body":{"classes/FlowchartConnectionUtils.html":{},"classes/FlowchartUtils.html":{},"license.html":{}}}],["e.g",{"_index":2020,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["e.returnvalu",{"_index":2697,"title":{},"body":{"components/MobiusEditorComponent.html":{}}}],["e=0",{"_index":1268,"title":{},"body":{"classes/FlowchartConnectionUtils.html":{},"classes/FlowchartUtils.html":{}}}],["e^100",{"_index":1922,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["e_data",{"_index":1363,"title":{},"body":{"classes/FlowchartReader.html":{}}}],["e_data.input_address[0",{"_index":1365,"title":{},"body":{"classes/FlowchartReader.html":{}}}],["e_data.output_address[0",{"_index":1367,"title":{},"body":{"classes/FlowchartReader.html":{}}}],["each",{"_index":1947,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"components/ProcedureItemComponent.html":{},"license.html":{}}}],["earlier",{"_index":4412,"title":{},"body":{"license.html":{}}}],["earth\\u00a0ii\",\"blu",{"_index":787,"title":{},"body":{"components/DisplayComponent.html":{}}}],["easier",{"_index":2237,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{}}}],["easiest",{"_index":2132,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["easili",{"_index":2083,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["econsolemessagetyp",{"_index":609,"title":{},"body":{"injectables/ConsoleService.html":{},"injectables/ExecuteService.html":{},"injectables/FlowchartService.html":{},"miscellaneous/enumerations.html":{}}}],["econsolemessagetype.error",{"_index":1003,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["econsolemessagetype.gener",{"_index":612,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["econsolemessagetype.print",{"_index":995,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["edg",{"_index":1191,"title":{},"body":{"classes/Flowchart.html":{},"classes/FlowchartConnectionUtils.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"components/GraphEdgeComponent.html":{},"interfaces/IFlowchart.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{},"index.html":{}}}],["edge'},{'nam",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["edge.compon",{"_index":360,"title":{},"body":{"modules/AppModule.html":{}}}],["edge.component.html",{"_index":1828,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["edge.component.scss",{"_index":1827,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["edge.component.t",{"_index":1826,"title":{},"body":{"components/GraphEdgeComponent.html":{},"coverage.html":{}}}],["edge.component.ts:10",{"_index":1846,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["edge.component.ts:11",{"_index":1847,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["edge.component.ts:12",{"_index":1848,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["edge.component.ts:13",{"_index":1849,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["edge.component.ts:14",{"_index":1865,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["edge.component.ts:16",{"_index":1868,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["edge.component.ts:18",{"_index":1864,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["edge.component.ts:194",{"_index":1861,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["edge.component.ts:20",{"_index":1867,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["edge.component.ts:21",{"_index":1866,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["edge.component.ts:22",{"_index":1869,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["edge.component.ts:23",{"_index":1845,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["edge.component.ts:27",{"_index":1860,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["edge.component.ts:34",{"_index":1859,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["edge.component.ts:38",{"_index":1862,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["edge.component.ts:45",{"_index":1856,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["edge.component.ts:50",{"_index":1853,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["edge.component.ts:55",{"_index":1857,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["edge.component.ts:59",{"_index":1852,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["edge.component.ts:63",{"_index":1855,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["edge.component.ts:67",{"_index":1851,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["edge.component.ts:71",{"_index":1858,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["edge.component.ts:75",{"_index":1850,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["edge.input_address[0",{"_index":1619,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["edge.input_address[1",{"_index":1443,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["edge.output_address[0",{"_index":1621,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["edge.output_address[1",{"_index":1446,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["edge/graph",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"components/GraphEdgeComponent.html":{},"coverage.html":{}}}],["edge[\"inputposit",{"_index":1440,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["edge[\"outputposit",{"_index":1444,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["edgeclick",{"_index":1833,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["edgeid",{"_index":1595,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["edgeids.indexof(index",{"_index":1662,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["edgeidx",{"_index":1592,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["edgeindex",{"_index":1520,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["edges(edg",{"_index":1232,"title":{},"body":{"classes/Flowchart.html":{}}}],["edges.indexof(index",{"_index":1265,"title":{},"body":{"classes/FlowchartConnectionUtils.html":{}}}],["edges[e].input_address[1",{"_index":1628,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["edges[e].output_address[0",{"_index":1630,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["edges[e].output_address[1",{"_index":1631,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["edges_data",{"_index":1352,"title":{},"body":{"classes/FlowchartReader.html":{}}}],["edgesarr",{"_index":1624,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["edit",{"_index":1196,"title":{},"body":{"classes/Flowchart.html":{},"interfaces/IFlowchart.html":{},"components/MobiusViewerComponent.html":{},"components/PublishSettingsComponent.html":{},"index.html":{}}}],["editable(valu",{"_index":1233,"title":{},"body":{"classes/Flowchart.html":{}}}],["editor",{"_index":298,"title":{},"body":{"modules/AppModule.html":{},"components/CodeViewerComponent.html":{},"components/EditorComponent.html":{},"injectables/LayoutService.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/SelectComponent.html":{},"components/ViewerContainerComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["editor'},{'nam",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["editor.compon",{"_index":318,"title":{},"body":{"modules/AppModule.html":{}}}],["editor.component.html",{"_index":913,"title":{},"body":{"components/EditorComponent.html":{},"components/MobiusEditorComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ProcedureEditorComponent.html":{}}}],["editor.component.scss",{"_index":912,"title":{},"body":{"components/EditorComponent.html":{},"components/MobiusEditorComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ProcedureEditorComponent.html":{}}}],["editor.component.t",{"_index":2664,"title":{},"body":{"components/MobiusEditorComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ProcedureEditorComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["editor.component.ts:121",{"_index":3552,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["editor.component.ts:16",{"_index":2671,"title":{},"body":{"components/MobiusEditorComponent.html":{}}}],["editor.component.ts:17",{"_index":2670,"title":{},"body":{"components/MobiusEditorComponent.html":{}}}],["editor.component.ts:179",{"_index":3550,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["editor.component.ts:181",{"_index":3556,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["editor.component.ts:19",{"_index":2674,"title":{},"body":{"components/MobiusEditorComponent.html":{}}}],["editor.component.ts:20",{"_index":2676,"title":{},"body":{"components/MobiusEditorComponent.html":{}}}],["editor.component.ts:201",{"_index":3547,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["editor.component.ts:206",{"_index":3546,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["editor.component.ts:21",{"_index":2675,"title":{},"body":{"components/MobiusEditorComponent.html":{},"components/ParameterEditorComponent.html":{}}}],["editor.component.ts:210",{"_index":3553,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["editor.component.ts:22",{"_index":2669,"title":{},"body":{"components/MobiusEditorComponent.html":{}}}],["editor.component.ts:29",{"_index":3317,"title":{},"body":{"components/ParameterEditorComponent.html":{}}}],["editor.component.ts:37",{"_index":3318,"title":{},"body":{"components/ParameterEditorComponent.html":{},"components/ProcedureEditorComponent.html":{}}}],["editor.component.ts:38",{"_index":3300,"title":{},"body":{"components/ParameterEditorComponent.html":{},"components/ProcedureEditorComponent.html":{}}}],["editor.component.ts:40",{"_index":3311,"title":{},"body":{"components/ParameterEditorComponent.html":{}}}],["editor.component.ts:42",{"_index":3306,"title":{},"body":{"components/ParameterEditorComponent.html":{},"components/ProcedureEditorComponent.html":{}}}],["editor.component.ts:46",{"_index":3305,"title":{},"body":{"components/ParameterEditorComponent.html":{}}}],["editor.component.ts:47",{"_index":2673,"title":{},"body":{"components/MobiusEditorComponent.html":{}}}],["editor.component.ts:49",{"_index":3554,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["editor.component.ts:53",{"_index":3304,"title":{},"body":{"components/ParameterEditorComponent.html":{}}}],["editor.component.ts:57",{"_index":3559,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["editor.component.ts:59",{"_index":3308,"title":{},"body":{"components/ParameterEditorComponent.html":{}}}],["editor.component.ts:61",{"_index":3545,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["editor.component.ts:69",{"_index":2672,"title":{},"body":{"components/MobiusEditorComponent.html":{}}}],["editor.component.ts:75",{"_index":3302,"title":{},"body":{"components/ParameterEditorComponent.html":{}}}],["editor.component.ts:86",{"_index":3310,"title":{},"body":{"components/ParameterEditorComponent.html":{},"components/ProcedureEditorComponent.html":{}}}],["editor.component.ts:95",{"_index":3549,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["editor/mobiu",{"_index":362,"title":{},"body":{"modules/AppModule.html":{},"components/MobiusEditorComponent.html":{},"coverage.html":{}}}],["editor/paramet",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/PublishSettingsComponent.html":{},"coverage.html":{}}}],["editor/procedur",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["editorcompon",{"_index":179,"title":{"components/EditorComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"injectables/LayoutService.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["editors/paramet",{"_index":3768,"title":{},"body":{"components/PublishSettingsComponent.html":{}}}],["effect",{"_index":2644,"title":{},"body":{"components/MobiusAbout.html":{},"components/MobiuscesiumComponent.html":{},"license.html":{}}}],["effort",{"_index":4626,"title":{},"body":{"license.html":{}}}],["eg",{"_index":2017,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["el",{"_index":1301,"title":{},"body":{"components/FlowchartControlsComponent.html":{},"classes/FlowchartRenderUtils.html":{},"components/ParameterViewerComponent.html":{}}}],["el.click",{"_index":1304,"title":{},"body":{"components/FlowchartControlsComponent.html":{}}}],["el.offsetleft",{"_index":1406,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["el.offsetparent.offsetwidth",{"_index":1409,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["el.offsettop",{"_index":1408,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["el:elementref",{"_index":3403,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["el_condit",{"_index":2373,"title":{},"body":{"classes/IfElseControlProcedure.html":{}}}],["electron",{"_index":4720,"title":{},"body":{"license.html":{}}}],["element",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["elementref",{"_index":573,"title":{},"body":{"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartRenderUtils.html":{},"components/GraphEdgeComponent.html":{},"components/MenuComponent.html":{},"components/ParameterViewerComponent.html":{},"components/SelectComponent.html":{}}}],["else_control",{"_index":2379,"title":{},"body":{"classes/IfElseControlProcedure.html":{}}}],["elsecontrol",{"_index":3201,"title":{},"body":{"classes/NodeUtils.html":{},"miscellaneous/enumerations.html":{}}}],["elsecontrolprocedur",{"_index":935,"title":{"classes/ElseControlProcedure.html":{}},"body":{"classes/ElseControlProcedure.html":{},"classes/ProcedureFactory.html":{},"coverage.html":{}}}],["elsecontrolprocedure(data",{"_index":3649,"title":{},"body":{"classes/ProcedureFactory.html":{}}}],["elseif",{"_index":3195,"title":{},"body":{"classes/NodeUtils.html":{},"miscellaneous/enumerations.html":{}}}],["elseifcontrol",{"_index":4260,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["elseifcontrolprocedur",{"_index":943,"title":{"classes/ElseIfControlProcedure.html":{}},"body":{"classes/ElseIfControlProcedure.html":{},"classes/ProcedureFactory.html":{},"coverage.html":{}}}],["elseifcontrolprocedure(data",{"_index":3650,"title":{},"body":{"classes/ProcedureFactory.html":{}}}],["embodi",{"_index":4522,"title":{},"body":{"license.html":{}}}],["employ",{"_index":4730,"title":{},"body":{"license.html":{}}}],["empti",{"_index":2110,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["en",{"_index":2968,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["en[0",{"_index":2969,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["en[1",{"_index":2971,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["enabl",{"_index":642,"title":{},"body":{"injectables/ConsoleService.html":{},"classes/FileUtils.html":{},"classes/FlowchartUtils.html":{},"interfaces/IGraphNode.html":{},"interfaces/IPort.html":{},"interfaces/IProcedure.html":{},"classes/InputPort.html":{},"components/MobiusAbout.html":{},"classes/OutputPort.html":{},"classes/Procedure.html":{},"index.html":{},"license.html":{}}}],["enabled(valu",{"_index":1130,"title":{},"body":{"classes/FileUtils.html":{},"classes/Procedure.html":{}}}],["enabletrac",{"_index":385,"title":{},"body":{"modules/AppModule.html":{}}}],["encapsul",{"_index":555,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["encount",{"_index":2189,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["end",{"_index":2595,"title":{},"body":{"components/MobiusAbout.html":{},"license.html":{}}}],["endpoint",{"_index":1915,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["enforc",{"_index":4496,"title":{},"body":{"license.html":{}}}],["ensur",{"_index":4539,"title":{},"body":{"license.html":{}}}],["enter",{"_index":4664,"title":{},"body":{"license.html":{}}}],["entir",{"_index":4286,"title":{},"body":{"index.html":{},"license.html":{}}}],["entiti",{"_index":855,"title":{},"body":{"components/DisplayComponent.html":{},"classes/gis_module.html":{},"license.html":{}}}],["entity.isplanar",{"_index":1746,"title":{},"body":{"classes/Frame.html":{},"interfaces/HasIsPlanar.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"classes/gis_module.html":{}}}],["entity.polygon.shadow",{"_index":858,"title":{},"body":{"components/DisplayComponent.html":{}}}],["entrycompon",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["enum",{"_index":631,"title":{},"body":{"injectables/ConsoleService.html":{},"components/ProcedureEditorComponent.html":{}}}],["enumer",{"_index":4240,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":4180,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["equal",{"_index":2160,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["equival",{"_index":4462,"title":{},"body":{"license.html":{}}}],["err",{"_index":3250,"title":{},"body":{"classes/NodeUtils.html":{}}}],["erron",{"_index":4377,"title":{},"body":{"license.html":{}}}],["error",{"_index":632,"title":{},"body":{"injectables/ConsoleService.html":{},"components/HelpFundamentals.html":{},"interfaces/IProcedure.html":{},"components/MobiusAbout.html":{},"classes/Procedure.html":{},"components/TextViewerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["error(\"cannot",{"_index":3746,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["error(\"invalid",{"_index":1637,"title":{},"body":{"classes/FlowchartUtils.html":{},"classes/NodeUtils.html":{}}}],["error(\"no",{"_index":3736,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["error(\"not",{"_index":523,"title":{},"body":{"classes/CodeGenerator.html":{}}}],["error(\"unknown",{"_index":462,"title":{},"body":{"classes/CodeFactory.html":{},"classes/FlowchartRenderUtils.html":{}}}],["error(\"unrecognis",{"_index":3182,"title":{},"body":{"classes/NodeUtils.html":{}}}],["error(`el",{"_index":1395,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["error(`illeg",{"_index":3745,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["error(`invalid",{"_index":3652,"title":{},"body":{"classes/ProcedureFactory.html":{}}}],["error(messag",{"_index":2688,"title":{},"body":{"components/MobiusEditorComponent.html":{}}}],["error(valu",{"_index":3517,"title":{},"body":{"classes/Procedure.html":{}}}],["error.funct",{"_index":2255,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["errormessag",{"_index":1001,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["essenti",{"_index":4444,"title":{},"body":{"license.html":{}}}],["etc",{"_index":2019,"title":{},"body":{"components/HelpFundamentals.html":{},"index.html":{}}}],["evalu",{"_index":2450,"title":{},"body":{"components/LandingComponent.html":{}}}],["even",{"_index":4702,"title":{},"body":{"license.html":{}}}],["event",{"_index":1484,"title":{},"body":{"classes/FlowchartRenderUtils.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/SettingComponent.html":{},"license.html":{}}}],["event.ctrlkey",{"_index":3578,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["event.keycod",{"_index":3576,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["event.metakey",{"_index":3579,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["event.preventdefault",{"_index":1488,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["event.shiftkey",{"_index":3582,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["event.srcelement.valu",{"_index":3363,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{}}}],["event.stoppropag",{"_index":1489,"title":{},"body":{"classes/FlowchartRenderUtils.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{}}}],["event.target.fil",{"_index":3405,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["event.target.valu",{"_index":3424,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["eventemitt",{"_index":132,"title":{},"body":{"injectables/ActiveNodeService.html":{},"injectables/ExecuteService.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"injectables/MobiusService.html":{},"components/ProcedureItemComponent.html":{}}}],["everyon",{"_index":4338,"title":{},"body":{"license.html":{}}}],["everyth",{"_index":2080,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["eview",{"_index":2526,"title":{},"body":{"injectables/LayoutService.html":{},"components/PanelComponent.html":{},"miscellaneous/enumerations.html":{}}}],["eviewer.editor",{"_index":2521,"title":{},"body":{"injectables/LayoutService.html":{}}}],["eviewer.flowchart",{"_index":2519,"title":{},"body":{"injectables/LayoutService.html":{}}}],["eviewer.paramet",{"_index":2522,"title":{},"body":{"injectables/LayoutService.html":{}}}],["eviewer.view",{"_index":2520,"title":{},"body":{"injectables/LayoutService.html":{}}}],["evt",{"_index":1323,"title":{},"body":{"components/FlowchartControlsComponent.html":{}}}],["evt.target[\"result",{"_index":1324,"title":{},"body":{"components/FlowchartControlsComponent.html":{}}}],["ex",{"_index":1002,"title":{},"body":{"injectables/ExecuteService.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"classes/ProcedureUtils.html":{}}}],["ex.execut",{"_index":3428,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["exact",{"_index":3144,"title":{},"body":{"classes/NodeUtils.html":{},"license.html":{}}}],["exactli",{"_index":1973,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["exampl",{"_index":1956,"title":{},"body":{"components/HelpFundamentals.html":{},"components/HelpViewerComponent.html":{},"components/MobiusAbout.html":{},"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{},"index.html":{},"license.html":{}}}],["except",{"_index":4419,"title":{},"body":{"license.html":{}}}],["exclud",{"_index":2992,"title":{},"body":{"classes/ModuleUtils.html":{},"license.html":{}}}],["exclus",{"_index":4466,"title":{},"body":{"license.html":{}}}],["excus",{"_index":4672,"title":{},"body":{"license.html":{}}}],["execut",{"_index":951,"title":{},"body":{"injectables/ExecuteService.html":{},"classes/FlowchartUtils.html":{},"components/HelpFundamentals.html":{},"components/LandingComponent.html":{},"components/MobiusAbout.html":{},"classes/NodeUtils.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"index.html":{},"license.html":{}}}],["execute(flowchart",{"_index":1604,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["execute_nod",{"_index":466,"title":{},"body":{"classes/CodeGenerator.html":{},"interfaces/ICodeGenerator.html":{},"classes/NodeUtils.html":{}}}],["execute_node(nod",{"_index":482,"title":{},"body":{"classes/CodeGenerator.html":{},"interfaces/ICodeGenerator.html":{},"classes/NodeUtils.html":{}}}],["executed.for",{"_index":2253,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["executed.push(index",{"_index":1668,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["executeflowchart",{"_index":3394,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["executeflowchart($ev",{"_index":3396,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["executeservic",{"_index":267,"title":{"injectables/ExecuteService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ExecuteService.html":{},"components/ParameterViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["executeservice.consolemessag",{"_index":989,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["executeservice.consolemessages.join",{"_index":994,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["executeservice.consolemessages.push(consolehtml",{"_index":977,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["executeservice.printfunct",{"_index":992,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["exercis",{"_index":4492,"title":{},"body":{"license.html":{}}}],["exist",{"_index":2223,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{}}}],["exp",{"_index":4046,"title":{},"body":{"classes/StatementProcedure.html":{}}}],["expand",{"_index":2621,"title":{},"body":{"components/MobiusAbout.html":{}}}],["expect",{"_index":4554,"title":{},"body":{"license.html":{}}}],["explain",{"_index":2060,"title":{},"body":{"components/HelpFundamentals.html":{},"license.html":{}}}],["explan",{"_index":2631,"title":{},"body":{"components/MobiusAbout.html":{}}}],["explicitli",{"_index":4456,"title":{},"body":{"license.html":{}}}],["explor",{"_index":2604,"title":{},"body":{"components/MobiusAbout.html":{}}}],["export",{"_index":84,"title":{},"body":{"classes/ActionProcedure.html":{},"injectables/ActiveNodeService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"classes/CodeFactory.html":{},"classes/CodeGenerator.html":{},"injectables/CodeService.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"injectables/ConsoleService.html":{},"classes/Constants.html":{},"modules/CustomMaterialModule.html":{},"classes/DataProcedure.html":{},"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"injectables/ExecuteService.html":{},"components/FileLoadDialogComponent.html":{},"classes/FileService.html":{},"classes/FileUtils.html":{},"classes/Flowchart.html":{},"classes/FlowchartConnectionUtils.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"classes/FlowchartWriter.html":{},"classes/ForLoopControlProcedure.html":{},"classes/Frame.html":{},"classes/FunctionProcedure.html":{},"modules/GSViewer.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"interfaces/HasIsPlanar.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IComponent.html":{},"interfaces/IEdge.html":{},"interfaces/IFlowchart.html":{},"interfaces/IGraphNode.html":{},"interfaces/IModule.html":{},"interfaces/IPort.html":{},"interfaces/IProcedure.html":{},"classes/IdGenerator.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"components/InfoViewerComponent.html":{},"classes/InputPort.html":{},"components/LandingComponent.html":{},"injectables/LayoutService.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"modules/MobiusCesium.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"injectables/MobiusService.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"classes/ModuleUtils.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"injectables/NodeLibraryService.html":{},"classes/NodeSubscriber.html":{},"classes/NodeUtils.html":{},"classes/OutputPort.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"pipes/PortTypePipe.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{},"classes/ProcedureFactory.html":{},"components/ProcedureItemComponent.html":{},"classes/ProcedureUtils.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{},"classes/StatementProcedure.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"classes/WhileControlProcedure.html":{},"classes/gis_module.html":{},"overview.html":{}}}],["express",{"_index":96,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"components/HelpFundamentals.html":{},"interfaces/IComponent.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{},"license.html":{}}}],["expressli",{"_index":4599,"title":{},"body":{"license.html":{}}}],["extend",{"_index":7,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"components/DisplayComponent.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"components/FlowchartControlsComponent.html":{},"classes/ForLoopControlProcedure.html":{},"classes/Frame.html":{},"classes/FunctionProcedure.html":{},"interfaces/HasIsPlanar.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/InputPort.html":{},"classes/OutputPort.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"components/SelectComponent.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{},"classes/gis_module.html":{},"license.html":{}}}],["extens",{"_index":4512,"title":{},"body":{"license.html":{}}}],["extent",{"_index":4428,"title":{},"body":{"license.html":{}}}],["f",{"_index":2998,"title":{},"body":{"classes/ModuleUtils.html":{},"license.html":{}}}],["f.def",{"_index":2881,"title":{},"body":{"injectables/ModuleService.html":{}}}],["f.name",{"_index":2727,"title":{},"body":{"components/MobiusGalleryComponent.html":{}}}],["f=0",{"_index":2997,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["facil",{"_index":4467,"title":{},"body":{"license.html":{}}}],["factori",{"_index":2530,"title":{},"body":{"injectables/LayoutService.html":{},"components/ViewerContainerComponent.html":{}}}],["factory.create(injector",{"_index":2533,"title":{},"body":{"injectables/LayoutService.html":{}}}],["factory.create(this.injector",{"_index":4117,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["fail",{"_index":3611,"title":{},"body":{"components/ProcedureEditorComponent.html":{},"license.html":{}}}],["failur",{"_index":4701,"title":{},"body":{"license.html":{}}}],["fair",{"_index":4461,"title":{},"body":{"license.html":{}}}],["fals",{"_index":50,"title":{},"body":{"classes/ActionProcedure.html":{},"injectables/ActiveNodeService.html":{},"modules/AppModule.html":{},"classes/DataProcedure.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"injectables/ExecuteService.html":{},"classes/FileUtils.html":{},"classes/FlowchartConnectionUtils.html":{},"classes/FlowchartRenderUtils.html":{},"classes/FlowchartUtils.html":{},"classes/ForLoopControlProcedure.html":{},"classes/Frame.html":{},"classes/FunctionProcedure.html":{},"components/GSViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"interfaces/HasIsPlanar.html":{},"components/HelpFundamentals.html":{},"components/HelpViewerComponent.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/InputPort.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"injectables/MobiusService.html":{},"components/MobiusViewerComponent.html":{},"classes/ModuleUtils.html":{},"classes/OutputPort.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterViewerComponent.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"classes/Procedure.html":{},"classes/StatementProcedure.html":{},"components/ViewerContainerComponent.html":{},"classes/WhileControlProcedure.html":{},"classes/gis_module.html":{},"miscellaneous/variables.html":{}}}],["famili",{"_index":4546,"title":{},"body":{"license.html":{}}}],["far",{"_index":2155,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["fashion",{"_index":4411,"title":{},"body":{"license.html":{}}}],["fatal",{"_index":639,"title":{},"body":{"injectables/ConsoleService.html":{},"miscellaneous/enumerations.html":{}}}],["favor",{"_index":4552,"title":{},"body":{"license.html":{}}}],["fc",{"_index":1348,"title":{},"body":{"classes/FlowchartReader.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{}}}],["fc.nodes.push(n",{"_index":1359,"title":{},"body":{"classes/FlowchartReader.html":{}}}],["fcx",{"_index":1499,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["fcx.next",{"_index":1561,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["featur",{"_index":4307,"title":{},"body":{"index.html":{},"license.html":{}}}],["fee",{"_index":4364,"title":{},"body":{"license.html":{}}}],["fetch",{"_index":1567,"title":{},"body":{"injectables/FlowchartService.html":{},"classes/NodeUtils.html":{}}}],["fetch('https://ipapi.co/json/').then(result",{"_index":645,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["fetch(`//137.132.146.35:9000/insert?ip=${consoleservice.ip}&msg=${msg.split(\"\\n\").join(\"\")}`).then((res)=>console.log(r",{"_index":665,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["fetch(`http://137.132.146.35:9000/insert?ip=127.0.0.1&msg=${msg",{"_index":660,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["fetch(urlstr",{"_index":3240,"title":{},"body":{"classes/NodeUtils.html":{}}}],["figur",{"_index":2209,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/ActionProcedure.html":{},"injectables/ActiveNodeService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"classes/CodeFactory.html":{},"classes/CodeGenerator.html":{},"injectables/CodeService.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"injectables/ConsoleService.html":{},"classes/Constants.html":{},"modules/CustomMaterialModule.html":{},"classes/DataProcedure.html":{},"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"injectables/ExecuteService.html":{},"components/FileLoadDialogComponent.html":{},"classes/FileService.html":{},"classes/FileUtils.html":{},"classes/Flowchart.html":{},"classes/FlowchartConnectionUtils.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"classes/FlowchartWriter.html":{},"classes/ForLoopControlProcedure.html":{},"classes/Frame.html":{},"classes/FunctionProcedure.html":{},"modules/GSViewer.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"interfaces/HasIsPlanar.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IComponent.html":{},"interfaces/IEdge.html":{},"interfaces/IFlowchart.html":{},"interfaces/IGraphNode.html":{},"interfaces/IModule.html":{},"interfaces/IPort.html":{},"interfaces/IProcedure.html":{},"classes/IdGenerator.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"components/InfoViewerComponent.html":{},"classes/InputPort.html":{},"components/LandingComponent.html":{},"injectables/LayoutService.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"modules/MobiusCesium.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"injectables/MobiusService.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"classes/ModuleUtils.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"injectables/NodeLibraryService.html":{},"classes/NodeSubscriber.html":{},"classes/NodeUtils.html":{},"classes/OutputPort.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"pipes/PortTypePipe.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{},"classes/ProcedureFactory.html":{},"components/ProcedureItemComponent.html":{},"classes/ProcedureUtils.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{},"classes/StatementProcedure.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"classes/WhileControlProcedure.html":{},"coverage.html":{},"classes/gis_module.html":{},"index.html":{},"license.html":{}}}],["file[\"flowchart",{"_index":1704,"title":{},"body":{"classes/FlowchartWriter.html":{}}}],["file[\"languag",{"_index":1700,"title":{},"body":{"classes/FlowchartWriter.html":{}}}],["file[\"modul",{"_index":1701,"title":{},"body":{"classes/FlowchartWriter.html":{}}}],["file_nam",{"_index":1133,"title":{},"body":{"classes/FileUtils.html":{}}}],["file_url",{"_index":674,"title":{},"body":{"classes/Constants.html":{}}}],["fileinput",{"_index":1274,"title":{},"body":{"components/FlowchartControlsComponent.html":{},"components/MenuComponent.html":{}}}],["filelist",{"_index":3347,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{}}}],["filelist[0",{"_index":3379,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{}}}],["fileloaddialog",{"_index":4313,"title":{},"body":{"index.html":{}}}],["fileloaddialogcompon",{"_index":181,"title":{"components/FileLoadDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filenam",{"_index":432,"title":{},"body":{"components/CesiumViewerComponent.html":{},"classes/FileService.html":{},"components/MobiusViewerComponent.html":{}}}],["filenew",{"_index":1029,"title":{},"body":{"components/FileLoadDialogComponent.html":{}}}],["filepath",{"_index":2667,"title":{},"body":{"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{}}}],["filepick",{"_index":4253,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fileread",{"_index":1317,"title":{},"body":{"components/FlowchartControlsComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{}}}],["fileservic",{"_index":1030,"title":{"classes/FileService.html":{}},"body":{"classes/FileService.html":{},"classes/FlowchartWriter.html":{},"coverage.html":{}}}],["fileservice.downloadasjson(filestr",{"_index":1712,"title":{},"body":{"classes/FlowchartWriter.html":{}}}],["filestr",{"_index":421,"title":{},"body":{"components/CesiumViewerComponent.html":{},"classes/FileService.html":{},"components/FlowchartControlsComponent.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartWriter.html":{}}}],["fileutil",{"_index":429,"title":{"classes/FileUtils.html":{}},"body":{"components/CesiumViewerComponent.html":{},"classes/FileUtils.html":{},"coverage.html":{}}}],["fileutils.add_file_to_memory(valu",{"_index":1114,"title":{},"body":{"classes/FileUtils.html":{}}}],["fileutils.downloadcontent(blob",{"_index":426,"title":{},"body":{"components/CesiumViewerComponent.html":{}}}],["fileutils.prefix",{"_index":1134,"title":{},"body":{"classes/FileUtils.html":{}}}],["fill",{"_index":2108,"title":{},"body":{"components/HelpFundamentals.html":{},"index.html":{}}}],["final",{"_index":1106,"title":{},"body":{"classes/FileUtils.html":{},"components/HelpFundamentals.html":{},"license.html":{}}}],["final_result",{"_index":2983,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["find",{"_index":1452,"title":{},"body":{"classes/FlowchartRenderUtils.html":{},"components/HelpFundamentals.html":{},"license.html":{}}}],["firefox",{"_index":2706,"title":{},"body":{"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{}}}],["first",{"_index":1998,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"classes/NodeUtils.html":{},"license.html":{}}}],["first_lett",{"_index":2056,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["fit",{"_index":4687,"title":{},"body":{"license.html":{}}}],["five",{"_index":2196,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["fix",{"_index":2233,"title":{},"body":{"components/HelpFundamentals.html":{},"license.html":{}}}],["flag",{"_index":1672,"title":{},"body":{"classes/FlowchartUtils.html":{},"classes/ModuleUtils.html":{}}}],["flow",{"_index":1985,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"license.html":{}}}],["flowchart",{"_index":185,"title":{"classes/Flowchart.html":{}},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"classes/CodeGenerator.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"injectables/ExecuteService.html":{},"components/FileLoadDialogComponent.html":{},"classes/Flowchart.html":{},"classes/FlowchartConnectionUtils.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"classes/FlowchartWriter.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"interfaces/ICodeGenerator.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"injectables/LayoutService.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["flowchart$.subscrib",{"_index":1564,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["flowchart(data",{"_index":1349,"title":{},"body":{"classes/FlowchartReader.html":{}}}],["flowchart.edg",{"_index":1263,"title":{},"body":{"classes/FlowchartConnectionUtils.html":{},"classes/FlowchartUtils.html":{}}}],["flowchart.edges.filt",{"_index":1264,"title":{},"body":{"classes/FlowchartConnectionUtils.html":{}}}],["flowchart.edges.filter(function(edg",{"_index":1661,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["flowchart.edges.push(edg",{"_index":1658,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["flowchart.nam",{"_index":1710,"title":{},"body":{"classes/FlowchartWriter.html":{}}}],["flowchart.nod",{"_index":1617,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["flowchart.nodes.length",{"_index":1616,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["flowchart.nodes[idx",{"_index":1255,"title":{},"body":{"classes/FlowchartConnectionUtils.html":{}}}],["flowchart.nodes[inputaddress[0",{"_index":1642,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["flowchart.nodes[inputaddress[0]].en",{"_index":1650,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["flowchart.nodes[outputaddress[0",{"_index":1640,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["flowchart.nodes[outputaddress[0]].en",{"_index":1649,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["flowchart.servic",{"_index":983,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["flowchart/flowchartmodul",{"_index":516,"title":{},"body":{"classes/CodeGenerator.html":{},"interfaces/ICodeGenerator.html":{}}}],["flowchartconnectionutil",{"_index":1236,"title":{"classes/FlowchartConnectionUtils.html":{}},"body":{"classes/FlowchartConnectionUtils.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"coverage.html":{}}}],["flowchartconnectionutils.disconnect_edges_with_port_idx(flowchart",{"_index":1625,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["flowchartconnectionutils.remove_edges_with_node(flowchart",{"_index":1262,"title":{},"body":{"classes/FlowchartConnectionUtils.html":{}}}],["flowchartcontrol",{"_index":4309,"title":{},"body":{"index.html":{}}}],["flowchartcontrolscompon",{"_index":184,"title":{"components/FlowchartControlsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["flowchartread",{"_index":1293,"title":{"classes/FlowchartReader.html":{}},"body":{"components/FlowchartControlsComponent.html":{},"classes/FlowchartReader.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartWriter.html":{},"coverage.html":{}}}],["flowchartreader.read_flowchart_from_data(flowchart",{"_index":1703,"title":{},"body":{"classes/FlowchartWriter.html":{}}}],["flowchartrenderutil",{"_index":1370,"title":{"classes/FlowchartRenderUtils.html":{}},"body":{"classes/FlowchartRenderUtils.html":{},"coverage.html":{}}}],["flowchartrenderutils._margin*(max+1",{"_index":1390,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["flowchartrenderutils.get_port_posit",{"_index":1441,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["flowchartrenderutils.get_port_position(this.fc.nodes[edge.output_address[0",{"_index":1445,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["flowchartrenderutils.node_width(nod",{"_index":1461,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["flowchartrenderutils.port_dom_element(nod",{"_index":1401,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["flowchartservic",{"_index":268,"title":{"injectables/FlowchartService.html":{}},"body":{"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/EditorComponent.html":{},"injectables/ExecuteService.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"components/GeometryViewerComponent.html":{},"components/HelpViewerComponent.html":{},"components/MenuComponent.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["flowchartservice.flowchart.nam",{"_index":3430,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["flowchartutil",{"_index":984,"title":{"classes/FlowchartUtils.html":{}},"body":{"injectables/ExecuteService.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"coverage.html":{}}}],["flowchartutils.add_node(this._fs.flowchart",{"_index":1312,"title":{},"body":{"components/FlowchartControlsComponent.html":{}}}],["flowchartutils.add_node_from_data(fc",{"_index":1362,"title":{},"body":{"classes/FlowchartReader.html":{}}}],["flowchartutils.delete_edge(this._flowchart",{"_index":1576,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["flowchartutils.delete_edges(flowchart",{"_index":1626,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["flowchartutils.delete_node(this.fc",{"_index":1473,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["flowchartutils.disconnect_port(flowchart",{"_index":1622,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["flowchartutils.execute(flowchart",{"_index":990,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["flowchartutils.update_dependent_inputs(flowchart",{"_index":1686,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["flowchartviewercompon",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartRenderUtils.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"injectables/LayoutService.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["flowchartwrit",{"_index":1294,"title":{"classes/FlowchartWriter.html":{}},"body":{"components/FlowchartControlsComponent.html":{},"classes/FlowchartWriter.html":{},"components/PublishSettingsComponent.html":{},"coverage.html":{}}}],["flowchartwriter.save_flowchart_as_json(this._fs.flowchart",{"_index":1339,"title":{},"body":{"components/FlowchartControlsComponent.html":{}}}],["flowchartwriter.save_flowchart_as_json(this.fw",{"_index":3773,"title":{},"body":{"components/PublishSettingsComponent.html":{}}}],["fn",{"_index":2509,"title":{},"body":{"injectables/LayoutService.html":{},"injectables/ModuleService.html":{},"classes/ModuleUtils.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{}}}],["fn(x",{"_index":1919,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["fn.def",{"_index":2864,"title":{},"body":{"injectables/ModuleService.html":{}}}],["fn.hasreturn",{"_index":3059,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["fn.modul",{"_index":2562,"title":{},"body":{"injectables/LayoutService.html":{},"components/ModuleboxComponent.html":{}}}],["fn.module.replace(\"_",{"_index":3070,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["fn.module.tolowercas",{"_index":2559,"title":{},"body":{"injectables/LayoutService.html":{}}}],["fn.name",{"_index":2294,"title":{},"body":{"components/HelpViewerComponent.html":{},"components/ModuleboxComponent.html":{}}}],["fn.param",{"_index":3058,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["fn.signatures[0].comment.return",{"_index":2302,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["fn.signatures[0].comment.shorttext",{"_index":2295,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["fn_list",{"_index":2896,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["fn_list[prop",{"_index":2931,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["fn_name",{"_index":100,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"interfaces/IComponent.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"components/ModuleViewerComponent.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["fname",{"_index":1706,"title":{},"body":{"classes/FlowchartWriter.html":{}}}],["fnobj",{"_index":2263,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["fnobj.content.signatures[0].comment.shorttext",{"_index":2305,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["fnobj.modul",{"_index":2303,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["fnobj.nam",{"_index":2304,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["fnsobj",{"_index":2861,"title":{},"body":{"injectables/ModuleService.html":{}}}],["fnsobj[fn[\"nam",{"_index":2863,"title":{},"body":{"injectables/ModuleService.html":{}}}],["fnstr",{"_index":2975,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["fnstr.indexof(')')).split(\",\")//.match",{"_index":2979,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["fnstr.slice(fnstr.indexof('(')+1",{"_index":2978,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["folder",{"_index":4285,"title":{},"body":{"index.html":{}}}],["follow",{"_index":2104,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"index.html":{},"license.html":{}}}],["for(const",{"_index":857,"title":{},"body":{"components/DisplayComponent.html":{},"classes/FlowchartUtils.html":{},"classes/NodeUtils.html":{},"classes/ProcedureUtils.html":{},"components/SelectComponent.html":{}}}],["for(let",{"_index":1267,"title":{},"body":{"classes/FlowchartConnectionUtils.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartUtils.html":{},"components/HelpViewerComponent.html":{},"injectables/ModuleService.html":{},"classes/ModuleUtils.html":{},"components/ModuleboxComponent.html":{},"injectables/NodeLibraryService.html":{}}}],["for(var",{"_index":3986,"title":{},"body":{"components/SettingComponent.html":{}}}],["forbid",{"_index":4491,"title":{},"body":{"license.html":{}}}],["forc",{"_index":4464,"title":{},"body":{"license.html":{}}}],["forloopcontrol",{"_index":4262,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["forloopcontrolprocedur",{"_index":1713,"title":{"classes/ForLoopControlProcedure.html":{}},"body":{"classes/ForLoopControlProcedure.html":{},"classes/ProcedureFactory.html":{},"coverage.html":{}}}],["forloopcontrolprocedure(data",{"_index":3651,"title":{},"body":{"classes/ProcedureFactory.html":{}}}],["form",{"_index":881,"title":{},"body":{"components/DisplayComponent.html":{},"components/MobiusAbout.html":{},"license.html":{}}}],["format",{"_index":880,"title":{},"body":{"components/DisplayComponent.html":{},"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{},"license.html":{}}}],["formsmodul",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"modules/MobiusCesium.html":{}}}],["forroot",{"_index":1800,"title":{},"body":{"modules/GSViewer.html":{},"modules/MobiusCesium.html":{}}}],["forth",{"_index":2197,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["found",{"_index":1396,"title":{},"body":{"classes/FlowchartRenderUtils.html":{},"components/ProcedureEditorComponent.html":{},"index.html":{},"license.html":{}}}],["foundat",{"_index":4335,"title":{},"body":{"license.html":{}}}],["four",{"_index":2043,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"index.html":{}}}],["frame",{"_index":1722,"title":{"classes/Frame.html":{}},"body":{"classes/Frame.html":{},"interfaces/HasIsPlanar.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"components/SettingComponent.html":{},"coverage.html":{},"classes/gis_module.html":{}}}],["framevis",{"_index":3832,"title":{},"body":{"components/SettingComponent.html":{}}}],["framevisible:boolean",{"_index":3904,"title":{},"body":{"components/SettingComponent.html":{}}}],["free",{"_index":2578,"title":{},"body":{"components/MobiusAbout.html":{},"license.html":{}}}],["freedom",{"_index":4346,"title":{},"body":{"license.html":{}}}],["fs",{"_index":1320,"title":{},"body":{"components/FlowchartControlsComponent.html":{},"components/ParameterViewerComponent.html":{}}}],["fs.freez",{"_index":3422,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["fs.load_flowchart_from_string(filestr",{"_index":1325,"title":{},"body":{"components/FlowchartControlsComponent.html":{}}}],["fulfil",{"_index":4480,"title":{},"body":{"license.html":{}}}],["full",{"_index":4716,"title":{},"body":{"license.html":{}}}],["fullnam",{"_index":4723,"title":{},"body":{"license.html":{}}}],["func",{"_index":2909,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["func.tostr",{"_index":2958,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["func.tostring().replac",{"_index":2976,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["function",{"_index":87,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/CodeGenerator.html":{},"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/DisplayComponent.html":{},"injectables/ExecuteService.html":{},"classes/FileUtils.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartRenderUtils.html":{},"classes/FlowchartUtils.html":{},"components/HelpFundamentals.html":{},"components/HelpViewerComponent.html":{},"interfaces/ICodeGenerator.html":{},"components/LandingComponent.html":{},"injectables/LayoutService.html":{},"components/MobiusAbout.html":{},"injectables/ModuleService.html":{},"classes/ModuleUtils.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"classes/NodeUtils.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["function(",{"_index":2695,"title":{},"body":{"components/MobiusEditorComponent.html":{}}}],["function('valu",{"_index":1136,"title":{},"body":{"classes/FileUtils.html":{}}}],["function(read",{"_index":3380,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{}}}],["function(typ",{"_index":3049,"title":{},"body":{"components/ModuleboxComponent.html":{},"miscellaneous/variables.html":{}}}],["function(varnam",{"_index":957,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["functionprocedur",{"_index":1344,"title":{"classes/FunctionProcedure.html":{}},"body":{"classes/FlowchartReader.html":{},"classes/FunctionProcedure.html":{},"classes/ProcedureFactory.html":{},"coverage.html":{}}}],["functionprocedure(data",{"_index":3646,"title":{},"body":{"classes/ProcedureFactory.html":{}}}],["functionsexecut",{"_index":2248,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["fundament",{"_index":1930,"title":{},"body":{"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/InfoViewerComponent.html":{},"components/MobiusAbout.html":{},"license.html":{}}}],["fundamentals'},{'nam",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["further",{"_index":4535,"title":{},"body":{"license.html":{}}}],["furthermor",{"_index":2232,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["futur",{"_index":4306,"title":{},"body":{"index.html":{},"license.html":{}}}],["fw",{"_index":3752,"title":{},"body":{"components/PublishSettingsComponent.html":{}}}],["g",{"_index":4022,"title":{},"body":{"components/SettingComponent.html":{}}}],["galleri",{"_index":382,"title":{},"body":{"modules/AppModule.html":{},"components/LandingComponent.html":{},"components/MobiusGalleryComponent.html":{},"index.html":{}}}],["gallery'},{'nam",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["gallery.compon",{"_index":366,"title":{},"body":{"modules/AppModule.html":{}}}],["gallery.component.html",{"_index":2714,"title":{},"body":{"components/MobiusGalleryComponent.html":{}}}],["gallery.component.scss",{"_index":2713,"title":{},"body":{"components/MobiusGalleryComponent.html":{}}}],["gallery.component.t",{"_index":2712,"title":{},"body":{"components/MobiusGalleryComponent.html":{},"coverage.html":{}}}],["gallery.component.ts:13",{"_index":2717,"title":{},"body":{"components/MobiusGalleryComponent.html":{}}}],["gallery.component.ts:19",{"_index":2718,"title":{},"body":{"components/MobiusGalleryComponent.html":{}}}],["gallery/contents/examples?ref=mast",{"_index":679,"title":{},"body":{"classes/Constants.html":{}}}],["gallery/master/exampl",{"_index":681,"title":{},"body":{"classes/Constants.html":{}}}],["gallery/mobiu",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"components/MobiusGalleryComponent.html":{},"coverage.html":{}}}],["gallery_url",{"_index":671,"title":{},"body":{"classes/Constants.html":{}}}],["gen",{"_index":532,"title":{},"body":{"injectables/CodeService.html":{}}}],["gener",{"_index":521,"title":{},"body":{"classes/CodeGenerator.html":{},"injectables/CodeService.html":{},"injectables/ConsoleService.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartUtils.html":{},"components/GSViewerComponent.html":{},"components/HelpFundamentals.html":{},"components/LandingComponent.html":{},"injectables/LayoutService.html":{},"components/MobiusAbout.html":{},"components/MobiuscesiumComponent.html":{},"classes/NodeUtils.html":{},"components/TextViewerComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{}}}],["generator(gen",{"_index":539,"title":{},"body":{"injectables/CodeService.html":{}}}],["generators/javascript_gener",{"_index":456,"title":{},"body":{"classes/CodeFactory.html":{}}}],["geo",{"_index":4254,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["geojson",{"_index":420,"title":{},"body":{"components/CesiumViewerComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["geometri",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"pipes/PortTypePipe.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["geometryviewercompon",{"_index":190,"title":{"components/GeometryViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["get",{"_index":1999,"title":{"index.html":{},"license.html":{}},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{}}}],["get/set",{"_index":1126,"title":{},"body":{"classes/FileUtils.html":{}}}],["get_child_posit",{"_index":3134,"title":{},"body":{"classes/NodeUtils.html":{},"classes/ProcedureUtils.html":{}}}],["get_child_position(nod",{"_index":3155,"title":{},"body":{"classes/NodeUtils.html":{}}}],["get_child_position(par",{"_index":3716,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["get_code_connection_lin",{"_index":467,"title":{},"body":{"classes/CodeGenerator.html":{},"interfaces/ICodeGenerator.html":{}}}],["get_code_connection_line(input_nod",{"_index":485,"title":{},"body":{"classes/CodeGenerator.html":{},"interfaces/ICodeGenerator.html":{}}}],["get_code_display",{"_index":468,"title":{},"body":{"classes/CodeGenerator.html":{},"interfaces/ICodeGenerator.html":{}}}],["get_code_display(flowchart",{"_index":491,"title":{},"body":{"classes/CodeGenerator.html":{},"interfaces/ICodeGenerator.html":{}}}],["get_code_function_cal",{"_index":469,"title":{},"body":{"classes/CodeGenerator.html":{},"interfaces/ICodeGenerator.html":{}}}],["get_code_function_call(nod",{"_index":494,"title":{},"body":{"classes/CodeGenerator.html":{},"interfaces/ICodeGenerator.html":{}}}],["get_code_nod",{"_index":470,"title":{},"body":{"classes/CodeGenerator.html":{},"interfaces/ICodeGenerator.html":{}}}],["get_code_node(nod",{"_index":496,"title":{},"body":{"classes/CodeGenerator.html":{},"interfaces/ICodeGenerator.html":{}}}],["get_code_node_def",{"_index":471,"title":{},"body":{"classes/CodeGenerator.html":{},"interfaces/ICodeGenerator.html":{}}}],["get_code_node_def(nod",{"_index":500,"title":{},"body":{"classes/CodeGenerator.html":{},"interfaces/ICodeGenerator.html":{}}}],["get_code_node_io",{"_index":472,"title":{},"body":{"classes/CodeGenerator.html":{},"interfaces/ICodeGenerator.html":{}}}],["get_code_node_io(nod",{"_index":502,"title":{},"body":{"classes/CodeGenerator.html":{},"interfaces/ICodeGenerator.html":{}}}],["get_code_port_input",{"_index":473,"title":{},"body":{"classes/CodeGenerator.html":{},"interfaces/ICodeGenerator.html":{}}}],["get_code_port_input(port",{"_index":505,"title":{},"body":{"classes/CodeGenerator.html":{},"interfaces/ICodeGenerator.html":{}}}],["get_code_port_output",{"_index":474,"title":{},"body":{"classes/CodeGenerator.html":{},"interfaces/ICodeGenerator.html":{}}}],["get_code_port_output(port",{"_index":508,"title":{},"body":{"classes/CodeGenerator.html":{},"interfaces/ICodeGenerator.html":{}}}],["get_code_procedur",{"_index":475,"title":{},"body":{"classes/CodeGenerator.html":{},"interfaces/ICodeGenerator.html":{}}}],["get_code_procedure(procedur",{"_index":510,"title":{},"body":{"classes/CodeGenerator.html":{},"interfaces/ICodeGenerator.html":{}}}],["get_new_node_nam",{"_index":1584,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["get_new_node_name(flowchart",{"_index":1606,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["get_node_idx",{"_index":1585,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["get_node_idx(flowchart",{"_index":1608,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["get_port_posit",{"_index":1373,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["get_port_position(nod",{"_index":1379,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["get_result",{"_index":3135,"title":{},"body":{"classes/NodeUtils.html":{}}}],["get_result(nod",{"_index":3157,"title":{},"body":{"classes/NodeUtils.html":{}}}],["get_variable_list",{"_index":3136,"title":{},"body":{"classes/NodeUtils.html":{}}}],["get_variable_list(nod",{"_index":3159,"title":{},"body":{"classes/NodeUtils.html":{}}}],["getallmethodnam",{"_index":2338,"title":{},"body":{"interfaces/IModule.html":{},"classes/Module.html":{},"classes/gis_module.html":{}}}],["getasset",{"_index":2465,"title":{},"body":{"injectables/LayoutService.html":{}}}],["getauthor",{"_index":1165,"title":{},"body":{"classes/Flowchart.html":{},"interfaces/IModule.html":{},"classes/Module.html":{},"classes/ModuleUtils.html":{},"classes/gis_module.html":{}}}],["getauthor(mod",{"_index":2899,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["getchildren",{"_index":3497,"title":{},"body":{"classes/Procedure.html":{}}}],["getcode_gener",{"_index":2739,"title":{},"body":{"injectables/MobiusService.html":{}}}],["getcodegener",{"_index":449,"title":{},"body":{"classes/CodeFactory.html":{}}}],["getcodegenerator(languag",{"_index":452,"title":{},"body":{"classes/CodeFactory.html":{}}}],["getcodestr",{"_index":29,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/Procedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["getcodestring(code_gener",{"_index":72,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/Procedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["getcont",{"_index":601,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["getdatafromurl",{"_index":3333,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["getdatafromurl($ev",{"_index":3343,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["getdefaultvalu",{"_index":1118,"title":{},"body":{"classes/FileUtils.html":{},"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["getdescript",{"_index":1170,"title":{},"body":{"classes/Flowchart.html":{}}}],["getdisplay_nod",{"_index":1202,"title":{},"body":{"classes/Flowchart.html":{}}}],["getedg",{"_index":1192,"title":{},"body":{"classes/Flowchart.html":{}}}],["getedit",{"_index":1197,"title":{},"body":{"classes/Flowchart.html":{}}}],["geten",{"_index":3479,"title":{},"body":{"classes/Procedure.html":{}}}],["geterror",{"_index":3501,"title":{},"body":{"classes/Procedure.html":{}}}],["getfile_url",{"_index":675,"title":{},"body":{"classes/Constants.html":{}}}],["getflowchart",{"_index":1553,"title":{},"body":{"injectables/FlowchartService.html":{},"components/MobiusViewerComponent.html":{}}}],["getflowchart(filenam",{"_index":2763,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["getfunct",{"_index":2890,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["getfunctionnam",{"_index":1753,"title":{},"body":{"classes/FunctionProcedure.html":{}}}],["getfunctions(mod",{"_index":2901,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["getgallery_url",{"_index":672,"title":{},"body":{"classes/Constants.html":{}}}],["getgener",{"_index":528,"title":{},"body":{"injectables/CodeService.html":{}}}],["getglob",{"_index":1184,"title":{},"body":{"classes/Flowchart.html":{}}}],["gethasreturn",{"_index":81,"title":{},"body":{"classes/ActionProcedure.html":{}}}],["getheight",{"_index":1834,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["getid",{"_index":2353,"title":{},"body":{"classes/IdGenerator.html":{},"classes/Procedure.html":{}}}],["getinputtypenam",{"_index":3440,"title":{},"body":{"pipes/PortTypePipe.html":{},"components/PublishSettingsComponent.html":{}}}],["getinputtypename(typ",{"_index":3441,"title":{},"body":{"pipes/PortTypePipe.html":{},"components/PublishSettingsComponent.html":{}}}],["getinputtypename(x",{"_index":3779,"title":{},"body":{"components/PublishSettingsComponent.html":{}}}],["getip",{"_index":602,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["getlanguag",{"_index":476,"title":{},"body":{"classes/CodeGenerator.html":{},"interfaces/ICodeGenerator.html":{}}}],["getleft",{"_index":1835,"title":{},"body":{"components/GraphEdgeComponent.html":{},"classes/Procedure.html":{}}}],["getmessag",{"_index":603,"title":{},"body":{"injectables/ConsoleService.html":{},"injectables/LayoutService.html":{}}}],["getmodul",{"_index":2854,"title":{},"body":{"injectables/ModuleService.html":{}}}],["getmodulefromset",{"_index":2891,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["getmodulefromset(moduleset",{"_index":2903,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["getnam",{"_index":1160,"title":{},"body":{"classes/Flowchart.html":{},"interfaces/IModule.html":{},"classes/Module.html":{},"classes/ModuleUtils.html":{},"classes/gis_module.html":{}}}],["getname(mod",{"_index":2905,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["getnod",{"_index":1189,"title":{},"body":{"classes/Flowchart.html":{},"classes/FunctionProcedure.html":{},"injectables/NodeLibraryService.html":{}}}],["getobj",{"_index":2466,"title":{},"body":{"injectables/LayoutService.html":{}}}],["getoutput",{"_index":1754,"title":{},"body":{"classes/FunctionProcedure.html":{}}}],["getoutputtypenam",{"_index":3443,"title":{},"body":{"pipes/PortTypePipe.html":{}}}],["getoutputtypename(typ",{"_index":3444,"title":{},"body":{"pipes/PortTypePipe.html":{}}}],["getparam",{"_index":2892,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["getparams(func",{"_index":2907,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["getplan",{"_index":1743,"title":{},"body":{"classes/Frame.html":{},"interfaces/HasIsPlanar.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"classes/gis_module.html":{}}}],["getpoint",{"_index":1741,"title":{},"body":{"classes/Frame.html":{},"interfaces/HasIsPlanar.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"classes/gis_module.html":{}}}],["getposit",{"_index":1836,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["getposition(edg",{"_index":1854,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["getprint",{"_index":3505,"title":{},"body":{"classes/Procedure.html":{}}}],["getprocedur",{"_index":3638,"title":{},"body":{"classes/ProcedureFactory.html":{}}}],["getprocedure(typ",{"_index":3639,"title":{},"body":{"classes/ProcedureFactory.html":{}}}],["getprocess",{"_index":135,"title":{},"body":{"injectables/ActiveNodeService.html":{},"injectables/MobiusService.html":{}}}],["getright",{"_index":3493,"title":{},"body":{"classes/Procedure.html":{}}}],["getselected_nod",{"_index":1180,"title":{},"body":{"classes/Flowchart.html":{}}}],["getstr",{"_index":3014,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["getstr(typ",{"_index":3067,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["getstringforproceduretyp",{"_index":3034,"title":{},"body":{"components/ModuleboxComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getsubmodul",{"_index":2265,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["getsubmodule(alldoc",{"_index":2271,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["getsummari",{"_index":1175,"title":{},"body":{"classes/Flowchart.html":{}}}],["getter",{"_index":1124,"title":{},"body":{"classes/FileUtils.html":{}}}],["gettext",{"_index":4048,"title":{},"body":{"components/TextViewerComponent.html":{}}}],["gettext(output",{"_index":4051,"title":{},"body":{"components/TextViewerComponent.html":{}}}],["gettop",{"_index":1837,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["gettyp",{"_index":3486,"title":{},"body":{"classes/Procedure.html":{}}}],["geturl",{"_index":2467,"title":{},"body":{"injectables/LayoutService.html":{}}}],["getus",{"_index":2744,"title":{},"body":{"injectables/MobiusService.html":{}}}],["getvalu",{"_index":1105,"title":{},"body":{"classes/FileUtils.html":{},"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["getvers",{"_index":2893,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["getversion(mod",{"_index":2910,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["getview",{"_index":2468,"title":{},"body":{"injectables/LayoutService.html":{}}}],["getview(panel_id",{"_index":2490,"title":{},"body":{"injectables/LayoutService.html":{}}}],["getviewcontain",{"_index":2469,"title":{},"body":{"injectables/LayoutService.html":{}}}],["getwidth",{"_index":1838,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["gis_modul",{"_index":1737,"title":{"classes/gis_module.html":{}},"body":{"classes/Frame.html":{},"interfaces/HasIsPlanar.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"coverage.html":{},"classes/gis_module.html":{}}}],["github",{"_index":2459,"title":{},"body":{"components/LandingComponent.html":{}}}],["give",{"_index":2247,"title":{},"body":{"components/HelpFundamentals.html":{},"license.html":{}}}],["given",{"_index":1967,"title":{},"body":{"components/HelpFundamentals.html":{},"classes/NodeUtils.html":{},"license.html":{}}}],["gld",{"_index":1685,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["global",{"_index":300,"title":{},"body":{"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"classes/CodeGenerator.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"injectables/ExecuteService.html":{},"components/FileLoadDialogComponent.html":{},"classes/Flowchart.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartRenderUtils.html":{},"classes/FlowchartWriter.html":{},"components/GeometryViewerComponent.html":{},"components/HelpViewerComponent.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IFlowchart.html":{},"components/MenuComponent.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"classes/NodeUtils.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/PublishSettingsComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["globals(arr",{"_index":1231,"title":{},"body":{"classes/Flowchart.html":{}}}],["gnu",{"_index":4330,"title":{},"body":{"license.html":{}}}],["goe",{"_index":1986,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["good",{"_index":2229,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{}}}],["govern",{"_index":4579,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":4367,"title":{},"body":{"license.html":{}}}],["grandpar",{"_index":3621,"title":{},"body":{"components/ProcedureEditorComponent.html":{},"classes/ProcedureUtils.html":{}}}],["grant",{"_index":4453,"title":{},"body":{"license.html":{}}}],["graph",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"index.html":{},"modules.html":{}}}],["graphedg",{"_index":4310,"title":{},"body":{"index.html":{}}}],["graphedgecompon",{"_index":192,"title":{"components/GraphEdgeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["graphic",{"_index":2200,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["graphnod",{"_index":1206,"title":{},"body":{"classes/Flowchart.html":{},"classes/FlowchartConnectionUtils.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"classes/FunctionProcedure.html":{},"components/NodeLibraryComponent.html":{},"injectables/NodeLibraryService.html":{},"classes/NodeUtils.html":{},"coverage.html":{},"index.html":{}}}],["grati",{"_index":4363,"title":{},"body":{"license.html":{}}}],["greater",{"_index":2179,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["greatest",{"_index":4710,"title":{},"body":{"license.html":{}}}],["green",{"_index":2590,"title":{},"body":{"components/MobiusAbout.html":{}}}],["gregoriandt",{"_index":888,"title":{},"body":{"components/DisplayComponent.html":{}}}],["gregoriandt.day",{"_index":893,"title":{},"body":{"components/DisplayComponent.html":{}}}],["gregoriandt.hour",{"_index":902,"title":{},"body":{"components/DisplayComponent.html":{}}}],["gregoriandt.minut",{"_index":903,"title":{},"body":{"components/DisplayComponent.html":{}}}],["gregoriandt.month",{"_index":892,"title":{},"body":{"components/DisplayComponent.html":{}}}],["gregoriandt.second",{"_index":905,"title":{},"body":{"components/DisplayComponent.html":{}}}],["gregoriandt.year",{"_index":897,"title":{},"body":{"components/DisplayComponent.html":{}}}],["grid",{"_index":3988,"title":{},"body":{"components/SettingComponent.html":{}}}],["gridhelp",{"_index":3965,"title":{},"body":{"components/SettingComponent.html":{}}}],["gridhelper.lookat(vector",{"_index":3963,"title":{},"body":{"components/SettingComponent.html":{}}}],["gridhelper.name=\"gridhelp",{"_index":3960,"title":{},"body":{"components/SettingComponent.html":{}}}],["gridhelper.position.set(centerx,centery,centerz",{"_index":3971,"title":{},"body":{"components/SettingComponent.html":{}}}],["gridhelper=new",{"_index":3958,"title":{},"body":{"components/SettingComponent.html":{}}}],["gridhelper=this.scene.getobjectbyname(\"gridhelp",{"_index":3969,"title":{},"body":{"components/SettingComponent.html":{}}}],["gridvis",{"_index":3833,"title":{},"body":{"components/SettingComponent.html":{}}}],["group",{"_index":2070,"title":{},"body":{"components/HelpFundamentals.html":{},"classes/ModuleUtils.html":{}}}],["groupindex",{"_index":2970,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["groups'},{'nam",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["groupscompon",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"modules/GSViewer.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gs",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"classes/Flowchart.html":{},"components/FlowchartControlsComponent.html":{},"modules/GSViewer.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"dependencies.html":{}}}],["gs.imodel",{"_index":1807,"title":{},"body":{"components/GSViewerComponent.html":{}}}],["gs_dummy_data",{"_index":1820,"title":{},"body":{"components/GeometryViewerComponent.html":{}}}],["gsviewer",{"_index":263,"title":{"modules/GSViewer.html":{}},"body":{"modules/AppModule.html":{},"modules/GSViewer.html":{},"modules.html":{},"overview.html":{}}}],["gsviewercompon",{"_index":188,"title":{"components/GSViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"modules/GSViewer.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["guarante",{"_index":4349,"title":{},"body":{"license.html":{}}}],["gui",{"_index":4729,"title":{},"body":{"license.html":{}}}],["guidelin",{"_index":4283,"title":{},"body":{"index.html":{}}}],["gutter",{"_index":2486,"title":{},"body":{"injectables/LayoutService.html":{}}}],["hammer_gesture_config",{"_index":1797,"title":{},"body":{"modules/GSViewer.html":{},"modules/MobiusCesium.html":{}}}],["hammerj",{"_index":4209,"title":{},"body":{"dependencies.html":{}}}],["hand",{"_index":2149,"title":{},"body":{"components/HelpFundamentals.html":{},"injectables/LayoutService.html":{},"components/MobiusAbout.html":{}}}],["handl",{"_index":649,"title":{},"body":{"injectables/ConsoleService.html":{},"components/FlowchartControlsComponent.html":{},"components/HelpFundamentals.html":{}}}],["handlecopi",{"_index":3534,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["handlecut",{"_index":3535,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["handlecutcopypast",{"_index":3536,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["handlecutcopypaste(key",{"_index":3548,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["handledelet",{"_index":3537,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["handlefileinput",{"_index":3334,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{}}}],["handlefileinput($ev",{"_index":3398,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["handlefileinput(filelist",{"_index":3345,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["handlemov",{"_index":3538,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["handlemove(key",{"_index":3551,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["handlepast",{"_index":3539,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["happen",{"_index":3615,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["hard",{"_index":2230,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["haschildren",{"_index":26,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"interfaces/IProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/Procedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["haserror",{"_index":2327,"title":{},"body":{"interfaces/IGraphNode.html":{}}}],["hasexecut",{"_index":2328,"title":{},"body":{"interfaces/IGraphNode.html":{}}}],["hasisplanar",{"_index":1735,"title":{"interfaces/HasIsPlanar.html":{}},"body":{"classes/Frame.html":{},"interfaces/HasIsPlanar.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"coverage.html":{},"classes/gis_module.html":{}}}],["haspar",{"_index":30,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/Procedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["hasreturn",{"_index":80,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/ModuleUtils.html":{},"components/ModuleboxComponent.html":{}}}],["hasreturn(func",{"_index":2912,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["have",{"_index":1977,"title":{},"body":{"components/HelpFundamentals.html":{},"license.html":{}}}],["header",{"_index":4294,"title":{},"body":{"index.html":{}}}],["height",{"_index":1331,"title":{},"body":{"components/FlowchartControlsComponent.html":{},"components/GraphEdgeComponent.html":{},"components/ParameterEditorComponent.html":{},"components/PublishSettingsComponent.html":{}}}],["hello",{"_index":1210,"title":{},"body":{"classes/Flowchart.html":{},"components/PublishSettingsComponent.html":{}}}],["help",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"injectables/LayoutService.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"classes/ModuleUtils.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"index.html":{}}}],["help.about.tpl.html",{"_index":1935,"title":{},"body":{"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/MobiusAbout.html":{}}}],["help.about.tpl.scss",{"_index":1936,"title":{},"body":{"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/MobiusAbout.html":{}}}],["help.children",{"_index":2922,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["help.children.filter(function(child",{"_index":2923,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["help.fundamentals.tpl.html",{"_index":1932,"title":{},"body":{"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/MobiusAbout.html":{}}}],["help.fundamentals.tpl.scss",{"_index":1931,"title":{},"body":{"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/MobiusAbout.html":{}}}],["help.model.tpl.html",{"_index":1937,"title":{},"body":{"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/MobiusAbout.html":{}}}],["help.model.tpl.scss",{"_index":1938,"title":{},"body":{"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/MobiusAbout.html":{}}}],["help.templ",{"_index":2395,"title":{},"body":{"components/InfoViewerComponent.html":{}}}],["help/help",{"_index":4101,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["help/info",{"_index":4102,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["help_outlin",{"_index":3069,"title":{},"body":{"components/ModuleboxComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["helpavail",{"_index":2264,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["helpfundament",{"_index":197,"title":{"components/HelpFundamentals.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["helpmodel",{"_index":200,"title":{"components/HelpModel.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["helpnam",{"_index":2897,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["helpobj",{"_index":2920,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["helpview",{"_index":4304,"title":{},"body":{"index.html":{}}}],["helpviewercompon",{"_index":202,"title":{"components/HelpViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["hemispher",{"_index":4003,"title":{},"body":{"components/SettingComponent.html":{}}}],["henc",{"_index":1669,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["here",{"_index":2030,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusEditorComponent.html":{},"components/SettingComponent.html":{},"index.html":{}}}],["hereaft",{"_index":4641,"title":{},"body":{"license.html":{}}}],["higher",{"_index":3324,"title":{},"body":{"components/ParameterEditorComponent.html":{}}}],["holder",{"_index":4582,"title":{},"body":{"license.html":{}}}],["hope",{"_index":4718,"title":{},"body":{"license.html":{}}}],["host",{"_index":4538,"title":{},"body":{"license.html":{}}}],["hostlisten",{"_index":1384,"title":{},"body":{"classes/FlowchartRenderUtils.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{}}}],["hostlistener('window:keyup",{"_index":3574,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["hous",{"_index":4301,"title":{},"body":{"index.html":{}}}],["household",{"_index":4547,"title":{},"body":{"license.html":{}}}],["hover",{"_index":2635,"title":{},"body":{"components/MobiusAbout.html":{}}}],["html",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["htmlcanvasel",{"_index":1872,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["htmlelement",{"_index":1302,"title":{},"body":{"components/FlowchartControlsComponent.html":{}}}],["http",{"_index":1511,"title":{},"body":{"injectables/FlowchartService.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{}}}],["http://fsf.org",{"_index":4337,"title":{},"body":{"license.html":{}}}],["http://www.gnu.org/licens",{"_index":4719,"title":{},"body":{"license.html":{}}}],["http://www.gnu.org/philosophy/whi",{"_index":4736,"title":{},"body":{"license.html":{}}}],["httpclient",{"_index":1512,"title":{},"body":{"injectables/FlowchartService.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{}}}],["httpclientmodul",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheader",{"_index":1556,"title":{},"body":{"injectables/FlowchartService.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{}}}],["https://a.tile.openstreetmap.org",{"_index":836,"title":{},"body":{"components/DisplayComponent.html":{}}}],["https://angular.io/guide/styleguide#gener",{"_index":4284,"title":{},"body":{"index.html":{}}}],["https://api.github.com/repos/design",{"_index":677,"title":{},"body":{"classes/Constants.html":{}}}],["https://raw.githubusercontent.com/design",{"_index":680,"title":{},"body":{"classes/Constants.html":{}}}],["https://stamen",{"_index":828,"title":{},"body":{"components/DisplayComponent.html":{}}}],["hue",{"_index":3834,"title":{},"body":{"components/SettingComponent.html":{}}}],["hue&nbsp;&nbsp;&nbsp",{"_index":4005,"title":{},"body":{"components/SettingComponent.html":{}}}],["hue:numb",{"_index":3901,"title":{},"body":{"components/SettingComponent.html":{}}}],["hypothet",{"_index":4727,"title":{},"body":{"license.html":{}}}],["i.opts.url",{"_index":3239,"title":{},"body":{"classes/NodeUtils.html":{}}}],["i.valu",{"_index":3244,"title":{},"body":{"classes/NodeUtils.html":{}}}],["i/o",{"_index":4319,"title":{},"body":{"index.html":{}}}],["i/ol",{"_index":4320,"title":{},"body":{"index.html":{}}}],["i=0",{"_index":1618,"title":{},"body":{"classes/FlowchartUtils.html":{},"components/HelpViewerComponent.html":{},"injectables/ModuleService.html":{}}}],["i=0;i",{"_index":3987,"title":{},"body":{"components/SettingComponent.html":{}}}],["icodegener",{"_index":73,"title":{"interfaces/ICodeGenerator.html":{}},"body":{"classes/ActionProcedure.html":{},"classes/CodeFactory.html":{},"classes/CodeGenerator.html":{},"injectables/CodeService.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"injectables/ExecuteService.html":{},"classes/Flowchart.html":{},"classes/FlowchartConnectionUtils.html":{},"components/FlowchartControlsComponent.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IFlowchart.html":{},"interfaces/IGraphNode.html":{},"interfaces/IProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"injectables/MobiusService.html":{},"classes/NodeUtils.html":{},"classes/Procedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{},"coverage.html":{}}}],["icompon",{"_index":55,"title":{"interfaces/IComponent.html":{}},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"interfaces/IComponent.html":{},"interfaces/IProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/Procedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{},"coverage.html":{}}}],["id",{"_index":1043,"title":{},"body":{"classes/FileUtils.html":{},"classes/FlowchartRenderUtils.html":{},"interfaces/IGraphNode.html":{},"interfaces/IPort.html":{},"interfaces/IProcedure.html":{},"classes/NodeUtils.html":{},"classes/Procedure.html":{},"classes/ProcedureUtils.html":{},"components/SelectComponent.html":{}}}],["id(valu",{"_index":1086,"title":{},"body":{"classes/FileUtils.html":{},"classes/Procedure.html":{}}}],["idea",{"_index":2619,"title":{},"body":{"components/MobiusAbout.html":{},"license.html":{}}}],["identifi",{"_index":3460,"title":{},"body":{"pipes/PortTypePipe.html":{},"components/PublishSettingsComponent.html":{},"coverage.html":{},"license.html":{}}}],["idgener",{"_index":1045,"title":{"classes/IdGenerator.html":{}},"body":{"classes/FileUtils.html":{},"classes/IdGenerator.html":{},"classes/Procedure.html":{},"coverage.html":{}}}],["idgenerator.getid",{"_index":1060,"title":{},"body":{"classes/FileUtils.html":{},"classes/Procedure.html":{}}}],["idx",{"_index":1246,"title":{},"body":{"classes/FlowchartConnectionUtils.html":{},"classes/FlowchartUtils.html":{},"classes/NodeUtils.html":{}}}],["ie",{"_index":2709,"title":{},"body":{"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{}}}],["iedg",{"_index":1152,"title":{"interfaces/IEdge.html":{}},"body":{"classes/Flowchart.html":{},"classes/FlowchartConnectionUtils.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartRenderUtils.html":{},"classes/FlowchartUtils.html":{},"interfaces/IEdge.html":{},"interfaces/IFlowchart.html":{},"components/NodeLibraryComponent.html":{},"coverage.html":{}}}],["if(!(m[1].length",{"_index":2967,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["if(!fname.endswith(\".mob",{"_index":1711,"title":{},"body":{"classes/FlowchartWriter.html":{}}}],["if(!grandpar",{"_index":3737,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["if(!node.active_procedur",{"_index":3219,"title":{},"body":{"classes/NodeUtils.html":{}}}],["if(!procedur",{"_index":3720,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["if(!this.active_node.active_procedure.par",{"_index":3620,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["if(!this.validatekeystroke(ev",{"_index":3583,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["if($event.srcel",{"_index":3375,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{}}}],["if((event.srcelement.classname.indexof(\"input",{"_index":3599,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["if((navigator.useragent.indexof(\"msi",{"_index":2707,"title":{},"body":{"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{}}}],["if((navigator.useragent.indexof(\"opera",{"_index":2699,"title":{},"body":{"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{}}}],["if(_colorpro",{"_index":3812,"title":{},"body":{"components/SelectComponent.html":{}}}],["if(_imageri",{"_index":820,"title":{},"body":{"components/DisplayComponent.html":{}}}],["if(active_procedur",{"_index":3196,"title":{},"body":{"classes/NodeUtils.html":{}}}],["if(active_procedure.par",{"_index":3204,"title":{},"body":{"classes/NodeUtils.html":{}}}],["if(array.isarray(v",{"_index":4064,"title":{},"body":{"components/TextViewerComponent.html":{}}}],["if(array.isarray(valu",{"_index":962,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["if(brows",{"_index":2678,"title":{},"body":{"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{}}}],["if(component_nam",{"_index":4118,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["if(ctrldown",{"_index":3585,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["if(data",{"_index":90,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/Flowchart.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["if(data.result",{"_index":109,"title":{},"body":{"classes/ActionProcedure.html":{}}}],["if(data[\"_glob",{"_index":1222,"title":{},"body":{"classes/Flowchart.html":{}}}],["if(el",{"_index":1394,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["if(exact",{"_index":3164,"title":{},"body":{"classes/NodeUtils.html":{}}}],["if(fc",{"_index":1430,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["if(flag",{"_index":1681,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["if(flowchart.nam",{"_index":1709,"title":{},"body":{"classes/FlowchartWriter.html":{}}}],["if(grandpar",{"_index":3623,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["if(groupindex",{"_index":2973,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["if(help",{"_index":2921,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["if(i.typ",{"_index":3237,"title":{},"body":{"classes/NodeUtils.html":{}}}],["if(inp.valu",{"_index":1677,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["if(isnan(parseint(valu",{"_index":3370,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["if(key",{"_index":3589,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["if(languag",{"_index":459,"title":{},"body":{"classes/CodeFactory.html":{}}}],["if(left_point.i",{"_index":1916,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["if(live_data_download",{"_index":3247,"title":{},"body":{"classes/NodeUtils.html":{}}}],["if(max_item",{"_index":2553,"title":{},"body":{"injectables/LayoutService.html":{}}}],["if(messag",{"_index":3801,"title":{},"body":{"components/SelectComponent.html":{}}}],["if(mobj[m[\"_nam",{"_index":2867,"title":{},"body":{"injectables/ModuleService.html":{}}}],["if(mod",{"_index":2944,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["if(mod1",{"_index":2948,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["if(modulemap[nam",{"_index":2877,"title":{},"body":{"injectables/ModuleService.html":{}}}],["if(name.substr(1",{"_index":2925,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["if(navigator.useragent.indexof(\"chrom",{"_index":2702,"title":{},"body":{"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{}}}],["if(navigator.useragent.indexof(\"firefox",{"_index":2705,"title":{},"body":{"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{}}}],["if(navigator.useragent.indexof(\"safari",{"_index":2703,"title":{},"body":{"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{}}}],["if(nod",{"_index":4105,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["if(output_nod",{"_index":1620,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["if(outputaddress.length",{"_index":1635,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["if(outputaddress[0",{"_index":1568,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["if(p.id",{"_index":3188,"title":{},"body":{"classes/NodeUtils.html":{}}}],["if(panel_id",{"_index":2549,"title":{},"body":{"injectables/LayoutService.html":{}}}],["if(par",{"_index":3223,"title":{},"body":{"classes/NodeUtils.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{}}}],["if(po",{"_index":3284,"title":{},"body":{"components/PanelComponent.html":{}}}],["if(porttyp",{"_index":1410,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["if(posit",{"_index":3226,"title":{},"body":{"classes/NodeUtils.html":{},"components/ProcedureEditorComponent.html":{}}}],["if(procedure[child_prop",{"_index":3729,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["if(prod_to_delet",{"_index":3221,"title":{},"body":{"classes/NodeUtils.html":{}}}],["if(proddata._leftcompon",{"_index":2391,"title":{},"body":{"classes/IfElseControlProcedure.html":{}}}],["if(proddata._rightcompon",{"_index":2392,"title":{},"body":{"classes/IfElseControlProcedure.html":{}}}],["if(prop",{"_index":2937,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["if(result",{"_index":2981,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["if(run_fil",{"_index":3415,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["if(shiftdown",{"_index":3587,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["if(siz",{"_index":3408,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["if(strrep",{"_index":971,"title":{},"body":{"injectables/ExecuteService.html":{},"components/TextViewerComponent.html":{}}}],["if(this._centersize==undefin",{"_index":3939,"title":{},"body":{"components/SettingComponent.html":{}}}],["if(this._centerx==undefin",{"_index":3930,"title":{},"body":{"components/SettingComponent.html":{}}}],["if(this._centery==undefin",{"_index":3933,"title":{},"body":{"components/SettingComponent.html":{}}}],["if(this._centerz==undefin",{"_index":3936,"title":{},"body":{"components/SettingComponent.html":{}}}],["if(this._d",{"_index":805,"title":{},"body":{"components/DisplayComponent.html":{}}}],["if(this._executionaddr",{"_index":1107,"title":{},"body":{"classes/FileUtils.html":{}}}],["if(this._imageri",{"_index":789,"title":{},"body":{"components/DisplayComponent.html":{}}}],["if(this._linepre==undefin",{"_index":3943,"title":{},"body":{"components/SettingComponent.html":{}}}],["if(this._par",{"_index":3527,"title":{},"body":{"classes/Procedure.html":{}}}],["if(this._pointpre==undefin",{"_index":3946,"title":{},"body":{"components/SettingComponent.html":{}}}],["if(this._pointsize==undefin",{"_index":3949,"title":{},"body":{"components/SettingComponent.html":{}}}],["if(this._shadow",{"_index":798,"title":{},"body":{"components/DisplayComponent.html":{}}}],["if(this._sun",{"_index":794,"title":{},"body":{"components/DisplayComponent.html":{}}}],["if(this.active_nod",{"_index":3056,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["if(this.active_node.active_procedur",{"_index":3584,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["if(this.active_view",{"_index":3281,"title":{},"body":{"components/PanelComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["if(this.dataservice.get_selectedentity().properties[_property.name]!==undefin",{"_index":3814,"title":{},"body":{"components/SelectComponent.html":{}}}],["if(this.dataservice.getgsmodel",{"_index":1817,"title":{},"body":{"components/GSViewerComponent.html":{},"components/MobiuscesiumComponent.html":{}}}],["if(this.fc",{"_index":1458,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["if(this.gettyp",{"_index":2388,"title":{},"body":{"classes/IfElseControlProcedure.html":{}}}],["if(this.gridvis",{"_index":3957,"title":{},"body":{"components/SettingComponent.html":{}}}],["if(this.hu",{"_index":3915,"title":{},"body":{"components/SettingComponent.html":{}}}],["if(this.id",{"_index":3806,"title":{},"body":{"components/SelectComponent.html":{}}}],["if(this.layout.mod",{"_index":2565,"title":{},"body":{"injectables/LayoutService.html":{},"components/MobiusEditorComponent.html":{}}}],["if(this.light",{"_index":3921,"title":{},"body":{"components/SettingComponent.html":{}}}],["if(this.mod",{"_index":2691,"title":{},"body":{"components/MobiusEditorComponent.html":{}}}],["if(this.satur",{"_index":3918,"title":{},"body":{"components/SettingComponent.html":{}}}],["if(this.slider_st",{"_index":2837,"title":{},"body":{"components/MobiuscesiumComponent.html":{}}}],["if(this.temporari",{"_index":1909,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["if(this.typ",{"_index":3365,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["if(this.view",{"_index":3803,"title":{},"body":{"components/SelectComponent.html":{}}}],["if(titl",{"_index":2384,"title":{},"body":{"classes/IfElseControlProcedure.html":{}}}],["if(typ",{"_index":1629,"title":{},"body":{"classes/FlowchartUtils.html":{},"classes/InputPort.html":{},"classes/NodeUtils.html":{},"classes/OutputPort.html":{},"pipes/PortTypePipe.html":{},"components/PublishSettingsComponent.html":{},"classes/StatementProcedure.html":{},"components/TextViewerComponent.html":{}}}],["if(typeof",{"_index":966,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["if(typeof(submod",{"_index":2936,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["if(typeof(v",{"_index":4066,"title":{},"body":{"components/TextViewerComponent.html":{}}}],["if(typeof(valu",{"_index":967,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["if(val",{"_index":4063,"title":{},"body":{"components/TextViewerComponent.html":{}}}],["if(valu",{"_index":1089,"title":{},"body":{"classes/FileUtils.html":{},"classes/FlowchartRenderUtils.html":{},"components/ParameterEditorComponent.html":{}}}],["if(value.length",{"_index":3377,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"pipes/ShortNamePipe.html":{}}}],["if(value.trim().length",{"_index":3364,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["if(window.navigator.useragent.indexof(\"edg",{"_index":2710,"title":{},"body":{"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{}}}],["if_condit",{"_index":2372,"title":{},"body":{"classes/IfElseControlProcedure.html":{}}}],["if_control",{"_index":2377,"title":{},"body":{"classes/IfElseControlProcedure.html":{}}}],["if_else_condit",{"_index":3198,"title":{},"body":{"classes/NodeUtils.html":{}}}],["ifcontrol",{"_index":4259,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ifcontrolprocedur",{"_index":2363,"title":{"classes/IfControlProcedure.html":{}},"body":{"classes/IfControlProcedure.html":{},"classes/ProcedureFactory.html":{},"coverage.html":{}}}],["ifcontrolprocedure(data",{"_index":3648,"title":{},"body":{"classes/ProcedureFactory.html":{}}}],["ifelsecontrolprocedur",{"_index":2368,"title":{"classes/IfElseControlProcedure.html":{}},"body":{"classes/IfElseControlProcedure.html":{},"classes/ProcedureFactory.html":{},"coverage.html":{}}}],["iflowchart",{"_index":492,"title":{"interfaces/IFlowchart.html":{}},"body":{"classes/CodeGenerator.html":{},"injectables/ExecuteService.html":{},"classes/Flowchart.html":{},"classes/FlowchartConnectionUtils.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"classes/FlowchartWriter.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IFlowchart.html":{},"components/PublishSettingsComponent.html":{},"coverage.html":{}}}],["ignor",{"_index":1962,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{}}}],["ignored",{"_index":884,"title":{},"body":{"components/DisplayComponent.html":{}}}],["igraphnod",{"_index":411,"title":{"interfaces/IGraphNode.html":{}},"body":{"components/CesiumViewerComponent.html":{},"classes/CodeGenerator.html":{},"components/EditorComponent.html":{},"classes/Flowchart.html":{},"classes/FlowchartConnectionUtils.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"classes/FunctionProcedure.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IFlowchart.html":{},"interfaces/IGraphNode.html":{},"classes/InputPort.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"injectables/NodeLibraryService.html":{},"classes/NodeSubscriber.html":{},"classes/NodeUtils.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{}}}],["imageri",{"_index":907,"title":{},"body":{"components/DisplayComponent.html":{}}}],["immedi",{"_index":2116,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["imod",{"_index":2932,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["imodul",{"_index":450,"title":{"interfaces/IModule.html":{}},"body":{"classes/CodeFactory.html":{},"classes/CodeGenerator.html":{},"classes/Flowchart.html":{},"classes/FlowchartConnectionUtils.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IFlowchart.html":{},"interfaces/IModule.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"classes/ModuleUtils.html":{},"classes/NodeUtils.html":{},"coverage.html":{}}}],["implement",{"_index":388,"title":{},"body":{"components/CesiumViewerComponent.html":{},"classes/CodeGenerator.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"classes/FileUtils.html":{},"classes/Flowchart.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartRenderUtils.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"interfaces/IModule.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"injectables/LayoutService.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"classes/Module.html":{},"components/ModuleboxComponent.html":{},"components/PanelComponent.html":{},"pipes/PortTypePipe.html":{},"classes/Procedure.html":{},"components/ProcedureItemComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"license.html":{}}}],["impli",{"_index":4668,"title":{},"body":{"license.html":{}}}],["import",{"_index":83,"title":{},"body":{"classes/ActionProcedure.html":{},"injectables/ActiveNodeService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"classes/CodeFactory.html":{},"classes/CodeGenerator.html":{},"injectables/CodeService.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"injectables/ConsoleService.html":{},"modules/CustomMaterialModule.html":{},"classes/DataProcedure.html":{},"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"injectables/ExecuteService.html":{},"components/FileLoadDialogComponent.html":{},"classes/FileUtils.html":{},"classes/Flowchart.html":{},"classes/FlowchartConnectionUtils.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"classes/FlowchartWriter.html":{},"classes/ForLoopControlProcedure.html":{},"classes/Frame.html":{},"classes/FunctionProcedure.html":{},"modules/GSViewer.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"interfaces/HasIsPlanar.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IFlowchart.html":{},"interfaces/IGraphNode.html":{},"interfaces/IPort.html":{},"interfaces/IProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"components/InfoViewerComponent.html":{},"classes/InputPort.html":{},"components/LandingComponent.html":{},"injectables/LayoutService.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"modules/MobiusCesium.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"injectables/MobiusService.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"injectables/ModuleService.html":{},"classes/ModuleUtils.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"injectables/NodeLibraryService.html":{},"classes/NodeSubscriber.html":{},"classes/NodeUtils.html":{},"classes/OutputPort.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"pipes/PortTypePipe.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{},"classes/ProcedureFactory.html":{},"components/ProcedureItemComponent.html":{},"classes/ProcedureUtils.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{},"classes/StatementProcedure.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"classes/WhileControlProcedure.html":{},"classes/gis_module.html":{},"license.html":{}}}],["impos",{"_index":4594,"title":{},"body":{"license.html":{}}}],["imvis",{"_index":1801,"title":{},"body":{"components/GSViewerComponent.html":{}}}],["imvisible:boolean=fals",{"_index":1811,"title":{},"body":{"components/GSViewerComponent.html":{}}}],["in0",{"_index":2638,"title":{},"body":{"components/MobiusAbout.html":{}}}],["in_nod",{"_index":1364,"title":{},"body":{"classes/FlowchartReader.html":{}}}],["inabl",{"_index":4697,"title":{},"body":{"license.html":{}}}],["inaccur",{"_index":4699,"title":{},"body":{"license.html":{}}}],["inc",{"_index":4336,"title":{},"body":{"license.html":{}}}],["incident",{"_index":4695,"title":{},"body":{"license.html":{}}}],["includ",{"_index":2201,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"license.html":{}}}],["inclus",{"_index":4519,"title":{},"body":{"license.html":{}}}],["incompat",{"_index":4382,"title":{},"body":{"license.html":{}}}],["incorpor",{"_index":4325,"title":{},"body":{"index.html":{},"license.html":{}}}],["increas",{"_index":2175,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["increment",{"_index":2174,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["indemnif",{"_index":4591,"title":{},"body":{"license.html":{}}}],["indent",{"_index":2186,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["independ",{"_index":1982,"title":{},"body":{"components/HelpFundamentals.html":{},"license.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/ActionProcedure.html":{},"injectables/ActiveNodeService.html":{},"components/CesiumViewerComponent.html":{},"classes/CodeFactory.html":{},"classes/CodeGenerator.html":{},"injectables/CodeService.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"injectables/ConsoleService.html":{},"classes/Constants.html":{},"classes/DataProcedure.html":{},"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"injectables/ExecuteService.html":{},"components/FileLoadDialogComponent.html":{},"classes/FileService.html":{},"classes/FileUtils.html":{},"classes/Flowchart.html":{},"classes/FlowchartConnectionUtils.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"classes/FlowchartWriter.html":{},"classes/ForLoopControlProcedure.html":{},"classes/Frame.html":{},"classes/FunctionProcedure.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"interfaces/HasIsPlanar.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IComponent.html":{},"interfaces/IEdge.html":{},"interfaces/IFlowchart.html":{},"interfaces/IGraphNode.html":{},"interfaces/IModule.html":{},"interfaces/IPort.html":{},"interfaces/IProcedure.html":{},"classes/IdGenerator.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"components/InfoViewerComponent.html":{},"classes/InputPort.html":{},"components/LandingComponent.html":{},"injectables/LayoutService.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"injectables/MobiusService.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"classes/ModuleUtils.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"injectables/NodeLibraryService.html":{},"classes/NodeUtils.html":{},"classes/OutputPort.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{},"classes/ProcedureFactory.html":{},"components/ProcedureItemComponent.html":{},"classes/ProcedureUtils.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"classes/StatementProcedure.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"classes/WhileControlProcedure.html":{},"miscellaneous/enumerations.html":{},"classes/gis_module.html":{},"miscellaneous/variables.html":{}}}],["index:numb",{"_index":3229,"title":{},"body":{"classes/NodeUtils.html":{}}}],["indic",{"_index":1627,"title":{},"body":{"classes/FlowchartUtils.html":{},"components/HelpFundamentals.html":{},"license.html":{}}}],["individu",{"_index":2042,"title":{},"body":{"components/HelpFundamentals.html":{},"license.html":{}}}],["industri",{"_index":4556,"title":{},"body":{"license.html":{}}}],["infinit",{"_index":2964,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["inflex",{"_index":2079,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/ActionProcedure.html":{},"injectables/ActiveNodeService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"classes/CodeFactory.html":{},"classes/CodeGenerator.html":{},"injectables/CodeService.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"injectables/ConsoleService.html":{},"classes/Constants.html":{},"modules/CustomMaterialModule.html":{},"classes/DataProcedure.html":{},"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"injectables/ExecuteService.html":{},"components/FileLoadDialogComponent.html":{},"classes/FileService.html":{},"classes/FileUtils.html":{},"classes/Flowchart.html":{},"classes/FlowchartConnectionUtils.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"classes/FlowchartWriter.html":{},"classes/ForLoopControlProcedure.html":{},"classes/Frame.html":{},"classes/FunctionProcedure.html":{},"modules/GSViewer.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"interfaces/HasIsPlanar.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IComponent.html":{},"interfaces/IEdge.html":{},"interfaces/IFlowchart.html":{},"interfaces/IGraphNode.html":{},"interfaces/IModule.html":{},"interfaces/IPort.html":{},"interfaces/IProcedure.html":{},"classes/IdGenerator.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"components/InfoViewerComponent.html":{},"classes/InputPort.html":{},"components/LandingComponent.html":{},"injectables/LayoutService.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"modules/MobiusCesium.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"injectables/MobiusService.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"classes/ModuleUtils.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"injectables/NodeLibraryService.html":{},"classes/NodeSubscriber.html":{},"classes/NodeUtils.html":{},"classes/OutputPort.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"pipes/PortTypePipe.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{},"classes/ProcedureFactory.html":{},"components/ProcedureItemComponent.html":{},"classes/ProcedureUtils.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{},"classes/StatementProcedure.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"classes/WhileControlProcedure.html":{},"miscellaneous/enumerations.html":{},"classes/gis_module.html":{}}}],["info_outlin",{"_index":4123,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["inform",{"_index":2444,"title":{},"body":{"components/LandingComponent.html":{},"components/MobiusAbout.html":{},"license.html":{}}}],["infoviewercompon",{"_index":203,"title":{"components/InfoViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["infring",{"_index":4418,"title":{},"body":{"license.html":{}}}],["infront",{"_index":4029,"title":{},"body":{"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{}}}],["inherit",{"_index":48,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"components/DisplayComponent.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/InputPort.html":{},"classes/OutputPort.html":{},"components/SelectComponent.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{},"classes/gis_module.html":{}}}],["initi",{"_index":4628,"title":{},"body":{"license.html":{}}}],["inject",{"_index":121,"title":{"injectables/ActiveNodeService.html":{},"injectables/CodeService.html":{},"injectables/ConsoleService.html":{},"injectables/ExecuteService.html":{},"injectables/FlowchartService.html":{},"injectables/LayoutService.html":{},"injectables/MobiusService.html":{},"injectables/ModuleService.html":{},"injectables/NodeLibraryService.html":{}},"body":{"injectables/ActiveNodeService.html":{},"injectables/CodeService.html":{},"injectables/ConsoleService.html":{},"injectables/ExecuteService.html":{},"components/FileLoadDialogComponent.html":{},"injectables/FlowchartService.html":{},"injectables/LayoutService.html":{},"injectables/MobiusService.html":{},"injectables/ModuleService.html":{},"components/NodeLibraryComponent.html":{},"injectables/NodeLibraryService.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/PublishSettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inject(mat_dialog_data",{"_index":3358,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{},"components/PublishSettingsComponent.html":{}}}],["injector",{"_index":408,"title":{},"body":{"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/DisplayComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/GeometryViewerComponent.html":{},"injectables/LayoutService.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["injector.get(dataservic",{"_index":728,"title":{},"body":{"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{}}}],["injector.get(moduleservic",{"_index":3002,"title":{},"body":{"components/ModuleViewerComponent.html":{}}}],["inner",{"_index":2198,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["inod",{"_index":1641,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["inode.inputs[inputaddress[1",{"_index":1647,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["inp",{"_index":1068,"title":{},"body":{"classes/FileUtils.html":{},"classes/FlowchartUtils.html":{},"components/ParameterEditorComponent.html":{}}}],["inp.getnam",{"_index":3778,"title":{},"body":{"components/PublishSettingsComponent.html":{}}}],["inp.getvalue().port",{"_index":3325,"title":{},"body":{"components/ParameterEditorComponent.html":{}}}],["inp.nam",{"_index":3431,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["inp.opts.max",{"_index":3434,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["inp.opts.min",{"_index":3433,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["inp.valu",{"_index":3171,"title":{},"body":{"classes/NodeUtils.html":{}}}],["inp.value[\"port",{"_index":1678,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["inp_rang",{"_index":1776,"title":{},"body":{"classes/FunctionProcedure.html":{}}}],["input",{"_index":397,"title":{},"body":{"components/CesiumViewerComponent.html":{},"injectables/ExecuteService.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"components/GSViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"interfaces/IGraphNode.html":{},"classes/InputPort.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleboxComponent.html":{},"classes/NodeUtils.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["input.getdefaultvalu",{"_index":3373,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["input.getopts().url",{"_index":3386,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["input.isconnect",{"_index":1257,"title":{},"body":{"classes/FlowchartConnectionUtils.html":{},"classes/FlowchartUtils.html":{}}}],["input.nam",{"_index":3391,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["input.name}}input",{"_index":3393,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["input.setcomputedvalue(cont",{"_index":3423,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["input.setdefaultvalue(cont",{"_index":3384,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["input.setdefaultvalue(json.stringify(data",{"_index":3390,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["input.setdefaultvalue(undefin",{"_index":3385,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["input.setopts({url",{"_index":3378,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{}}}],["input.typ",{"_index":3392,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["input.valu",{"_index":1258,"title":{},"body":{"classes/FlowchartConnectionUtils.html":{},"classes/FlowchartUtils.html":{}}}],["input/output",{"_index":1656,"title":{},"body":{"classes/FlowchartUtils.html":{},"index.html":{}}}],["input_address",{"_index":1653,"title":{},"body":{"classes/FlowchartUtils.html":{},"interfaces/IEdge.html":{}}}],["input_nod",{"_index":490,"title":{},"body":{"classes/CodeGenerator.html":{},"classes/FlowchartUtils.html":{},"interfaces/ICodeGenerator.html":{}}}],["input_port",{"_index":486,"title":{},"body":{"classes/CodeGenerator.html":{},"classes/Flowchart.html":{},"interfaces/ICodeGenerator.html":{}}}],["input_port.update(in_data",{"_index":1225,"title":{},"body":{"classes/Flowchart.html":{}}}],["inputaddress",{"_index":1515,"title":{},"body":{"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{}}}],["inputaddress.length",{"_index":1636,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["inputaddress[0",{"_index":1569,"title":{},"body":{"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{}}}],["inputaddress[1",{"_index":1648,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["inputport",{"_index":506,"title":{"classes/InputPort.html":{}},"body":{"classes/CodeGenerator.html":{},"classes/Flowchart.html":{},"classes/FlowchartConnectionUtils.html":{},"classes/FlowchartRenderUtils.html":{},"classes/FlowchartUtils.html":{},"classes/FunctionProcedure.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IGraphNode.html":{},"classes/InputPort.html":{},"classes/NodeUtils.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"pipes/PortTypePipe.html":{},"components/PublishSettingsComponent.html":{},"coverage.html":{}}}],["inputport(\"glob",{"_index":3770,"title":{},"body":{"components/PublishSettingsComponent.html":{}}}],["inputport(default_nam",{"_index":3179,"title":{},"body":{"classes/NodeUtils.html":{}}}],["inputport(in_data[\"_nam",{"_index":1224,"title":{},"body":{"classes/Flowchart.html":{}}}],["inputportopt",{"_index":3295,"title":{},"body":{"components/ParameterEditorComponent.html":{},"components/PublishSettingsComponent.html":{}}}],["inputporttyp",{"_index":1048,"title":{},"body":{"classes/FileUtils.html":{},"interfaces/IPort.html":{},"classes/InputPort.html":{},"classes/NodeUtils.html":{},"classes/OutputPort.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"pipes/PortTypePipe.html":{},"components/PublishSettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["inputporttypes)this._typ",{"_index":1069,"title":{},"body":{"classes/FileUtils.html":{}}}],["inputporttypes.checkbox",{"_index":3312,"title":{},"body":{"components/ParameterEditorComponent.html":{},"pipes/PortTypePipe.html":{},"components/PublishSettingsComponent.html":{}}}],["inputporttypes.colorpick",{"_index":3455,"title":{},"body":{"pipes/PortTypePipe.html":{},"components/PublishSettingsComponent.html":{}}}],["inputporttypes.dropdown",{"_index":3456,"title":{},"body":{"pipes/PortTypePipe.html":{},"components/PublishSettingsComponent.html":{}}}],["inputporttypes.filepick",{"_index":1112,"title":{},"body":{"classes/FileUtils.html":{},"classes/InputPort.html":{},"components/ParameterEditorComponent.html":{},"pipes/PortTypePipe.html":{},"components/PublishSettingsComponent.html":{}}}],["inputporttypes.input",{"_index":2428,"title":{},"body":{"classes/InputPort.html":{},"components/ParameterEditorComponent.html":{},"pipes/PortTypePipe.html":{},"components/PublishSettingsComponent.html":{}}}],["inputporttypes.slid",{"_index":1090,"title":{},"body":{"classes/FileUtils.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"pipes/PortTypePipe.html":{},"components/PublishSettingsComponent.html":{}}}],["inputporttypes.url",{"_index":1113,"title":{},"body":{"classes/FileUtils.html":{},"classes/InputPort.html":{},"classes/NodeUtils.html":{},"components/ParameterEditorComponent.html":{},"pipes/PortTypePipe.html":{},"components/PublishSettingsComponent.html":{}}}],["inputporttypes|outputporttyp",{"_index":1050,"title":{},"body":{"classes/FileUtils.html":{}}}],["inputport|outputport",{"_index":3177,"title":{},"body":{"classes/NodeUtils.html":{},"components/ParameterEditorComponent.html":{}}}],["inputposit",{"_index":1842,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["insert",{"_index":2630,"title":{},"body":{"components/MobiusAbout.html":{},"index.html":{}}}],["insid",{"_index":2092,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"components/ProcedureEditorComponent.html":{},"license.html":{}}}],["instal",{"_index":4379,"title":{},"body":{"license.html":{}}}],["instanceof",{"_index":3185,"title":{},"body":{"classes/NodeUtils.html":{}}}],["instead",{"_index":2109,"title":{},"body":{"components/HelpFundamentals.html":{},"license.html":{}}}],["instruct",{"_index":1954,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["intact",{"_index":4501,"title":{},"body":{"license.html":{}}}],["integ",{"_index":2173,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["integr",{"_index":2437,"title":{},"body":{"components/LandingComponent.html":{},"components/MobiusAbout.html":{}}}],["intend",{"_index":4348,"title":{},"body":{"license.html":{}}}],["intent",{"_index":4494,"title":{},"body":{"license.html":{}}}],["interact",{"_index":4424,"title":{},"body":{"license.html":{}}}],["interchang",{"_index":2551,"title":{},"body":{"injectables/LayoutService.html":{},"license.html":{}}}],["interest",{"_index":2154,"title":{},"body":{"components/HelpFundamentals.html":{},"components/LandingComponent.html":{},"license.html":{}}}],["interf",{"_index":4561,"title":{},"body":{"license.html":{}}}],["interfac",{"_index":1734,"title":{"interfaces/HasIsPlanar.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IComponent.html":{},"interfaces/IEdge.html":{},"interfaces/IFlowchart.html":{},"interfaces/IGraphNode.html":{},"interfaces/IModule.html":{},"interfaces/IPort.html":{},"interfaces/IProcedure.html":{}},"body":{"classes/Frame.html":{},"interfaces/HasIsPlanar.html":{},"components/HelpFundamentals.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IComponent.html":{},"interfaces/IEdge.html":{},"interfaces/IFlowchart.html":{},"interfaces/IGraphNode.html":{},"interfaces/IModule.html":{},"interfaces/IPort.html":{},"interfaces/IProcedure.html":{},"components/MobiusAbout.html":{},"classes/Module.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"coverage.html":{},"classes/gis_module.html":{},"license.html":{},"overview.html":{}}}],["interpret",{"_index":4447,"title":{},"body":{"license.html":{}}}],["intim",{"_index":4450,"title":{},"body":{"license.html":{}}}],["invalid",{"_index":4509,"title":{},"body":{"license.html":{}}}],["io",{"_index":4255,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["ip",{"_index":596,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["iport",{"_index":1047,"title":{"interfaces/IPort.html":{}},"body":{"classes/FileUtils.html":{},"injectables/FlowchartService.html":{},"interfaces/IPort.html":{},"classes/InputPort.html":{},"classes/OutputPort.html":{},"components/TextViewerComponent.html":{},"coverage.html":{}}}],["iprocedur",{"_index":45,"title":{"interfaces/IProcedure.html":{}},"body":{"classes/ActionProcedure.html":{},"classes/CodeGenerator.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"injectables/FlowchartService.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IGraphNode.html":{},"interfaces/IProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"components/ModuleboxComponent.html":{},"classes/NodeUtils.html":{},"components/ParameterEditorComponent.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{},"classes/ProcedureFactory.html":{},"components/ProcedureItemComponent.html":{},"classes/ProcedureUtils.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{},"coverage.html":{}}}],["irrevoc",{"_index":4454,"title":{},"body":{"license.html":{}}}],["isact",{"_index":98,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"interfaces/IComponent.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["iscompat",{"_index":2894,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["iscompatible(mod1",{"_index":2914,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["isconnect",{"_index":1131,"title":{},"body":{"classes/FileUtils.html":{},"interfaces/IPort.html":{}}}],["isconnected(valu",{"_index":1132,"title":{},"body":{"classes/FileUtils.html":{}}}],["isdis",{"_index":1128,"title":{},"body":{"classes/FileUtils.html":{},"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["isjson",{"_index":4049,"title":{},"body":{"components/TextViewerComponent.html":{}}}],["isjson(output",{"_index":4053,"title":{},"body":{"components/TextViewerComponent.html":{}}}],["isnan(parseint(valu",{"_index":3366,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["isol",{"_index":2596,"title":{},"body":{"components/MobiusAbout.html":{}}}],["isplanar",{"_index":1736,"title":{},"body":{"classes/Frame.html":{},"interfaces/HasIsPlanar.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"classes/gis_module.html":{}}}],["isplanar():boolean",{"_index":1732,"title":{},"body":{"classes/Frame.html":{},"interfaces/HasIsPlanar.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"classes/gis_module.html":{}}}],["isplanar(ent",{"_index":4273,"title":{},"body":{"classes/gis_module.html":{}}}],["isplanar(entity:t):boolean",{"_index":1745,"title":{},"body":{"classes/Frame.html":{},"interfaces/HasIsPlanar.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"classes/gis_module.html":{}}}],["isselect",{"_index":1127,"title":{},"body":{"classes/FileUtils.html":{},"interfaces/IPort.html":{},"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["issu",{"_index":3725,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["isvalid",{"_index":1839,"title":{},"body":{"components/GraphEdgeComponent.html":{},"classes/ModuleUtils.html":{}}}],["isvalid(mod",{"_index":2918,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["isvis",{"_index":917,"title":{},"body":{"components/EditorComponent.html":{}}}],["it'",{"_index":4299,"title":{},"body":{"index.html":{}}}],["item",{"_index":965,"title":{},"body":{"injectables/ExecuteService.html":{},"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"components/ProcedureItemComponent.html":{},"components/TextViewerComponent.html":{},"license.html":{}}}],["item'},{'nam",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["item.compon",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["item.component.html",{"_index":3655,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["item.component.scss",{"_index":3654,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["item.component.t",{"_index":3653,"title":{},"body":{"components/ProcedureItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:17",{"_index":3660,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["item.component.ts:18",{"_index":3658,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["item.component.ts:19",{"_index":3659,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["item.component.ts:20",{"_index":3661,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["item.component.ts:23",{"_index":3662,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["item.component.ts:25",{"_index":3670,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["item.component.ts:27",{"_index":3669,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["item.component.ts:29",{"_index":3680,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["item.component.ts:32",{"_index":3673,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["item.component.ts:36",{"_index":3677,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["item.component.ts:40",{"_index":3668,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["item.component.ts:45",{"_index":3666,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["item.component.ts:50",{"_index":3664,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["item.component.ts:55",{"_index":3675,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["item.component.ts:60",{"_index":3671,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["itself",{"_index":4569,"title":{},"body":{"license.html":{}}}],["joie",{"_index":2111,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["join",{"_index":4041,"title":{},"body":{"pipes/SimpleNamePipe.html":{},"components/TextViewerComponent.html":{}}}],["js",{"_index":460,"title":{},"body":{"classes/CodeFactory.html":{},"components/CodeViewerComponent.html":{},"components/DisplayComponent.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartWriter.html":{},"components/SelectComponent.html":{},"components/TextViewerComponent.html":{},"dependencies.html":{}}}],["js_beautifi",{"_index":548,"title":{},"body":{"components/CodeViewerComponent.html":{},"components/TextViewerComponent.html":{}}}],["js_beautify.js_beautify(this._cs.generator.get_code_display(fc",{"_index":553,"title":{},"body":{"components/CodeViewerComponent.html":{}}}],["json",{"_index":369,"title":{},"body":{"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/DisplayComponent.html":{},"injectables/ExecuteService.html":{},"classes/Flowchart.html":{},"components/FlowchartControlsComponent.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartWriter.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"injectables/NodeLibraryService.html":{},"components/ParameterViewerComponent.html":{},"components/SelectComponent.html":{},"components/TextViewerComponent.html":{},"dependencies.html":{}}}],["json.parse(contents);//function('us",{"_index":3419,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["json.parse(out",{"_index":3245,"title":{},"body":{"classes/NodeUtils.html":{}}}],["json.stringify(edg",{"_index":1895,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["json.stringify(this.port.valu",{"_index":422,"title":{},"body":{"components/CesiumViewerComponent.html":{}}}],["juliandt",{"_index":885,"title":{},"body":{"components/DisplayComponent.html":{}}}],["june",{"_index":4332,"title":{},"body":{"license.html":{}}}],["k",{"_index":4074,"title":{},"body":{"components/TextViewerComponent.html":{}}}],["kainwe",{"_index":2077,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["kamel",{"_index":2107,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["keep",{"_index":2618,"title":{},"body":{"components/MobiusAbout.html":{},"license.html":{}}}],["kernel",{"_index":4445,"title":{},"body":{"license.html":{}}}],["key",{"_index":973,"title":{},"body":{"injectables/ExecuteService.html":{},"components/HelpFundamentals.html":{},"interfaces/IModule.html":{},"classes/Module.html":{},"classes/ModuleUtils.html":{},"components/ProcedureEditorComponent.html":{},"components/TextViewerComponent.html":{},"license.html":{}}}],["key_cod",{"_index":3560,"title":{},"body":{"components/ProcedureEditorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["key_code.copi",{"_index":3604,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["key_code.cut",{"_index":3600,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["key_code.delet",{"_index":3590,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["key_code.left",{"_index":3619,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["key_code.past",{"_index":3607,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["key_code.right",{"_index":3626,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["key_code[key",{"_index":3594,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["keyboard",{"_index":3632,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["keyboardev",{"_index":3544,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["keyevent(ev",{"_index":3575,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["keyfram",{"_index":2781,"title":{},"body":{"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{}}}],["keys.foreach((k",{"_index":2342,"title":{},"body":{"interfaces/IModule.html":{},"classes/Module.html":{}}}],["keys.map(function(k",{"_index":4069,"title":{},"body":{"components/TextViewerComponent.html":{}}}],["keys.tostr",{"_index":975,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["kianwe",{"_index":2086,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["kind",{"_index":4308,"title":{},"body":{"index.html":{},"license.html":{}}}],["know",{"_index":4357,"title":{},"body":{"license.html":{}}}],["knowingli",{"_index":4648,"title":{},"body":{"license.html":{}}}],["knowledg",{"_index":4655,"title":{},"body":{"license.html":{}}}],["land",{"_index":2432,"title":{},"body":{"components/LandingComponent.html":{},"index.html":{}}}],["landing'},{'nam",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["landing.component.html",{"_index":2434,"title":{},"body":{"components/LandingComponent.html":{}}}],["landing.component.scss",{"_index":2433,"title":{},"body":{"components/LandingComponent.html":{}}}],["landing/landing.compon",{"_index":364,"title":{},"body":{"modules/AppModule.html":{}}}],["landing/landing.component.t",{"_index":2431,"title":{},"body":{"components/LandingComponent.html":{},"coverage.html":{}}}],["landing/landing.component.ts:12",{"_index":2436,"title":{},"body":{"components/LandingComponent.html":{}}}],["landing/landing.component.ts:8",{"_index":2435,"title":{},"body":{"components/LandingComponent.html":{}}}],["landingcompon",{"_index":204,"title":{"components/LandingComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["languag",{"_index":454,"title":{},"body":{"classes/CodeFactory.html":{},"classes/CodeGenerator.html":{},"license.html":{}}}],["larger",{"_index":4513,"title":{},"body":{"license.html":{}}}],["last",{"_index":2100,"title":{},"body":{"components/HelpFundamentals.html":{},"classes/NodeUtils.html":{},"components/ProcedureEditorComponent.html":{}}}],["last_lett",{"_index":2058,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["later",{"_index":1073,"title":{},"body":{"classes/FileUtils.html":{},"components/HelpFundamentals.html":{},"license.html":{}}}],["law",{"_index":4404,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":4633,"title":{},"body":{"license.html":{}}}],["layer",{"_index":818,"title":{},"body":{"components/DisplayComponent.html":{}}}],["layers.addimageryprovider(cesium.createopenstreetmapimageryprovid",{"_index":827,"title":{},"body":{"components/DisplayComponent.html":{}}}],["layers.addimageryprovider(cesium.createtilemapserviceimageryprovid",{"_index":843,"title":{},"body":{"components/DisplayComponent.html":{}}}],["layers.addimageryprovider(new",{"_index":838,"title":{},"body":{"components/DisplayComponent.html":{}}}],["layers.removeal",{"_index":822,"title":{},"body":{"components/DisplayComponent.html":{}}}],["layout",{"_index":2463,"title":{},"body":{"injectables/LayoutService.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{},"components/PanelComponent.html":{},"index.html":{}}}],["layout.nam",{"_index":3282,"title":{},"body":{"components/PanelComponent.html":{}}}],["layoutservic",{"_index":269,"title":{"injectables/LayoutService.html":{}},"body":{"modules/AppModule.html":{},"injectables/LayoutService.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/PanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["layoutservice.componentmap[component_nam",{"_index":2529,"title":{},"body":{"injectables/LayoutService.html":{}}}],["layoutservice.getasset",{"_index":2679,"title":{},"body":{"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{}}}],["layoutservice.togglemod",{"_index":2681,"title":{},"body":{"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{}}}],["leaflet",{"_index":1802,"title":{},"body":{"components/GSViewerComponent.html":{}}}],["left",{"_index":95,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/FlowchartRenderUtils.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"interfaces/IProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"components/MobiusAbout.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{},"miscellaneous/enumerations.html":{}}}],["left(valu",{"_index":3513,"title":{},"body":{"classes/Procedure.html":{}}}],["left_point",{"_index":1911,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["legal",{"_index":4370,"title":{},"body":{"license.html":{}}}],["legend",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"modules/GSViewer.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"modules/MobiusCesium.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"overview.html":{}}}],["len",{"_index":2245,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["length",{"_index":2101,"title":{},"body":{"components/HelpFundamentals.html":{},"classes/ModuleUtils.html":{},"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{}}}],["length:7",{"_index":4033,"title":{},"body":{"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{}}}],["length:numb",{"_index":4031,"title":{},"body":{"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{}}}],["lesser",{"_index":4735,"title":{},"body":{"license.html":{}}}],["let",{"_index":2068,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["letter",{"_index":2010,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["level",{"_index":597,"title":{},"body":{"injectables/ConsoleService.html":{},"components/HelpFundamentals.html":{},"components/ProcedureItemComponent.html":{}}}],["lgpl.html",{"_index":4737,"title":{},"body":{"license.html":{}}}],["liabil",{"_index":4583,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":4417,"title":{},"body":{"license.html":{}}}],["librari",{"_index":2455,"title":{},"body":{"components/LandingComponent.html":{},"components/MobiusAbout.html":{},"injectables/ModuleService.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"classes/NodeUtils.html":{},"index.html":{},"license.html":{}}}],["library'},{'nam",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["library.compon",{"_index":345,"title":{},"body":{"modules/AppModule.html":{}}}],["library.component.html",{"_index":3073,"title":{},"body":{"components/NodeLibraryComponent.html":{}}}],["library.component.scss",{"_index":3072,"title":{},"body":{"components/NodeLibraryComponent.html":{}}}],["library.component.t",{"_index":3071,"title":{},"body":{"components/NodeLibraryComponent.html":{},"coverage.html":{}}}],["library.component.ts:13",{"_index":3080,"title":{},"body":{"components/NodeLibraryComponent.html":{}}}],["library.component.ts:17",{"_index":3088,"title":{},"body":{"components/NodeLibraryComponent.html":{}}}],["library.component.ts:21",{"_index":3082,"title":{},"body":{"components/NodeLibraryComponent.html":{}}}],["library.component.ts:24",{"_index":3085,"title":{},"body":{"components/NodeLibraryComponent.html":{}}}],["library.component.ts:29",{"_index":3083,"title":{},"body":{"components/NodeLibraryComponent.html":{}}}],["library.component.ts:33",{"_index":3086,"title":{},"body":{"components/NodeLibraryComponent.html":{}}}],["library.component.ts:37",{"_index":3087,"title":{},"body":{"components/NodeLibraryComponent.html":{}}}],["library.servic",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"classes/FlowchartRenderUtils.html":{},"components/NodeLibraryComponent.html":{}}}],["library.service.t",{"_index":3095,"title":{},"body":{"injectables/NodeLibraryService.html":{},"coverage.html":{}}}],["library.service.ts:14",{"_index":3107,"title":{},"body":{"injectables/NodeLibraryService.html":{}}}],["library.service.ts:16",{"_index":3108,"title":{},"body":{"injectables/NodeLibraryService.html":{}}}],["library.service.ts:20",{"_index":3110,"title":{},"body":{"injectables/NodeLibraryService.html":{}}}],["library.service.ts:22",{"_index":3100,"title":{},"body":{"injectables/NodeLibraryService.html":{}}}],["library.service.ts:26",{"_index":3106,"title":{},"body":{"injectables/NodeLibraryService.html":{}}}],["library.service.ts:47",{"_index":3102,"title":{},"body":{"injectables/NodeLibraryService.html":{}}}],["library.service.ts:77",{"_index":3105,"title":{},"body":{"injectables/NodeLibraryService.html":{}}}],["library/nod",{"_index":344,"title":{},"body":{"modules/AppModule.html":{},"components/NodeLibraryComponent.html":{},"coverage.html":{}}}],["libraryload",{"_index":3094,"title":{},"body":{"components/NodeLibraryComponent.html":{}}}],["licens",{"_index":4329,"title":{"license.html":{}},"body":{"license.html":{}}}],["license",{"_index":4407,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":4587,"title":{},"body":{"license.html":{}}}],["light",{"_index":3835,"title":{},"body":{"components/SettingComponent.html":{}}}],["light&nbsp;&nbsp",{"_index":4004,"title":{},"body":{"components/SettingComponent.html":{}}}],["lightness:numb",{"_index":3903,"title":{},"body":{"components/SettingComponent.html":{}}}],["likewis",{"_index":4616,"title":{},"body":{"license.html":{}}}],["limit",{"_index":4495,"title":{},"body":{"license.html":{}}}],["line",{"_index":1952,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"classes/NodeUtils.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/SettingComponent.html":{},"index.html":{},"license.html":{}}}],["linear",{"_index":1989,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["linepre.value.toprecision(2",{"_index":3999,"title":{},"body":{"components/SettingComponent.html":{}}}],["lineprecis",{"_index":3867,"title":{},"body":{"components/SettingComponent.html":{}}}],["lines.join(\"\\\\\\n",{"_index":3383,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["link",{"_index":2643,"title":{},"body":{"components/MobiusAbout.html":{},"index.html":{},"license.html":{}}}],["lint",{"_index":3213,"title":{},"body":{"classes/NodeUtils.html":{}}}],["list",{"_index":1946,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"license.html":{}}}],["list_a",{"_index":2141,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["list_a[0",{"_index":2143,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["list_b",{"_index":2142,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["list_of_item",{"_index":2191,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["listen",{"_index":4297,"title":{},"body":{"index.html":{}}}],["lists.list",{"_index":2251,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["lite",{"_index":831,"title":{},"body":{"components/DisplayComponent.html":{}}}],["liter",{"_index":34,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/FlowchartRenderUtils.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"components/HelpViewerComponent.html":{},"classes/IfControlProcedure.html":{},"classes/InputPort.html":{},"injectables/LayoutService.html":{},"classes/ModuleUtils.html":{},"components/ModuleboxComponent.html":{},"classes/WhileControlProcedure.html":{}}}],["litig",{"_index":4629,"title":{},"body":{"license.html":{}}}],["littl",{"_index":1970,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{}}}],["live_data_download",{"_index":3235,"title":{},"body":{"classes/NodeUtils.html":{}}}],["lives_in_sg",{"_index":2026,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["load",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"injectables/ModuleService.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"classes/NodeUtils.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{}}}],["load_fil",{"_index":1276,"title":{},"body":{"components/FlowchartControlsComponent.html":{},"pipes/PortTypePipe.html":{},"index.html":{}}}],["load_file(url",{"_index":1284,"title":{},"body":{"components/FlowchartControlsComponent.html":{}}}],["load_file_from_url",{"_index":1506,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["load_file_from_url(url",{"_index":1527,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["load_flowchart_from_str",{"_index":1507,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["load_flowchart_from_string(filestr",{"_index":1529,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["load_funct",{"_index":2848,"title":{},"body":{"injectables/ModuleService.html":{}}}],["load_modul",{"_index":2849,"title":{},"body":{"injectables/ModuleService.html":{}}}],["loadlibrari",{"_index":3079,"title":{},"body":{"components/NodeLibraryComponent.html":{}}}],["local",{"_index":4705,"title":{},"body":{"license.html":{}}}],["local_us",{"_index":2735,"title":{},"body":{"injectables/MobiusService.html":{}}}],["localedatetimeformatter(datetim",{"_index":882,"title":{},"body":{"components/DisplayComponent.html":{}}}],["localetimeformatter(tim",{"_index":906,"title":{},"body":{"components/DisplayComponent.html":{}}}],["locat",{"_index":2127,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["log",{"_index":604,"title":{},"body":{"injectables/ConsoleService.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"injectables/MobiusService.html":{},"components/ProcedureEditorComponent.html":{}}}],["log(msg",{"_index":618,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["log_to_db",{"_index":605,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["log_to_db(msg",{"_index":621,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["loglevel",{"_index":626,"title":{},"body":{"injectables/ConsoleService.html":{},"miscellaneous/enumerations.html":{}}}],["loglevel.al",{"_index":627,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["logwithd",{"_index":598,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["long",{"_index":4463,"title":{},"body":{"license.html":{}}}],["longer",{"_index":2031,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["look",{"_index":1969,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{}}}],["loop",{"_index":1948,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"classes/ModuleUtils.html":{},"components/ModuleboxComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["loopbreak",{"_index":4263,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["loopcontinu",{"_index":4264,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lose",{"_index":2616,"title":{},"body":{"components/MobiusAbout.html":{}}}],["loss",{"_index":4698,"title":{},"body":{"license.html":{}}}],["lot",{"_index":1978,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["lowercas",{"_index":2009,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["lump",{"_index":2082,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["m",{"_index":2961,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["m.children",{"_index":2289,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["m.index",{"_index":2965,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["m[\"_name\"].tolowercas",{"_index":2285,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["machin",{"_index":4520,"title":{},"body":{"license.html":{}}}],["made",{"_index":4562,"title":{},"body":{"license.html":{}}}],["mail",{"_index":4722,"title":{},"body":{"license.html":{}}}],["main",{"_index":2044,"title":{},"body":{"components/HelpFundamentals.html":{},"injectables/LayoutService.html":{},"components/MobiusAbout.html":{},"components/PanelComponent.html":{},"index.html":{}}}],["mainli",{"_index":2636,"title":{},"body":{"components/MobiusAbout.html":{},"index.html":{}}}],["maintain",{"_index":4536,"title":{},"body":{"license.html":{}}}],["major",{"_index":4442,"title":{},"body":{"license.html":{}}}],["make",{"_index":2137,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"license.html":{}}}],["makecub",{"_index":4265,"title":{},"body":{"classes/gis_module.html":{}}}],["makecube(s",{"_index":1748,"title":{},"body":{"classes/Frame.html":{},"interfaces/HasIsPlanar.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"classes/gis_module.html":{}}}],["makey",{"_index":3580,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["manag",{"_index":2067,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["mani",{"_index":2006,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["manipul",{"_index":3952,"title":{},"body":{"components/SettingComponent.html":{},"index.html":{}}}],["manner",{"_index":4642,"title":{},"body":{"license.html":{}}}],["manual",{"_index":2640,"title":{},"body":{"components/MobiusAbout.html":{},"classes/Procedure.html":{}}}],["manufactur",{"_index":4381,"title":{},"body":{"license.html":{}}}],["map",{"_index":2720,"title":{},"body":{"components/MobiusGalleryComponent.html":{},"index.html":{}}}],["mapbox/togeojson",{"_index":4192,"title":{},"body":{"dependencies.html":{}}}],["marbl",{"_index":788,"title":{},"body":{"components/DisplayComponent.html":{}}}],["march",{"_index":4666,"title":{},"body":{"license.html":{}}}],["mark",{"_index":1675,"title":{},"body":{"classes/FlowchartUtils.html":{},"license.html":{}}}],["mask",{"_index":4406,"title":{},"body":{"license.html":{}}}],["mat_dialog_data",{"_index":1023,"title":{},"body":{"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"injectables/FlowchartService.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/PublishSettingsComponent.html":{}}}],["matbuttonmodul",{"_index":686,"title":{},"body":{"modules/CustomMaterialModule.html":{}}}],["matbuttontogglemodul",{"_index":692,"title":{},"body":{"modules/CustomMaterialModule.html":{}}}],["matcardmodul",{"_index":698,"title":{},"body":{"modules/CustomMaterialModule.html":{}}}],["match",{"_index":120,"title":{},"body":{"classes/ActionProcedure.html":{},"injectables/ActiveNodeService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"classes/CodeFactory.html":{},"classes/CodeGenerator.html":{},"injectables/CodeService.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"injectables/ConsoleService.html":{},"classes/Constants.html":{},"modules/CustomMaterialModule.html":{},"classes/DataProcedure.html":{},"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"injectables/ExecuteService.html":{},"components/FileLoadDialogComponent.html":{},"classes/FileService.html":{},"classes/FileUtils.html":{},"classes/Flowchart.html":{},"classes/FlowchartConnectionUtils.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"classes/FlowchartWriter.html":{},"classes/ForLoopControlProcedure.html":{},"classes/Frame.html":{},"classes/FunctionProcedure.html":{},"modules/GSViewer.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"interfaces/HasIsPlanar.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IComponent.html":{},"interfaces/IEdge.html":{},"interfaces/IFlowchart.html":{},"interfaces/IGraphNode.html":{},"interfaces/IModule.html":{},"interfaces/IPort.html":{},"interfaces/IProcedure.html":{},"classes/IdGenerator.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"components/InfoViewerComponent.html":{},"classes/InputPort.html":{},"components/LandingComponent.html":{},"injectables/LayoutService.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"modules/MobiusCesium.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"injectables/MobiusService.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"classes/ModuleUtils.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"injectables/NodeLibraryService.html":{},"classes/NodeSubscriber.html":{},"classes/NodeUtils.html":{},"classes/OutputPort.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"pipes/PortTypePipe.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{},"classes/ProcedureFactory.html":{},"components/ProcedureItemComponent.html":{},"classes/ProcedureUtils.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{},"classes/StatementProcedure.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"classes/WhileControlProcedure.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"classes/gis_module.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matcheckboxmodul",{"_index":687,"title":{},"body":{"modules/CustomMaterialModule.html":{}}}],["matdialog",{"_index":1022,"title":{},"body":{"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"injectables/FlowchartService.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/PublishSettingsComponent.html":{}}}],["matdialogmodul",{"_index":689,"title":{},"body":{"modules/CustomMaterialModule.html":{}}}],["matdialogref",{"_index":1015,"title":{},"body":{"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"injectables/FlowchartService.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/PublishSettingsComponent.html":{}}}],["materi",{"_index":703,"title":{},"body":{"modules/CustomMaterialModule.html":{},"license.html":{}}}],["matexpansionmodul",{"_index":685,"title":{},"body":{"modules/CustomMaterialModule.html":{},"modules/GSViewer.html":{}}}],["matgridlistmodul",{"_index":697,"title":{},"body":{"modules/CustomMaterialModule.html":{}}}],["math",{"_index":4218,"title":{},"body":{"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["math.abs(this.edge.inputposition.i",{"_index":1893,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["math.abs(this.edge.inputposition.x",{"_index":1890,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["math.exp(100",{"_index":1926,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["math.floor((1",{"_index":2357,"title":{},"body":{"classes/IdGenerator.html":{}}}],["math.floor(math.random()*100",{"_index":3168,"title":{},"body":{"classes/NodeUtils.html":{}}}],["math.max(10",{"_index":1889,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["math.max(node.inputs.length",{"_index":1388,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["math.min(this.edge.outputposition.i",{"_index":1884,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["math.min(this.edge.outputposition.x",{"_index":1887,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["math.random",{"_index":2358,"title":{},"body":{"classes/IdGenerator.html":{}}}],["math.round(file.size/10**6",{"_index":3406,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["math.sign($event.wheeldelta))*scalefactor",{"_index":1492,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["mathj",{"_index":4212,"title":{},"body":{"dependencies.html":{}}}],["maticonmodul",{"_index":691,"title":{},"body":{"modules/CustomMaterialModule.html":{}}}],["matinputmodul",{"_index":694,"title":{},"body":{"modules/CustomMaterialModule.html":{}}}],["matlistmodul",{"_index":695,"title":{},"body":{"modules/CustomMaterialModule.html":{}}}],["matmenumodul",{"_index":684,"title":{},"body":{"modules/CustomMaterialModule.html":{},"components/FlowchartControlsComponent.html":{},"components/MenuComponent.html":{}}}],["matsidenavmodul",{"_index":699,"title":{},"body":{"modules/CustomMaterialModule.html":{}}}],["matslidermodul",{"_index":696,"title":{},"body":{"modules/CustomMaterialModule.html":{},"modules/GSViewer.html":{},"modules/MobiusCesium.html":{}}}],["matsortmodul",{"_index":1798,"title":{},"body":{"modules/GSViewer.html":{}}}],["mattabsmodul",{"_index":693,"title":{},"body":{"modules/CustomMaterialModule.html":{},"modules/GSViewer.html":{},"modules/MobiusCesium.html":{}}}],["mattoolbarmodul",{"_index":690,"title":{},"body":{"modules/CustomMaterialModule.html":{}}}],["mattooltipmodul",{"_index":688,"title":{},"body":{"modules/CustomMaterialModule.html":{},"components/FlowchartControlsComponent.html":{},"modules/GSViewer.html":{},"modules/MobiusCesium.html":{}}}],["max",{"_index":1093,"title":{},"body":{"classes/FileUtils.html":{},"classes/FlowchartRenderUtils.html":{}}}],["max)*flowchartrenderutils._portwidth",{"_index":1391,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["max_item",{"_index":2552,"title":{},"body":{"injectables/LayoutService.html":{}}}],["maxim",{"_index":2470,"title":{},"body":{"injectables/LayoutService.html":{},"components/PanelComponent.html":{},"index.html":{}}}],["maximize(panel_id",{"_index":2494,"title":{},"body":{"injectables/LayoutService.html":{}}}],["mayb",{"_index":2046,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["maynot",{"_index":4302,"title":{},"body":{"index.html":{}}}],["mean",{"_index":2130,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"license.html":{}}}],["measur",{"_index":4479,"title":{},"body":{"license.html":{}}}],["medium",{"_index":4499,"title":{},"body":{"license.html":{}}}],["meet",{"_index":4433,"title":{},"body":{"license.html":{}}}],["memori",{"_index":2000,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["mention",{"_index":2121,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["menu",{"_index":2571,"title":{},"body":{"components/MenuComponent.html":{},"license.html":{}}}],["menu'},{'nam",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["menu.component.html",{"_index":2573,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu.component.scss",{"_index":2572,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu/menu.compon",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["menu/menu.component.t",{"_index":2570,"title":{},"body":{"components/MenuComponent.html":{},"coverage.html":{}}}],["menu/menu.component.ts:12",{"_index":2574,"title":{},"body":{"components/MenuComponent.html":{}}}],["menucompon",{"_index":206,"title":{"components/MenuComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["merchant",{"_index":4686,"title":{},"body":{"license.html":{}}}],["mere",{"_index":4423,"title":{},"body":{"license.html":{}}}],["merg",{"_index":4621,"title":{},"body":{"license.html":{}}}],["messag",{"_index":611,"title":{},"body":{"injectables/ConsoleService.html":{},"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/DisplayComponent.html":{},"components/FileLoadDialogComponent.html":{},"injectables/FlowchartService.html":{},"injectables/LayoutService.html":{},"components/MobiusAbout.html":{},"components/SelectComponent.html":{}}}],["message}}load",{"_index":1028,"title":{},"body":{"components/FileLoadDialogComponent.html":{}}}],["met",{"_index":4455,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"pipes/PortTypePipe.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["method",{"_index":27,"title":{},"body":{"classes/ActionProcedure.html":{},"injectables/ActiveNodeService.html":{},"components/CesiumViewerComponent.html":{},"classes/CodeFactory.html":{},"classes/CodeGenerator.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"injectables/ConsoleService.html":{},"classes/DataProcedure.html":{},"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"injectables/ExecuteService.html":{},"components/FileLoadDialogComponent.html":{},"classes/FileService.html":{},"classes/FileUtils.html":{},"classes/FlowchartConnectionUtils.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"classes/FlowchartWriter.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"interfaces/HasIsPlanar.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IGraphNode.html":{},"interfaces/IModule.html":{},"interfaces/IPort.html":{},"interfaces/IProcedure.html":{},"classes/IdGenerator.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"components/InfoViewerComponent.html":{},"classes/InputPort.html":{},"components/LandingComponent.html":{},"injectables/LayoutService.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"injectables/MobiusService.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"classes/ModuleUtils.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"injectables/NodeLibraryService.html":{},"classes/NodeUtils.html":{},"classes/OutputPort.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"pipes/PortTypePipe.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{},"classes/ProcedureFactory.html":{},"components/ProcedureItemComponent.html":{},"classes/ProcedureUtils.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{},"classes/StatementProcedure.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"classes/WhileControlProcedure.html":{},"classes/gis_module.html":{},"license.html":{}}}],["methods.add(k",{"_index":2343,"title":{},"body":{"interfaces/IModule.html":{},"classes/Module.html":{}}}],["middl",{"_index":2517,"title":{},"body":{"injectables/LayoutService.html":{}}}],["min",{"_index":1092,"title":{},"body":{"classes/FileUtils.html":{}}}],["minim",{"_index":2471,"title":{},"body":{"injectables/LayoutService.html":{},"components/PanelComponent.html":{}}}],["minimize(panel_id",{"_index":2496,"title":{},"body":{"injectables/LayoutService.html":{}}}],["minu",{"_index":2102,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["misc/guid",{"_index":1046,"title":{},"body":{"classes/FileUtils.html":{},"classes/Procedure.html":{}}}],["miscellan",{"_index":4239,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["misrepresent",{"_index":4585,"title":{},"body":{"license.html":{}}}],["miss",{"_index":2292,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["mob",{"_index":1708,"title":{},"body":{"classes/FlowchartWriter.html":{},"components/MobiusAbout.html":{}}}],["mob_mod",{"_index":2847,"title":{},"body":{"injectables/ModuleService.html":{}}}],["mobiu",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"classes/Frame.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"interfaces/HasIsPlanar.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"injectables/LayoutService.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"modules/MobiusCesium.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"injectables/NodeLibraryService.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"dependencies.html":{},"classes/gis_module.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mobius.const",{"_index":3111,"title":{},"body":{"injectables/NodeLibraryService.html":{}}}],["mobius.property.nod",{"_index":3117,"title":{},"body":{"injectables/NodeLibraryService.html":{}}}],["mobius.servic",{"_index":981,"title":{},"body":{"injectables/ExecuteService.html":{},"injectables/FlowchartService.html":{}}}],["mobius_fc",{"_index":4747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mobius_files_",{"_index":1040,"title":{},"body":{"classes/FileUtils.html":{}}}],["mobius_nod",{"_index":4746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mobiusabout",{"_index":208,"title":{"components/MobiusAbout.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mobiuscesium",{"_index":264,"title":{"modules/MobiusCesium.html":{}},"body":{"modules/AppModule.html":{},"modules/MobiusCesium.html":{},"modules.html":{},"overview.html":{}}}],["mobiuscesiumcompon",{"_index":215,"title":{"components/MobiuscesiumComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"modules/MobiusCesium.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mobiuseditorcompon",{"_index":210,"title":{"components/MobiusEditorComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mobiusgallerycompon",{"_index":212,"title":{"components/MobiusGalleryComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mobiusservic",{"_index":270,"title":{"injectables/MobiusService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ExecuteService.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"components/MobiusEditorComponent.html":{},"injectables/MobiusService.html":{},"components/MobiusViewerComponent.html":{},"components/ParameterViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mobiusviewercompon",{"_index":214,"title":{"components/MobiusViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mobj",{"_index":2859,"title":{},"body":{"injectables/ModuleService.html":{}}}],["mobj[m[\"_nam",{"_index":2871,"title":{},"body":{"injectables/ModuleService.html":{}}}],["mod",{"_index":2283,"title":{},"body":{"components/HelpViewerComponent.html":{},"injectables/ModuleService.html":{},"classes/ModuleUtils.html":{},"components/ModuleboxComponent.html":{}}}],["mod._nam",{"_index":2293,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["mod1",{"_index":2917,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["mod2",{"_index":2915,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["mod=0",{"_index":3055,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["mod[\"_author",{"_index":2942,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["mod[\"_nam",{"_index":2941,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["mod[\"_vers",{"_index":2943,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["mod[prop",{"_index":2935,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["mode",{"_index":398,"title":{},"body":{"components/CesiumViewerComponent.html":{},"components/DisplayComponent.html":{},"injectables/LayoutService.html":{},"components/MobiusEditorComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/SelectComponent.html":{},"index.html":{},"license.html":{}}}],["model",{"_index":1812,"title":{},"body":{"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MobiusAbout.html":{},"components/MobiuscesiumComponent.html":{},"dependencies.html":{},"license.html":{}}}],["model'},{'nam",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["model_upd",{"_index":3802,"title":{},"body":{"components/SelectComponent.html":{}}}],["modelmobiu",{"_index":2259,"title":{},"body":{"components/HelpModel.html":{}}}],["modif",{"_index":4403,"title":{},"body":{"license.html":{}}}],["modifi",{"_index":4317,"title":{},"body":{"index.html":{},"license.html":{}}}],["modnam",{"_index":2272,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["modul",{"_index":86,"title":{"modules/AppModule.html":{},"modules/CustomMaterialModule.html":{},"modules/GSViewer.html":{},"modules/MobiusCesium.html":{},"classes/Module.html":{},"modules.html":{}},"body":{"classes/ActionProcedure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"classes/CodeGenerator.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"modules/CustomMaterialModule.html":{},"classes/DataProcedure.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartUtils.html":{},"classes/ForLoopControlProcedure.html":{},"classes/Frame.html":{},"classes/FunctionProcedure.html":{},"modules/GSViewer.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"interfaces/HasIsPlanar.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IComponent.html":{},"interfaces/IModule.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"injectables/LayoutService.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"modules/MobiusCesium.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"classes/ModuleUtils.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"classes/NodeUtils.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"classes/StatementProcedure.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"classes/WhileControlProcedure.html":{},"coverage.html":{},"classes/gis_module.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["module.servic",{"_index":982,"title":{},"body":{"injectables/ExecuteService.html":{},"injectables/FlowchartService.html":{}}}],["module:16",{"_index":4278,"title":{},"body":{"classes/gis_module.html":{}}}],["module:20",{"_index":4277,"title":{},"body":{"classes/gis_module.html":{}}}],["module:24",{"_index":4276,"title":{},"body":{"classes/gis_module.html":{}}}],["module:8",{"_index":4269,"title":{},"body":{"classes/gis_module.html":{}}}],["module:9",{"_index":4268,"title":{},"body":{"classes/gis_module.html":{}}}],["module_key",{"_index":4245,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["module_map",{"_index":2873,"title":{},"body":{"injectables/ModuleService.html":{}}}],["module_nam",{"_index":2993,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["module_servic",{"_index":2999,"title":{},"body":{"components/ModuleViewerComponent.html":{}}}],["module_set",{"_index":2872,"title":{},"body":{"injectables/ModuleService.html":{}}}],["module_set.sort(function(a",{"_index":2884,"title":{},"body":{"injectables/ModuleService.html":{}}}],["modulebox",{"_index":3009,"title":{},"body":{"components/ModuleboxComponent.html":{},"index.html":{}}}],["modulebox'},{'nam",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["modulebox.component.html",{"_index":3011,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["modulebox.component.scss",{"_index":3010,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["moduleboxcompon",{"_index":218,"title":{"components/ModuleboxComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modulemap",{"_index":2874,"title":{},"body":{"injectables/ModuleService.html":{}}}],["modulemap[nam",{"_index":2880,"title":{},"body":{"injectables/ModuleService.html":{}}}],["modules/_group_.html",{"_index":2281,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["modules/custommaterialmodul",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/custommaterialmodule.t",{"_index":683,"title":{},"body":{"modules/CustomMaterialModule.html":{}}}],["modules/gis_module.t",{"_index":1724,"title":{},"body":{"classes/Frame.html":{},"interfaces/HasIsPlanar.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"coverage.html":{},"classes/gis_module.html":{}}}],["modules/gis_module.ts:12",{"_index":3436,"title":{},"body":{"classes/Polyline.html":{}}}],["modules/gis_module.ts:18",{"_index":3435,"title":{},"body":{"classes/Polygon.html":{}}}],["modules/gis_module.ts:24",{"_index":1727,"title":{},"body":{"classes/Frame.html":{}}}],["modules/gis_module.ts:25",{"_index":1728,"title":{},"body":{"classes/Frame.html":{}}}],["modules/gis_module.ts:29",{"_index":1928,"title":{},"body":{"interfaces/HasIsPlanar.html":{}}}],["modules/gis_module.ts:35",{"_index":4267,"title":{},"body":{"classes/gis_module.html":{}}}],["modules/gis_module.ts:36",{"_index":4266,"title":{},"body":{"classes/gis_module.html":{}}}],["modules/gis_module.ts:43",{"_index":4272,"title":{},"body":{"classes/gis_module.html":{}}}],["modules/gis_module.ts:48",{"_index":4271,"title":{},"body":{"classes/gis_module.html":{}}}],["modules/gis_module.ts:53",{"_index":4274,"title":{},"body":{"classes/gis_module.html":{}}}],["modules/gis_module.ts:57",{"_index":4270,"title":{},"body":{"classes/gis_module.html":{}}}],["modules/gis_module.ts:61",{"_index":4275,"title":{},"body":{"classes/gis_module.html":{}}}],["modules/imodul",{"_index":458,"title":{},"body":{"classes/CodeFactory.html":{},"classes/CodeGenerator.html":{},"interfaces/ICodeGenerator.html":{}}}],["modules/imodule.t",{"_index":4133,"title":{},"body":{"coverage.html":{}}}],["modules/module.t",{"_index":2334,"title":{},"body":{"interfaces/IModule.html":{},"classes/Module.html":{},"coverage.html":{}}}],["modules/module.ts:16",{"_index":2845,"title":{},"body":{"classes/Module.html":{}}}],["modules/module.ts:2",{"_index":2336,"title":{},"body":{"interfaces/IModule.html":{}}}],["modules/module.ts:20",{"_index":2844,"title":{},"body":{"classes/Module.html":{}}}],["modules/module.ts:24",{"_index":2843,"title":{},"body":{"classes/Module.html":{}}}],["modules/module.ts:3",{"_index":2335,"title":{},"body":{"interfaces/IModule.html":{}}}],["modules/module.ts:8",{"_index":2842,"title":{},"body":{"classes/Module.html":{}}}],["modules/module.ts:9",{"_index":2841,"title":{},"body":{"classes/Module.html":{}}}],["modules/moduleutils.t",{"_index":2888,"title":{},"body":{"classes/ModuleUtils.html":{},"coverage.html":{}}}],["modules/moduleutils.ts:124",{"_index":2908,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["modules/moduleutils.ts:148",{"_index":2902,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["modules/moduleutils.ts:35",{"_index":2904,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["modules/moduleutils.ts:5",{"_index":2898,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["modules/moduleutils.ts:63",{"_index":2906,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["modules/moduleutils.ts:67",{"_index":2900,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["modules/moduleutils.ts:71",{"_index":2911,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["modules/moduleutils.ts:75",{"_index":2919,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["modules/moduleutils.ts:81",{"_index":2916,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["modules/moduleutils.ts:92",{"_index":2913,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["moduleservic",{"_index":271,"title":{"injectables/ModuleService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ExecuteService.html":{},"components/FlowchartControlsComponent.html":{},"injectables/FlowchartService.html":{},"components/HelpViewerComponent.html":{},"injectables/ModuleService.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"coverage.html":{},"overview.html":{}}}],["moduleservice.mob_mod",{"_index":991,"title":{},"body":{"injectables/ExecuteService.html":{},"injectables/ModuleService.html":{}}}],["moduleservice.modul",{"_index":2287,"title":{},"body":{"components/HelpViewerComponent.html":{},"injectables/ModuleService.html":{}}}],["moduleservice.modules.map(function(m",{"_index":2284,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["moduleset",{"_index":2857,"title":{},"body":{"injectables/ModuleService.html":{},"classes/ModuleUtils.html":{},"injectables/NodeLibraryService.html":{}}}],["moduleset.map((m",{"_index":2860,"title":{},"body":{"injectables/ModuleService.html":{}}}],["moduleset.map(function(mod",{"_index":2875,"title":{},"body":{"injectables/ModuleService.html":{}}}],["moduleset.push(mod",{"_index":2882,"title":{},"body":{"injectables/ModuleService.html":{}}}],["moduleset[key",{"_index":2933,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["moduleutil",{"_index":1557,"title":{"classes/ModuleUtils.html":{}},"body":{"injectables/FlowchartService.html":{},"injectables/ModuleService.html":{},"classes/ModuleUtils.html":{},"components/ModuleboxComponent.html":{},"coverage.html":{}}}],["moduleutils.getfunctions(m).map((fn",{"_index":2862,"title":{},"body":{"injectables/ModuleService.html":{}}}],["moduleutils.getfunctions(mod",{"_index":2878,"title":{},"body":{"injectables/ModuleService.html":{}}}],["moduleutils.getname(mod",{"_index":2876,"title":{},"body":{"injectables/ModuleService.html":{}}}],["moduleviewercompon",{"_index":217,"title":{"components/ModuleViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":1786,"title":{},"body":{"modules/GSViewer.html":{},"modules/MobiusCesium.html":{}}}],["modulewithproviders,compon",{"_index":2658,"title":{},"body":{"modules/MobiusCesium.html":{}}}],["modulu",{"_index":2171,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["monaco",{"_index":4322,"title":{},"body":{"index.html":{}}}],["month",{"_index":809,"title":{},"body":{"components/DisplayComponent.html":{}}}],["more",{"_index":1991,"title":{},"body":{"components/HelpFundamentals.html":{},"components/HelpViewerComponent.html":{},"components/MobiusAbout.html":{},"license.html":{}}}],["moreov",{"_index":4609,"title":{},"body":{"license.html":{}}}],["ms",{"_index":3416,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["ms.process",{"_index":3418,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["msg",{"_index":620,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["msg.time",{"_index":592,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["much",{"_index":2045,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["multipl",{"_index":2084,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{}}}],["multipli",{"_index":2165,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{}}}],["my_ag",{"_index":2022,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["my_list[1",{"_index":2152,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["my_nam",{"_index":2024,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["my_name[0",{"_index":2057,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["my_name[6",{"_index":2059,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["my_str",{"_index":2243,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["my_var",{"_index":2624,"title":{},"body":{"components/MobiusAbout.html":{}}}],["my_vari",{"_index":2011,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["myelement",{"_index":748,"title":{},"body":{"components/DisplayComponent.html":{},"components/SelectComponent.html":{}}}],["myscrollcontain",{"_index":562,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["mystorag",{"_index":3115,"title":{},"body":{"injectables/NodeLibraryService.html":{}}}],["mystorage.getitem(properti",{"_index":3119,"title":{},"body":{"injectables/NodeLibraryService.html":{}}}],["möbiu",{"_index":1941,"title":{},"body":{"components/HelpFundamentals.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusGalleryComponent.html":{}}}],["n",{"_index":1357,"title":{},"body":{"classes/FlowchartReader.html":{},"classes/FlowchartRenderUtils.html":{},"classes/FlowchartUtils.html":{},"injectables/NodeLibraryService.html":{},"classes/NodeUtils.html":{},"classes/ProcedureUtils.html":{}}}],["n._name",{"_index":3093,"title":{},"body":{"components/NodeLibraryComponent.html":{}}}],["n.children",{"_index":3730,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["n.id",{"_index":3166,"title":{},"body":{"classes/NodeUtils.html":{},"classes/ProcedureUtils.html":{}}}],["n.inputs.map((inp",{"_index":3170,"title":{},"body":{"classes/NodeUtils.html":{}}}],["n.name",{"_index":1361,"title":{},"body":{"classes/FlowchartReader.html":{},"classes/NodeUtils.html":{}}}],["n.outputs.map((out",{"_index":3172,"title":{},"body":{"classes/NodeUtils.html":{}}}],["n.posit",{"_index":3169,"title":{},"body":{"classes/NodeUtils.html":{}}}],["n.update(procedur",{"_index":3724,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["n.update_properties(nod",{"_index":3165,"title":{},"body":{"classes/NodeUtils.html":{}}}],["n=0",{"_index":1694,"title":{},"body":{"classes/FlowchartUtils.html":{},"injectables/NodeLibraryService.html":{},"classes/NodeUtils.html":{}}}],["name",{"_index":40,"title":{},"body":{"classes/ActionProcedure.html":{},"injectables/ActiveNodeService.html":{},"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"classes/CodeFactory.html":{},"classes/CodeGenerator.html":{},"injectables/CodeService.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"injectables/ConsoleService.html":{},"classes/DataProcedure.html":{},"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"injectables/ExecuteService.html":{},"components/FileLoadDialogComponent.html":{},"classes/FileService.html":{},"classes/FileUtils.html":{},"classes/Flowchart.html":{},"classes/FlowchartConnectionUtils.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"classes/FlowchartWriter.html":{},"classes/ForLoopControlProcedure.html":{},"classes/Frame.html":{},"classes/FunctionProcedure.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"interfaces/HasIsPlanar.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IFlowchart.html":{},"interfaces/IGraphNode.html":{},"interfaces/IModule.html":{},"interfaces/IPort.html":{},"interfaces/IProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"components/InfoViewerComponent.html":{},"classes/InputPort.html":{},"components/LandingComponent.html":{},"injectables/LayoutService.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"injectables/MobiusService.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"classes/ModuleUtils.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"injectables/NodeLibraryService.html":{},"classes/NodeUtils.html":{},"classes/OutputPort.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"pipes/PortTypePipe.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{},"classes/ProcedureFactory.html":{},"components/ProcedureItemComponent.html":{},"classes/ProcedureUtils.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{},"classes/StatementProcedure.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"classes/WhileControlProcedure.html":{},"classes/gis_module.html":{},"index.html":{},"license.html":{}}}],["name(valu",{"_index":1087,"title":{},"body":{"classes/FileUtils.html":{},"classes/Flowchart.html":{}}}],["name.length",{"_index":2926,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["name.pip",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["name.pipe.t",{"_index":3439,"title":{},"body":{"pipes/PortTypePipe.html":{},"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{},"coverage.html":{}}}],["name.pipe.ts:12",{"_index":4026,"title":{},"body":{"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{}}}],["name.pipe.ts:18",{"_index":3442,"title":{},"body":{"pipes/PortTypePipe.html":{}}}],["name.pipe.ts:50",{"_index":3445,"title":{},"body":{"pipes/PortTypePipe.html":{}}}],["name.pipe.ts:6",{"_index":3448,"title":{},"body":{"pipes/PortTypePipe.html":{}}}],["names_list",{"_index":2085,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["names_list[0",{"_index":2097,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["names_list[1",{"_index":2096,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["names_list[2",{"_index":2098,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["names_list[3",{"_index":2106,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["natur",{"_index":4511,"title":{},"body":{"license.html":{}}}],["navigator.useragent.indexof('opr",{"_index":2700,"title":{},"body":{"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{}}}],["nbsp;&nbsp",{"_index":2183,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b",{"_index":4017,"title":{},"body":{"components/SettingComponent.html":{}}}],["nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g",{"_index":4015,"title":{},"body":{"components/SettingComponent.html":{}}}],["nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r",{"_index":4013,"title":{},"body":{"components/SettingComponent.html":{}}}],["nbsp;&nbsp;&nbsp;&nbsp;backeground",{"_index":4011,"title":{},"body":{"components/SettingComponent.html":{}}}],["nbsp;&nbsp;&nbsp;&nbsp;get",{"_index":3995,"title":{},"body":{"components/SettingComponent.html":{}}}],["nbsp;&nbsp;&nbsp;&nbsp;i",{"_index":3992,"title":{},"body":{"components/SettingComponent.html":{}}}],["nbsp;&nbsp;&nbsp;&nbsp;raycast",{"_index":3996,"title":{},"body":{"components/SettingComponent.html":{}}}],["nbsp;&nbsp;&nbsp;&nbsp;size",{"_index":3994,"title":{},"body":{"components/SettingComponent.html":{}}}],["nbsp;&nbsp;&nbsp;&nbsp;z",{"_index":3993,"title":{},"body":{"components/SettingComponent.html":{}}}],["nbsp;&nbsp;b",{"_index":2212,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["necessari",{"_index":2963,"title":{},"body":{"classes/ModuleUtils.html":{},"license.html":{}}}],["need",{"_index":1307,"title":{},"body":{"components/FlowchartControlsComponent.html":{},"components/HelpFundamentals.html":{},"index.html":{},"license.html":{}}}],["neighbourhood",{"_index":2452,"title":{},"body":{"components/LandingComponent.html":{}}}],["nerror",{"_index":3597,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["nest",{"_index":2217,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["network",{"_index":2592,"title":{},"body":{"components/MobiusAbout.html":{},"license.html":{}}}],["new",{"_index":133,"title":{},"body":{"injectables/ActiveNodeService.html":{},"components/CesiumViewerComponent.html":{},"classes/CodeFactory.html":{},"injectables/ConsoleService.html":{},"components/DisplayComponent.html":{},"components/FileLoadDialogComponent.html":{},"classes/FileService.html":{},"classes/FileUtils.html":{},"classes/Flowchart.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartReader.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"classes/FlowchartWriter.html":{},"classes/Frame.html":{},"interfaces/HasIsPlanar.html":{},"components/HelpFundamentals.html":{},"interfaces/IModule.html":{},"classes/IfElseControlProcedure.html":{},"injectables/LayoutService.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"injectables/MobiusService.html":{},"classes/Module.html":{},"classes/NodeUtils.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"classes/ProcedureFactory.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"coverage.html":{},"classes/gis_module.html":{},"license.html":{}}}],["new_author",{"_index":1213,"title":{},"body":{"classes/Flowchart.html":{}}}],["new_fil",{"_index":4311,"title":{},"body":{"index.html":{}}}],["new_flowchart",{"_index":1277,"title":{},"body":{"components/FlowchartControlsComponent.html":{},"injectables/FlowchartService.html":{},"index.html":{}}}],["new_flowchart.mob",{"_index":1208,"title":{},"body":{"classes/Flowchart.html":{}}}],["new_vari",{"_index":1772,"title":{},"body":{"classes/FunctionProcedure.html":{}}}],["newflowchart",{"_index":1702,"title":{},"body":{"classes/FlowchartWriter.html":{}}}],["next",{"_index":2600,"title":{},"body":{"components/MobiusAbout.html":{},"classes/NodeUtils.html":{},"license.html":{}}}],["next(valu",{"_index":2686,"title":{},"body":{"components/MobiusEditorComponent.html":{}}}],["ng",{"_index":4296,"title":{},"body":{"index.html":{}}}],["ng2",{"_index":296,"title":{},"body":{"modules/AppModule.html":{},"components/CodeViewerComponent.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":2756,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["ngclass",{"_index":1385,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["ngdocheck",{"_index":1803,"title":{},"body":{"components/GSViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/SelectComponent.html":{}}}],["ngmodul",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomMaterialModule.html":{},"components/DisplayComponent.html":{},"modules/GSViewer.html":{},"modules/MobiusCesium.html":{},"components/SelectComponent.html":{}}}],["ngondestroy",{"_index":394,"title":{},"body":{"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/EditorComponent.html":{},"classes/FlowchartRenderUtils.html":{},"components/GeometryViewerComponent.html":{},"components/MobiusViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["ngoninit",{"_index":395,"title":{},"body":{"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartRenderUtils.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleboxComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["ngx",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"modules/GSViewer.html":{},"dependencies.html":{}}}],["ngxjsonviewermodul",{"_index":367,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxpaginationmodul",{"_index":1792,"title":{},"body":{"modules/GSViewer.html":{}}}],["night\",\"natur",{"_index":786,"title":{},"body":{"components/DisplayComponent.html":{}}}],["node",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"classes/CodeGenerator.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"classes/Flowchart.html":{},"classes/FlowchartConnectionUtils.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"classes/FunctionProcedure.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IFlowchart.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"injectables/NodeLibraryService.html":{},"classes/NodeUtils.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["node.active_procedur",{"_index":3193,"title":{},"body":{"classes/NodeUtils.html":{}}}],["node.active_procedure.id",{"_index":3230,"title":{},"body":{"classes/NodeUtils.html":{}}}],["node.en",{"_index":1666,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["node.id",{"_index":1392,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["node.input",{"_index":1673,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["node.inputs.map(function(i",{"_index":3236,"title":{},"body":{"classes/NodeUtils.html":{}}}],["node.inputs.map(function(input",{"_index":1256,"title":{},"body":{"classes/FlowchartConnectionUtils.html":{}}}],["node.nam",{"_index":3167,"title":{},"body":{"classes/NodeUtils.html":{}}}],["node.outputs.length",{"_index":1389,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["node.outputs.map(function(output",{"_index":1259,"title":{},"body":{"classes/FlowchartConnectionUtils.html":{},"components/TextViewerComponent.html":{}}}],["node.outputs[0",{"_index":416,"title":{},"body":{"components/CesiumViewerComponent.html":{},"components/GeometryViewerComponent.html":{}}}],["node.posit",{"_index":1404,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["node.procedur",{"_index":3216,"title":{},"body":{"classes/NodeUtils.html":{}}}],["node.procedure.push(procedur",{"_index":3212,"title":{},"body":{"classes/NodeUtils.html":{}}}],["node.procedure.splice(index",{"_index":3214,"title":{},"body":{"classes/NodeUtils.html":{}}}],["node.service.t",{"_index":125,"title":{},"body":{"injectables/ActiveNodeService.html":{},"coverage.html":{}}}],["node.service.ts:14",{"_index":136,"title":{},"body":{"injectables/ActiveNodeService.html":{}}}],["node.service.ts:18",{"_index":138,"title":{},"body":{"injectables/ActiveNodeService.html":{}}}],["node.service.ts:23",{"_index":130,"title":{},"body":{"injectables/ActiveNodeService.html":{}}}],["node.service.ts:7",{"_index":131,"title":{},"body":{"injectables/ActiveNodeService.html":{}}}],["node.service.ts:8",{"_index":129,"title":{},"body":{"injectables/ActiveNodeService.html":{}}}],["node.time_taken",{"_index":1690,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["node.typ",{"_index":3184,"title":{},"body":{"classes/NodeUtils.html":{}}}],["node/igraphnod",{"_index":1766,"title":{},"body":{"classes/FunctionProcedure.html":{},"classes/InputPort.html":{}}}],["node/nodemodul",{"_index":517,"title":{},"body":{"classes/CodeGenerator.html":{},"classes/Flowchart.html":{},"classes/FlowchartConnectionUtils.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartUtils.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IFlowchart.html":{},"classes/NodeSubscriber.html":{}}}],["node:igraphnod",{"_index":929,"title":{},"body":{"components/EditorComponent.html":{}}}],["node[\"width",{"_index":1460,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["node[`${type}s`].length",{"_index":3176,"title":{},"body":{"classes/NodeUtils.html":{}}}],["node[`${type}s`].push(port",{"_index":3183,"title":{},"body":{"classes/NodeUtils.html":{}}}],["node[prop].entri",{"_index":3187,"title":{},"body":{"classes/NodeUtils.html":{}}}],["node[prop].splice(idx",{"_index":3190,"title":{},"body":{"classes/NodeUtils.html":{}}}],["node[type].splice(port_index",{"_index":3191,"title":{},"body":{"classes/NodeUtils.html":{}}}],["node_data",{"_index":1356,"title":{},"body":{"classes/FlowchartReader.html":{}}}],["node_id",{"_index":1471,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["node_index",{"_index":1249,"title":{},"body":{"classes/FlowchartConnectionUtils.html":{},"classes/FlowchartUtils.html":{}}}],["node_po",{"_index":1403,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["node_pos[0",{"_index":1412,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["node_pos[1",{"_index":1413,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["node_width",{"_index":1374,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["node_width(nod",{"_index":1381,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["nodedata",{"_index":3123,"title":{},"body":{"injectables/NodeLibraryService.html":{}}}],["nodeid",{"_index":3103,"title":{},"body":{"injectables/NodeLibraryService.html":{}}}],["nodeindex",{"_index":1242,"title":{},"body":{"classes/FlowchartConnectionUtils.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{}}}],["nodelibrarycompon",{"_index":220,"title":{"components/NodeLibraryComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nodelibraryservic",{"_index":272,"title":{"injectables/NodeLibraryService.html":{}},"body":{"modules/AppModule.html":{},"classes/FlowchartRenderUtils.html":{},"components/NodeLibraryComponent.html":{},"injectables/NodeLibraryService.html":{},"coverage.html":{},"overview.html":{}}}],["nodelibraryservice.delete_library_nod",{"_index":3092,"title":{},"body":{"components/NodeLibraryComponent.html":{}}}],["nodelibraryservice.delete_library_node(node[\"_id",{"_index":3091,"title":{},"body":{"components/NodeLibraryComponent.html":{}}}],["nodelibraryservice.nod",{"_index":3090,"title":{},"body":{"components/NodeLibraryComponent.html":{}}}],["nodelibraryservice.save_library_node(this.active_nod",{"_index":1475,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["nodelibraryservice.saved_nod",{"_index":3112,"title":{},"body":{"injectables/NodeLibraryService.html":{}}}],["nodelibraryservice.update_nod",{"_index":3114,"title":{},"body":{"injectables/NodeLibraryService.html":{}}}],["nodes_data",{"_index":1350,"title":{},"body":{"classes/FlowchartReader.html":{}}}],["nodesstorag",{"_index":3120,"title":{},"body":{"injectables/NodeLibraryService.html":{}}}],["nodesstorage.n",{"_index":3124,"title":{},"body":{"injectables/NodeLibraryService.html":{}}}],["nodesubscrib",{"_index":3125,"title":{"classes/NodeSubscriber.html":{}},"body":{"classes/NodeSubscriber.html":{},"coverage.html":{}}}],["nodeutil",{"_index":1251,"title":{"classes/NodeUtils.html":{}},"body":{"classes/FlowchartConnectionUtils.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartRenderUtils.html":{},"classes/FlowchartUtils.html":{},"components/ModuleboxComponent.html":{},"classes/NodeUtils.html":{},"components/ParameterEditorComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"coverage.html":{}}}],["nodeutils.add_port(this.active_nod",{"_index":3065,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["nodeutils.add_procedure(this.active_nod",{"_index":3062,"title":{},"body":{"components/ModuleboxComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ProcedureEditorComponent.html":{}}}],["nodeutils.add_procedure_at_position(nod",{"_index":3210,"title":{},"body":{"classes/NodeUtils.html":{}}}],["nodeutils.add_procedure_at_position(this.active_nod",{"_index":3625,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["nodeutils.copy_node(node_data",{"_index":1358,"title":{},"body":{"classes/FlowchartReader.html":{}}}],["nodeutils.delete_port(this.active_nod",{"_index":3319,"title":{},"body":{"components/ParameterEditorComponent.html":{}}}],["nodeutils.delete_port_by_index(flowchart.nodes[nodeindex",{"_index":1623,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["nodeutils.delete_procedure(this.active_nod",{"_index":3628,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["nodeutils.execute_node(nod",{"_index":1684,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["nodeutils.get_child_position(nod",{"_index":3209,"title":{},"body":{"classes/NodeUtils.html":{}}}],["nodeutils.get_child_position(this.active_nod",{"_index":3617,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["nomal",{"_index":3990,"title":{},"body":{"components/SettingComponent.html":{}}}],["nomalvis",{"_index":3836,"title":{},"body":{"components/SettingComponent.html":{}}}],["nomalvisible:boolean",{"_index":3913,"title":{},"body":{"components/SettingComponent.html":{}}}],["non",{"_index":4280,"title":{},"body":{"index.html":{},"license.html":{}}}],["noncommerci",{"_index":4532,"title":{},"body":{"license.html":{}}}],["none",{"_index":2065,"title":{},"body":{"components/HelpFundamentals.html":{},"components/SelectComponent.html":{}}}],["noopanimationsmodul",{"_index":1795,"title":{},"body":{"modules/GSViewer.html":{},"modules/MobiusCesium.html":{}}}],["normal",{"_index":4441,"title":{},"body":{"license.html":{}}}],["notat",{"_index":2055,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["note",{"_index":1955,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"classes/StatementProcedure.html":{}}}],["noth",{"_index":1667,"title":{},"body":{"classes/FlowchartUtils.html":{},"components/MobiusAbout.html":{},"classes/NodeUtils.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"license.html":{}}}],["notic",{"_index":4427,"title":{},"body":{"license.html":{}}}],["notifi",{"_index":564,"title":{},"body":{"components/ConsoleComponent.html":{},"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/DisplayComponent.html":{},"components/HelpViewerComponent.html":{},"components/SelectComponent.html":{},"license.html":{}}}],["notify(messag",{"_index":723,"title":{},"body":{"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/DisplayComponent.html":{},"components/SelectComponent.html":{}}}],["notwithstand",{"_index":4581,"title":{},"body":{"license.html":{}}}],["now",{"_index":860,"title":{},"body":{"components/DisplayComponent.html":{},"components/HelpFundamentals.html":{}}}],["now.clon",{"_index":863,"title":{},"body":{"components/DisplayComponent.html":{}}}],["null",{"_index":1402,"title":{},"body":{"classes/FlowchartRenderUtils.html":{},"components/HelpFundamentals.html":{},"classes/ModuleUtils.html":{},"injectables/NodeLibraryService.html":{}}}],["number",{"_index":57,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/CodeGenerator.html":{},"classes/DataProcedure.html":{},"components/DisplayComponent.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/FileUtils.html":{},"classes/Flowchart.html":{},"classes/FlowchartConnectionUtils.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"classes/ForLoopControlProcedure.html":{},"classes/Frame.html":{},"classes/FunctionProcedure.html":{},"components/GraphEdgeComponent.html":{},"interfaces/HasIsPlanar.html":{},"components/HelpFundamentals.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IEdge.html":{},"interfaces/IFlowchart.html":{},"interfaces/IGraphNode.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"injectables/LayoutService.html":{},"components/MobiusAbout.html":{},"components/NodeLibraryComponent.html":{},"classes/NodeUtils.html":{},"components/ParameterSettingsDialogComponent.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"classes/ProcedureUtils.html":{},"components/PublishSettingsComponent.html":{},"components/SettingComponent.html":{},"pipes/ShortNamePipe.html":{},"classes/StatementProcedure.html":{},"components/TextViewerComponent.html":{},"classes/WhileControlProcedure.html":{},"classes/gis_module.html":{},"license.html":{}}}],["number.primit",{"_index":2250,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["numer",{"_index":2169,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["nx",{"_index":1500,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["oarent",{"_index":3224,"title":{},"body":{"classes/NodeUtils.html":{}}}],["obj",{"_index":653,"title":{},"body":{"injectables/ConsoleService.html":{},"interfaces/IModule.html":{},"classes/Module.html":{},"classes/ModuleUtils.html":{}}}],["obj:ani",{"_index":2339,"title":{},"body":{"interfaces/IModule.html":{},"classes/Module.html":{}}}],["obj[\"messag",{"_index":656,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["obj[\"tim",{"_index":654,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["obj[\"typ",{"_index":657,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["obj[prop",{"_index":2930,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["objdt",{"_index":890,"title":{},"body":{"components/DisplayComponent.html":{}}}],["objdt.tolocalestr",{"_index":901,"title":{},"body":{"components/DisplayComponent.html":{}}}],["objdt.tolocalestring(\"zh",{"_index":898,"title":{},"body":{"components/DisplayComponent.html":{}}}],["object",{"_index":968,"title":{},"body":{"injectables/ExecuteService.html":{},"injectables/LayoutService.html":{},"injectables/ModuleService.html":{},"classes/ModuleUtils.html":{},"components/ParameterViewerComponent.html":{},"classes/ProcedureUtils.html":{},"components/SelectComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["object.getownpropertynames(mod).filter(function(prop",{"_index":2994,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["object.keys(fnsobj",{"_index":2866,"title":{},"body":{"injectables/ModuleService.html":{}}}],["object.keys(inputporttypes)[this._typ",{"_index":1070,"title":{},"body":{"classes/FileUtils.html":{}}}],["object.keys(object.getprototypeof(modules)).filter(function(t",{"_index":3004,"title":{},"body":{"components/ModuleViewerComponent.html":{}}}],["object.keys(outputporttypes)[this._typ",{"_index":1071,"title":{},"body":{"classes/FileUtils.html":{}}}],["object.keys(v",{"_index":4068,"title":{},"body":{"components/TextViewerComponent.html":{}}}],["object.keys(valu",{"_index":974,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["oblig",{"_index":4481,"title":{},"body":{"license.html":{}}}],["observ",{"_index":533,"title":{},"body":{"injectables/CodeService.html":{},"injectables/ConsoleService.html":{},"injectables/FlowchartService.html":{},"injectables/LayoutService.html":{},"components/MobiusViewerComponent.html":{}}}],["occasion",{"_index":4531,"title":{},"body":{"license.html":{}}}],["occur",{"_index":2220,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"components/ProcedureEditorComponent.html":{},"license.html":{}}}],["offer",{"_index":4369,"title":{},"body":{"license.html":{}}}],["offici",{"_index":4437,"title":{},"body":{"license.html":{}}}],["ok",{"_index":2221,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["on",{"_index":1953,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"components/MobiuscesiumComponent.html":{},"license.html":{}}}],["onact",{"_index":3540,"title":{},"body":{"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{}}}],["onaction(actionstr",{"_index":3555,"title":{},"body":{"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{}}}],["onc",{"_index":2001,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{}}}],["onchangeimageri",{"_index":752,"title":{},"body":{"components/DisplayComponent.html":{}}}],["onchangeimagery(_imageri",{"_index":760,"title":{},"body":{"components/DisplayComponent.html":{}}}],["ondestroy",{"_index":540,"title":{},"body":{"components/CodeViewerComponent.html":{},"components/EditorComponent.html":{},"classes/FlowchartRenderUtils.html":{},"components/ProcedureItemComponent.html":{}}}],["oninit",{"_index":389,"title":{},"body":{"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartRenderUtils.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ProcedureItemComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["onnoclick",{"_index":1013,"title":{},"body":{"components/FileLoadDialogComponent.html":{},"components/ParameterSettingsDialogComponent.html":{}}}],["onod",{"_index":1639,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["onode.outputs[outputaddress[1",{"_index":1646,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["onselect",{"_index":1840,"title":{},"body":{"components/GraphEdgeComponent.html":{},"components/ProcedureItemComponent.html":{}}}],["onselect($ev",{"_index":3672,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["opac",{"_index":4020,"title":{},"body":{"components/SettingComponent.html":{}}}],["opacity&nbsp;&nbsp;&nbsp",{"_index":4009,"title":{},"body":{"components/SettingComponent.html":{}}}],["open",{"_index":1299,"title":{},"body":{"components/FlowchartControlsComponent.html":{},"components/MobiusAbout.html":{},"components/ModuleboxComponent.html":{}}}],["open_pick",{"_index":1278,"title":{},"body":{"components/FlowchartControlsComponent.html":{},"index.html":{}}}],["openmodulehelp",{"_index":3019,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["openmodulehelp($ev",{"_index":3030,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["opensettingsdialog",{"_index":3298,"title":{},"body":{"components/ParameterEditorComponent.html":{},"components/PublishSettingsComponent.html":{}}}],["opensettingsdialog(input",{"_index":3307,"title":{},"body":{"components/ParameterEditorComponent.html":{},"components/PublishSettingsComponent.html":{}}}],["openstreetmap\",\"earth",{"_index":785,"title":{},"body":{"components/DisplayComponent.html":{}}}],["oper",{"_index":2153,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"index.html":{},"license.html":{}}}],["opera",{"_index":2701,"title":{},"body":{"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{}}}],["operand",{"_index":2162,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["opt",{"_index":1102,"title":{},"body":{"classes/FileUtils.html":{},"interfaces/IPort.html":{},"components/ParameterSettingsDialogComponent.html":{}}}],["option",{"_index":41,"title":{},"body":{"classes/ActionProcedure.html":{},"injectables/ActiveNodeService.html":{},"components/CesiumViewerComponent.html":{},"classes/CodeFactory.html":{},"classes/CodeGenerator.html":{},"injectables/CodeService.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"injectables/ConsoleService.html":{},"classes/DataProcedure.html":{},"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"injectables/ExecuteService.html":{},"components/FileLoadDialogComponent.html":{},"classes/FileService.html":{},"classes/FileUtils.html":{},"classes/Flowchart.html":{},"classes/FlowchartConnectionUtils.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"classes/FlowchartWriter.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpViewerComponent.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IGraphNode.html":{},"interfaces/IPort.html":{},"interfaces/IProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/InputPort.html":{},"injectables/LayoutService.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"injectables/MobiusService.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"classes/Module.html":{},"classes/ModuleUtils.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"injectables/NodeLibraryService.html":{},"classes/NodeUtils.html":{},"classes/OutputPort.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"pipes/PortTypePipe.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{},"classes/ProcedureFactory.html":{},"components/ProcedureItemComponent.html":{},"classes/ProcedureUtils.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{},"classes/StatementProcedure.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"classes/WhileControlProcedure.html":{},"classes/gis_module.html":{},"index.html":{},"license.html":{}}}],["opts(valu",{"_index":1103,"title":{},"body":{"classes/FileUtils.html":{}}}],["orbit",{"_index":4231,"title":{},"body":{"dependencies.html":{}}}],["order",{"_index":1939,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"components/ParameterEditorComponent.html":{},"license.html":{}}}],["organ",{"_index":4408,"title":{},"body":{"license.html":{}}}],["organis",{"_index":2236,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["origin",{"_index":4586,"title":{},"body":{"license.html":{}}}],["original_mod",{"_index":2879,"title":{},"body":{"injectables/ModuleService.html":{}}}],["originalrank",{"_index":1613,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["other",{"_index":2615,"title":{},"body":{"components/MobiusAbout.html":{},"license.html":{}}}],["otherwis",{"_index":2188,"title":{},"body":{"components/HelpFundamentals.html":{},"license.html":{}}}],["out",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"classes/FileUtils.html":{},"modules/GSViewer.html":{},"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"modules/MobiusCesium.html":{},"classes/NodeUtils.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["out.valu",{"_index":3173,"title":{},"body":{"classes/NodeUtils.html":{}}}],["out0",{"_index":2627,"title":{},"body":{"components/MobiusAbout.html":{}}}],["out1",{"_index":2651,"title":{},"body":{"components/MobiusAbout.html":{}}}],["out2",{"_index":2652,"title":{},"body":{"components/MobiusAbout.html":{}}}],["out_nod",{"_index":1366,"title":{},"body":{"classes/FlowchartReader.html":{}}}],["outobj",{"_index":4061,"title":{},"body":{"components/TextViewerComponent.html":{}}}],["output",{"_index":979,"title":{},"body":{"injectables/ExecuteService.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"classes/FunctionProcedure.html":{},"components/HelpFundamentals.html":{},"interfaces/IGraphNode.html":{},"injectables/LayoutService.html":{},"components/MobiusAbout.html":{},"components/ModuleboxComponent.html":{},"classes/NodeUtils.html":{},"components/ParameterEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/TextViewerComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{}}}],["output.geojson",{"_index":427,"title":{},"body":{"components/CesiumViewerComponent.html":{}}}],["output.isconnect",{"_index":1260,"title":{},"body":{"classes/FlowchartConnectionUtils.html":{},"classes/FlowchartUtils.html":{}}}],["output.nam",{"_index":1778,"title":{},"body":{"classes/FunctionProcedure.html":{},"components/TextViewerComponent.html":{}}}],["output.valu",{"_index":1261,"title":{},"body":{"classes/FlowchartConnectionUtils.html":{},"components/TextViewerComponent.html":{}}}],["output_address",{"_index":1652,"title":{},"body":{"classes/FlowchartUtils.html":{},"interfaces/IEdge.html":{}}}],["output_idx",{"_index":503,"title":{},"body":{"classes/CodeGenerator.html":{},"interfaces/ICodeGenerator.html":{}}}],["output_nod",{"_index":487,"title":{},"body":{"classes/CodeGenerator.html":{},"classes/FlowchartUtils.html":{},"interfaces/ICodeGenerator.html":{}}}],["output_port",{"_index":488,"title":{},"body":{"classes/CodeGenerator.html":{},"classes/FlowchartUtils.html":{},"interfaces/ICodeGenerator.html":{}}}],["outputaddress",{"_index":1517,"title":{},"body":{"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{}}}],["outputport",{"_index":406,"title":{"classes/OutputPort.html":{}},"body":{"components/CesiumViewerComponent.html":{},"classes/CodeGenerator.html":{},"classes/FlowchartRenderUtils.html":{},"components/GeometryViewerComponent.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IGraphNode.html":{},"classes/NodeUtils.html":{},"classes/OutputPort.html":{},"components/ParameterEditorComponent.html":{},"pipes/PortTypePipe.html":{},"components/PublishSettingsComponent.html":{},"components/TextViewerComponent.html":{},"coverage.html":{}}}],["outputport(default_nam",{"_index":3181,"title":{},"body":{"classes/NodeUtils.html":{}}}],["outputportopt",{"_index":3296,"title":{},"body":{"components/ParameterEditorComponent.html":{}}}],["outputporttyp",{"_index":1049,"title":{},"body":{"classes/FileUtils.html":{},"interfaces/IPort.html":{},"classes/InputPort.html":{},"injectables/LayoutService.html":{},"classes/OutputPort.html":{},"components/ParameterEditorComponent.html":{},"pipes/PortTypePipe.html":{},"components/PublishSettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["outputporttypes.cesium",{"_index":3315,"title":{},"body":{"components/ParameterEditorComponent.html":{},"pipes/PortTypePipe.html":{}}}],["outputporttypes.cod",{"_index":3313,"title":{},"body":{"components/ParameterEditorComponent.html":{},"pipes/PortTypePipe.html":{}}}],["outputporttypes.consol",{"_index":3314,"title":{},"body":{"components/ParameterEditorComponent.html":{},"pipes/PortTypePipe.html":{}}}],["outputporttypes.text",{"_index":3255,"title":{},"body":{"classes/OutputPort.html":{},"components/ParameterEditorComponent.html":{},"pipes/PortTypePipe.html":{}}}],["outputporttypes.thre",{"_index":3316,"title":{},"body":{"components/ParameterEditorComponent.html":{},"pipes/PortTypePipe.html":{}}}],["outputposit",{"_index":1843,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["outputprocess",{"_index":3248,"title":{},"body":{"classes/NodeUtils.html":{}}}],["outsid",{"_index":2225,"title":{},"body":{"components/HelpFundamentals.html":{},"license.html":{}}}],["over",{"_index":2190,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["overal",{"_index":2040,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["overload",{"_index":1659,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["overview",{"_index":4740,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["own",{"_index":4639,"title":{},"body":{"license.html":{}}}],["p",{"_index":3186,"title":{},"body":{"classes/NodeUtils.html":{}}}],["p.reset",{"_index":3525,"title":{},"body":{"classes/Procedure.html":{}}}],["p.type",{"_index":107,"title":{},"body":{"classes/ActionProcedure.html":{}}}],["p.valu",{"_index":108,"title":{},"body":{"classes/ActionProcedure.html":{}}}],["pa.comment.shorttext",{"_index":2301,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["pa.comment.text",{"_index":2297,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["pa.defaultvalu",{"_index":2300,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["pa.nam",{"_index":2296,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["pa.type.typ",{"_index":2306,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["packag",{"_index":4184,"title":{"dependencies.html":{}},"body":{"index.html":{},"license.html":{}}}],["pagin",{"_index":1793,"title":{},"body":{"modules/GSViewer.html":{},"dependencies.html":{}}}],["pair",{"_index":2133,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["pan($ev",{"_index":1482,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["pan_init",{"_index":1417,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["pan_mod",{"_index":1416,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["panel",{"_index":2548,"title":{},"body":{"injectables/LayoutService.html":{},"components/PanelComponent.html":{},"index.html":{}}}],["panel'},{'nam",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["panel.component.html",{"_index":3258,"title":{},"body":{"components/PanelComponent.html":{}}}],["panel.component.scss",{"_index":3257,"title":{},"body":{"components/PanelComponent.html":{}}}],["panel_id",{"_index":2492,"title":{},"body":{"injectables/LayoutService.html":{},"components/PanelComponent.html":{}}}],["panel_id='bottom",{"_index":4291,"title":{},"body":{"index.html":{}}}],["panel_id='main",{"_index":4292,"title":{},"body":{"index.html":{}}}],["panel_id='middl",{"_index":4290,"title":{},"body":{"index.html":{}}}],["panel_id='top",{"_index":4289,"title":{},"body":{"index.html":{}}}],["panelcompon",{"_index":223,"title":{"components/PanelComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["papapars",{"_index":4225,"title":{},"body":{"dependencies.html":{}}}],["paper",{"_index":4721,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":4601,"title":{},"body":{"license.html":{}}}],["param",{"_index":88,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/CodeGenerator.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IComponent.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"components/ModuleboxComponent.html":{},"classes/NodeUtils.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["paramet",{"_index":38,"title":{},"body":{"classes/ActionProcedure.html":{},"injectables/ActiveNodeService.html":{},"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"classes/CodeFactory.html":{},"classes/CodeGenerator.html":{},"injectables/CodeService.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"injectables/ConsoleService.html":{},"classes/DataProcedure.html":{},"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"injectables/ExecuteService.html":{},"components/FileLoadDialogComponent.html":{},"classes/FileService.html":{},"classes/FileUtils.html":{},"classes/Flowchart.html":{},"classes/FlowchartConnectionUtils.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"classes/FlowchartWriter.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IGraphNode.html":{},"interfaces/IPort.html":{},"interfaces/IProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"components/InfoViewerComponent.html":{},"classes/InputPort.html":{},"components/LandingComponent.html":{},"injectables/LayoutService.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"injectables/MobiusService.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"classes/Module.html":{},"classes/ModuleUtils.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"injectables/NodeLibraryService.html":{},"classes/NodeUtils.html":{},"classes/OutputPort.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"pipes/PortTypePipe.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{},"classes/ProcedureFactory.html":{},"components/ProcedureItemComponent.html":{},"classes/ProcedureUtils.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{},"classes/StatementProcedure.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"classes/WhileControlProcedure.html":{},"miscellaneous/enumerations.html":{},"classes/gis_module.html":{}}}],["parametereditor",{"_index":4316,"title":{},"body":{"index.html":{}}}],["parametereditorcompon",{"_index":225,"title":{"components/ParameterEditorComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["parametersettingsdialogcompon",{"_index":226,"title":{"components/ParameterSettingsDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["parameterview",{"_index":4324,"title":{},"body":{"index.html":{}}}],["parameterviewercompon",{"_index":227,"title":{"components/ParameterViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"injectables/LayoutService.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["parametr",{"_index":2034,"title":{},"body":{"components/HelpFundamentals.html":{},"components/LandingComponent.html":{},"components/MobiusAbout.html":{}}}],["params[i.nam",{"_index":3251,"title":{},"body":{"classes/NodeUtils.html":{}}}],["parent",{"_index":67,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"interfaces/IProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/NodeUtils.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{},"classes/ProcedureUtils.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["parent(par",{"_index":3521,"title":{},"body":{"classes/Procedure.html":{}}}],["parent.children",{"_index":3740,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["parent.children[posit",{"_index":3227,"title":{},"body":{"classes/NodeUtils.html":{},"components/ProcedureEditorComponent.html":{}}}],["parent.par",{"_index":3622,"title":{},"body":{"components/ProcedureEditorComponent.html":{},"classes/ProcedureUtils.html":{}}}],["parent[\"_level",{"_index":3523,"title":{},"body":{"classes/Procedure.html":{}}}],["parent[\"_level\"]!==undefin",{"_index":3522,"title":{},"body":{"classes/Procedure.html":{}}}],["parseint((this.active_node.outputs[0].type).tostr",{"_index":4106,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["part",{"_index":4410,"title":{},"body":{"license.html":{}}}],["parti",{"_index":4422,"title":{},"body":{"license.html":{}}}],["particular",{"_index":2584,"title":{},"body":{"components/MobiusAbout.html":{},"license.html":{}}}],["party'",{"_index":4623,"title":{},"body":{"license.html":{}}}],["pass",{"_index":1813,"title":{},"body":{"components/GSViewerComponent.html":{},"components/HelpFundamentals.html":{},"injectables/LayoutService.html":{},"license.html":{}}}],["password",{"_index":4574,"title":{},"body":{"license.html":{}}}],["past",{"_index":3564,"title":{},"body":{"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["paste($ev",{"_index":3674,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["patent",{"_index":4397,"title":{},"body":{"license.html":{}}}],["path",{"_index":381,"title":{},"body":{"modules/AppModule.html":{}}}],["patrick",{"_index":2025,"title":{},"body":{"components/HelpFundamentals.html":{},"classes/ModuleUtils.html":{}}}],["patrick_janssen",{"_index":2105,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["pattern",{"_index":4385,"title":{},"body":{"license.html":{}}}],["pay",{"_index":2184,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["payment",{"_index":4662,"title":{},"body":{"license.html":{}}}],["pc",{"_index":3735,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["pc.parent",{"_index":3734,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["pc:iprocedur",{"_index":3732,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["peer",{"_index":4540,"title":{},"body":{"license.html":{}}}],["peopl",{"_index":2069,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["people=\"patrick",{"_index":2076,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["perform",{"_index":2181,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"license.html":{}}}],["perman",{"_index":4605,"title":{},"body":{"license.html":{}}}],["permiss",{"_index":4371,"title":{},"body":{"license.html":{}}}],["permit",{"_index":4339,"title":{},"body":{"license.html":{}}}],["perpetu",{"_index":4564,"title":{},"body":{"license.html":{}}}],["person",{"_index":2095,"title":{},"body":{"components/HelpFundamentals.html":{},"index.html":{},"license.html":{}}}],["person1=\"patrick",{"_index":2072,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["person2=\"kainwe",{"_index":2073,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["person3=\"akshata\",etc",{"_index":2074,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["pertin",{"_index":4674,"title":{},"body":{"license.html":{}}}],["physic",{"_index":4523,"title":{},"body":{"license.html":{}}}],["pi",{"_index":1411,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["piec",{"_index":2642,"title":{},"body":{"components/MobiusAbout.html":{},"license.html":{}}}],["pim",{"_index":2445,"title":{},"body":{"components/LandingComponent.html":{}}}],["pipe",{"_index":3437,"title":{"pipes/PortTypePipe.html":{},"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{}},"body":{"pipes/PortTypePipe.html":{},"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipe({nam",{"_index":3450,"title":{},"body":{"pipes/PortTypePipe.html":{},"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{}}}],["pipes/port",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["pipes/short",{"_index":370,"title":{},"body":{"modules/AppModule.html":{}}}],["pipes/simpl",{"_index":372,"title":{},"body":{"modules/AppModule.html":{}}}],["pipetransform",{"_index":3449,"title":{},"body":{"pipes/PortTypePipe.html":{},"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{}}}],["place",{"_index":1995,"title":{},"body":{"components/HelpFundamentals.html":{},"classes/NodeUtils.html":{},"index.html":{},"license.html":{}}}],["pleas",{"_index":2690,"title":{},"body":{"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{},"license.html":{}}}],["pln",{"_index":1744,"title":{},"body":{"classes/Frame.html":{},"interfaces/HasIsPlanar.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"classes/gis_module.html":{}}}],["plu",{"_index":4625,"title":{},"body":{"license.html":{}}}],["plugin",{"_index":4287,"title":{},"body":{"index.html":{}}}],["pnt",{"_index":1742,"title":{},"body":{"classes/Frame.html":{},"interfaces/HasIsPlanar.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"classes/gis_module.html":{}}}],["po",{"_index":1415,"title":{},"body":{"classes/FlowchartRenderUtils.html":{},"components/PanelComponent.html":{}}}],["point",{"_index":1730,"title":{"classes/Point.html":{}},"body":{"classes/Frame.html":{},"interfaces/HasIsPlanar.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"components/SettingComponent.html":{},"coverage.html":{},"classes/gis_module.html":{}}}],["pointer",{"_index":4715,"title":{},"body":{"license.html":{}}}],["pointpre.value.toprecision(2",{"_index":4000,"title":{},"body":{"components/SettingComponent.html":{}}}],["pointsiz",{"_index":3872,"title":{},"body":{"components/SettingComponent.html":{}}}],["pointsize.value.toprecision(2",{"_index":4002,"title":{},"body":{"components/SettingComponent.html":{}}}],["pointvis",{"_index":3837,"title":{},"body":{"components/SettingComponent.html":{}}}],["pointvisible:boolean",{"_index":3914,"title":{},"body":{"components/SettingComponent.html":{}}}],["polygon",{"_index":1733,"title":{"classes/Polygon.html":{}},"body":{"classes/Frame.html":{},"interfaces/HasIsPlanar.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"coverage.html":{},"classes/gis_module.html":{}}}],["polylin",{"_index":1731,"title":{"classes/Polyline.html":{}},"body":{"classes/Frame.html":{},"interfaces/HasIsPlanar.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"coverage.html":{},"classes/gis_module.html":{}}}],["port",{"_index":392,"title":{},"body":{"components/CesiumViewerComponent.html":{},"classes/CodeGenerator.html":{},"classes/FileUtils.html":{},"classes/FlowchartConnectionUtils.html":{},"classes/FlowchartRenderUtils.html":{},"classes/FlowchartUtils.html":{},"classes/FunctionProcedure.html":{},"interfaces/ICodeGenerator.html":{},"classes/InputPort.html":{},"components/MobiusAbout.html":{},"components/ModuleboxComponent.html":{},"classes/NodeUtils.html":{},"classes/OutputPort.html":{},"components/ParameterEditorComponent.html":{},"components/TextViewerComponent.html":{},"coverage.html":{}}}],["port.getvalu",{"_index":3327,"title":{},"body":{"components/ParameterEditorComponent.html":{}}}],["port.id",{"_index":3189,"title":{},"body":{"classes/NodeUtils.html":{}}}],["port/inputport",{"_index":1767,"title":{},"body":{"classes/FunctionProcedure.html":{}}}],["port/portmodul",{"_index":519,"title":{},"body":{"classes/CodeGenerator.html":{},"classes/Flowchart.html":{},"classes/FlowchartConnectionUtils.html":{},"classes/FlowchartUtils.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IGraphNode.html":{},"classes/NodeUtils.html":{}}}],["port:10",{"_index":2411,"title":{},"body":{"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["port:109",{"_index":2404,"title":{},"body":{"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["port:11",{"_index":2409,"title":{},"body":{"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["port:110",{"_index":2416,"title":{},"body":{"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["port:129",{"_index":2420,"title":{},"body":{"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["port:13",{"_index":2410,"title":{},"body":{"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["port:14",{"_index":2403,"title":{},"body":{"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["port:147",{"_index":2419,"title":{},"body":{"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["port:153",{"_index":2415,"title":{},"body":{"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["port:159",{"_index":2421,"title":{},"body":{"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["port:16",{"_index":2408,"title":{},"body":{"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["port:173",{"_index":2418,"title":{},"body":{"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["port:177",{"_index":2417,"title":{},"body":{"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["port:18",{"_index":2401,"title":{},"body":{"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["port:181",{"_index":2413,"title":{},"body":{"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["port:185",{"_index":2414,"title":{},"body":{"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["port:21",{"_index":2402,"title":{},"body":{"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["port:22",{"_index":2400,"title":{},"body":{"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["port:24",{"_index":2406,"title":{},"body":{"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["port:25",{"_index":2405,"title":{},"body":{"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["port:34",{"_index":2422,"title":{},"body":{"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["port:9",{"_index":2407,"title":{},"body":{"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["port_dom_el",{"_index":1375,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["port_dom_element(nod",{"_index":1382,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["port_index",{"_index":3149,"title":{},"body":{"classes/NodeUtils.html":{}}}],["port_pos_i",{"_index":1407,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["port_pos_x",{"_index":1405,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["port_siz",{"_index":1400,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["port_size/2",{"_index":1414,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["port_typ",{"_index":3025,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["port_type_nam",{"_index":3332,"title":{},"body":{"components/ParameterEditorComponent.html":{},"pipes/PortTypePipe.html":{}}}],["portdata",{"_index":2348,"title":{},"body":{"interfaces/IPort.html":{},"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["portdata[\"_comput",{"_index":1085,"title":{},"body":{"classes/FileUtils.html":{},"classes/InputPort.html":{}}}],["portdata[\"_default",{"_index":1080,"title":{},"body":{"classes/FileUtils.html":{}}}],["portdata[\"_dis",{"_index":1078,"title":{},"body":{"classes/FileUtils.html":{}}}],["portdata[\"_id",{"_index":1064,"title":{},"body":{"classes/FileUtils.html":{}}}],["portdata[\"_opt",{"_index":1081,"title":{},"body":{"classes/FileUtils.html":{}}}],["portdata[\"_typ",{"_index":1066,"title":{},"body":{"classes/FileUtils.html":{}}}],["portdata['_connect",{"_index":2430,"title":{},"body":{"classes/InputPort.html":{}}}],["porthasfunct",{"_index":3299,"title":{},"body":{"components/ParameterEditorComponent.html":{}}}],["porthasfunction(port",{"_index":3309,"title":{},"body":{"components/ParameterEditorComponent.html":{}}}],["portindex",{"_index":1243,"title":{},"body":{"classes/FlowchartConnectionUtils.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{}}}],["portion",{"_index":4543,"title":{},"body":{"license.html":{}}}],["porttyp",{"_index":1252,"title":{},"body":{"classes/FlowchartConnectionUtils.html":{},"classes/FlowchartRenderUtils.html":{},"classes/FlowchartUtils.html":{},"components/ModuleboxComponent.html":{},"classes/NodeUtils.html":{},"components/ViewerContainerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["porttypepip",{"_index":259,"title":{"pipes/PortTypePipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/PortTypePipe.html":{},"coverage.html":{},"overview.html":{}}}],["porttypes.input",{"_index":3178,"title":{},"body":{"classes/NodeUtils.html":{}}}],["porttypes.output",{"_index":3180,"title":{},"body":{"classes/NodeUtils.html":{}}}],["posit",{"_index":1425,"title":{},"body":{"classes/FlowchartRenderUtils.html":{},"components/HelpFundamentals.html":{},"interfaces/IGraphNode.html":{},"classes/NodeUtils.html":{},"components/ProcedureEditorComponent.html":{}}}],["position+1",{"_index":3208,"title":{},"body":{"classes/NodeUtils.html":{},"components/ProcedureEditorComponent.html":{}}}],["possess",{"_index":4507,"title":{},"body":{"license.html":{}}}],["possibl",{"_index":4704,"title":{},"body":{"license.html":{}}}],["postion",{"_index":3194,"title":{},"body":{"classes/NodeUtils.html":{}}}],["power",{"_index":4490,"title":{},"body":{"license.html":{}}}],["practic",{"_index":4344,"title":{},"body":{"license.html":{}}}],["preambl",{"_index":4342,"title":{},"body":{"license.html":{}}}],["precis",{"_index":3998,"title":{},"body":{"components/SettingComponent.html":{},"license.html":{}}}],["precision&nbsp;&nbsp",{"_index":3997,"title":{},"body":{"components/SettingComponent.html":{}}}],["predecessor",{"_index":4624,"title":{},"body":{"license.html":{}}}],["predefin",{"_index":2235,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["prefer",{"_index":4435,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":1038,"title":{},"body":{"classes/FileUtils.html":{},"classes/FlowchartUtils.html":{}}}],["present",{"_index":4432,"title":{},"body":{"license.html":{}}}],["preserv",{"_index":4584,"title":{},"body":{"license.html":{}}}],["prevent",{"_index":4358,"title":{},"body":{"license.html":{}}}],["previou",{"_index":1645,"title":{},"body":{"classes/FlowchartUtils.html":{},"license.html":{}}}],["price",{"_index":4354,"title":{},"body":{"license.html":{}}}],["primarili",{"_index":4663,"title":{},"body":{"license.html":{}}}],["primit",{"_index":1945,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["print",{"_index":483,"title":{},"body":{"classes/CodeGenerator.html":{},"injectables/ConsoleService.html":{},"injectables/ExecuteService.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IProcedure.html":{},"components/MobiusAbout.html":{},"classes/NodeUtils.html":{},"classes/Procedure.html":{},"components/ProcedureItemComponent.html":{},"miscellaneous/enumerations.html":{}}}],["print(valu",{"_index":3519,"title":{},"body":{"classes/Procedure.html":{}}}],["printfunct",{"_index":950,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["prior",{"_index":4606,"title":{},"body":{"license.html":{}}}],["privat",{"_index":11,"title":{},"body":{"classes/ActionProcedure.html":{},"injectables/ActiveNodeService.html":{},"components/CesiumViewerComponent.html":{},"classes/CodeFactory.html":{},"classes/CodeGenerator.html":{},"injectables/CodeService.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"injectables/ConsoleService.html":{},"classes/DataProcedure.html":{},"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"injectables/ExecuteService.html":{},"classes/FileUtils.html":{},"classes/Flowchart.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpViewerComponent.html":{},"interfaces/IModule.html":{},"classes/IdGenerator.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/InputPort.html":{},"injectables/LayoutService.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"injectables/MobiusService.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"classes/Module.html":{},"components/ModuleboxComponent.html":{},"injectables/NodeLibraryService.html":{},"classes/OutputPort.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"pipes/PortTypePipe.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{},"components/SelectComponent.html":{},"classes/StatementProcedure.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"classes/WhileControlProcedure.html":{},"classes/gis_module.html":{},"license.html":{}}}],["problem",{"_index":2064,"title":{},"body":{"components/HelpFundamentals.html":{},"license.html":{}}}],["procedur",{"_index":8,"title":{"classes/Procedure.html":{}},"body":{"classes/ActionProcedure.html":{},"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"classes/CodeGenerator.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"classes/DataProcedure.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IGraphNode.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"injectables/LayoutService.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"classes/NodeUtils.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{},"classes/ProcedureFactory.html":{},"components/ProcedureItemComponent.html":{},"classes/ProcedureUtils.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"classes/StatementProcedure.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"classes/WhileControlProcedure.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{}}}],["procedure.children",{"_index":3728,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["procedure.children.filter(function(child",{"_index":3748,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["procedure.children.push(child",{"_index":3743,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["procedure.children.splice(index",{"_index":3747,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["procedure.haschildren",{"_index":3742,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["procedure.id",{"_index":3218,"title":{},"body":{"classes/NodeUtils.html":{},"components/ProcedureItemComponent.html":{}}}],["procedure.par",{"_index":3215,"title":{},"body":{"classes/NodeUtils.html":{},"classes/ProcedureUtils.html":{}}}],["procedure.typ",{"_index":3200,"title":{},"body":{"classes/NodeUtils.html":{},"classes/ProcedureUtils.html":{}}}],["procedure/functionprocedur",{"_index":1345,"title":{},"body":{"classes/FlowchartReader.html":{}}}],["procedure/proceduremodul",{"_index":518,"title":{},"body":{"classes/CodeGenerator.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IGraphNode.html":{},"classes/NodeUtils.html":{}}}],["procedure/proceduretyp",{"_index":1346,"title":{},"body":{"classes/FlowchartReader.html":{}}}],["procedure/procedureutil",{"_index":3162,"title":{},"body":{"classes/NodeUtils.html":{}}}],["procedure:10",{"_index":52,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["procedure:11",{"_index":58,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["procedure:117",{"_index":77,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["procedure:124",{"_index":74,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["procedure:128",{"_index":76,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["procedure:13",{"_index":64,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["procedure:137",{"_index":78,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["procedure:14",{"_index":62,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["procedure:15",{"_index":51,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["procedure:16",{"_index":60,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["procedure:18",{"_index":59,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["procedure:20",{"_index":56,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["procedure:21",{"_index":61,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["procedure:23",{"_index":65,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["procedure:24",{"_index":49,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["procedure:9",{"_index":54,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["procedure[\"_typ",{"_index":3722,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["procedure[child_prop].map((p",{"_index":3731,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["procedure_abov",{"_index":3616,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["procedure_above.haschildren",{"_index":3627,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["procedureeditor",{"_index":4321,"title":{},"body":{"index.html":{}}}],["procedureeditorcompon",{"_index":228,"title":{"components/ProcedureEditorComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["procedurefactori",{"_index":3046,"title":{"classes/ProcedureFactory.html":{}},"body":{"components/ModuleboxComponent.html":{},"components/ParameterEditorComponent.html":{},"classes/ProcedureFactory.html":{},"components/ProcedureItemComponent.html":{},"classes/ProcedureUtils.html":{},"coverage.html":{}}}],["procedurefactory.getprocedur",{"_index":3061,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["procedurefactory.getprocedure(procedure.typ",{"_index":3721,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["procedurefactory.getprocedure(proceduretypes.funct",{"_index":3326,"title":{},"body":{"components/ParameterEditorComponent.html":{}}}],["procedurefactory.getprocedure(typ",{"_index":3064,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["procedureitemcompon",{"_index":229,"title":{"components/ProcedureItemComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["proceduretyp",{"_index":63,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/FlowchartReader.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"interfaces/IProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"components/ModuleboxComponent.html":{},"classes/NodeUtils.html":{},"components/ParameterEditorComponent.html":{},"classes/Procedure.html":{},"classes/ProcedureFactory.html":{},"components/ProcedureItemComponent.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["proceduretypes.act",{"_index":3052,"title":{},"body":{"components/ModuleboxComponent.html":{},"classes/ProcedureFactory.html":{},"miscellaneous/variables.html":{}}}],["proceduretypes.com",{"_index":3042,"title":{},"body":{"components/ModuleboxComponent.html":{},"classes/ProcedureFactory.html":{},"classes/StatementProcedure.html":{},"miscellaneous/variables.html":{}}}],["proceduretypes.data",{"_index":3036,"title":{},"body":{"components/ModuleboxComponent.html":{},"classes/ProcedureFactory.html":{},"miscellaneous/variables.html":{}}}],["proceduretypes.elsecontrol",{"_index":2380,"title":{},"body":{"classes/IfElseControlProcedure.html":{},"components/ModuleboxComponent.html":{},"classes/ProcedureFactory.html":{},"miscellaneous/variables.html":{}}}],["proceduretypes.elseifcontrol",{"_index":3039,"title":{},"body":{"components/ModuleboxComponent.html":{},"classes/NodeUtils.html":{},"classes/ProcedureFactory.html":{},"miscellaneous/variables.html":{}}}],["proceduretypes.forloopcontrol",{"_index":3037,"title":{},"body":{"components/ModuleboxComponent.html":{},"classes/ProcedureFactory.html":{},"miscellaneous/variables.html":{}}}],["proceduretypes.funct",{"_index":3645,"title":{},"body":{"classes/ProcedureFactory.html":{}}}],["proceduretypes.ifcontrol",{"_index":2378,"title":{},"body":{"classes/IfElseControlProcedure.html":{},"components/ModuleboxComponent.html":{},"classes/NodeUtils.html":{},"classes/ProcedureFactory.html":{},"miscellaneous/variables.html":{}}}],["proceduretypes.ifelsecontrol",{"_index":2376,"title":{},"body":{"classes/IfElseControlProcedure.html":{}}}],["proceduretypes.ifelsecontrol|proceduretypes.ifcontrol|proceduretypes.elsecontrol",{"_index":2371,"title":{},"body":{"classes/IfElseControlProcedure.html":{}}}],["proceduretypes.loopbreak",{"_index":3040,"title":{},"body":{"components/ModuleboxComponent.html":{},"classes/ProcedureFactory.html":{},"classes/StatementProcedure.html":{},"miscellaneous/variables.html":{}}}],["proceduretypes.loopcontinu",{"_index":3041,"title":{},"body":{"components/ModuleboxComponent.html":{},"classes/ProcedureFactory.html":{},"classes/StatementProcedure.html":{},"miscellaneous/variables.html":{}}}],["proceduretypes.whilecontrol",{"_index":3038,"title":{},"body":{"components/ModuleboxComponent.html":{},"classes/ProcedureFactory.html":{},"miscellaneous/variables.html":{}}}],["procedureutil",{"_index":3161,"title":{"classes/ProcedureUtils.html":{}},"body":{"classes/NodeUtils.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"classes/ProcedureUtils.html":{},"coverage.html":{}}}],["procedureutils.add_child(active_procedur",{"_index":3211,"title":{},"body":{"classes/NodeUtils.html":{}}}],["procedureutils.add_child(procedure_abov",{"_index":3629,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["procedureutils.add_child_at_posit",{"_index":3738,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["procedureutils.add_child_at_position(par",{"_index":3207,"title":{},"body":{"classes/NodeUtils.html":{}}}],["procedureutils.copy_procedure(p",{"_index":3733,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["procedureutils.copy_procedure(this.active_node.active_procedur",{"_index":3634,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["procedureutils.copy_procedure(this.copiedprod",{"_index":3635,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["procedureutils.delete_child(par",{"_index":3225,"title":{},"body":{"classes/NodeUtils.html":{},"components/ProcedureEditorComponent.html":{},"classes/ProcedureUtils.html":{}}}],["procedureutils.get_child_position(grandpar",{"_index":3739,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["procedureutils.get_child_position(par",{"_index":3206,"title":{},"body":{"classes/NodeUtils.html":{},"components/ProcedureEditorComponent.html":{}}}],["procedureutils.shift_level_up(this.active_node.active_procedur",{"_index":3624,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["process",{"_index":134,"title":{},"body":{"injectables/ActiveNodeService.html":{},"components/LandingComponent.html":{},"components/MobiusEditorComponent.html":{},"injectables/MobiusService.html":{},"components/ParameterViewerComponent.html":{}}}],["processing(valu",{"_index":143,"title":{},"body":{"injectables/ActiveNodeService.html":{},"injectables/MobiusService.html":{}}}],["procur",{"_index":4659,"title":{},"body":{"license.html":{}}}],["prod",{"_index":3063,"title":{},"body":{"components/ModuleboxComponent.html":{},"classes/NodeUtils.html":{},"components/ParameterEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"classes/ProcedureUtils.html":{}}}],["prod.en",{"_index":3698,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["prod.id",{"_index":3217,"title":{},"body":{"classes/NodeUtils.html":{},"classes/ProcedureUtils.html":{}}}],["prod.left.express",{"_index":3693,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["prod.right.fn_nam",{"_index":3692,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["prod.right.module.replace(\"_",{"_index":3691,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["prod.typ",{"_index":3690,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["prod:iprocedur",{"_index":3060,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["prod_data",{"_index":3057,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["prod_to_delet",{"_index":3152,"title":{},"body":{"classes/NodeUtils.html":{}}}],["prod_to_delete.par",{"_index":3222,"title":{},"body":{"classes/NodeUtils.html":{}}}],["prodarr",{"_index":497,"title":{},"body":{"classes/CodeGenerator.html":{},"interfaces/ICodeGenerator.html":{}}}],["proddata",{"_index":69,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"interfaces/IProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/Procedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["proddata._dis",{"_index":3529,"title":{},"body":{"classes/Procedure.html":{}}}],["proddata._id",{"_index":3528,"title":{},"body":{"classes/Procedure.html":{}}}],["proddata._leftcompon",{"_index":3530,"title":{},"body":{"classes/Procedure.html":{}}}],["proddata._leftcomponent.express",{"_index":114,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["proddata._level",{"_index":3532,"title":{},"body":{"classes/Procedure.html":{}}}],["proddata._rightcompon",{"_index":3531,"title":{},"body":{"classes/Procedure.html":{}}}],["proddata._rightcomponent.categori",{"_index":1779,"title":{},"body":{"classes/FunctionProcedure.html":{}}}],["proddata._rightcomponent.express",{"_index":116,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["proddata._rightcomponent.fn_nam",{"_index":118,"title":{},"body":{"classes/ActionProcedure.html":{}}}],["proddata._rightcomponent.modul",{"_index":117,"title":{},"body":{"classes/ActionProcedure.html":{}}}],["proddata._rightcomponent.param",{"_index":1780,"title":{},"body":{"classes/FunctionProcedure.html":{}}}],["proddata._rightcomponent.params.map(function(p",{"_index":119,"title":{},"body":{"classes/ActionProcedure.html":{}}}],["produc",{"_index":2597,"title":{},"body":{"components/MobiusAbout.html":{},"license.html":{}}}],["product",{"_index":643,"title":{},"body":{"injectables/ConsoleService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["program",{"_index":1944,"title":{},"body":{"components/HelpFundamentals.html":{},"components/LandingComponent.html":{},"components/MobiusAbout.html":{},"classes/ProcedureUtils.html":{},"index.html":{},"license.html":{}}}],["program'",{"_index":4498,"title":{},"body":{"license.html":{}}}],["programm",{"_index":4731,"title":{},"body":{"license.html":{}}}],["programmat",{"_index":1072,"title":{},"body":{"classes/FileUtils.html":{}}}],["programsif",{"_index":4709,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":4389,"title":{},"body":{"license.html":{}}}],["project",{"_index":2726,"title":{},"body":{"components/MobiusGalleryComponent.html":{},"index.html":{},"license.html":{}}}],["promin",{"_index":4430,"title":{},"body":{"license.html":{}}}],["promis",{"_index":852,"title":{},"body":{"components/DisplayComponent.html":{}}}],["promise.then(function(datasourc",{"_index":854,"title":{},"body":{"components/DisplayComponent.html":{}}}],["prop",{"_index":2929,"title":{},"body":{"classes/ModuleUtils.html":{},"classes/NodeUtils.html":{},"components/ParameterSettingsDialogComponent.html":{}}}],["propag",{"_index":4415,"title":{},"body":{"license.html":{}}}],["properi",{"_index":3726,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["properti",{"_index":10,"title":{},"body":{"classes/ActionProcedure.html":{},"injectables/ActiveNodeService.html":{},"components/CesiumViewerComponent.html":{},"classes/CodeFactory.html":{},"classes/CodeGenerator.html":{},"injectables/CodeService.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"injectables/ConsoleService.html":{},"classes/DataProcedure.html":{},"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"injectables/ExecuteService.html":{},"components/FileLoadDialogComponent.html":{},"classes/FileUtils.html":{},"classes/Flowchart.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"classes/ForLoopControlProcedure.html":{},"classes/Frame.html":{},"classes/FunctionProcedure.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpViewerComponent.html":{},"interfaces/IComponent.html":{},"interfaces/IEdge.html":{},"interfaces/IFlowchart.html":{},"interfaces/IGraphNode.html":{},"interfaces/IPort.html":{},"interfaces/IProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/InputPort.html":{},"injectables/LayoutService.html":{},"components/MenuComponent.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"injectables/MobiusService.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"injectables/NodeLibraryService.html":{},"classes/OutputPort.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{},"classes/ProcedureUtils.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"classes/StatementProcedure.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"classes/WhileControlProcedure.html":{},"classes/gis_module.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["property.nam",{"_index":3818,"title":{},"body":{"components/SelectComponent.html":{}}}],["property.valu",{"_index":3819,"title":{},"body":{"components/SelectComponent.html":{}}}],["proprietari",{"_index":4401,"title":{},"body":{"license.html":{}}}],["protect",{"_index":18,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/DisplayComponent.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/FileUtils.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/InputPort.html":{},"classes/OutputPort.html":{},"classes/Procedure.html":{},"components/SelectComponent.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{},"license.html":{}}}],["protocol",{"_index":4572,"title":{},"body":{"license.html":{}}}],["prototyp",{"_index":2995,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["prove",{"_index":4690,"title":{},"body":{"license.html":{}}}],["provid",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"modules/GSViewer.html":{},"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"modules/MobiusCesium.html":{},"license.html":{},"overview.html":{}}}],["provis",{"_index":4394,"title":{},"body":{"license.html":{}}}],["provision",{"_index":4604,"title":{},"body":{"license.html":{}}}],["proxi",{"_index":4683,"title":{},"body":{"license.html":{}}}],["proxy'",{"_index":4685,"title":{},"body":{"license.html":{}}}],["ptype",{"_index":3015,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["public",{"_index":13,"title":{},"body":{"classes/ActionProcedure.html":{},"components/CesiumViewerComponent.html":{},"injectables/ConsoleService.html":{},"classes/Constants.html":{},"classes/DataProcedure.html":{},"components/DisplayComponent.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"injectables/ExecuteService.html":{},"components/FileLoadDialogComponent.html":{},"classes/FileService.html":{},"classes/FileUtils.html":{},"classes/FlowchartConnectionUtils.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"classes/FlowchartWriter.html":{},"classes/ForLoopControlProcedure.html":{},"classes/Frame.html":{},"classes/FunctionProcedure.html":{},"interfaces/HasIsPlanar.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/InputPort.html":{},"injectables/LayoutService.html":{},"components/MobiuscesiumComponent.html":{},"injectables/ModuleService.html":{},"injectables/NodeLibraryService.html":{},"classes/NodeUtils.html":{},"classes/OutputPort.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"classes/Procedure.html":{},"classes/ProcedureUtils.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"classes/StatementProcedure.html":{},"components/ViewerContainerComponent.html":{},"classes/WhileControlProcedure.html":{},"classes/gis_module.html":{},"license.html":{}}}],["publicli",{"_index":4573,"title":{},"body":{"license.html":{}}}],["publish",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"license.html":{}}}],["publish'},{'nam",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["publish_set",{"_index":1279,"title":{},"body":{"components/FlowchartControlsComponent.html":{},"index.html":{}}}],["publishcompon",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"modules/MobiusCesium.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["publishsettingscompon",{"_index":233,"title":{"components/PublishSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["purpos",{"_index":4399,"title":{},"body":{"license.html":{}}}],["pursuant",{"_index":4658,"title":{},"body":{"license.html":{}}}],["push",{"_index":668,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["push_flowchart",{"_index":1434,"title":{},"body":{"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{}}}],["push_flowchart(fc",{"_index":1532,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["push_nod",{"_index":1436,"title":{},"body":{"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{}}}],["push_node(nod",{"_index":1534,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["put",{"_index":4315,"title":{},"body":{"index.html":{}}}],["qualifi",{"_index":4612,"title":{},"body":{"license.html":{}}}],["qualiti",{"_index":4689,"title":{},"body":{"license.html":{}}}],["question",{"_index":2135,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["r",{"_index":2480,"title":{},"body":{"injectables/LayoutService.html":{},"classes/ModuleUtils.html":{},"components/PanelComponent.html":{},"components/SettingComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["r.resolvecomponentfactory(compon",{"_index":2531,"title":{},"body":{"injectables/LayoutService.html":{}}}],["r.split",{"_index":2987,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["r.trim",{"_index":2985,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["r_valu",{"_index":2986,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["r_value.length",{"_index":2988,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["r_value[0].trim",{"_index":2989,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["r_value[1].trim",{"_index":2990,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["rand_num",{"_index":2625,"title":{},"body":{"components/MobiusAbout.html":{}}}],["random",{"_index":2626,"title":{},"body":{"components/MobiusAbout.html":{}}}],["raycast",{"_index":3838,"title":{},"body":{"components/SettingComponent.html":{}}}],["raycaster:three.raycast",{"_index":3909,"title":{},"body":{"components/SettingComponent.html":{}}}],["rc.0",{"_index":4199,"title":{},"body":{"dependencies.html":{}}}],["rc.2",{"_index":4190,"title":{},"body":{"dependencies.html":{}}}],["reach",{"_index":2603,"title":{},"body":{"components/MobiusAbout.html":{}}}],["reactiveformsmodul",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":1328,"title":{},"body":{"components/FlowchartControlsComponent.html":{},"components/MobiusAbout.html":{},"components/PanelComponent.html":{},"components/ViewerContainerComponent.html":{},"license.html":{}}}],["read_flowchart_from_data",{"_index":1341,"title":{},"body":{"classes/FlowchartReader.html":{}}}],["read_flowchart_from_data(data",{"_index":1342,"title":{},"body":{"classes/FlowchartReader.html":{}}}],["readabl",{"_index":4521,"title":{},"body":{"license.html":{}}}],["reader",{"_index":1316,"title":{},"body":{"components/FlowchartControlsComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{}}}],["reader.onerror",{"_index":1326,"title":{},"body":{"components/FlowchartControlsComponent.html":{}}}],["reader.onload",{"_index":1322,"title":{},"body":{"components/FlowchartControlsComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{}}}],["reader.readastext(fil",{"_index":1318,"title":{},"body":{"components/FlowchartControlsComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{}}}],["reader.result",{"_index":3381,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{}}}],["readi",{"_index":4393,"title":{},"body":{"license.html":{}}}],["readili",{"_index":4650,"title":{},"body":{"license.html":{}}}],["readonli",{"_index":3013,"title":{},"body":{"components/ModuleboxComponent.html":{},"components/ParameterEditorComponent.html":{}}}],["realli",{"_index":1306,"title":{},"body":{"components/FlowchartControlsComponent.html":{}}}],["rearrang",{"_index":2587,"title":{},"body":{"components/MobiusAbout.html":{},"index.html":{}}}],["reason",{"_index":4528,"title":{},"body":{"license.html":{}}}],["receipt",{"_index":4611,"title":{},"body":{"license.html":{}}}],["receiv",{"_index":2607,"title":{},"body":{"components/MobiusAbout.html":{},"license.html":{}}}],["recipi",{"_index":4365,"title":{},"body":{"license.html":{}}}],["recipient'",{"_index":4656,"title":{},"body":{"license.html":{}}}],["recogn",{"_index":4438,"title":{},"body":{"license.html":{}}}],["recreat",{"_index":1347,"title":{},"body":{"classes/FlowchartReader.html":{}}}],["redistribut",{"_index":4713,"title":{},"body":{"license.html":{}}}],["reduc",{"_index":3289,"title":{},"body":{"components/PanelComponent.html":{}}}],["redund",{"_index":1120,"title":{},"body":{"classes/FileUtils.html":{}}}],["refactor",{"_index":3404,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["refer",{"_index":1674,"title":{},"body":{"classes/FlowchartUtils.html":{},"components/HelpFundamentals.html":{},"index.html":{},"license.html":{}}}],["referenc",{"_index":2147,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["referenceerror",{"_index":2207,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["reflect.getprototypeof(obj",{"_index":2340,"title":{},"body":{"interfaces/IModule.html":{},"classes/Module.html":{}}}],["reflect.ownkeys(obj",{"_index":2341,"title":{},"body":{"interfaces/IModule.html":{},"classes/Module.html":{}}}],["refrain",{"_index":4676,"title":{},"body":{"license.html":{}}}],["refresh",{"_index":3291,"title":{},"body":{"components/PanelComponent.html":{}}}],["regard",{"_index":4580,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":4508,"title":{},"body":{"license.html":{}}}],["regener",{"_index":4452,"title":{},"body":{"license.html":{}}}],["regex",{"_index":2959,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["regex.exec(str",{"_index":2962,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["regex.lastindex",{"_index":2966,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["reinstat",{"_index":4603,"title":{},"body":{"license.html":{}}}],["relat",{"_index":1476,"title":{},"body":{"classes/FlowchartRenderUtils.html":{},"classes/FlowchartUtils.html":{},"components/HelpFundamentals.html":{},"injectables/LayoutService.html":{}}}],["relationship",{"_index":4470,"title":{},"body":{"license.html":{}}}],["releas",{"_index":4352,"title":{},"body":{"license.html":{}}}],["relev",{"_index":2117,"title":{},"body":{"components/HelpFundamentals.html":{},"license.html":{}}}],["reli",{"_index":4649,"title":{},"body":{"license.html":{}}}],["relicens",{"_index":4596,"title":{},"body":{"license.html":{}}}],["remain",{"_index":4351,"title":{},"body":{"license.html":{}}}],["remaind",{"_index":2172,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["remov",{"_index":1644,"title":{},"body":{"classes/FlowchartUtils.html":{},"components/ParameterViewerComponent.html":{},"classes/ProcedureUtils.html":{},"index.html":{},"license.html":{}}}],["remove_edges_with_nod",{"_index":1240,"title":{},"body":{"classes/FlowchartConnectionUtils.html":{}}}],["remove_edges_with_node(flowchart",{"_index":1248,"title":{},"body":{"classes/FlowchartConnectionUtils.html":{}}}],["render",{"_index":1448,"title":{},"body":{"classes/FlowchartRenderUtils.html":{},"injectables/ModuleService.html":{},"index.html":{},"license.html":{}}}],["render_edg",{"_index":1438,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["render_flowchart",{"_index":1457,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["render_nod",{"_index":4050,"title":{},"body":{"components/TextViewerComponent.html":{}}}],["render_node(nod",{"_index":4056,"title":{},"body":{"components/TextViewerComponent.html":{}}}],["repair",{"_index":4692,"title":{},"body":{"license.html":{}}}],["repeat",{"_index":2632,"title":{},"body":{"components/MobiusAbout.html":{}}}],["replac",{"_index":2005,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["replacelinebreak",{"_index":2266,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["replacelinebreaks(str",{"_index":2277,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["reposit",{"_index":2629,"title":{},"body":{"components/MobiusAbout.html":{}}}],["repres",{"_index":4558,"title":{},"body":{"license.html":{}}}],["requir",{"_index":702,"title":{},"body":{"modules/CustomMaterialModule.html":{},"components/LandingComponent.html":{},"classes/NodeUtils.html":{},"index.html":{},"license.html":{}}}],["res.text",{"_index":3242,"title":{},"body":{"classes/NodeUtils.html":{}}}],["reset",{"_index":31,"title":{},"body":{"classes/ActionProcedure.html":{},"modules/AppModule.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/FileUtils.html":{},"classes/FlowchartConnectionUtils.html":{},"classes/FlowchartUtils.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"modules/GSViewer.html":{},"components/GeometryViewerComponent.html":{},"interfaces/IGraphNode.html":{},"interfaces/IPort.html":{},"interfaces/IProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/InputPort.html":{},"modules/MobiusCesium.html":{},"components/NodeLibraryComponent.html":{},"classes/OutputPort.html":{},"components/ParameterViewerComponent.html":{},"classes/Procedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{},"overview.html":{}}}],["reset(flowchart",{"_index":1610,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["resetview",{"_index":1477,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["resolv",{"_index":4551,"title":{},"body":{"license.html":{}}}],["respect",{"_index":4362,"title":{},"body":{"license.html":{}}}],["respons",{"_index":4361,"title":{},"body":{"license.html":{}}}],["restor",{"_index":2472,"title":{},"body":{"injectables/LayoutService.html":{},"components/PanelComponent.html":{}}}],["restore(panel_id",{"_index":2498,"title":{},"body":{"injectables/LayoutService.html":{}}}],["restrict",{"_index":4398,"title":{},"body":{"license.html":{}}}],["result",{"_index":85,"title":{},"body":{"classes/ActionProcedure.html":{},"injectables/ActiveNodeService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"classes/CodeFactory.html":{},"classes/CodeGenerator.html":{},"injectables/CodeService.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"injectables/ConsoleService.html":{},"classes/Constants.html":{},"modules/CustomMaterialModule.html":{},"classes/DataProcedure.html":{},"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"injectables/ExecuteService.html":{},"components/FileLoadDialogComponent.html":{},"classes/FileService.html":{},"classes/FileUtils.html":{},"classes/Flowchart.html":{},"classes/FlowchartConnectionUtils.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"classes/FlowchartWriter.html":{},"classes/ForLoopControlProcedure.html":{},"classes/Frame.html":{},"classes/FunctionProcedure.html":{},"modules/GSViewer.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"interfaces/HasIsPlanar.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IComponent.html":{},"interfaces/IEdge.html":{},"interfaces/IFlowchart.html":{},"interfaces/IGraphNode.html":{},"interfaces/IModule.html":{},"interfaces/IPort.html":{},"interfaces/IProcedure.html":{},"classes/IdGenerator.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"components/InfoViewerComponent.html":{},"classes/InputPort.html":{},"components/LandingComponent.html":{},"injectables/LayoutService.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"modules/MobiusCesium.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"injectables/MobiusService.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"classes/ModuleUtils.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"injectables/NodeLibraryService.html":{},"classes/NodeSubscriber.html":{},"classes/NodeUtils.html":{},"classes/OutputPort.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"pipes/PortTypePipe.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{},"classes/ProcedureFactory.html":{},"components/ProcedureItemComponent.html":{},"classes/ProcedureUtils.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{},"classes/StatementProcedure.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"classes/WhileControlProcedure.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"classes/gis_module.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result.json()).then((data",{"_index":646,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["result.map(function(r",{"_index":2984,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["result[0",{"_index":2982,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["retain",{"_index":4566,"title":{},"body":{"license.html":{}}}],["return",{"_index":70,"title":{},"body":{"classes/ActionProcedure.html":{},"injectables/ActiveNodeService.html":{},"components/CesiumViewerComponent.html":{},"classes/CodeFactory.html":{},"classes/CodeGenerator.html":{},"injectables/CodeService.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"injectables/ConsoleService.html":{},"classes/Constants.html":{},"classes/DataProcedure.html":{},"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"injectables/ExecuteService.html":{},"components/FileLoadDialogComponent.html":{},"classes/FileService.html":{},"classes/FileUtils.html":{},"classes/Flowchart.html":{},"classes/FlowchartConnectionUtils.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"classes/FlowchartWriter.html":{},"classes/ForLoopControlProcedure.html":{},"classes/Frame.html":{},"classes/FunctionProcedure.html":{},"modules/GSViewer.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"interfaces/HasIsPlanar.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IGraphNode.html":{},"interfaces/IModule.html":{},"interfaces/IPort.html":{},"interfaces/IProcedure.html":{},"classes/IdGenerator.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"components/InfoViewerComponent.html":{},"classes/InputPort.html":{},"components/LandingComponent.html":{},"injectables/LayoutService.html":{},"components/MobiusAbout.html":{},"modules/MobiusCesium.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"injectables/MobiusService.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"classes/ModuleUtils.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"injectables/NodeLibraryService.html":{},"classes/NodeUtils.html":{},"classes/OutputPort.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"pipes/PortTypePipe.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{},"classes/ProcedureFactory.html":{},"components/ProcedureItemComponent.html":{},"classes/ProcedureUtils.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{},"classes/StatementProcedure.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"classes/WhileControlProcedure.html":{},"classes/gis_module.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["return(.*);/gm",{"_index":2960,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["review",{"_index":1942,"title":{},"body":{"components/HelpFundamentals.html":{},"license.html":{}}}],["revis",{"_index":4679,"title":{},"body":{"license.html":{}}}],["revisit",{"_index":1676,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["right",{"_index":101,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"components/HelpFundamentals.html":{},"interfaces/IProcedure.html":{},"classes/IfControlProcedure.html":{},"components/MobiusAbout.html":{},"components/MobiusViewerComponent.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{},"classes/WhileControlProcedure.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{}}}],["right(valu",{"_index":3514,"title":{},"body":{"classes/Procedure.html":{}}}],["risk",{"_index":4688,"title":{},"body":{"license.html":{}}}],["rom",{"_index":4568,"title":{},"body":{"license.html":{}}}],["root",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/ProcedureItemComponent.html":{}}}],["root'},{'nam",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["round",{"_index":2239,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["rout",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["router",{"_index":2754,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["routermodul",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot",{"_index":384,"title":{},"body":{"modules/AppModule.html":{}}}],["royalti",{"_index":4627,"title":{},"body":{"license.html":{}}}],["rule",{"_index":2204,"title":{},"body":{"components/HelpFundamentals.html":{},"license.html":{}}}],["run",{"_index":2208,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"classes/NodeUtils.html":{},"license.html":{}}}],["run_fil",{"_index":3407,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["rxj",{"_index":534,"title":{},"body":{"injectables/CodeService.html":{},"injectables/ConsoleService.html":{},"injectables/FlowchartService.html":{},"injectables/LayoutService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":2722,"title":{},"body":{"components/MobiusGalleryComponent.html":{}}}],["rxjs/rx",{"_index":2775,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["rxjs/subject",{"_index":536,"title":{},"body":{"injectables/CodeService.html":{},"injectables/ConsoleService.html":{},"injectables/FlowchartService.html":{},"injectables/LayoutService.html":{}}}],["rxjs/subscript",{"_index":726,"title":{},"body":{"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/HelpViewerComponent.html":{},"components/PanelComponent.html":{}}}],["s",{"_index":2119,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["s,]+)/g",{"_index":2980,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["s.unsubscrib",{"_index":418,"title":{},"body":{"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"classes/FlowchartRenderUtils.html":{},"components/GeometryViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["s4",{"_index":2354,"title":{},"body":{"classes/IdGenerator.html":{}}}],["s\\s]*?\\*\\/))/mg",{"_index":2977,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["safari",{"_index":2704,"title":{},"body":{"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{}}}],["safest",{"_index":4714,"title":{},"body":{"license.html":{}}}],["sake",{"_index":4375,"title":{},"body":{"license.html":{}}}],["sale",{"_index":4636,"title":{},"body":{"license.html":{}}}],["same",{"_index":1974,"title":{},"body":{"components/HelpFundamentals.html":{},"classes/NodeUtils.html":{},"components/ViewerContainerComponent.html":{},"index.html":{},"license.html":{}}}],["sanit",{"_index":2270,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["satisfi",{"_index":1671,"title":{},"body":{"classes/FlowchartUtils.html":{},"license.html":{}}}],["satur",{"_index":3839,"title":{},"body":{"components/SettingComponent.html":{}}}],["saturation:numb",{"_index":3902,"title":{},"body":{"components/SettingComponent.html":{}}}],["save",{"_index":419,"title":{},"body":{"components/CesiumViewerComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/NodeLibraryComponent.html":{},"components/PublishSettingsComponent.html":{}}}],["save_fil",{"_index":1280,"title":{},"body":{"components/FlowchartControlsComponent.html":{},"index.html":{}}}],["save_flowchart_as_json",{"_index":1696,"title":{},"body":{"classes/FlowchartWriter.html":{}}}],["save_flowchart_as_json(flowchart",{"_index":1697,"title":{},"body":{"classes/FlowchartWriter.html":{}}}],["save_geojson",{"_index":396,"title":{},"body":{"components/CesiumViewerComponent.html":{}}}],["save_library_nod",{"_index":3098,"title":{},"body":{"injectables/NodeLibraryService.html":{}}}],["save_library_node(nod",{"_index":3104,"title":{},"body":{"injectables/NodeLibraryService.html":{}}}],["save_node_to_librari",{"_index":1474,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["saved_nod",{"_index":3096,"title":{},"body":{"injectables/NodeLibraryService.html":{}}}],["saved_nodes(nod",{"_index":3113,"title":{},"body":{"injectables/NodeLibraryService.html":{}}}],["say",{"_index":4537,"title":{},"body":{"license.html":{}}}],["scale($ev",{"_index":1487,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["scalefactor",{"_index":1490,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["scene",{"_index":1707,"title":{},"body":{"classes/FlowchartWriter.html":{},"components/SettingComponent.html":{}}}],["scene:three.scen",{"_index":3899,"title":{},"body":{"components/SettingComponent.html":{}}}],["school",{"_index":4732,"title":{},"body":{"license.html":{}}}],["scope",{"_index":1949,"title":{},"body":{"components/HelpFundamentals.html":{},"license.html":{}}}],["screen",{"_index":1979,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["script",{"_index":2581,"title":{},"body":{"components/MobiusAbout.html":{},"license.html":{}}}],["scrolltobottom",{"_index":565,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["second",{"_index":2003,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{}}}],["secondarili",{"_index":4416,"title":{},"body":{"license.html":{}}}],["section",{"_index":2062,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"license.html":{}}}],["see",{"_index":2148,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"license.html":{}}}],["seem",{"_index":2227,"title":{},"body":{"components/HelpFundamentals.html":{},"components/HelpViewerComponent.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{}}}],["select",{"_index":934,"title":{},"body":{"components/EditorComponent.html":{},"classes/FileUtils.html":{},"components/MobiusAbout.html":{},"components/ModuleboxComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterViewerComponent.html":{},"components/SelectComponent.html":{},"components/TextViewerComponent.html":{},"index.html":{}}}],["select'},{'nam",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["selectcompon",{"_index":236,"title":{"components/SelectComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"modules/MobiusCesium.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selected_nod",{"_index":1179,"title":{},"body":{"classes/Flowchart.html":{},"interfaces/IFlowchart.html":{},"components/ProcedureEditorComponent.html":{}}}],["selected_node(index",{"_index":1230,"title":{},"body":{"classes/Flowchart.html":{}}}],["selected_procedur",{"_index":3612,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["selected_procedure.par",{"_index":3614,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["selectededg",{"_index":1663,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["selector",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartRenderUtils.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["self",{"_index":140,"title":{},"body":{"injectables/ActiveNodeService.html":{},"components/MobiusEditorComponent.html":{},"injectables/ModuleService.html":{},"classes/NodeUtils.html":{},"components/TextViewerComponent.html":{}}}],["self.gettext(output",{"_index":4060,"title":{},"body":{"components/TextViewerComponent.html":{}}}],["self.isjson(output",{"_index":4059,"title":{},"body":{"components/TextViewerComponent.html":{}}}],["self.process",{"_index":2687,"title":{},"body":{"components/MobiusEditorComponent.html":{}}}],["sell",{"_index":4635,"title":{},"body":{"license.html":{}}}],["semiconductor",{"_index":4405,"title":{},"body":{"license.html":{}}}],["send",{"_index":4282,"title":{},"body":{"index.html":{}}}],["sendmessag",{"_index":606,"title":{},"body":{"injectables/ConsoleService.html":{},"injectables/LayoutService.html":{}}}],["sendmessage(messag",{"_index":623,"title":{},"body":{"injectables/ConsoleService.html":{},"injectables/LayoutService.html":{}}}],["sens",{"_index":2138,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["sent",{"_index":2606,"title":{},"body":{"components/MobiusAbout.html":{}}}],["separ",{"_index":2126,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"index.html":{},"license.html":{}}}],["sequenc",{"_index":1951,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{}}}],["serv",{"_index":4443,"title":{},"body":{"license.html":{}}}],["server",{"_index":2442,"title":{},"body":{"components/LandingComponent.html":{},"license.html":{}}}],["servic",{"_index":4298,"title":{},"body":{"index.html":{},"license.html":{}}}],["services/code.servic",{"_index":306,"title":{},"body":{"modules/AppModule.html":{},"components/CodeViewerComponent.html":{}}}],["services/code.service.t",{"_index":524,"title":{},"body":{"injectables/CodeService.html":{},"coverage.html":{}}}],["services/code.service.ts:10",{"_index":526,"title":{},"body":{"injectables/CodeService.html":{}}}],["services/code.service.ts:14",{"_index":529,"title":{},"body":{"injectables/CodeService.html":{}}}],["services/code.service.ts:18",{"_index":531,"title":{},"body":{"injectables/CodeService.html":{}}}],["services/console.servic",{"_index":302,"title":{},"body":{"modules/AppModule.html":{},"components/ConsoleComponent.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartRenderUtils.html":{},"components/ProcedureEditorComponent.html":{}}}],["services/console.service.t",{"_index":595,"title":{},"body":{"injectables/ConsoleService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["services/console.service.ts:24",{"_index":625,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["services/console.service.ts:25",{"_index":628,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["services/console.service.ts:26",{"_index":629,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["services/console.service.ts:28",{"_index":607,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["services/console.service.ts:35",{"_index":616,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["services/console.service.ts:41",{"_index":630,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["services/console.service.ts:42",{"_index":624,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["services/console.service.ts:46",{"_index":614,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["services/console.service.ts:50",{"_index":617,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["services/console.service.ts:54",{"_index":610,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["services/console.service.ts:63",{"_index":615,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["services/console.service.ts:67",{"_index":613,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["services/console.service.ts:72",{"_index":619,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["services/console.service.ts:77",{"_index":622,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["services/execute.servic",{"_index":307,"title":{},"body":{"modules/AppModule.html":{},"components/ParameterViewerComponent.html":{}}}],["services/execute.service.t",{"_index":948,"title":{},"body":{"injectables/ExecuteService.html":{},"coverage.html":{}}}],["services/execute.service.ts:13",{"_index":954,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["services/execute.service.ts:22",{"_index":956,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["services/execute.service.ts:29",{"_index":978,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["services/execute.service.ts:61",{"_index":955,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["services/file.servic",{"_index":1699,"title":{},"body":{"classes/FlowchartWriter.html":{}}}],["services/file.service.t",{"_index":1031,"title":{},"body":{"classes/FileService.html":{},"coverage.html":{}}}],["services/file.service.ts:6",{"_index":1034,"title":{},"body":{"classes/FileService.html":{}}}],["services/flowchart.servic",{"_index":301,"title":{},"body":{"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/EditorComponent.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartRenderUtils.html":{},"components/GeometryViewerComponent.html":{},"components/HelpViewerComponent.html":{},"components/MenuComponent.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["services/flowchart.service.t",{"_index":1494,"title":{},"body":{"injectables/FlowchartService.html":{},"coverage.html":{}}}],["services/flowchart.service.ts:118",{"_index":1528,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["services/flowchart.service.ts:131",{"_index":1516,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["services/flowchart.service.ts:146",{"_index":1526,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["services/flowchart.service.ts:150",{"_index":1524,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["services/flowchart.service.ts:154",{"_index":1522,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["services/flowchart.service.ts:158",{"_index":1519,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["services/flowchart.service.ts:23",{"_index":1543,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["services/flowchart.service.ts:24",{"_index":1541,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["services/flowchart.service.ts:25",{"_index":1544,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["services/flowchart.service.ts:30",{"_index":1540,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["services/flowchart.service.ts:31",{"_index":1539,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["services/flowchart.service.ts:32",{"_index":1547,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["services/flowchart.service.ts:33",{"_index":1552,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["services/flowchart.service.ts:37",{"_index":1549,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["services/flowchart.service.ts:38",{"_index":1513,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["services/flowchart.service.ts:44",{"_index":1545,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["services/flowchart.service.ts:49",{"_index":1533,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["services/flowchart.service.ts:53",{"_index":1535,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["services/flowchart.service.ts:59",{"_index":1554,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["services/flowchart.service.ts:63",{"_index":1538,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["services/flowchart.service.ts:67",{"_index":1537,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["services/flowchart.service.ts:77",{"_index":1531,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["services/flowchart.service.ts:93",{"_index":1530,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["services/layout.servic",{"_index":303,"title":{},"body":{"modules/AppModule.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/PanelComponent.html":{}}}],["services/layout.service.t",{"_index":2460,"title":{},"body":{"injectables/LayoutService.html":{},"coverage.html":{}}}],["services/layout.service.ts:117",{"_index":2497,"title":{},"body":{"injectables/LayoutService.html":{}}}],["services/layout.service.ts:121",{"_index":2499,"title":{},"body":{"injectables/LayoutService.html":{}}}],["services/layout.service.ts:127",{"_index":2508,"title":{},"body":{"injectables/LayoutService.html":{}}}],["services/layout.service.ts:133",{"_index":2506,"title":{},"body":{"injectables/LayoutService.html":{}}}],["services/layout.service.ts:137",{"_index":2493,"title":{},"body":{"injectables/LayoutService.html":{}}}],["services/layout.service.ts:143",{"_index":2504,"title":{},"body":{"injectables/LayoutService.html":{}}}],["services/layout.service.ts:149",{"_index":2489,"title":{},"body":{"injectables/LayoutService.html":{}}}],["services/layout.service.ts:153",{"_index":2488,"title":{},"body":{"injectables/LayoutService.html":{}}}],["services/layout.service.ts:157",{"_index":2502,"title":{},"body":{"injectables/LayoutService.html":{}}}],["services/layout.service.ts:163",{"_index":2510,"title":{},"body":{"injectables/LayoutService.html":{}}}],["services/layout.service.ts:180",{"_index":2501,"title":{},"body":{"injectables/LayoutService.html":{}}}],["services/layout.service.ts:187",{"_index":2505,"title":{},"body":{"injectables/LayoutService.html":{}}}],["services/layout.service.ts:19",{"_index":2523,"title":{},"body":{"injectables/LayoutService.html":{}}}],["services/layout.service.ts:41",{"_index":2525,"title":{},"body":{"injectables/LayoutService.html":{}}}],["services/layout.service.ts:43",{"_index":2512,"title":{},"body":{"injectables/LayoutService.html":{}}}],["services/layout.service.ts:44",{"_index":2511,"title":{},"body":{"injectables/LayoutService.html":{}}}],["services/layout.service.ts:46",{"_index":2513,"title":{},"body":{"injectables/LayoutService.html":{}}}],["services/layout.service.ts:51",{"_index":2482,"title":{},"body":{"injectables/LayoutService.html":{}}}],["services/layout.service.ts:71",{"_index":2524,"title":{},"body":{"injectables/LayoutService.html":{}}}],["services/layout.service.ts:72",{"_index":2500,"title":{},"body":{"injectables/LayoutService.html":{}}}],["services/layout.service.ts:76",{"_index":2483,"title":{},"body":{"injectables/LayoutService.html":{}}}],["services/layout.service.ts:80",{"_index":2487,"title":{},"body":{"injectables/LayoutService.html":{}}}],["services/layout.service.ts:85",{"_index":2491,"title":{},"body":{"injectables/LayoutService.html":{}}}],["services/layout.service.ts:92",{"_index":2484,"title":{},"body":{"injectables/LayoutService.html":{}}}],["services/layout.service.ts:97",{"_index":2495,"title":{},"body":{"injectables/LayoutService.html":{}}}],["services/mobius.const",{"_index":1024,"title":{},"body":{"components/FileLoadDialogComponent.html":{}}}],["services/mobius.constants.t",{"_index":4153,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["services/mobius.servic",{"_index":304,"title":{},"body":{"modules/AppModule.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartRenderUtils.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{},"components/ParameterViewerComponent.html":{}}}],["services/mobius.service.t",{"_index":2729,"title":{},"body":{"injectables/MobiusService.html":{},"coverage.html":{}}}],["services/mobius.service.ts:12",{"_index":2736,"title":{},"body":{"injectables/MobiusService.html":{}}}],["services/mobius.service.ts:13",{"_index":2733,"title":{},"body":{"injectables/MobiusService.html":{}}}],["services/mobius.service.ts:14",{"_index":2734,"title":{},"body":{"injectables/MobiusService.html":{}}}],["services/mobius.service.ts:16",{"_index":2731,"title":{},"body":{"injectables/MobiusService.html":{}}}],["services/mobius.service.ts:20",{"_index":2737,"title":{},"body":{"injectables/MobiusService.html":{}}}],["services/mobius.service.ts:24",{"_index":2738,"title":{},"body":{"injectables/MobiusService.html":{}}}],["services/mobius.service.ts:29",{"_index":2740,"title":{},"body":{"injectables/MobiusService.html":{}}}],["services/mobius.service.ts:33",{"_index":2742,"title":{},"body":{"injectables/MobiusService.html":{}}}],["services/mobius.service.ts:37",{"_index":2745,"title":{},"body":{"injectables/MobiusService.html":{}}}],["services/mobius.service.ts:41",{"_index":2747,"title":{},"body":{"injectables/MobiusService.html":{}}}],["services/mobius.service.ts:45",{"_index":2732,"title":{},"body":{"injectables/MobiusService.html":{}}}],["services/module.servic",{"_index":305,"title":{},"body":{"modules/AppModule.html":{},"components/FlowchartControlsComponent.html":{},"components/HelpViewerComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{}}}],["services/module.service.t",{"_index":2846,"title":{},"body":{"injectables/ModuleService.html":{},"coverage.html":{}}}],["services/module.service.ts:12",{"_index":2850,"title":{},"body":{"injectables/ModuleService.html":{}}}],["services/module.service.ts:16",{"_index":2855,"title":{},"body":{"injectables/ModuleService.html":{}}}],["services/module.service.ts:20",{"_index":2851,"title":{},"body":{"injectables/ModuleService.html":{}}}],["services/module.service.ts:47",{"_index":2852,"title":{},"body":{"injectables/ModuleService.html":{}}}],["services/module.service.ts:9",{"_index":2853,"title":{},"body":{"injectables/ModuleService.html":{}}}],["services/nod",{"_index":308,"title":{},"body":{"modules/AppModule.html":{},"classes/FlowchartRenderUtils.html":{},"components/NodeLibraryComponent.html":{},"injectables/NodeLibraryService.html":{},"coverage.html":{}}}],["services/select",{"_index":124,"title":{},"body":{"injectables/ActiveNodeService.html":{},"coverage.html":{}}}],["set",{"_index":142,"title":{},"body":{"injectables/ActiveNodeService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"injectables/CodeService.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"classes/FileUtils.html":{},"classes/Flowchart.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"interfaces/IModule.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"injectables/MobiusService.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"injectables/NodeLibraryService.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"classes/gis_module.html":{},"index.html":{}}}],["set_view",{"_index":4082,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["set_view(nod",{"_index":4090,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["setauthor(valu",{"_index":1167,"title":{},"body":{"classes/Flowchart.html":{}}}],["setchildren(children",{"_index":3499,"title":{},"body":{"classes/Procedure.html":{}}}],["setcode_generator(cg",{"_index":2741,"title":{},"body":{"injectables/MobiusService.html":{}}}],["setcomputedvalu",{"_index":2397,"title":{},"body":{"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["setcomputedvalue(valu",{"_index":1109,"title":{},"body":{"classes/FileUtils.html":{},"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["setdefaultvalu",{"_index":2398,"title":{},"body":{"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["setdefaultvalue(valu",{"_index":1121,"title":{},"body":{"classes/FileUtils.html":{},"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["setdescription(valu",{"_index":1172,"title":{},"body":{"classes/Flowchart.html":{}}}],["setdimens",{"_index":1841,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["setdisplay_node(index",{"_index":1204,"title":{},"body":{"classes/Flowchart.html":{}}}],["setedges(edg",{"_index":1194,"title":{},"body":{"classes/Flowchart.html":{}}}],["seteditable(valu",{"_index":1199,"title":{},"body":{"classes/Flowchart.html":{}}}],["seteditor",{"_index":2473,"title":{},"body":{"injectables/LayoutService.html":{}}}],["setenabled(valu",{"_index":3481,"title":{},"body":{"classes/Procedure.html":{}}}],["seterror(valu",{"_index":3503,"title":{},"body":{"classes/Procedure.html":{}}}],["setgenerator(gen",{"_index":530,"title":{},"body":{"injectables/CodeService.html":{}}}],["setglobals(arr",{"_index":1186,"title":{},"body":{"classes/Flowchart.html":{}}}],["setid(valu",{"_index":3484,"title":{},"body":{"classes/Procedure.html":{}}}],["setleft(valu",{"_index":3491,"title":{},"body":{"classes/Procedure.html":{}}}],["setmodel",{"_index":1804,"title":{},"body":{"components/GSViewerComponent.html":{},"components/MobiuscesiumComponent.html":{}}}],["setmodel(data",{"_index":1809,"title":{},"body":{"components/GSViewerComponent.html":{},"components/MobiuscesiumComponent.html":{}}}],["setmodul",{"_index":477,"title":{},"body":{"classes/CodeGenerator.html":{},"interfaces/ICodeGenerator.html":{}}}],["setmodules(modul",{"_index":513,"title":{},"body":{"classes/CodeGenerator.html":{},"interfaces/ICodeGenerator.html":{}}}],["setname(valu",{"_index":1162,"title":{},"body":{"classes/Flowchart.html":{}}}],["setnod",{"_index":1755,"title":{},"body":{"classes/FunctionProcedure.html":{}}}],["setnode(graphnod",{"_index":1762,"title":{},"body":{"classes/FunctionProcedure.html":{}}}],["setobj",{"_index":2474,"title":{},"body":{"injectables/LayoutService.html":{}}}],["setprint(valu",{"_index":3507,"title":{},"body":{"classes/Procedure.html":{}}}],["setprocessing(valu",{"_index":137,"title":{},"body":{"injectables/ActiveNodeService.html":{},"injectables/MobiusService.html":{}}}],["setright(valu",{"_index":3495,"title":{},"body":{"classes/Procedure.html":{}}}],["setsaved_nodes(nod",{"_index":3109,"title":{},"body":{"injectables/NodeLibraryService.html":{}}}],["setselected_node(index",{"_index":1182,"title":{},"body":{"classes/Flowchart.html":{}}}],["setsummary(valu",{"_index":1177,"title":{},"body":{"classes/Flowchart.html":{}}}],["settimeout",{"_index":442,"title":{},"body":{"components/CesiumViewerComponent.html":{},"classes/FileService.html":{},"classes/FlowchartRenderUtils.html":{}}}],["settimeout(funct",{"_index":3427,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["setting'},{'nam",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["setting(ev",{"_index":3875,"title":{},"body":{"components/SettingComponent.html":{}}}],["setting.component.css",{"_index":3821,"title":{},"body":{"components/SettingComponent.html":{}}}],["setting.component.html",{"_index":3822,"title":{},"body":{"components/SettingComponent.html":{}}}],["setting/attributes.copmpon",{"_index":2661,"title":{},"body":{"modules/MobiusCesium.html":{}}}],["setting/display.copmpon",{"_index":2663,"title":{},"body":{"modules/MobiusCesium.html":{}}}],["setting/publish.compon",{"_index":2662,"title":{},"body":{"modules/MobiusCesium.html":{}}}],["setting/setting.compon",{"_index":1789,"title":{},"body":{"modules/GSViewer.html":{},"modules/MobiusCesium.html":{}}}],["setting/visualise.compon",{"_index":2660,"title":{},"body":{"modules/MobiusCesium.html":{}}}],["settingcompon",{"_index":238,"title":{"components/SettingComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"modules/GSViewer.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"modules/MobiusCesium.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["settings'},{'nam",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["settings.compon",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"components/FlowchartControlsComponent.html":{}}}],["settings.component.html",{"_index":3751,"title":{},"body":{"components/PublishSettingsComponent.html":{}}}],["settings.component.scss",{"_index":3750,"title":{},"body":{"components/PublishSettingsComponent.html":{}}}],["settings.component.t",{"_index":3749,"title":{},"body":{"components/PublishSettingsComponent.html":{},"coverage.html":{}}}],["settings.component.ts:17",{"_index":3766,"title":{},"body":{"components/PublishSettingsComponent.html":{}}}],["settings.component.ts:19",{"_index":3767,"title":{},"body":{"components/PublishSettingsComponent.html":{}}}],["settings.component.ts:25",{"_index":3755,"title":{},"body":{"components/PublishSettingsComponent.html":{}}}],["settings.component.ts:27",{"_index":3764,"title":{},"body":{"components/PublishSettingsComponent.html":{}}}],["settings.component.ts:28",{"_index":3765,"title":{},"body":{"components/PublishSettingsComponent.html":{}}}],["settings.component.ts:29",{"_index":3763,"title":{},"body":{"components/PublishSettingsComponent.html":{}}}],["settings.component.ts:31",{"_index":3756,"title":{},"body":{"components/PublishSettingsComponent.html":{}}}],["settings.component.ts:37",{"_index":3762,"title":{},"body":{"components/PublishSettingsComponent.html":{}}}],["settings.component.ts:42",{"_index":3757,"title":{},"body":{"components/PublishSettingsComponent.html":{}}}],["settings.component.ts:46",{"_index":3760,"title":{},"body":{"components/PublishSettingsComponent.html":{}}}],["settings.component.ts:73",{"_index":3761,"title":{},"body":{"components/PublishSettingsComponent.html":{}}}],["settings.component.ts:88",{"_index":3759,"title":{},"body":{"components/PublishSettingsComponent.html":{}}}],["settings/publish",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"components/FlowchartControlsComponent.html":{},"components/PublishSettingsComponent.html":{},"coverage.html":{}}}],["settype(valu",{"_index":3488,"title":{},"body":{"classes/Procedure.html":{}}}],["setuser(usernam",{"_index":2746,"title":{},"body":{"injectables/MobiusService.html":{}}}],["setview",{"_index":2476,"title":{},"body":{"injectables/LayoutService.html":{}}}],["setviewcontain",{"_index":2475,"title":{},"body":{"injectables/LayoutService.html":{}}}],["setviewcontainer(index",{"_index":2503,"title":{},"body":{"injectables/LayoutService.html":{}}}],["shadow",{"_index":909,"title":{},"body":{"components/DisplayComponent.html":{},"components/SettingComponent.html":{}}}],["shadowvis",{"_index":3840,"title":{},"body":{"components/SettingComponent.html":{}}}],["shall",{"_index":4476,"title":{},"body":{"license.html":{}}}],["share",{"_index":2614,"title":{},"body":{"components/MobiusAbout.html":{},"license.html":{}}}],["shift",{"_index":3287,"title":{},"body":{"components/PanelComponent.html":{},"components/ProcedureEditorComponent.html":{},"classes/ProcedureUtils.html":{},"components/SettingComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["shift_level_up",{"_index":3705,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["shift_level_up(procedur",{"_index":3718,"title":{},"body":{"classes/ProcedureUtils.html":{}}}],["shiftdown",{"_index":3581,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["short",{"_index":900,"title":{},"body":{"components/DisplayComponent.html":{},"components/MobiusAbout.html":{},"license.html":{}}}],["shorten",{"_index":4027,"title":{},"body":{"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{}}}],["shorthand",{"_index":1960,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["shortnam",{"_index":4024,"title":{},"body":{"pipes/ShortNamePipe.html":{}}}],["shortnamepip",{"_index":260,"title":{"pipes/ShortNamePipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/ShortNamePipe.html":{},"coverage.html":{},"overview.html":{}}}],["shouldn't",{"_index":4326,"title":{},"body":{"index.html":{}}}],["show",{"_index":2195,"title":{},"body":{"components/HelpFundamentals.html":{},"components/HelpViewerComponent.html":{},"components/MobiusAbout.html":{},"index.html":{},"license.html":{}}}],["showal",{"_index":2267,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["showconsol",{"_index":2477,"title":{},"body":{"injectables/LayoutService.html":{},"components/ViewerContainerComponent.html":{}}}],["showdialog",{"_index":1423,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["showfil",{"_index":2811,"title":{},"body":{"components/MobiuscesiumComponent.html":{}}}],["showfiller:boolean",{"_index":2828,"title":{},"body":{"components/MobiuscesiumComponent.html":{}}}],["showhelp",{"_index":2478,"title":{},"body":{"injectables/LayoutService.html":{},"components/ViewerContainerComponent.html":{}}}],["showhelp(fn",{"_index":2507,"title":{},"body":{"injectables/LayoutService.html":{}}}],["showlibrari",{"_index":1422,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["shown",{"_index":2199,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{}}}],["shpj",{"_index":4228,"title":{},"body":{"dependencies.html":{}}}],["sibl",{"_index":3197,"title":{},"body":{"classes/NodeUtils.html":{}}}],["side",{"_index":2150,"title":{},"body":{"components/HelpFundamentals.html":{},"components/LandingComponent.html":{},"injectables/LayoutService.html":{},"components/MobiusAbout.html":{}}}],["sidebar",{"_index":2608,"title":{},"body":{"components/MobiusAbout.html":{}}}],["sign",{"_index":4733,"title":{},"body":{"license.html":{}}}],["signific",{"_index":4559,"title":{},"body":{"license.html":{}}}],["similar",{"_index":2140,"title":{},"body":{"components/HelpFundamentals.html":{},"license.html":{}}}],["simpl",{"_index":2159,"title":{},"body":{"components/HelpFundamentals.html":{},"components/PublishSettingsComponent.html":{}}}],["simpleinput",{"_index":3458,"title":{},"body":{"pipes/PortTypePipe.html":{}}}],["simplenam",{"_index":2728,"title":{},"body":{"components/MobiusGalleryComponent.html":{},"components/ParameterViewerComponent.html":{},"pipes/SimpleNamePipe.html":{}}}],["simplenamepip",{"_index":261,"title":{"pipes/SimpleNamePipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/SimpleNamePipe.html":{},"coverage.html":{},"overview.html":{}}}],["simpli",{"_index":2637,"title":{},"body":{"components/MobiusAbout.html":{}}}],["simultan",{"_index":4673,"title":{},"body":{"license.html":{}}}],["singl",{"_index":2081,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"index.html":{},"license.html":{}}}],["situat",{"_index":2180,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["size",{"_index":1751,"title":{},"body":{"classes/Frame.html":{},"interfaces/HasIsPlanar.html":{},"injectables/LayoutService.html":{},"components/PanelComponent.html":{},"components/ParameterViewerComponent.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"components/SettingComponent.html":{},"classes/gis_module.html":{}}}],["size&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp",{"_index":4001,"title":{},"body":{"components/SettingComponent.html":{}}}],["size}mb",{"_index":3411,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["skip",{"_index":1670,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["sld",{"_index":1739,"title":{},"body":{"classes/Frame.html":{},"interfaces/HasIsPlanar.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"classes/gis_module.html":{}}}],["slide_in",{"_index":2802,"title":{},"body":{"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{}}}],["slide_out",{"_index":2790,"title":{},"body":{"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{}}}],["slider",{"_index":2423,"title":{},"body":{"classes/InputPort.html":{},"pipes/PortTypePipe.html":{},"components/PublishSettingsComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["slider.value.toprecision(2",{"_index":4006,"title":{},"body":{"components/SettingComponent.html":{}}}],["slider1.value.toprecision(2",{"_index":4007,"title":{},"body":{"components/SettingComponent.html":{}}}],["slider2.value.toprecision(2",{"_index":4008,"title":{},"body":{"components/SettingComponent.html":{}}}],["slider3.value.toprecision(2",{"_index":4010,"title":{},"body":{"components/SettingComponent.html":{}}}],["slider4.value.toprecision(2",{"_index":4014,"title":{},"body":{"components/SettingComponent.html":{}}}],["slider5.value.toprecision(2",{"_index":4016,"title":{},"body":{"components/SettingComponent.html":{}}}],["slider6.value.toprecision(2",{"_index":4018,"title":{},"body":{"components/SettingComponent.html":{}}}],["slider_st",{"_index":2755,"title":{},"body":{"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{}}}],["slider_state:str",{"_index":2794,"title":{},"body":{"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{}}}],["small",{"_index":2583,"title":{},"body":{"components/MobiusAbout.html":{}}}],["smallest",{"_index":1883,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["snippet",{"_index":1966,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["softwar",{"_index":2035,"title":{},"body":{"components/HelpFundamentals.html":{},"license.html":{}}}],["sold",{"_index":4548,"title":{},"body":{"license.html":{}}}],["sole",{"_index":4465,"title":{},"body":{"license.html":{}}}],["some_numb",{"_index":2087,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["some_text",{"_index":2032,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["some_v",{"_index":4034,"title":{},"body":{"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{}}}],["some_very_long_str",{"_index":4032,"title":{},"body":{"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{}}}],["someon",{"_index":2226,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["someth",{"_index":1996,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiuscesiumComponent.html":{},"injectables/ModuleService.html":{}}}],["song.id",{"_index":3683,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["soon",{"_index":2610,"title":{},"body":{"components/MobiusAbout.html":{}}}],["sorri",{"_index":2291,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["sort",{"_index":2883,"title":{},"body":{"injectables/ModuleService.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/ActionProcedure.html":{},"injectables/ActiveNodeService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"classes/CodeFactory.html":{},"classes/CodeGenerator.html":{},"injectables/CodeService.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"injectables/ConsoleService.html":{},"classes/Constants.html":{},"modules/CustomMaterialModule.html":{},"classes/DataProcedure.html":{},"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"injectables/ExecuteService.html":{},"components/FileLoadDialogComponent.html":{},"classes/FileService.html":{},"classes/FileUtils.html":{},"classes/Flowchart.html":{},"classes/FlowchartConnectionUtils.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"classes/FlowchartWriter.html":{},"classes/ForLoopControlProcedure.html":{},"classes/Frame.html":{},"classes/FunctionProcedure.html":{},"modules/GSViewer.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"interfaces/HasIsPlanar.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IComponent.html":{},"interfaces/IEdge.html":{},"interfaces/IFlowchart.html":{},"interfaces/IGraphNode.html":{},"interfaces/IModule.html":{},"interfaces/IPort.html":{},"interfaces/IProcedure.html":{},"classes/IdGenerator.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"components/InfoViewerComponent.html":{},"classes/InputPort.html":{},"components/LandingComponent.html":{},"injectables/LayoutService.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"modules/MobiusCesium.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"injectables/MobiusService.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"classes/ModuleUtils.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"injectables/NodeLibraryService.html":{},"classes/NodeSubscriber.html":{},"classes/NodeUtils.html":{},"classes/OutputPort.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"pipes/PortTypePipe.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{},"classes/ProcedureFactory.html":{},"components/ProcedureItemComponent.html":{},"classes/ProcedureUtils.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{},"classes/StatementProcedure.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"classes/WhileControlProcedure.html":{},"classes/gis_module.html":{},"license.html":{}}}],["space",{"_index":2012,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["spacer",{"_index":4178,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["spare",{"_index":4527,"title":{},"body":{"license.html":{}}}],["speak",{"_index":4353,"title":{},"body":{"license.html":{}}}],["speci",{"_index":2238,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["special",{"_index":2013,"title":{},"body":{"components/HelpFundamentals.html":{},"components/LandingComponent.html":{},"license.html":{}}}],["specif",{"_index":4446,"title":{},"body":{"license.html":{}}}],["specifi",{"_index":2151,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"license.html":{}}}],["spirit",{"_index":4680,"title":{},"body":{"license.html":{}}}],["splicededg",{"_index":1266,"title":{},"body":{"classes/FlowchartConnectionUtils.html":{}}}],["split",{"_index":294,"title":{},"body":{"modules/AppModule.html":{},"modules/GSViewer.html":{},"modules/MobiusCesium.html":{},"components/SettingComponent.html":{},"dependencies.html":{},"index.html":{}}}],["squar",{"_index":2053,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["src/.../allmodules.t",{"_index":4246,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../console.service.t",{"_index":4241,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.t",{"_index":4742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":4743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../eviewer.t",{"_index":4242,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../inputporttypes.t",{"_index":4243,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../mobius.constants.t",{"_index":4745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../modulebox.component.t",{"_index":4744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../outputporttypes.t",{"_index":4247,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../porttypes.t",{"_index":4248,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../procedur",{"_index":4244,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../proceduretypes.t",{"_index":4249,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app.component.t",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:8",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/bas",{"_index":5,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/CodeFactory.html":{},"classes/CodeGenerator.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/FileUtils.html":{},"classes/Flowchart.html":{},"classes/FlowchartConnectionUtils.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartUtils.html":{},"classes/FlowchartWriter.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IComponent.html":{},"interfaces/IEdge.html":{},"interfaces/IFlowchart.html":{},"interfaces/IGraphNode.html":{},"interfaces/IPort.html":{},"interfaces/IProcedure.html":{},"classes/IdGenerator.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/InputPort.html":{},"classes/ModuleUtils.html":{},"classes/NodeSubscriber.html":{},"classes/NodeUtils.html":{},"classes/OutputPort.html":{},"classes/Procedure.html":{},"classes/ProcedureFactory.html":{},"classes/ProcedureUtils.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/constants.t",{"_index":670,"title":{},"body":{"classes/Constants.html":{},"coverage.html":{}}}],["src/app/constants.ts:2",{"_index":673,"title":{},"body":{"classes/Constants.html":{}}}],["src/app/constants.ts:6",{"_index":676,"title":{},"body":{"classes/Constants.html":{}}}],["src/app/custom",{"_index":682,"title":{},"body":{"modules/CustomMaterialModule.html":{}}}],["src/app/g",{"_index":732,"title":{},"body":{"classes/DataSubscriber-1.html":{},"modules/GSViewer.html":{},"components/GSViewerComponent.html":{},"components/SettingComponent.html":{},"coverage.html":{}}}],["src/app/geometri",{"_index":1723,"title":{},"body":{"classes/Frame.html":{},"interfaces/HasIsPlanar.html":{},"interfaces/IModule.html":{},"classes/Module.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"coverage.html":{},"classes/gis_module.html":{}}}],["src/app/glob",{"_index":123,"title":{},"body":{"injectables/ActiveNodeService.html":{},"injectables/CodeService.html":{},"injectables/ConsoleService.html":{},"injectables/ExecuteService.html":{},"classes/FileService.html":{},"injectables/FlowchartService.html":{},"injectables/LayoutService.html":{},"injectables/MobiusService.html":{},"injectables/ModuleService.html":{},"injectables/NodeLibraryService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/mobiu",{"_index":716,"title":{},"body":{"classes/DataSubscriber.html":{},"components/DisplayComponent.html":{},"modules/MobiusCesium.html":{},"components/MobiuscesiumComponent.html":{},"components/SelectComponent.html":{},"coverage.html":{}}}],["src/app/pipes/port",{"_index":3438,"title":{},"body":{"pipes/PortTypePipe.html":{},"coverage.html":{}}}],["src/app/pipes/short",{"_index":4023,"title":{},"body":{"pipes/ShortNamePipe.html":{},"coverage.html":{}}}],["src/app/pipes/simpl",{"_index":4036,"title":{},"body":{"pipes/SimpleNamePipe.html":{},"coverage.html":{}}}],["src/app/ui",{"_index":386,"title":{},"body":{"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartRenderUtils.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/assets/modules/allmodules.t",{"_index":4177,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.t",{"_index":4179,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":4181,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["srf",{"_index":1738,"title":{},"body":{"classes/Frame.html":{},"interfaces/HasIsPlanar.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"classes/gis_module.html":{}}}],["stage",{"_index":2585,"title":{},"body":{"components/MobiusAbout.html":{}}}],["stamp",{"_index":2641,"title":{},"body":{"components/MobiusAbout.html":{}}}],["stand",{"_index":1983,"title":{},"body":{"components/HelpFundamentals.html":{},"license.html":{}}}],["standard",{"_index":4436,"title":{},"body":{"license.html":{}}}],["start",{"_index":1958,"title":{"index.html":{},"license.html":{}},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"index.html":{},"license.html":{}}}],["startpoint",{"_index":1914,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["state",{"_index":2777,"title":{},"body":{"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"license.html":{}}}],["state(\"slide_in",{"_index":2822,"title":{},"body":{"components/MobiuscesiumComponent.html":{}}}],["state(\"slide_out",{"_index":2825,"title":{},"body":{"components/MobiuscesiumComponent.html":{}}}],["state('slide_in",{"_index":2784,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["state('slide_out",{"_index":2786,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["statechang",{"_index":127,"title":{},"body":{"injectables/ActiveNodeService.html":{},"injectables/MobiusService.html":{}}}],["statechangedemitt",{"_index":128,"title":{},"body":{"injectables/ActiveNodeService.html":{},"injectables/MobiusService.html":{}}}],["statement",{"_index":1992,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"coverage.html":{},"license.html":{}}}],["statementprocedur",{"_index":3642,"title":{"classes/StatementProcedure.html":{}},"body":{"classes/ProcedureFactory.html":{},"classes/StatementProcedure.html":{},"coverage.html":{}}}],["statementprocedure(typ",{"_index":3647,"title":{},"body":{"classes/ProcedureFactory.html":{}}}],["static",{"_index":430,"title":{},"body":{"components/CesiumViewerComponent.html":{},"classes/CodeFactory.html":{},"injectables/ConsoleService.html":{},"classes/Constants.html":{},"classes/DataProcedure.html":{},"injectables/ExecuteService.html":{},"classes/FileService.html":{},"classes/FileUtils.html":{},"classes/FlowchartConnectionUtils.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartRenderUtils.html":{},"classes/FlowchartUtils.html":{},"classes/FlowchartWriter.html":{},"modules/GSViewer.html":{},"classes/IdGenerator.html":{},"injectables/LayoutService.html":{},"modules/MobiusCesium.html":{},"injectables/ModuleService.html":{},"classes/ModuleUtils.html":{},"injectables/NodeLibraryService.html":{},"classes/NodeUtils.html":{},"classes/ProcedureFactory.html":{},"classes/ProcedureUtils.html":{},"components/ViewerContainerComponent.html":{}}}],["statu",{"_index":1424,"title":{},"body":{"classes/FlowchartRenderUtils.html":{},"license.html":{}}}],["step",{"_index":1095,"title":{},"body":{"classes/FileUtils.html":{},"license.html":{}}}],["still",{"_index":2118,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["storag",{"_index":4515,"title":{},"body":{"license.html":{}}}],["storagestr",{"_index":3118,"title":{},"body":{"injectables/NodeLibraryService.html":{}}}],["store",{"_index":2071,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"classes/NodeUtils.html":{}}}],["str",{"_index":2279,"title":{},"body":{"components/HelpViewerComponent.html":{},"classes/ModuleUtils.html":{},"miscellaneous/enumerations.html":{}}}],["str.split(\"\\n\").join",{"_index":2290,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["str_rep",{"_index":3453,"title":{},"body":{"pipes/PortTypePipe.html":{}}}],["stream",{"_index":1563,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["strict",{"_index":3420,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["string",{"_index":53,"title":{},"body":{"classes/ActionProcedure.html":{},"components/CesiumViewerComponent.html":{},"classes/CodeFactory.html":{},"classes/CodeGenerator.html":{},"components/CodeViewerComponent.html":{},"injectables/ConsoleService.html":{},"classes/Constants.html":{},"classes/DataProcedure.html":{},"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/DisplayComponent.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"injectables/ExecuteService.html":{},"components/FileLoadDialogComponent.html":{},"classes/FileService.html":{},"classes/FileUtils.html":{},"classes/Flowchart.html":{},"classes/FlowchartConnectionUtils.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"classes/FlowchartWriter.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpViewerComponent.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IComponent.html":{},"interfaces/IFlowchart.html":{},"interfaces/IGraphNode.html":{},"interfaces/IModule.html":{},"interfaces/IPort.html":{},"classes/IdGenerator.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/InputPort.html":{},"injectables/LayoutService.html":{},"components/MobiusEditorComponent.html":{},"injectables/MobiusService.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"classes/ModuleUtils.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"injectables/NodeLibraryService.html":{},"classes/NodeUtils.html":{},"classes/OutputPort.html":{},"components/PanelComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"pipes/PortTypePipe.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{},"classes/StatementProcedure.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"classes/WhileControlProcedure.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"classes/gis_module.html":{},"miscellaneous/variables.html":{}}}],["string(objdt).substr(4).slice(0",{"_index":894,"title":{},"body":{"components/DisplayComponent.html":{}}}],["string(today.getdate()).padstart(2",{"_index":812,"title":{},"body":{"components/DisplayComponent.html":{}}}],["string(today.getmonth()+1).padstart(2",{"_index":810,"title":{},"body":{"components/DisplayComponent.html":{}}}],["string.len",{"_index":2241,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["string.len(my_str",{"_index":2244,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["string|str",{"_index":2321,"title":{},"body":{"interfaces/IComponent.html":{}}}],["strrep",{"_index":969,"title":{},"body":{"injectables/ExecuteService.html":{},"components/TextViewerComponent.html":{}}}],["strrep.replace(/\\n/g",{"_index":972,"title":{},"body":{"injectables/ExecuteService.html":{},"components/TextViewerComponent.html":{}}}],["structur",{"_index":1972,"title":{},"body":{"components/HelpFundamentals.html":{},"index.html":{}}}],["stuff",{"_index":2029,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["style",{"_index":2778,"title":{},"body":{"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"index.html":{}}}],["styleurl",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartRenderUtils.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["sub",{"_index":2216,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusViewerComponent.html":{}}}],["subdivid",{"_index":4620,"title":{},"body":{"license.html":{}}}],["subject",{"_index":535,"title":{},"body":{"injectables/CodeService.html":{},"injectables/ConsoleService.html":{},"injectables/FlowchartService.html":{},"injectables/LayoutService.html":{},"license.html":{}}}],["sublicens",{"_index":4472,"title":{},"body":{"license.html":{}}}],["submod",{"_index":2934,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["subnet",{"_index":2609,"title":{},"body":{"components/MobiusAbout.html":{}}}],["subprogram",{"_index":4449,"title":{},"body":{"license.html":{}}}],["subroutin",{"_index":4734,"title":{},"body":{"license.html":{}}}],["subscribe(data",{"_index":3388,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["subscript",{"_index":393,"title":{},"body":{"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/DisplayComponent.html":{},"classes/FlowchartRenderUtils.html":{},"components/GeometryViewerComponent.html":{},"components/HelpViewerComponent.html":{},"injectables/LayoutService.html":{},"components/ModuleboxComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/SelectComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["subsect",{"_index":4533,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":4392,"title":{},"body":{"license.html":{}}}],["substitut",{"_index":4305,"title":{},"body":{"index.html":{}}}],["substring(1",{"_index":2361,"title":{},"body":{"classes/IdGenerator.html":{}}}],["subtract",{"_index":2164,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["successfulli",{"_index":997,"title":{},"body":{"injectables/ExecuteService.html":{},"classes/FlowchartRenderUtils.html":{}}}],["such",{"_index":1963,"title":{},"body":{"components/HelpFundamentals.html":{},"components/LandingComponent.html":{},"license.html":{}}}],["sue",{"_index":4647,"title":{},"body":{"license.html":{}}}],["suffic",{"_index":4560,"title":{},"body":{"license.html":{}}}],["summari",{"_index":1174,"title":{},"body":{"classes/Flowchart.html":{},"interfaces/IFlowchart.html":{}}}],["summary(valu",{"_index":1229,"title":{},"body":{"classes/Flowchart.html":{}}}],["sun",{"_index":908,"title":{},"body":{"components/DisplayComponent.html":{}}}],["super(\"gi",{"_index":1740,"title":{},"body":{"classes/Frame.html":{},"interfaces/HasIsPlanar.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"classes/gis_module.html":{}}}],["super(injector",{"_index":778,"title":{},"body":{"components/DisplayComponent.html":{},"components/SelectComponent.html":{}}}],["super(nam",{"_index":2425,"title":{},"body":{"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["super(proceduretypes.act",{"_index":89,"title":{},"body":{"classes/ActionProcedure.html":{}}}],["super(proceduretypes.data",{"_index":709,"title":{},"body":{"classes/DataProcedure.html":{}}}],["super(proceduretypes.elsecontrol",{"_index":940,"title":{},"body":{"classes/ElseControlProcedure.html":{}}}],["super(proceduretypes.elseifcontrol",{"_index":947,"title":{},"body":{"classes/ElseIfControlProcedure.html":{}}}],["super(proceduretypes.forloopcontrol",{"_index":1719,"title":{},"body":{"classes/ForLoopControlProcedure.html":{}}}],["super(proceduretypes.funct",{"_index":1768,"title":{},"body":{"classes/FunctionProcedure.html":{}}}],["super(proceduretypes.ifcontrol",{"_index":2367,"title":{},"body":{"classes/IfControlProcedure.html":{}}}],["super(proceduretypes.whilecontrol",{"_index":4127,"title":{},"body":{"classes/WhileControlProcedure.html":{}}}],["super(titl",{"_index":2374,"title":{},"body":{"classes/IfElseControlProcedure.html":{}}}],["super(typ",{"_index":4045,"title":{},"body":{"classes/StatementProcedure.html":{}}}],["super.addchild(else_control",{"_index":2383,"title":{},"body":{"classes/IfElseControlProcedure.html":{}}}],["super.addchild(if_control",{"_index":2382,"title":{},"body":{"classes/IfElseControlProcedure.html":{}}}],["super.addchild(prod",{"_index":2390,"title":{},"body":{"classes/IfElseControlProcedure.html":{}}}],["super.left",{"_index":110,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["super.right",{"_index":111,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["super.update(portdata",{"_index":2429,"title":{},"body":{"classes/InputPort.html":{}}}],["super.update(proddata",{"_index":112,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["supplement",{"_index":4576,"title":{},"body":{"license.html":{}}}],["suppli",{"_index":986,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["support",{"_index":2182,"title":{},"body":{"components/HelpFundamentals.html":{},"components/LandingComponent.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"license.html":{},"modules.html":{}}}],["suppos",{"_index":4300,"title":{},"body":{"index.html":{}}}],["sure",{"_index":4350,"title":{},"body":{"license.html":{}}}],["surpris",{"_index":2144,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["surrend",{"_index":4360,"title":{},"body":{"license.html":{}}}],["surviv",{"_index":4597,"title":{},"body":{"license.html":{}}}],["sustain",{"_index":4700,"title":{},"body":{"license.html":{}}}],["svg",{"_index":4738,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":2649,"title":{},"body":{"components/MobiusAbout.html":{},"components/ProcedureEditorComponent.html":{},"index.html":{}}}],["switch(actionstr",{"_index":3630,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["switch(porttyp",{"_index":4107,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["switch(this._typ",{"_index":1110,"title":{},"body":{"classes/FileUtils.html":{}}}],["switch(typ",{"_index":3051,"title":{},"body":{"components/ModuleboxComponent.html":{},"pipes/PortTypePipe.html":{},"classes/ProcedureFactory.html":{},"miscellaneous/variables.html":{}}}],["system",{"_index":4440,"title":{},"body":{"license.html":{}}}],["systemat",{"_index":4384,"title":{},"body":{"license.html":{}}}],["t",{"_index":3005,"title":{},"body":{"components/ModuleViewerComponent.html":{},"classes/gis_module.html":{}}}],["tabl",{"_index":4183,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":4182,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1035,"title":{},"body":{"classes/FileService.html":{},"components/HelpFundamentals.html":{},"classes/NodeUtils.html":{},"license.html":{}}}],["tangibl",{"_index":4545,"title":{},"body":{"license.html":{}}}],["tap",{"_index":2721,"title":{},"body":{"components/MobiusGalleryComponent.html":{}}}],["technolog",{"_index":4478,"title":{},"body":{"license.html":{}}}],["tediou",{"_index":2075,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["teh",{"_index":2099,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["tell",{"_index":4431,"title":{},"body":{"license.html":{}}}],["templat",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["templateurl",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartRenderUtils.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["temporari",{"_index":1844,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["term",{"_index":4366,"title":{},"body":{"license.html":{}}}],["termin",{"_index":4598,"title":{},"body":{"license.html":{}}}],["text",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"injectables/ConsoleService.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"injectables/LayoutService.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"pipes/PortTypePipe.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["text_format",{"_index":4122,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["text_that_looks_like_numb",{"_index":2049,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["textviewercompon",{"_index":240,"title":{"components/TextViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["that.render_edg",{"_index":1455,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["then((out",{"_index":3243,"title":{},"body":{"classes/NodeUtils.html":{}}}],["then((r",{"_index":3241,"title":{},"body":{"classes/NodeUtils.html":{}}}],["therefor",{"_index":2617,"title":{},"body":{"components/MobiusAbout.html":{},"license.html":{}}}],["thing",{"_index":2113,"title":{},"body":{"components/HelpFundamentals.html":{},"index.html":{},"license.html":{}}}],["third",{"_index":2145,"title":{},"body":{"components/HelpFundamentals.html":{},"license.html":{}}}],["this.$log.log(\"act",{"_index":3573,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["this.$log.log(\"copi",{"_index":3610,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["this.$log.log(\"edg",{"_index":1577,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["this.$log.log(\"error",{"_index":1566,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["this.$log.log(\"new",{"_index":1571,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["this.$log.log(`copi",{"_index":3606,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["this.$log.log(`cut",{"_index":3602,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["this.$log.log(`error",{"_index":3595,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["this.$log.log(`past",{"_index":3609,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["this.$log.log(`r",{"_index":1463,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["this.$log.log(`successfulli",{"_index":3592,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["this.$log.log(ex",{"_index":1572,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["this._author",{"_index":1212,"title":{},"body":{"classes/Flowchart.html":{}}}],["this._buff",{"_index":1886,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["this._centersize=100",{"_index":3940,"title":{},"body":{"components/SettingComponent.html":{}}}],["this._centersize=centers",{"_index":3976,"title":{},"body":{"components/SettingComponent.html":{}}}],["this._centersize=this.dataservice.centers",{"_index":3941,"title":{},"body":{"components/SettingComponent.html":{}}}],["this._centerx=0",{"_index":3931,"title":{},"body":{"components/SettingComponent.html":{}}}],["this._centerx=centerx",{"_index":3973,"title":{},"body":{"components/SettingComponent.html":{}}}],["this._centerx=this.dataservice.centerx",{"_index":3932,"title":{},"body":{"components/SettingComponent.html":{}}}],["this._centery=0",{"_index":3934,"title":{},"body":{"components/SettingComponent.html":{}}}],["this._centery=centeri",{"_index":3974,"title":{},"body":{"components/SettingComponent.html":{}}}],["this._centery=this.dataservice.centeri",{"_index":3935,"title":{},"body":{"components/SettingComponent.html":{}}}],["this._centerz=0",{"_index":3937,"title":{},"body":{"components/SettingComponent.html":{}}}],["this._centerz=centerz",{"_index":3975,"title":{},"body":{"components/SettingComponent.html":{}}}],["this._centerz=this.dataservice.centerz",{"_index":3938,"title":{},"body":{"components/SettingComponent.html":{}}}],["this._children",{"_index":3515,"title":{},"body":{"classes/Procedure.html":{}}}],["this._code_gen",{"_index":2749,"title":{},"body":{"injectables/MobiusService.html":{}}}],["this._codegener",{"_index":538,"title":{},"body":{"injectables/CodeService.html":{}}}],["this._codestr",{"_index":552,"title":{},"body":{"components/CodeViewerComponent.html":{}}}],["this._comput",{"_index":1084,"title":{},"body":{"classes/FileUtils.html":{}}}],["this._connect",{"_index":1076,"title":{},"body":{"classes/FileUtils.html":{}}}],["this._cs.addmessag",{"_index":993,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["this._cs.addmessage(\"flowchart",{"_index":996,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["this._cs.log(ex",{"_index":1000,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["this._dat",{"_index":813,"title":{},"body":{"components/DisplayComponent.html":{}}}],["this._default",{"_index":1079,"title":{},"body":{"classes/FileUtils.html":{}}}],["this._descript",{"_index":1209,"title":{},"body":{"classes/Flowchart.html":{}}}],["this._dis",{"_index":1077,"title":{},"body":{"classes/FileUtils.html":{},"classes/Procedure.html":{}}}],["this._displayed_nod",{"_index":1234,"title":{},"body":{"classes/Flowchart.html":{}}}],["this._edg",{"_index":1217,"title":{},"body":{"classes/Flowchart.html":{}}}],["this._edit",{"_index":1214,"title":{},"body":{"classes/Flowchart.html":{}}}],["this._error",{"_index":3511,"title":{},"body":{"classes/Procedure.html":{}}}],["this._ex",{"_index":3426,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["this._executionaddr",{"_index":1108,"title":{},"body":{"classes/FileUtils.html":{}}}],["this._f",{"_index":1321,"title":{},"body":{"components/FlowchartControlsComponent.html":{},"components/ParameterViewerComponent.html":{}}}],["this._flowchart",{"_index":1562,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["this._flowchart.deleteport(typ",{"_index":1575,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["this._fnobj",{"_index":2560,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this._fs.flowchart",{"_index":987,"title":{},"body":{"injectables/ExecuteService.html":{},"components/FlowchartControlsComponent.html":{}}}],["this._fs.flowchart$.subscribe((fc",{"_index":551,"title":{},"body":{"components/CodeViewerComponent.html":{}}}],["this._fs.flowchart.nodes.push(nodeutils.copy_node(this.active_nod",{"_index":1465,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["this._fs.getflowchart().edit",{"_index":2805,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["this._fs.load_file_from_url(this.filepath",{"_index":2800,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["this._fs.new_flowchart",{"_index":1310,"title":{},"body":{"components/FlowchartControlsComponent.html":{}}}],["this._fs.node$.subscrib",{"_index":928,"title":{},"body":{"components/EditorComponent.html":{}}}],["this._fs.push_flowchart(this.fc",{"_index":1435,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["this._fs.push_node(this.active_nod",{"_index":1437,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["this._fs.push_node(undefin",{"_index":1472,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["this._glob",{"_index":1215,"title":{},"body":{"classes/Flowchart.html":{},"components/PublishSettingsComponent.html":{}}}],["this._globals.splice(index",{"_index":3776,"title":{},"body":{"components/PublishSettingsComponent.html":{}}}],["this._hascomput",{"_index":1116,"title":{},"body":{"classes/FileUtils.html":{}}}],["this._hasdefault",{"_index":1123,"title":{},"body":{"classes/FileUtils.html":{}}}],["this._hasreturn",{"_index":93,"title":{},"body":{"classes/ActionProcedure.html":{}}}],["this._id",{"_index":1059,"title":{},"body":{"classes/FileUtils.html":{},"classes/Procedure.html":{}}}],["this._imageri",{"_index":790,"title":{},"body":{"components/DisplayComponent.html":{}}}],["this._imagerylist",{"_index":781,"title":{},"body":{"components/DisplayComponent.html":{}}}],["this._imagerylist[0",{"_index":821,"title":{},"body":{"components/DisplayComponent.html":{}}}],["this._imagerylist[1",{"_index":825,"title":{},"body":{"components/DisplayComponent.html":{}}}],["this._imagerylist[2",{"_index":830,"title":{},"body":{"components/DisplayComponent.html":{}}}],["this._imagerylist[3",{"_index":791,"title":{},"body":{"components/DisplayComponent.html":{}}}],["this._imagerylist[4",{"_index":833,"title":{},"body":{"components/DisplayComponent.html":{}}}],["this._imagerylist[5",{"_index":835,"title":{},"body":{"components/DisplayComponent.html":{}}}],["this._imagerylist[6",{"_index":837,"title":{},"body":{"components/DisplayComponent.html":{}}}],["this._imagerylist[7",{"_index":842,"title":{},"body":{"components/DisplayComponent.html":{}}}],["this._imagerylist[8",{"_index":845,"title":{},"body":{"components/DisplayComponent.html":{}}}],["this._languag",{"_index":520,"title":{},"body":{"classes/CodeGenerator.html":{}}}],["this._leftcompon",{"_index":113,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/Procedure.html":{}}}],["this._leftcomponent.express",{"_index":713,"title":{},"body":{"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["this._level",{"_index":3509,"title":{},"body":{"classes/Procedure.html":{}}}],["this._linepre=0.05",{"_index":3944,"title":{},"body":{"components/SettingComponent.html":{}}}],["this._linepre=lineprecis",{"_index":3981,"title":{},"body":{"components/SettingComponent.html":{}}}],["this._linepre=this.raycaster.lineprecis",{"_index":3945,"title":{},"body":{"components/SettingComponent.html":{}}}],["this._loadedmodul",{"_index":2286,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["this._m",{"_index":3417,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["this._mb.code_gener",{"_index":988,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["this._mb.process",{"_index":1006,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["this._messag",{"_index":584,"title":{},"body":{"components/ConsoleComponent.html":{},"injectables/ConsoleService.html":{},"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{}}}],["this._messages.push(obj",{"_index":658,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["this._modul",{"_index":522,"title":{},"body":{"classes/CodeGenerator.html":{}}}],["this._modulelist",{"_index":3053,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["this._ms.modul",{"_index":3054,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["this._ms.process",{"_index":3425,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["this._nam",{"_index":1061,"title":{},"body":{"classes/FileUtils.html":{},"classes/Flowchart.html":{}}}],["this._nod",{"_index":1216,"title":{},"body":{"classes/Flowchart.html":{}}}],["this._nodex",{"_index":927,"title":{},"body":{"components/EditorComponent.html":{}}}],["this._nodex.unsubscrib",{"_index":931,"title":{},"body":{"components/EditorComponent.html":{}}}],["this._opt",{"_index":1062,"title":{},"body":{"classes/FileUtils.html":{}}}],["this._outresult",{"_index":4058,"title":{},"body":{"components/TextViewerComponent.html":{}}}],["this._par",{"_index":3520,"title":{},"body":{"classes/Procedure.html":{}}}],["this._pointpre=1",{"_index":3947,"title":{},"body":{"components/SettingComponent.html":{}}}],["this._pointpre=this.raycaster.params.points.threshold",{"_index":3948,"title":{},"body":{"components/SettingComponent.html":{}}}],["this._pointsize=1",{"_index":3950,"title":{},"body":{"components/SettingComponent.html":{}}}],["this._pointsize=this.dataservice.points",{"_index":3951,"title":{},"body":{"components/SettingComponent.html":{}}}],["this._port",{"_index":1823,"title":{},"body":{"components/GeometryViewerComponent.html":{}}}],["this._printtoconsol",{"_index":3518,"title":{},"body":{"classes/Procedure.html":{}}}],["this._process",{"_index":141,"title":{},"body":{"injectables/ActiveNodeService.html":{},"injectables/MobiusService.html":{}}}],["this._properti",{"_index":3809,"title":{},"body":{"components/SelectComponent.html":{}}}],["this._properties.push(_properti",{"_index":3817,"title":{},"body":{"components/SelectComponent.html":{}}}],["this._rightcompon",{"_index":115,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/FunctionProcedure.html":{},"classes/Procedure.html":{}}}],["this._rightcomponent.express",{"_index":714,"title":{},"body":{"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["this._savednod",{"_index":3089,"title":{},"body":{"components/NodeLibraryComponent.html":{}}}],["this._select",{"_index":1074,"title":{},"body":{"classes/FileUtils.html":{},"classes/Flowchart.html":{}}}],["this._selectednod",{"_index":1469,"title":{},"body":{"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{}}}],["this._shadow",{"_index":799,"title":{},"body":{"components/DisplayComponent.html":{}}}],["this._subscript",{"_index":581,"title":{},"body":{"components/ConsoleComponent.html":{},"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{}}}],["this._summari",{"_index":1228,"title":{},"body":{"classes/Flowchart.html":{}}}],["this._sun",{"_index":795,"title":{},"body":{"components/DisplayComponent.html":{}}}],["this._typ",{"_index":1065,"title":{},"body":{"classes/FileUtils.html":{},"classes/InputPort.html":{},"classes/OutputPort.html":{},"classes/Procedure.html":{}}}],["this._url",{"_index":2557,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this._us",{"_index":2751,"title":{},"body":{"injectables/MobiusService.html":{}}}],["this._utc",{"_index":802,"title":{},"body":{"components/DisplayComponent.html":{}}}],["this.action.emit(actionstr",{"_index":3689,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["this.active_nod",{"_index":1433,"title":{},"body":{"classes/FlowchartRenderUtils.html":{},"components/ModuleboxComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["this.active_node.active_procedur",{"_index":3613,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["this.active_node.children[posit",{"_index":3618,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["this.active_node.id",{"_index":1470,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["this.active_view",{"_index":3283,"title":{},"body":{"components/PanelComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["this.alight=this.dataservice.getalight",{"_index":3955,"title":{},"body":{"components/SettingComponent.html":{}}}],["this.all_fil",{"_index":2724,"title":{},"body":{"components/MobiusGalleryComponent.html":{}}}],["this.author",{"_index":2337,"title":{},"body":{"interfaces/IModule.html":{},"classes/Module.html":{}}}],["this.axisvisible=this.dataservice.axi",{"_index":3926,"title":{},"body":{"components/SettingComponent.html":{}}}],["this.canvas.nativeel",{"_index":1873,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["this.changedate(this._date,this._utc",{"_index":815,"title":{},"body":{"components/DisplayComponent.html":{}}}],["this.checkbrows",{"_index":2677,"title":{},"body":{"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{}}}],["this.children.map(function(p",{"_index":3524,"title":{},"body":{"classes/Procedure.html":{}}}],["this.clos",{"_index":3774,"title":{},"body":{"components/PublishSettingsComponent.html":{}}}],["this.consoleservice.clearconsol",{"_index":591,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.consoleservice.getcont",{"_index":585,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.consoleservice.getmessage().subscribe(messag",{"_index":582,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.container.indexof(layout.view",{"_index":3280,"title":{},"body":{"components/PanelComponent.html":{}}}],["this.container.insert(layout.view",{"_index":3285,"title":{},"body":{"components/PanelComponent.html":{}}}],["this.container.move(layout.view",{"_index":3286,"title":{},"body":{"components/PanelComponent.html":{}}}],["this.copiedprod",{"_index":3633,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["this.copiedprod.typ",{"_index":3603,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["this.createmodule(key",{"_index":2940,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["this.createmodule(prop",{"_index":2939,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["this.createview(this.active_view",{"_index":4112,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["this.data",{"_index":779,"title":{},"body":{"components/DisplayComponent.html":{},"components/GSViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/SelectComponent.html":{}}}],["this.dataarr",{"_index":3799,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.dataarr[\"colorproperti",{"_index":3811,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.dataservic",{"_index":727,"title":{},"body":{"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{}}}],["this.dataservice.addgrid(this.gridvis",{"_index":3967,"title":{},"body":{"components/SettingComponent.html":{}}}],["this.dataservice.addraycaster(this.raycast",{"_index":3983,"title":{},"body":{"components/SettingComponent.html":{}}}],["this.dataservice.get_d",{"_index":814,"title":{},"body":{"components/DisplayComponent.html":{}}}],["this.dataservice.get_imageri",{"_index":793,"title":{},"body":{"components/DisplayComponent.html":{}}}],["this.dataservice.get_selectedentity()._id",{"_index":3807,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.dataservice.get_selectedentity().properties[_property.name]._valu",{"_index":3816,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.dataservice.get_shadow",{"_index":801,"title":{},"body":{"components/DisplayComponent.html":{}}}],["this.dataservice.get_sun",{"_index":797,"title":{},"body":{"components/DisplayComponent.html":{}}}],["this.dataservice.get_vidata",{"_index":3800,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.dataservice.getcentersize(centers",{"_index":3980,"title":{},"body":{"components/SettingComponent.html":{}}}],["this.dataservice.getcenterx(centerx",{"_index":3977,"title":{},"body":{"components/SettingComponent.html":{}}}],["this.dataservice.getcentery(centeri",{"_index":3978,"title":{},"body":{"components/SettingComponent.html":{}}}],["this.dataservice.getcenterz(centerz",{"_index":3979,"title":{},"body":{"components/SettingComponent.html":{}}}],["this.dataservice.getcesiumpromis",{"_index":853,"title":{},"body":{"components/DisplayComponent.html":{}}}],["this.dataservice.getgsmodel",{"_index":780,"title":{},"body":{"components/DisplayComponent.html":{},"components/SelectComponent.html":{}}}],["this.dataservice.getmessage().subscribe(messag",{"_index":729,"title":{},"body":{"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{}}}],["this.dataservice.getmod",{"_index":3797,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.dataservice.getscen",{"_index":3954,"title":{},"body":{"components/SettingComponent.html":{}}}],["this.dataservice.getview",{"_index":847,"title":{},"body":{"components/DisplayComponent.html":{},"components/SelectComponent.html":{}}}],["this.dataservice.getviewer().scene.globe.basecolor",{"_index":823,"title":{},"body":{"components/DisplayComponent.html":{}}}],["this.dataservice.getviewer().scene.imagerylay",{"_index":819,"title":{},"body":{"components/DisplayComponent.html":{}}}],["this.dataservice.set_date(this._d",{"_index":816,"title":{},"body":{"components/DisplayComponent.html":{}}}],["this.dataservice.set_imagery(_imageri",{"_index":817,"title":{},"body":{"components/DisplayComponent.html":{}}}],["this.dataservice.set_shadow(this._shadow",{"_index":800,"title":{},"body":{"components/DisplayComponent.html":{}}}],["this.dataservice.set_sun(this._sun",{"_index":796,"title":{},"body":{"components/DisplayComponent.html":{}}}],["this.dataservice.set_utc(this._utc",{"_index":804,"title":{},"body":{"components/DisplayComponent.html":{}}}],["this.dataservice.setgsmodel(data",{"_index":1814,"title":{},"body":{"components/GSViewerComponent.html":{},"components/MobiuscesiumComponent.html":{}}}],["this.dataservice.setmode(this.mod",{"_index":2832,"title":{},"body":{"components/MobiuscesiumComponent.html":{}}}],["this.dialog.open(parametersettingsdialogcompon",{"_index":3320,"title":{},"body":{"components/ParameterEditorComponent.html":{},"components/PublishSettingsComponent.html":{}}}],["this.dialog.open(publishsettingscompon",{"_index":1330,"title":{},"body":{"components/FlowchartControlsComponent.html":{}}}],["this.dialogref.clos",{"_index":3374,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{},"components/PublishSettingsComponent.html":{}}}],["this.dialogref.close('new",{"_index":1026,"title":{},"body":{"components/FileLoadDialogComponent.html":{}}}],["this.dialogref.close(act",{"_index":1027,"title":{},"body":{"components/FileLoadDialogComponent.html":{}}}],["this.drawedg",{"_index":1876,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["this.edge.inputposit",{"_index":1897,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["this.edge.inputposition.i",{"_index":1885,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["this.edge.inputposition.x",{"_index":1913,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["this.edge.inputposition.x);//this.edge.outputposition[0",{"_index":1888,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["this.edge.outputposit",{"_index":1898,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["this.edge.outputposition.i",{"_index":1894,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["this.edge.outputposition.x",{"_index":1912,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["this.edge.outputposition.x));//this.edge.outputposition[0",{"_index":1891,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["this.edit",{"_index":2804,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["this.fc",{"_index":1431,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["this.fc.edges.map",{"_index":1439,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["this.fc.nodes.map",{"_index":1459,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["this.fc.nodes[edge.input_address[0",{"_index":1442,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["this.fcx.asobserv",{"_index":1548,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["this.fcx.next",{"_index":1574,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["this.fcx.next(flowchartutils.add_edge(this.flowchart",{"_index":1570,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["this.fcx.next(flowchartutils.disconnect_port(this._flowchart",{"_index":1573,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["this.fileinput.nativeel",{"_index":1303,"title":{},"body":{"components/FlowchartControlsComponent.html":{}}}],["this.fileinput.nativeelement.files[0",{"_index":1315,"title":{},"body":{"components/FlowchartControlsComponent.html":{}}}],["this.filepath",{"_index":2798,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["this.framevisible=this.dataservice.fram",{"_index":3928,"title":{},"body":{"components/SettingComponent.html":{}}}],["this.funct",{"_index":3006,"title":{},"body":{"components/ModuleViewerComponent.html":{}}}],["this.functions.concat(fn_nam",{"_index":3007,"title":{},"body":{"components/ModuleViewerComponent.html":{}}}],["this.fw",{"_index":3769,"title":{},"body":{"components/PublishSettingsComponent.html":{}}}],["this.fw._globals.length",{"_index":3771,"title":{},"body":{"components/PublishSettingsComponent.html":{}}}],["this.fw.glob",{"_index":3777,"title":{},"body":{"components/PublishSettingsComponent.html":{}}}],["this.fw.globals.push(inputport",{"_index":3772,"title":{},"body":{"components/PublishSettingsComponent.html":{}}}],["this.getauthor(mod",{"_index":2947,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["this.getauthor(mod1",{"_index":2956,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["this.getauthor(mod2",{"_index":2957,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["this.getflowchart(params.id",{"_index":2799,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["this.getheight",{"_index":1882,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["this.getinputtypename(typ",{"_index":3451,"title":{},"body":{"pipes/PortTypePipe.html":{}}}],["this.getip",{"_index":644,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["this.getleft",{"_index":1878,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["this.getname(mod",{"_index":2945,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["this.getname(mod1",{"_index":2950,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["this.getname(mod2",{"_index":2951,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["this.getoutputtypename(typ",{"_index":3452,"title":{},"body":{"pipes/PortTypePipe.html":{}}}],["this.gettop",{"_index":1877,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["this.getvalu",{"_index":1097,"title":{},"body":{"classes/FileUtils.html":{}}}],["this.getversion(mod",{"_index":2946,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["this.getversion(mod1",{"_index":2953,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["this.getversion(mod2",{"_index":2954,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["this.getwidth",{"_index":1880,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["this.gridvis",{"_index":3956,"title":{},"body":{"components/SettingComponent.html":{}}}],["this.gridvisible=this.dataservice.grid",{"_index":3925,"title":{},"body":{"components/SettingComponent.html":{}}}],["this.gs_dummy_data",{"_index":1824,"title":{},"body":{"components/GeometryViewerComponent.html":{}}}],["this.handlecopi",{"_index":3605,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["this.handlecut",{"_index":3601,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["this.handlecutcopypaste(key",{"_index":3586,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["this.handledelet",{"_index":3591,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["this.handlemove(key",{"_index":3588,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["this.handlepast",{"_index":3608,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["this.haschildren",{"_index":3510,"title":{},"body":{"classes/Procedure.html":{}}}],["this.height",{"_index":1881,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["this.helpavail",{"_index":2288,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["this.http.get(constants.gallery_url).subscribe(data",{"_index":2723,"title":{},"body":{"components/MobiusGalleryComponent.html":{}}}],["this.http.get(urlstr",{"_index":3387,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["this.hu",{"_index":3916,"title":{},"body":{"components/SettingComponent.html":{}}}],["this.hue=this.dataservice.hu",{"_index":3917,"title":{},"body":{"components/SettingComponent.html":{}}}],["this.id",{"_index":3808,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.imvisible=this.dataservice.imvis",{"_index":1818,"title":{},"body":{"components/GSViewerComponent.html":{}}}],["this.input",{"_index":3361,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["this.input.opt",{"_index":3372,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["this.input.setdefaultvalue(undefin",{"_index":3369,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["this.input.setdefaultvalue(valu",{"_index":3368,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["this.inputportopt",{"_index":3323,"title":{},"body":{"components/ParameterEditorComponent.html":{},"components/PublishSettingsComponent.html":{}}}],["this.isvalid",{"_index":1899,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["this.isvis",{"_index":933,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.layout",{"_index":2547,"title":{},"body":{"injectables/LayoutService.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{}}}],["this.layout.content.main",{"_index":2544,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.layout.content.side[panel_id",{"_index":2545,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.layout.mod",{"_index":2566,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.layout.size.bottom",{"_index":2569,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.layout.size.middl",{"_index":2568,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.layout.size.top",{"_index":2567,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.layout.views[eviewer.editor",{"_index":2535,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.layout.views[eviewer.flowchart",{"_index":2539,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.layout.views[eviewer.paramet",{"_index":2541,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.layout.views[eviewer.view",{"_index":2537,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.layout.views[viewer_nam",{"_index":2546,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.layoutservice.getview(this.panel_id",{"_index":3279,"title":{},"body":{"components/PanelComponent.html":{}}}],["this.layoutservice.maximize(this.panel_id",{"_index":3288,"title":{},"body":{"components/PanelComponent.html":{}}}],["this.layoutservice.minimize(this.panel_id",{"_index":3290,"title":{},"body":{"components/PanelComponent.html":{}}}],["this.layoutservice.restore(this.panel_id",{"_index":3292,"title":{},"body":{"components/PanelComponent.html":{}}}],["this.layoutservice.seteditor",{"_index":2692,"title":{},"body":{"components/MobiusEditorComponent.html":{}}}],["this.layoutservice.setview",{"_index":2693,"title":{},"body":{"components/MobiusEditorComponent.html":{}}}],["this.layoutservice.showconsol",{"_index":1004,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["this.layoutservice.showhelp({modul",{"_index":3066,"title":{},"body":{"components/ModuleboxComponent.html":{}}}],["this.left",{"_index":1479,"title":{},"body":{"classes/FlowchartRenderUtils.html":{},"components/GraphEdgeComponent.html":{}}}],["this.light",{"_index":3922,"title":{},"body":{"components/SettingComponent.html":{}}}],["this.lightness=this.dataservice.light",{"_index":3924,"title":{},"body":{"components/SettingComponent.html":{}}}],["this.load_flowchart_from_string(json.stringify(r",{"_index":1565,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["this.load_funct",{"_index":2886,"title":{},"body":{"injectables/ModuleService.html":{}}}],["this.localedatetimeformatt",{"_index":873,"title":{},"body":{"components/DisplayComponent.html":{}}}],["this.localedatetimeformatter(tim",{"_index":879,"title":{},"body":{"components/DisplayComponent.html":{}}}],["this.localetimeformatt",{"_index":875,"title":{},"body":{"components/DisplayComponent.html":{}}}],["this.mod",{"_index":2830,"title":{},"body":{"components/MobiuscesiumComponent.html":{},"components/SelectComponent.html":{}}}],["this.module_servic",{"_index":3001,"title":{},"body":{"components/ModuleViewerComponent.html":{}}}],["this.module_service.getmodule(\"gi",{"_index":3003,"title":{},"body":{"components/ModuleViewerComponent.html":{}}}],["this.myscrollcontainer.nativeelement.scrollheight",{"_index":589,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.myscrollcontainer.nativeelement.scrolltop",{"_index":588,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.nam",{"_index":1100,"title":{},"body":{"classes/FileUtils.html":{},"interfaces/IModule.html":{},"classes/Module.html":{}}}],["this.new_flowchart",{"_index":1309,"title":{},"body":{"components/FlowchartControlsComponent.html":{}}}],["this.nod",{"_index":1769,"title":{},"body":{"classes/FunctionProcedure.html":{}}}],["this.node.input",{"_index":1773,"title":{},"body":{"classes/FunctionProcedure.html":{}}}],["this.node.inputs.map(function(inp",{"_index":1774,"title":{},"body":{"classes/FunctionProcedure.html":{}}}],["this.node.outputs.map(function(output",{"_index":1777,"title":{},"body":{"classes/FunctionProcedure.html":{}}}],["this.notifi",{"_index":583,"title":{},"body":{"components/ConsoleComponent.html":{},"components/HelpViewerComponent.html":{}}}],["this.notify(message.text",{"_index":730,"title":{},"body":{"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{}}}],["this.nx.asobserv",{"_index":1550,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["this.onaction(\"copi",{"_index":3687,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["this.onaction(\"cut",{"_index":3686,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["this.onaction(\"delet",{"_index":3685,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["this.onaction(\"past",{"_index":3688,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["this.onchangeimagery(this._imageri",{"_index":792,"title":{},"body":{"components/DisplayComponent.html":{}}}],["this.onselect($ev",{"_index":3684,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["this.opt",{"_index":1091,"title":{},"body":{"classes/FileUtils.html":{},"components/ParameterSettingsDialogComponent.html":{}}}],["this.opts[prop",{"_index":3371,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["this.pan_mod",{"_index":1481,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["this.pointvis",{"_index":3984,"title":{},"body":{"components/SettingComponent.html":{}}}],["this.pointvisible=this.dataservice.point",{"_index":3929,"title":{},"body":{"components/SettingComponent.html":{}}}],["this.port",{"_index":415,"title":{},"body":{"components/CesiumViewerComponent.html":{},"classes/FunctionProcedure.html":{}}}],["this.port.nam",{"_index":1775,"title":{},"body":{"classes/FunctionProcedure.html":{}}}],["this.process",{"_index":2683,"title":{},"body":{"components/MobiusEditorComponent.html":{}}}],["this.prod",{"_index":3682,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["this.push_fs(this._f",{"_index":999,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["this.r.resolvecomponentfactory(compon",{"_index":4116,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["this.raycaster.lineprecision=lineprecis",{"_index":3982,"title":{},"body":{"components/SettingComponent.html":{}}}],["this.raycaster=this.dataservice.getraycast",{"_index":3942,"title":{},"body":{"components/SettingComponent.html":{}}}],["this.render_edg",{"_index":1462,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["this.render_flowchart",{"_index":1432,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["this.render_node(nod",{"_index":4057,"title":{},"body":{"components/TextViewerComponent.html":{}}}],["this.root.active_procedur",{"_index":3681,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["this.rout",{"_index":2795,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["this.router.params.subscribe(param",{"_index":2797,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["this.s4",{"_index":2362,"title":{},"body":{"classes/IdGenerator.html":{}}}],["this.sanit",{"_index":2282,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["this.satur",{"_index":3919,"title":{},"body":{"components/SettingComponent.html":{}}}],["this.saturation=this.dataservice.satur",{"_index":3920,"title":{},"body":{"components/SettingComponent.html":{}}}],["this.scen",{"_index":3953,"title":{},"body":{"components/SettingComponent.html":{}}}],["this.scene.add",{"_index":3964,"title":{},"body":{"components/SettingComponent.html":{}}}],["this.scene.remove(this.scene.getobjectbyname(\"gridhelp",{"_index":3966,"title":{},"body":{"components/SettingComponent.html":{}}}],["this.scrolltobottom",{"_index":586,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.sendmessag",{"_index":659,"title":{},"body":{"injectables/ConsoleService.html":{}}}],["this.sendmessage(\"consol",{"_index":2563,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.sendmessage(\"layout",{"_index":2555,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.sendmessage(\"modul",{"_index":2561,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.set_view(nod",{"_index":4104,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["this.setcomputedvalue(valu",{"_index":1101,"title":{},"body":{"classes/FileUtils.html":{}}}],["this.setdefaultvalue(50",{"_index":1096,"title":{},"body":{"classes/FileUtils.html":{}}}],["this.setdefaultvalue(type.valu",{"_index":2427,"title":{},"body":{"classes/InputPort.html":{}}}],["this.setdimens",{"_index":1900,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["this.setleftcomponent(left",{"_index":2386,"title":{},"body":{"classes/IfElseControlProcedure.html":{}}}],["this.setmodel(this.data",{"_index":1816,"title":{},"body":{"components/GSViewerComponent.html":{},"components/MobiuscesiumComponent.html":{}}}],["this.shadowvisible=this.dataservice.shadow",{"_index":3927,"title":{},"body":{"components/SettingComponent.html":{}}}],["this.slider_st",{"_index":2801,"title":{},"body":{"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{}}}],["this.statechang",{"_index":145,"title":{},"body":{"injectables/ActiveNodeService.html":{},"injectables/MobiusService.html":{}}}],["this.statechanged.emit(this._process",{"_index":144,"title":{},"body":{"injectables/ActiveNodeService.html":{},"injectables/MobiusService.html":{}}}],["this.sub",{"_index":2796,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["this.sub.unsubscrib",{"_index":2807,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["this.subject.asobserv",{"_index":652,"title":{},"body":{"injectables/ConsoleService.html":{},"injectables/LayoutService.html":{}}}],["this.subject.next",{"_index":651,"title":{},"body":{"injectables/ConsoleService.html":{},"injectables/LayoutService.html":{}}}],["this.subscriptions.map(function(",{"_index":417,"title":{},"body":{"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"classes/FlowchartRenderUtils.html":{},"components/GeometryViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["this.subscriptions.push",{"_index":550,"title":{},"body":{"components/CodeViewerComponent.html":{}}}],["this.subscriptions.push(this._fs.flowchart$.subscribe((fc",{"_index":1429,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["this.subscriptions.push(this._fs.node$.subscrib",{"_index":414,"title":{},"body":{"components/CesiumViewerComponent.html":{},"classes/FlowchartRenderUtils.html":{},"components/GeometryViewerComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["this.subscriptions.push(this.layoutservice.getmessage().subscribe(messag",{"_index":3278,"title":{},"body":{"components/PanelComponent.html":{}}}],["this.support",{"_index":2682,"title":{},"body":{"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{}}}],["this.switchviewer(\"consol",{"_index":1005,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["this.temporari",{"_index":1906,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["this.toggl",{"_index":2680,"title":{},"body":{"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{}}}],["this.top",{"_index":1480,"title":{},"body":{"classes/FlowchartRenderUtils.html":{},"components/GraphEdgeComponent.html":{}}}],["this.typ",{"_index":3359,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["this.upd",{"_index":1007,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["this.update_view",{"_index":4110,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["this.update_view(nod",{"_index":930,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.updateview",{"_index":3277,"title":{},"body":{"components/PanelComponent.html":{}}}],["this.valu",{"_index":1117,"title":{},"body":{"classes/FileUtils.html":{},"classes/InputPort.html":{}}}],["this.vc.detach",{"_index":4113,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["this.vc.insert(this.view",{"_index":4114,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["this.view",{"_index":3798,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.viewcontainerindex",{"_index":2564,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.viewer_mod",{"_index":4120,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["this.views[this.active_view",{"_index":4111,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["this.vis",{"_index":2803,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["this.width",{"_index":1879,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["this.zoom",{"_index":1478,"title":{},"body":{"classes/FlowchartRenderUtils.html":{}}}],["this[\"virtu",{"_index":2381,"title":{},"body":{"classes/IfElseControlProcedure.html":{}}}],["those",{"_index":4390,"title":{},"body":{"license.html":{}}}],["though",{"_index":4578,"title":{},"body":{"license.html":{}}}],["thought",{"_index":1994,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["thre",{"_index":701,"title":{},"body":{"modules/CustomMaterialModule.html":{}}}],["threaten",{"_index":4395,"title":{},"body":{"license.html":{}}}],["three",{"_index":1729,"title":{},"body":{"classes/Frame.html":{},"interfaces/HasIsPlanar.html":{},"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"components/SettingComponent.html":{},"components/ViewerContainerComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"classes/gis_module.html":{},"license.html":{}}}],["three.boxgeometry(s",{"_index":1750,"title":{},"body":{"classes/Frame.html":{},"interfaces/HasIsPlanar.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"classes/gis_module.html":{}}}],["three.gridhelp",{"_index":3959,"title":{},"body":{"components/SettingComponent.html":{}}}],["three.gridhelper(centersize,centers",{"_index":3970,"title":{},"body":{"components/SettingComponent.html":{}}}],["three.hemispherelight",{"_index":3884,"title":{},"body":{"components/SettingComponent.html":{}}}],["three.mesh(new",{"_index":1749,"title":{},"body":{"classes/Frame.html":{},"interfaces/HasIsPlanar.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"classes/gis_module.html":{}}}],["three.raycast",{"_index":3893,"title":{},"body":{"components/SettingComponent.html":{}}}],["three.scen",{"_index":3896,"title":{},"body":{"components/SettingComponent.html":{}}}],["three.vector3(0,1,0",{"_index":3962,"title":{},"body":{"components/SettingComponent.html":{}}}],["through",{"_index":2146,"title":{},"body":{"components/HelpFundamentals.html":{},"license.html":{}}}],["throw",{"_index":461,"title":{},"body":{"classes/CodeFactory.html":{},"classes/CodeGenerator.html":{},"classes/FlowchartRenderUtils.html":{},"classes/FlowchartUtils.html":{},"classes/NodeUtils.html":{},"classes/ProcedureFactory.html":{},"classes/ProcedureUtils.html":{}}}],["thu",{"_index":2648,"title":{},"body":{"components/MobiusAbout.html":{},"license.html":{}}}],["tiles.a.ssl.fastly.net/terrain",{"_index":832,"title":{},"body":{"components/DisplayComponent.html":{}}}],["tiles.a.ssl.fastly.net/ton",{"_index":829,"title":{},"body":{"components/DisplayComponent.html":{}}}],["time",{"_index":878,"title":{},"body":{"components/DisplayComponent.html":{},"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"license.html":{}}}],["time1",{"_index":1682,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["time1)/1000",{"_index":1689,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["time2",{"_index":1687,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["time_taken",{"_index":1688,"title":{},"body":{"classes/FlowchartUtils.html":{},"interfaces/IGraphNode.html":{}}}],["time_taken}",{"_index":1691,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["titl",{"_index":2375,"title":{},"body":{"classes/IfElseControlProcedure.html":{}}}],["today",{"_index":806,"title":{},"body":{"components/DisplayComponent.html":{}}}],["today.getfullyear",{"_index":808,"title":{},"body":{"components/DisplayComponent.html":{}}}],["todo",{"_index":1082,"title":{},"body":{"classes/FileUtils.html":{},"classes/FlowchartRenderUtils.html":{},"classes/FlowchartUtils.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"classes/NodeUtils.html":{},"components/ParameterViewerComponent.html":{},"classes/Procedure.html":{},"classes/ProcedureUtils.html":{},"components/PublishSettingsComponent.html":{}}}],["togeth",{"_index":2582,"title":{},"body":{"components/MobiusAbout.html":{}}}],["toggl",{"_index":2665,"title":{},"body":{"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{}}}],["toggle.innerhtml",{"_index":2839,"title":{},"body":{"components/MobiuscesiumComponent.html":{}}}],["toggle.style.left=\"0px",{"_index":2838,"title":{},"body":{"components/MobiuscesiumComponent.html":{}}}],["toggle.style.left=\"280px",{"_index":2840,"title":{},"body":{"components/MobiuscesiumComponent.html":{}}}],["toggle=document.getelementbyid(\"toggl",{"_index":2836,"title":{},"body":{"components/MobiuscesiumComponent.html":{}}}],["togglemenu",{"_index":2757,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["togglemod",{"_index":2479,"title":{},"body":{"injectables/LayoutService.html":{}}}],["toggleslid",{"_index":2812,"title":{},"body":{"components/MobiuscesiumComponent.html":{}}}],["tomorrow",{"_index":862,"title":{},"body":{"components/DisplayComponent.html":{}}}],["tomorrow.clon",{"_index":869,"title":{},"body":{"components/DisplayComponent.html":{}}}],["tomorrow.daynumb",{"_index":864,"title":{},"body":{"components/DisplayComponent.html":{}}}],["toner\",\"stamen",{"_index":783,"title":{},"body":{"components/DisplayComponent.html":{}}}],["toner(lite)\",\"terrain(standard)\",\"terrain(background",{"_index":784,"title":{},"body":{"components/DisplayComponent.html":{}}}],["tool",{"_index":2580,"title":{},"body":{"components/MobiusAbout.html":{},"license.html":{}}}],["toolwindow'},{'nam",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["toolwindow/groups.compon",{"_index":1791,"title":{},"body":{"modules/GSViewer.html":{}}}],["toolwindow/toolwindow.compon",{"_index":1790,"title":{},"body":{"modules/GSViewer.html":{}}}],["toolwindowcompon",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"modules/GSViewer.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["top",{"_index":1418,"title":{},"body":{"classes/FlowchartRenderUtils.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"injectables/LayoutService.html":{}}}],["tostr",{"_index":478,"title":{},"body":{"classes/CodeGenerator.html":{}}}],["tostring(16",{"_index":2360,"title":{},"body":{"classes/IdGenerator.html":{}}}],["trackbyfn",{"_index":3656,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["trackbyfn(procedur",{"_index":3676,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["trade",{"_index":4590,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":4589,"title":{},"body":{"license.html":{}}}],["transact",{"_index":4563,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":4425,"title":{},"body":{"license.html":{}}}],["transform",{"_index":3446,"title":{},"body":{"pipes/PortTypePipe.html":{},"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{}}}],["transform(typ",{"_index":3447,"title":{},"body":{"pipes/PortTypePipe.html":{}}}],["transform(valu",{"_index":4025,"title":{},"body":{"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{}}}],["transit",{"_index":2779,"title":{},"body":{"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{}}}],["transition(\"slide_in",{"_index":2792,"title":{},"body":{"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{}}}],["transition('slide_in",{"_index":2789,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["transmiss",{"_index":4541,"title":{},"body":{"license.html":{}}}],["travel",{"_index":2598,"title":{},"body":{"components/MobiusAbout.html":{}}}],["treat",{"_index":4577,"title":{},"body":{"license.html":{}}}],["treati",{"_index":4485,"title":{},"body":{"license.html":{}}}],["tree",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"dependencies.html":{}}}],["treemodul",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["tri",{"_index":587,"title":{},"body":{"components/ConsoleComponent.html":{},"injectables/ConsoleService.html":{},"injectables/ExecuteService.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"components/GSViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpViewerComponent.html":{},"components/LandingComponent.html":{},"components/MobiuscesiumComponent.html":{},"classes/NodeUtils.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"classes/ProcedureUtils.html":{},"components/TextViewerComponent.html":{}}}],["trigger",{"_index":2776,"title":{},"body":{"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ProcedureEditorComponent.html":{}}}],["trigger(\"slide_in_out",{"_index":2821,"title":{},"body":{"components/MobiuscesiumComponent.html":{}}}],["trigger('slide_in_out",{"_index":2783,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["true",{"_index":92,"title":{},"body":{"classes/ActionProcedure.html":{},"injectables/ConsoleService.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/FileUtils.html":{},"classes/Flowchart.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartUtils.html":{},"classes/ForLoopControlProcedure.html":{},"classes/Frame.html":{},"classes/FunctionProcedure.html":{},"interfaces/HasIsPlanar.html":{},"components/HelpFundamentals.html":{},"components/HelpViewerComponent.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"injectables/LayoutService.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{},"classes/ModuleUtils.html":{},"classes/NodeUtils.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterViewerComponent.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"classes/Procedure.html":{},"classes/WhileControlProcedure.html":{},"classes/gis_module.html":{},"miscellaneous/variables.html":{}}}],["turf",{"_index":4220,"title":{},"body":{"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["turf/turf",{"_index":4194,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":1634,"title":{},"body":{"classes/FlowchartUtils.html":{},"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"index.html":{},"license.html":{}}}],["type",{"_index":35,"title":{},"body":{"classes/ActionProcedure.html":{},"injectables/ActiveNodeService.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"classes/CodeFactory.html":{},"classes/CodeGenerator.html":{},"injectables/CodeService.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"injectables/ConsoleService.html":{},"classes/DataProcedure.html":{},"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"injectables/ExecuteService.html":{},"components/FileLoadDialogComponent.html":{},"classes/FileService.html":{},"classes/FileUtils.html":{},"classes/Flowchart.html":{},"classes/FlowchartConnectionUtils.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartReader.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"classes/FlowchartWriter.html":{},"classes/ForLoopControlProcedure.html":{},"classes/Frame.html":{},"classes/FunctionProcedure.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpViewerComponent.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IComponent.html":{},"interfaces/IEdge.html":{},"interfaces/IFlowchart.html":{},"interfaces/IGraphNode.html":{},"interfaces/IPort.html":{},"interfaces/IProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/InputPort.html":{},"injectables/LayoutService.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"injectables/MobiusService.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"classes/ModuleUtils.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"injectables/NodeLibraryService.html":{},"classes/NodeUtils.html":{},"classes/OutputPort.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"pipes/PortTypePipe.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{},"classes/ProcedureFactory.html":{},"components/ProcedureItemComponent.html":{},"classes/ProcedureUtils.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{},"classes/StatementProcedure.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"classes/WhileControlProcedure.html":{},"coverage.html":{},"classes/gis_module.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["type(valu",{"_index":1088,"title":{},"body":{"classes/FileUtils.html":{},"classes/Procedure.html":{}}}],["type.nam",{"_index":2426,"title":{},"body":{"classes/InputPort.html":{}}}],["type.tostring().substring(0",{"_index":3175,"title":{},"body":{"classes/NodeUtils.html":{}}}],["type:{{pa.type.nam",{"_index":2298,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["type:{{pa.type.typ",{"_index":2299,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["typeof(submod",{"_index":2938,"title":{},"body":{"classes/ModuleUtils.html":{}}}],["typeof(this._typ",{"_index":1067,"title":{},"body":{"classes/FileUtils.html":{}}}],["typeof(v",{"_index":4075,"title":{},"body":{"components/TextViewerComponent.html":{}}}],["typeof(val[k",{"_index":4070,"title":{},"body":{"components/TextViewerComponent.html":{}}}],["types/thre",{"_index":4196,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":4234,"title":{},"body":{"dependencies.html":{}}}],["typic",{"_index":2008,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"license.html":{}}}],["ui",{"_index":310,"title":{},"body":{"modules/AppModule.html":{},"injectables/LayoutService.html":{},"index.html":{}}}],["unaccept",{"_index":4388,"title":{},"body":{"license.html":{}}}],["undefin",{"_index":91,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/FileUtils.html":{},"classes/FlowchartRenderUtils.html":{},"classes/FlowchartUtils.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/InputPort.html":{},"injectables/LayoutService.html":{},"components/MobiusEditorComponent.html":{},"components/MobiuscesiumComponent.html":{},"injectables/ModuleService.html":{},"classes/ModuleUtils.html":{},"components/ModuleboxComponent.html":{},"classes/NodeUtils.html":{},"classes/OutputPort.html":{},"components/ParameterEditorComponent.html":{},"pipes/PortTypePipe.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{},"classes/ProcedureUtils.html":{},"components/SettingComponent.html":{},"classes/StatementProcedure.html":{},"components/ViewerContainerComponent.html":{},"classes/WhileControlProcedure.html":{}}}],["undefined&&this.dataservice.get_selectedent",{"_index":3804,"title":{},"body":{"components/SelectComponent.html":{}}}],["undefined&&this.mod",{"_index":3805,"title":{},"body":{"components/SelectComponent.html":{}}}],["undefined,//data.categori",{"_index":105,"title":{},"body":{"classes/ActionProcedure.html":{}}}],["under",{"_index":2623,"title":{},"body":{"components/MobiusAbout.html":{},"license.html":{}}}],["underneath",{"_index":2628,"title":{},"body":{"components/MobiusAbout.html":{}}}],["understand",{"_index":1940,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["undon",{"_index":2611,"title":{},"body":{"components/MobiusAbout.html":{}}}],["unexpect",{"_index":3413,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["unfulfil",{"_index":1679,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["uniform",{"_index":4293,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":2711,"title":{},"body":{"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{}}}],["unless",{"_index":4557,"title":{},"body":{"license.html":{}}}],["unlimit",{"_index":4458,"title":{},"body":{"license.html":{}}}],["unmodifi",{"_index":4414,"title":{},"body":{"license.html":{}}}],["unnecessari",{"_index":4473,"title":{},"body":{"license.html":{}}}],["unpack",{"_index":4575,"title":{},"body":{"license.html":{}}}],["until",{"_index":2602,"title":{},"body":{"components/MobiusAbout.html":{},"license.html":{}}}],["up",{"_index":2094,"title":{},"body":{"components/HelpFundamentals.html":{},"components/ProcedureEditorComponent.html":{},"classes/ProcedureUtils.html":{},"miscellaneous/enumerations.html":{}}}],["updat",{"_index":28,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/FileUtils.html":{},"classes/FlowchartUtils.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"interfaces/IPort.html":{},"interfaces/IProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/InputPort.html":{},"classes/OutputPort.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{},"classes/StatementProcedure.html":{},"components/ViewerContainerComponent.html":{},"classes/WhileControlProcedure.html":{},"index.html":{},"license.html":{}}}],["update(portdata",{"_index":1063,"title":{},"body":{"classes/FileUtils.html":{},"interfaces/IPort.html":{},"classes/InputPort.html":{},"classes/OutputPort.html":{}}}],["update(proddata",{"_index":66,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"interfaces/IProcedure.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/Procedure.html":{},"classes/StatementProcedure.html":{},"classes/WhileControlProcedure.html":{}}}],["update_code_gener",{"_index":1508,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["update_code_generator(valu",{"_index":1536,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["update_dependent_input",{"_index":1586,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["update_dependent_inputs(flowchart",{"_index":1612,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["update_modul",{"_index":1509,"title":{},"body":{"injectables/FlowchartService.html":{}}}],["update_nod",{"_index":3099,"title":{},"body":{"injectables/NodeLibraryService.html":{}}}],["update_properti",{"_index":2330,"title":{},"body":{"interfaces/IGraphNode.html":{}}}],["update_properties(data",{"_index":2332,"title":{},"body":{"interfaces/IGraphNode.html":{}}}],["update_view",{"_index":918,"title":{},"body":{"components/EditorComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["update_view(nod",{"_index":922,"title":{},"body":{"components/EditorComponent.html":{}}}],["update_view(node:igraphnod",{"_index":932,"title":{},"body":{"components/EditorComponent.html":{}}}],["updatedefaultvalu",{"_index":3335,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["updatedefaultvalue($ev",{"_index":3349,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["updateparam",{"_index":1756,"title":{},"body":{"classes/FunctionProcedure.html":{}}}],["updateprocedur",{"_index":3657,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["updateprocedure($ev",{"_index":3678,"title":{},"body":{"components/ProcedureItemComponent.html":{}}}],["updateslideropt",{"_index":3336,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["updateslideropts($ev",{"_index":3351,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{}}}],["updateurl",{"_index":3337,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{}}}],["updateurl($ev",{"_index":3353,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{}}}],["updateview",{"_index":3261,"title":{},"body":{"components/PanelComponent.html":{}}}],["urban",{"_index":2447,"title":{},"body":{"components/LandingComponent.html":{}}}],["url",{"_index":437,"title":{},"body":{"components/CesiumViewerComponent.html":{},"components/DisplayComponent.html":{},"classes/FileService.html":{},"components/FlowchartControlsComponent.html":{},"injectables/FlowchartService.html":{},"classes/NodeUtils.html":{},"components/ParameterSettingsDialogComponent.html":{},"pipes/PortTypePipe.html":{},"miscellaneous/enumerations.html":{}}}],["urlstr",{"_index":3238,"title":{},"body":{"classes/NodeUtils.html":{},"components/ParameterSettingsDialogComponent.html":{}}}],["us",{"_index":1338,"title":{},"body":{"components/FlowchartControlsComponent.html":{},"components/HelpFundamentals.html":{},"components/LandingComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusViewerComponent.html":{},"classes/NodeUtils.html":{},"index.html":{},"license.html":{}}}],["usag",{"_index":4030,"title":{},"body":{"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{}}}],["user",{"_index":2234,"title":{},"body":{"components/HelpFundamentals.html":{},"components/LandingComponent.html":{},"components/MobiusAbout.html":{},"injectables/MobiusService.html":{},"index.html":{},"license.html":{}}}],["user(usernam",{"_index":2752,"title":{},"body":{"injectables/MobiusService.html":{}}}],["usernam",{"_index":2748,"title":{},"body":{"injectables/MobiusService.html":{}}}],["usetransit",{"_index":2485,"title":{},"body":{"injectables/LayoutService.html":{}}}],["utc",{"_index":910,"title":{},"body":{"components/DisplayComponent.html":{}}}],["utf",{"_index":1319,"title":{},"body":{"components/FlowchartControlsComponent.html":{}}}],["util",{"_index":1467,"title":{},"body":{"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{}}}],["uuid",{"_index":1598,"title":{},"body":{"classes/FlowchartUtils.html":{}}}],["v0.9.19",{"_index":2258,"title":{},"body":{"components/HelpModel.html":{}}}],["v2.0",{"_index":2575,"title":{},"body":{"components/MenuComponent.html":{}}}],["val",{"_index":4062,"title":{},"body":{"components/TextViewerComponent.html":{}}}],["val.length",{"_index":4065,"title":{},"body":{"components/TextViewerComponent.html":{}}}],["val.tostr",{"_index":4067,"title":{},"body":{"components/TextViewerComponent.html":{}}}],["val[k",{"_index":4073,"title":{},"body":{"components/TextViewerComponent.html":{}}}],["val[k].length",{"_index":4072,"title":{},"body":{"components/TextViewerComponent.html":{}}}],["valid",{"_index":1655,"title":{},"body":{"classes/FlowchartUtils.html":{},"classes/NodeUtils.html":{},"license.html":{}}}],["valid_input",{"_index":1369,"title":{},"body":{"classes/FlowchartReader.html":{}}}],["validatekeystrok",{"_index":3541,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["validatekeystroke(ev",{"_index":3558,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["valu",{"_index":47,"title":{},"body":{"classes/ActionProcedure.html":{},"injectables/ActiveNodeService.html":{},"components/CesiumViewerComponent.html":{},"injectables/CodeService.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"injectables/ConsoleService.html":{},"classes/DataProcedure.html":{},"components/EditorComponent.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"injectables/ExecuteService.html":{},"classes/FileUtils.html":{},"classes/Flowchart.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpViewerComponent.html":{},"interfaces/IPort.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"classes/InputPort.html":{},"injectables/LayoutService.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"injectables/MobiusService.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"injectables/ModuleService.html":{},"classes/ModuleUtils.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"injectables/NodeLibraryService.html":{},"classes/OutputPort.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{},"components/PublishSettingsComponent.html":{},"pipes/ShortNamePipe.html":{},"pipes/SimpleNamePipe.html":{},"classes/StatementProcedure.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"classes/WhileControlProcedure.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["value(valu",{"_index":1098,"title":{},"body":{"classes/FileUtils.html":{}}}],["value.endswith(\".mob",{"_index":4037,"title":{},"body":{"pipes/SimpleNamePipe.html":{}}}],["value.length",{"_index":964,"title":{},"body":{"injectables/ExecuteService.html":{},"pipes/SimpleNamePipe.html":{}}}],["value.port",{"_index":3328,"title":{},"body":{"components/ParameterEditorComponent.html":{}}}],["value.port.length",{"_index":3329,"title":{},"body":{"components/ParameterEditorComponent.html":{}}}],["value.slice(0",{"_index":4035,"title":{},"body":{"pipes/ShortNamePipe.html":{}}}],["value.split",{"_index":4040,"title":{},"body":{"pipes/SimpleNamePipe.html":{}}}],["value.split(\"_\").join",{"_index":4039,"title":{},"body":{"pipes/SimpleNamePipe.html":{}}}],["value.substr(0",{"_index":4038,"title":{},"body":{"pipes/SimpleNamePipe.html":{}}}],["value.tostr",{"_index":970,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["value.trim",{"_index":3376,"title":{},"body":{"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{}}}],["value:str",{"_index":3050,"title":{},"body":{"components/ModuleboxComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["var${dataprocedure.count",{"_index":710,"title":{},"body":{"classes/DataProcedure.html":{}}}],["variabl",{"_index":1717,"title":{"miscellaneous/variables.html":{}},"body":{"classes/ForLoopControlProcedure.html":{},"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleboxComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/PublishSettingsComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variable.vari",{"_index":2254,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["variable_a",{"_index":2123,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["variable_b",{"_index":2124,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["variable_nam",{"_index":959,"title":{},"body":{"injectables/ExecuteService.html":{},"classes/ForLoopControlProcedure.html":{}}}],["variable_valu",{"_index":961,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["variou",{"_index":1965,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{}}}],["varlist",{"_index":3232,"title":{},"body":{"classes/NodeUtils.html":{}}}],["varlist.push(var_nam",{"_index":3231,"title":{},"body":{"classes/NodeUtils.html":{}}}],["varnam",{"_index":960,"title":{},"body":{"injectables/ExecuteService.html":{}}}],["vc",{"_index":4080,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["vector=new",{"_index":3961,"title":{},"body":{"components/SettingComponent.html":{}}}],["verbatim",{"_index":4341,"title":{},"body":{"license.html":{}}}],["versa",{"_index":4328,"title":{},"body":{"index.html":{}}}],["version",{"_index":2329,"title":{},"body":{"interfaces/IGraphNode.html":{},"license.html":{}}}],["vice",{"_index":4327,"title":{},"body":{"index.html":{}}}],["view",{"_index":1297,"title":{},"body":{"components/FlowchartControlsComponent.html":{},"components/LandingComponent.html":{},"injectables/LayoutService.html":{},"components/MobiusAbout.html":{},"components/ViewerContainerComponent.html":{},"license.html":{}}}],["viewchild",{"_index":575,"title":{},"body":{"components/ConsoleComponent.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartRenderUtils.html":{},"components/GraphEdgeComponent.html":{},"components/MenuComponent.html":{},"components/PanelComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureItemComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["viewchild('canva",{"_index":1871,"title":{},"body":{"components/GraphEdgeComponent.html":{}}}],["viewchild('cesium_param_contain",{"_index":3402,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["viewchild('contain",{"_index":3276,"title":{},"body":{"components/PanelComponent.html":{}}}],["viewchild('fileinput",{"_index":1300,"title":{},"body":{"components/FlowchartControlsComponent.html":{},"components/MenuComponent.html":{}}}],["viewchild('scrollm",{"_index":580,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["viewchild('vc",{"_index":4103,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["viewcontainerindex",{"_index":2464,"title":{},"body":{"injectables/LayoutService.html":{}}}],["viewcontainerref",{"_index":3273,"title":{},"body":{"components/PanelComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["viewencapsul",{"_index":577,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["viewencapsulation.non",{"_index":556,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["viewer",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"injectables/ExecuteService.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartRenderUtils.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"injectables/LayoutService.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"pipes/PortTypePipe.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["viewer'},{'nam",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{}}}],["viewer.animation.viewmodel.dateformatt",{"_index":872,"title":{},"body":{"components/DisplayComponent.html":{}}}],["viewer.animation.viewmodel.timeformatt",{"_index":874,"title":{},"body":{"components/DisplayComponent.html":{}}}],["viewer.clock.currenttim",{"_index":865,"title":{},"body":{"components/DisplayComponent.html":{}}}],["viewer.clock.starttim",{"_index":867,"title":{},"body":{"components/DisplayComponent.html":{}}}],["viewer.clock.stoptim",{"_index":868,"title":{},"body":{"components/DisplayComponent.html":{}}}],["viewer.compon",{"_index":325,"title":{},"body":{"modules/AppModule.html":{},"modules/GSViewer.html":{},"injectables/LayoutService.html":{},"components/ViewerContainerComponent.html":{}}}],["viewer.component.html",{"_index":391,"title":{},"body":{"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"classes/FlowchartRenderUtils.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/MobiusViewerComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ParameterViewerComponent.html":{},"components/TextViewerComponent.html":{}}}],["viewer.component.scss",{"_index":390,"title":{},"body":{"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"classes/FlowchartRenderUtils.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/MobiusViewerComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ParameterViewerComponent.html":{},"components/TextViewerComponent.html":{}}}],["viewer.component.t",{"_index":387,"title":{},"body":{"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"classes/FlowchartRenderUtils.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/MobiusViewerComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ParameterViewerComponent.html":{},"components/TextViewerComponent.html":{},"coverage.html":{}}}],["viewer.component.ts:104",{"_index":4054,"title":{},"body":{"components/TextViewerComponent.html":{}}}],["viewer.component.ts:106",{"_index":3397,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["viewer.component.ts:11",{"_index":1810,"title":{},"body":{"components/GSViewerComponent.html":{},"components/ModuleViewerComponent.html":{}}}],["viewer.component.ts:12",{"_index":3000,"title":{},"body":{"components/ModuleViewerComponent.html":{}}}],["viewer.component.ts:124",{"_index":2768,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["viewer.component.ts:13",{"_index":2394,"title":{},"body":{"components/InfoViewerComponent.html":{}}}],["viewer.component.ts:14",{"_index":1806,"title":{},"body":{"components/GSViewerComponent.html":{}}}],["viewer.component.ts:15",{"_index":1822,"title":{},"body":{"components/GeometryViewerComponent.html":{},"components/HelpViewerComponent.html":{}}}],["viewer.component.ts:16",{"_index":547,"title":{},"body":{"components/CodeViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/HelpViewerComponent.html":{}}}],["viewer.component.ts:17",{"_index":402,"title":{},"body":{"components/CesiumViewerComponent.html":{},"components/HelpViewerComponent.html":{}}}],["viewer.component.ts:18",{"_index":543,"title":{},"body":{"components/CodeViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/ParameterViewerComponent.html":{},"components/TextViewerComponent.html":{}}}],["viewer.component.ts:19",{"_index":407,"title":{},"body":{"components/CesiumViewerComponent.html":{},"components/GSViewerComponent.html":{},"components/HelpViewerComponent.html":{},"components/ParameterViewerComponent.html":{},"components/TextViewerComponent.html":{}}}],["viewer.component.ts:20",{"_index":400,"title":{},"body":{"components/CesiumViewerComponent.html":{},"classes/FlowchartRenderUtils.html":{},"components/HelpViewerComponent.html":{},"components/TextViewerComponent.html":{}}}],["viewer.component.ts:21",{"_index":1377,"title":{},"body":{"classes/FlowchartRenderUtils.html":{},"components/ParameterViewerComponent.html":{},"components/TextViewerComponent.html":{}}}],["viewer.component.ts:22",{"_index":1821,"title":{},"body":{"components/GeometryViewerComponent.html":{},"components/HelpViewerComponent.html":{},"components/ParameterViewerComponent.html":{}}}],["viewer.component.ts:23",{"_index":546,"title":{},"body":{"components/CodeViewerComponent.html":{},"classes/FlowchartRenderUtils.html":{},"components/ParameterViewerComponent.html":{}}}],["viewer.component.ts:24",{"_index":404,"title":{},"body":{"components/CesiumViewerComponent.html":{},"components/ParameterViewerComponent.html":{}}}],["viewer.component.ts:25",{"_index":4055,"title":{},"body":{"components/TextViewerComponent.html":{}}}],["viewer.component.ts:28",{"_index":403,"title":{},"body":{"components/CesiumViewerComponent.html":{},"components/GeometryViewerComponent.html":{}}}],["viewer.component.ts:29",{"_index":1383,"title":{},"body":{"classes/FlowchartRenderUtils.html":{},"components/GSViewerComponent.html":{},"components/TextViewerComponent.html":{}}}],["viewer.component.ts:30",{"_index":545,"title":{},"body":{"components/CodeViewerComponent.html":{}}}],["viewer.component.ts:31",{"_index":3400,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["viewer.component.ts:34",{"_index":1808,"title":{},"body":{"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{}}}],["viewer.component.ts:36",{"_index":405,"title":{},"body":{"components/CesiumViewerComponent.html":{},"components/TextViewerComponent.html":{}}}],["viewer.component.ts:37",{"_index":2773,"title":{},"body":{"components/MobiusViewerComponent.html":{},"components/ParameterViewerComponent.html":{}}}],["viewer.component.ts:38",{"_index":2769,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["viewer.component.ts:39",{"_index":1380,"title":{},"body":{"classes/FlowchartRenderUtils.html":{},"components/GSViewerComponent.html":{},"components/MobiusViewerComponent.html":{}}}],["viewer.component.ts:40",{"_index":2772,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["viewer.component.ts:41",{"_index":2771,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["viewer.component.ts:42",{"_index":2273,"title":{},"body":{"components/HelpViewerComponent.html":{},"components/MobiusViewerComponent.html":{}}}],["viewer.component.ts:44",{"_index":2770,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["viewer.component.ts:45",{"_index":2760,"title":{},"body":{"components/MobiusViewerComponent.html":{},"components/ParameterViewerComponent.html":{}}}],["viewer.component.ts:51",{"_index":2276,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["viewer.component.ts:54",{"_index":4052,"title":{},"body":{"components/TextViewerComponent.html":{}}}],["viewer.component.ts:55",{"_index":2280,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["viewer.component.ts:57",{"_index":3401,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["viewer.component.ts:58",{"_index":3399,"title":{},"body":{"components/ParameterViewerComponent.html":{}}}],["viewer.component.ts:59",{"_index":2275,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["viewer.component.ts:63",{"_index":2278,"title":{},"body":{"components/HelpViewerComponent.html":{}}}],["viewer.component.ts:67",{"_index":2767,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["viewer.component.ts:76",{"_index":2765,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["viewer.component.ts:81",{"_index":2764,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["viewer.component.ts:86",{"_index":2766,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["viewer.component.ts:9",{"_index":2393,"title":{},"body":{"components/InfoViewerComponent.html":{}}}],["viewer.component.ts:90",{"_index":2762,"title":{},"body":{"components/MobiusViewerComponent.html":{}}}],["viewer.modul",{"_index":354,"title":{},"body":{"modules/AppModule.html":{}}}],["viewer.module.t",{"_index":1785,"title":{},"body":{"modules/GSViewer.html":{}}}],["viewer.scene.globe.enablelight",{"_index":850,"title":{},"body":{"components/DisplayComponent.html":{}}}],["viewer.scene.sun.show",{"_index":851,"title":{},"body":{"components/DisplayComponent.html":{}}}],["viewer.terrainshadow",{"_index":848,"title":{},"body":{"components/DisplayComponent.html":{}}}],["viewer.timeline.makelabel",{"_index":877,"title":{},"body":{"components/DisplayComponent.html":{}}}],["viewer.timeline.updatefromclock",{"_index":871,"title":{},"body":{"components/DisplayComponent.html":{}}}],["viewer.timeline.zoomto(viewer.clock.starttim",{"_index":870,"title":{},"body":{"components/DisplayComponent.html":{}}}],["viewer/:id",{"_index":383,"title":{},"body":{"modules/AppModule.html":{}}}],["viewer/cesium",{"_index":331,"title":{},"body":{"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{}}}],["viewer/cod",{"_index":327,"title":{},"body":{"modules/AppModule.html":{},"components/CodeViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{}}}],["viewer/data/data.service.t",{"_index":4155,"title":{},"body":{"coverage.html":{}}}],["viewer/data/datasubscriber.t",{"_index":733,"title":{},"body":{"classes/DataSubscriber-1.html":{},"coverage.html":{}}}],["viewer/data/datasubscriber.ts:19",{"_index":737,"title":{},"body":{"classes/DataSubscriber-1.html":{}}}],["viewer/data/datasubscriber.ts:7",{"_index":736,"title":{},"body":{"classes/DataSubscriber-1.html":{}}}],["viewer/data/datasubscriber.ts:8",{"_index":735,"title":{},"body":{"classes/DataSubscriber-1.html":{}}}],["viewer/data/datasubscriber.ts:9",{"_index":734,"title":{},"body":{"classes/DataSubscriber-1.html":{}}}],["viewer/flowchart",{"_index":324,"title":{},"body":{"modules/AppModule.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/LayoutService.html":{},"coverage.html":{}}}],["viewer/g",{"_index":353,"title":{},"body":{"modules/AppModule.html":{},"modules/GSViewer.html":{},"components/GSViewerComponent.html":{},"coverage.html":{}}}],["viewer/geometri",{"_index":329,"title":{},"body":{"modules/AppModule.html":{},"components/GeometryViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{}}}],["viewer/help",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"components/HelpViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{}}}],["viewer/help.templ",{"_index":352,"title":{},"body":{"modules/AppModule.html":{}}}],["viewer/help.template.t",{"_index":1929,"title":{},"body":{"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/MobiusAbout.html":{},"coverage.html":{}}}],["viewer/help.template.ts:12",{"_index":2577,"title":{},"body":{"components/MobiusAbout.html":{}}}],["viewer/help.template.ts:22",{"_index":1933,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["viewer/help.template.ts:26",{"_index":1934,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["viewer/help.template.ts:36",{"_index":2256,"title":{},"body":{"components/HelpModel.html":{}}}],["viewer/help.template.ts:40",{"_index":2257,"title":{},"body":{"components/HelpModel.html":{}}}],["viewer/help.template.ts:8",{"_index":2576,"title":{},"body":{"components/MobiusAbout.html":{}}}],["viewer/info",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"components/InfoViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{}}}],["viewer/mobiu",{"_index":363,"title":{},"body":{"modules/AppModule.html":{},"components/MobiusViewerComponent.html":{},"coverage.html":{}}}],["viewer/modul",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"components/ModuleViewerComponent.html":{},"coverage.html":{}}}],["viewer/paramet",{"_index":335,"title":{},"body":{"modules/AppModule.html":{},"injectables/LayoutService.html":{},"components/ParameterViewerComponent.html":{},"coverage.html":{}}}],["viewer/setting/setting.component.t",{"_index":3820,"title":{},"body":{"components/SettingComponent.html":{},"coverage.html":{}}}],["viewer/setting/setting.component.ts:113",{"_index":3859,"title":{},"body":{"components/SettingComponent.html":{}}}],["viewer/setting/setting.component.ts:129",{"_index":3856,"title":{},"body":{"components/SettingComponent.html":{}}}],["viewer/setting/setting.component.ts:14",{"_index":3897,"title":{},"body":{"components/SettingComponent.html":{}}}],["viewer/setting/setting.component.ts:146",{"_index":3866,"title":{},"body":{"components/SettingComponent.html":{}}}],["viewer/setting/setting.component.ts:15",{"_index":3885,"title":{},"body":{"components/SettingComponent.html":{}}}],["viewer/setting/setting.component.ts:152",{"_index":3869,"title":{},"body":{"components/SettingComponent.html":{}}}],["viewer/setting/setting.component.ts:16",{"_index":3888,"title":{},"body":{"components/SettingComponent.html":{}}}],["viewer/setting/setting.component.ts:17",{"_index":3886,"title":{},"body":{"components/SettingComponent.html":{}}}],["viewer/setting/setting.component.ts:178",{"_index":3871,"title":{},"body":{"components/SettingComponent.html":{}}}],["viewer/setting/setting.component.ts:18",{"_index":3898,"title":{},"body":{"components/SettingComponent.html":{}}}],["viewer/setting/setting.component.ts:19",{"_index":3889,"title":{},"body":{"components/SettingComponent.html":{}}}],["viewer/setting/setting.component.ts:193",{"_index":3851,"title":{},"body":{"components/SettingComponent.html":{}}}],["viewer/setting/setting.component.ts:20",{"_index":3895,"title":{},"body":{"components/SettingComponent.html":{}}}],["viewer/setting/setting.component.ts:205",{"_index":3873,"title":{},"body":{"components/SettingComponent.html":{}}}],["viewer/setting/setting.component.ts:21",{"_index":3890,"title":{},"body":{"components/SettingComponent.html":{}}}],["viewer/setting/setting.component.ts:22",{"_index":3887,"title":{},"body":{"components/SettingComponent.html":{}}}],["viewer/setting/setting.component.ts:221",{"_index":3863,"title":{},"body":{"components/SettingComponent.html":{}}}],["viewer/setting/setting.component.ts:23",{"_index":3878,"title":{},"body":{"components/SettingComponent.html":{}}}],["viewer/setting/setting.component.ts:232",{"_index":3858,"title":{},"body":{"components/SettingComponent.html":{}}}],["viewer/setting/setting.component.ts:24",{"_index":3879,"title":{},"body":{"components/SettingComponent.html":{}}}],["viewer/setting/setting.component.ts:25",{"_index":3880,"title":{},"body":{"components/SettingComponent.html":{}}}],["viewer/setting/setting.component.ts:254",{"_index":3868,"title":{},"body":{"components/SettingComponent.html":{}}}],["viewer/setting/setting.component.ts:26",{"_index":3877,"title":{},"body":{"components/SettingComponent.html":{}}}],["viewer/setting/setting.component.ts:27",{"_index":3894,"title":{},"body":{"components/SettingComponent.html":{}}}],["viewer/setting/setting.component.ts:276",{"_index":3876,"title":{},"body":{"components/SettingComponent.html":{}}}],["viewer/setting/setting.component.ts:28",{"_index":3881,"title":{},"body":{"components/SettingComponent.html":{}}}],["viewer/setting/setting.component.ts:29",{"_index":3882,"title":{},"body":{"components/SettingComponent.html":{}}}],["viewer/setting/setting.component.ts:30",{"_index":3883,"title":{},"body":{"components/SettingComponent.html":{}}}],["viewer/setting/setting.component.ts:31",{"_index":3891,"title":{},"body":{"components/SettingComponent.html":{}}}],["viewer/setting/setting.component.ts:32",{"_index":3892,"title":{},"body":{"components/SettingComponent.html":{}}}],["viewer/setting/setting.component.ts:34",{"_index":3874,"title":{},"body":{"components/SettingComponent.html":{}}}],["viewer/setting/setting.component.ts:92",{"_index":3850,"title":{},"body":{"components/SettingComponent.html":{}}}],["viewer/text",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{}}}],["viewer/toolwindow/groups.component.t",{"_index":4158,"title":{},"body":{"coverage.html":{}}}],["viewer/toolwindow/toolwindow.component.t",{"_index":4160,"title":{},"body":{"coverage.html":{}}}],["viewer/viewer.compon",{"_index":776,"title":{},"body":{"components/DisplayComponent.html":{},"modules/GSViewer.html":{},"modules/MobiusCesium.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{}}}],["viewer/viewer/viewer.component.t",{"_index":4162,"title":{},"body":{"coverage.html":{}}}],["viewer_mod",{"_index":4083,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["viewer_nam",{"_index":2543,"title":{},"body":{"injectables/LayoutService.html":{},"components/ViewerContainerComponent.html":{}}}],["viewercompon",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"modules/GSViewer.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"modules/MobiusCesium.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["viewercontainercompon",{"_index":245,"title":{"components/ViewerContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CesiumViewerComponent.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"components/FileLoadDialogComponent.html":{},"components/FlowchartControlsComponent.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"components/InfoViewerComponent.html":{},"components/LandingComponent.html":{},"injectables/LayoutService.html":{},"components/MenuComponent.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"components/ModuleViewerComponent.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["viewercontainercomponent.componentmap[component_nam",{"_index":4115,"title":{},"body":{"components/ViewerContainerComponent.html":{}}}],["viewers/eview",{"_index":3275,"title":{},"body":{"components/PanelComponent.html":{}}}],["viewmodel",{"_index":883,"title":{},"body":{"components/DisplayComponent.html":{}}}],["viewport",{"_index":2586,"title":{},"body":{"components/MobiusAbout.html":{}}}],["violat",{"_index":4571,"title":{},"body":{"license.html":{}}}],["visibl",{"_index":1831,"title":{},"body":{"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/MobiusViewerComponent.html":{},"components/PublishSettingsComponent.html":{},"license.html":{}}}],["visual",{"_index":2036,"title":{},"body":{"components/HelpFundamentals.html":{},"components/LandingComponent.html":{},"components/MobiusAbout.html":{},"index.html":{}}}],["void",{"_index":71,"title":{},"body":{"classes/ActionProcedure.html":{},"injectables/ActiveNodeService.html":{},"components/CesiumViewerComponent.html":{},"classes/CodeGenerator.html":{},"injectables/CodeService.html":{},"components/CodeViewerComponent.html":{},"components/ConsoleComponent.html":{},"injectables/ConsoleService.html":{},"classes/DataProcedure.html":{},"classes/DataSubscriber.html":{},"classes/DataSubscriber-1.html":{},"components/DisplayComponent.html":{},"components/EditorComponent.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"components/FileLoadDialogComponent.html":{},"classes/FileService.html":{},"classes/FileUtils.html":{},"classes/Flowchart.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartRenderUtils.html":{},"injectables/FlowchartService.html":{},"classes/FlowchartUtils.html":{},"classes/FlowchartWriter.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"components/GSViewerComponent.html":{},"components/GeometryViewerComponent.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/HelpModel.html":{},"components/HelpViewerComponent.html":{},"interfaces/ICodeGenerator.html":{},"interfaces/IPort.html":{},"classes/IfControlProcedure.html":{},"classes/IfElseControlProcedure.html":{},"components/InfoViewerComponent.html":{},"classes/InputPort.html":{},"components/LandingComponent.html":{},"injectables/LayoutService.html":{},"components/MobiusAbout.html":{},"components/MobiusEditorComponent.html":{},"components/MobiusGalleryComponent.html":{},"injectables/MobiusService.html":{},"components/MobiusViewerComponent.html":{},"components/MobiuscesiumComponent.html":{},"injectables/ModuleService.html":{},"components/ModuleboxComponent.html":{},"components/NodeLibraryComponent.html":{},"injectables/NodeLibraryService.html":{},"classes/NodeUtils.html":{},"classes/OutputPort.html":{},"components/PanelComponent.html":{},"components/ParameterEditorComponent.html":{},"components/ParameterSettingsDialogComponent.html":{},"components/ParameterViewerComponent.html":{},"classes/Procedure.html":{},"components/ProcedureEditorComponent.html":{},"components/ProcedureItemComponent.html":{},"components/PublishSettingsComponent.html":{},"components/SelectComponent.html":{},"components/SettingComponent.html":{},"classes/StatementProcedure.html":{},"components/TextViewerComponent.html":{},"components/ViewerContainerComponent.html":{},"classes/WhileControlProcedure.html":{},"license.html":{}}}],["volum",{"_index":4514,"title":{},"body":{"license.html":{}}}],["w",{"_index":4724,"title":{},"body":{"license.html":{}}}],["waiv",{"_index":4489,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":4707,"title":{},"body":{"license.html":{}}}],["want",{"_index":2027,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"components/ParameterViewerComponent.html":{},"license.html":{}}}],["warn",{"_index":636,"title":{},"body":{"injectables/ConsoleService.html":{},"miscellaneous/enumerations.html":{}}}],["warranti",{"_index":4374,"title":{},"body":{"license.html":{}}}],["way",{"_index":1454,"title":{},"body":{"classes/FlowchartRenderUtils.html":{},"components/HelpFundamentals.html":{},"license.html":{}}}],["web",{"_index":2438,"title":{},"body":{"components/LandingComponent.html":{},"components/MobiusAbout.html":{},"components/ParameterSettingsDialogComponent.html":{}}}],["weburl",{"_index":3775,"title":{},"body":{"components/PublishSettingsComponent.html":{}}}],["welcom",{"_index":4725,"title":{},"body":{"license.html":{}}}],["well",{"_index":2131,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"license.html":{}}}],["whatev",{"_index":4622,"title":{},"body":{"license.html":{}}}],["whether",{"_index":2633,"title":{},"body":{"components/MobiusAbout.html":{},"license.html":{}}}],["whilecontrol",{"_index":4261,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["whilecontrolprocedur",{"_index":3641,"title":{"classes/WhileControlProcedure.html":{}},"body":{"classes/ProcedureFactory.html":{},"classes/WhileControlProcedure.html":{},"coverage.html":{}}}],["whole",{"_index":2047,"title":{},"body":{"components/HelpFundamentals.html":{},"license.html":{}}}],["whose",{"_index":2246,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"license.html":{}}}],["wide",{"_index":2454,"title":{},"body":{"components/LandingComponent.html":{},"license.html":{}}}],["width",{"_index":1333,"title":{},"body":{"components/FlowchartControlsComponent.html":{},"classes/FlowchartRenderUtils.html":{},"components/GraphEdgeComponent.html":{},"components/MobiuscesiumComponent.html":{},"classes/ModuleUtils.html":{},"components/ParameterEditorComponent.html":{},"components/PublishSettingsComponent.html":{}}}],["window",{"_index":1137,"title":{},"body":{"classes/FileUtils.html":{},"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"license.html":{}}}],["window.localstorag",{"_index":3116,"title":{},"body":{"injectables/NodeLibraryService.html":{}}}],["window.navigator.mssaveoropenblob",{"_index":433,"title":{},"body":{"components/CesiumViewerComponent.html":{},"classes/FileService.html":{}}}],["window.navigator.mssaveoropenblob(blob",{"_index":434,"title":{},"body":{"components/CesiumViewerComponent.html":{},"classes/FileService.html":{}}}],["window.onbeforeunload",{"_index":2694,"title":{},"body":{"components/MobiusEditorComponent.html":{}}}],["window.url.createobjecturl(blob",{"_index":438,"title":{},"body":{"components/CesiumViewerComponent.html":{},"classes/FileService.html":{}}}],["window.url.revokeobjecturl(url",{"_index":443,"title":{},"body":{"components/CesiumViewerComponent.html":{},"classes/FileService.html":{}}}],["window:keyup",{"_index":3542,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["window:keyup(ev",{"_index":3543,"title":{},"body":{"components/ProcedureEditorComponent.html":{}}}],["window[file_nam",{"_index":1135,"title":{},"body":{"classes/FileUtils.html":{}}}],["window_param",{"_index":3234,"title":{},"body":{"classes/NodeUtils.html":{}}}],["window_scop",{"_index":3233,"title":{},"body":{"classes/NodeUtils.html":{}}}],["wipo",{"_index":4484,"title":{},"body":{"license.html":{}}}],["wire",{"_index":2041,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{}}}],["wish",{"_index":4356,"title":{},"body":{"license.html":{}}}],["within",{"_index":4595,"title":{},"body":{"license.html":{}}}],["without",{"_index":2028,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"classes/NodeUtils.html":{},"components/ProcedureEditorComponent.html":{},"license.html":{}}}],["withoutfnoutput",{"_index":498,"title":{},"body":{"classes/CodeGenerator.html":{},"interfaces/ICodeGenerator.html":{}}}],["work",{"_index":2016,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"license.html":{}}}],["work'",{"_index":4448,"title":{},"body":{"license.html":{}}}],["world",{"_index":1211,"title":{},"body":{"classes/Flowchart.html":{}}}],["worldwid",{"_index":4643,"title":{},"body":{"license.html":{}}}],["worth",{"_index":2120,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["write",{"_index":1975,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"license.html":{}}}],["written",{"_index":2063,"title":{},"body":{"components/HelpFundamentals.html":{},"license.html":{}}}],["wrong",{"_index":2206,"title":{},"body":{"components/HelpFundamentals.html":{}}}],["x",{"_index":1398,"title":{},"body":{"classes/FlowchartRenderUtils.html":{},"components/GraphEdgeComponent.html":{},"components/HelpFundamentals.html":{},"components/NodeLibraryComponent.html":{},"components/ParameterEditorComponent.html":{},"components/SettingComponent.html":{}}}],["x.name}}{{fw.display_nod",{"_index":3781,"title":{},"body":{"components/PublishSettingsComponent.html":{}}}],["xaxi",{"_index":1725,"title":{},"body":{"classes/Frame.html":{},"interfaces/HasIsPlanar.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"classes/gis_module.html":{}}}],["y",{"_index":1399,"title":{},"body":{"classes/FlowchartRenderUtils.html":{},"components/GraphEdgeComponent.html":{},"components/SettingComponent.html":{}}}],["yaxi",{"_index":1726,"title":{},"body":{"classes/Frame.html":{},"interfaces/HasIsPlanar.html":{},"classes/Point.html":{},"classes/Polygon.html":{},"classes/Polyline.html":{},"classes/gis_module.html":{}}}],["ye",{"_index":43,"title":{},"body":{"classes/ActionProcedure.html":{},"classes/CodeGenerator.html":{},"injectables/ConsoleService.html":{},"classes/DataProcedure.html":{},"classes/ElseControlProcedure.html":{},"classes/ElseIfControlProcedure.html":{},"classes/Flowchart.html":{},"components/FlowchartControlsComponent.html":{},"classes/FlowchartUtils.html":{},"classes/ForLoopControlProcedure.html":{},"classes/FunctionProcedure.html":{},"components/HelpFundamentals.html":{},"interfaces/ICodeGenerator.html":{},"classes/IfControlProcedure.html":{},"classes/InputPort.html":{},"classes/ModuleUtils.html":{},"injectables/NodeLibraryService.html":{},"classes/NodeUtils.html":{},"classes/OutputPort.html":{},"classes/ProcedureFactory.html":{},"classes/WhileControlProcedure.html":{}}}],["year",{"_index":807,"title":{},"body":{"components/DisplayComponent.html":{},"license.html":{}}}],["yourself",{"_index":4653,"title":{},"body":{"license.html":{}}}],["z",{"_index":4019,"title":{},"body":{"components/SettingComponent.html":{}}}],["zero",{"_index":2093,"title":{},"body":{"components/HelpFundamentals.html":{},"components/MobiusAbout.html":{},"classes/ModuleUtils.html":{}}}],["zone.j",{"_index":4237,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"classes/FlowchartRenderUtils.html":{},"modules/GSViewer.html":{},"modules/MobiusCesium.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ActionProcedure.html":{"url":"classes/ActionProcedure.html","title":"class - ActionProcedure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActionProcedure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/base-classes/procedure/ActionProcedure.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Procedure\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _hasReturn\n                            \n                            \n                                    Public\n                                _children\n                            \n                            \n                                    Private\n                                _disabled\n                            \n                            \n                                    Private\n                                _error\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Protected\n                                _leftComponent\n                            \n                            \n                                    Private\n                                _level\n                            \n                            \n                                    Private\n                                _parent\n                            \n                            \n                                    Private\n                                _printToConsole\n                            \n                            \n                                    Protected\n                                _rightComponent\n                            \n                            \n                                    Private\n                                _selected\n                            \n                            \n                                    Private\n                                _type\n                            \n                            \n                                    Public\n                                hasChildren\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                update\n                            \n                            \n                                getCodeString\n                            \n                            \n                                hasParent\n                            \n                            \n                                reset\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data?: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/base-classes/procedure/ActionProcedure.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _hasReturn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _hasReturn:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/base-classes/procedure/ActionProcedure.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _children\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _children:     IProcedure[]\n\n                    \n                \n                    \n                        \n                            Type :     IProcedure[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _disabled:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _error:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _leftComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _leftComponent:     IComponent\n\n                    \n                \n                    \n                        \n                            Type :     IComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _level\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _level:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _parent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _parent:     IProcedure\n\n                    \n                \n                    \n                        \n                            Type :     IProcedure\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _printToConsole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _printToConsole:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _rightComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _rightComponent:     IComponent\n\n                    \n                \n                    \n                        \n                            Type :     IComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _selected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selected:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _type:     ProcedureTypes\n\n                    \n                \n                    \n                        \n                            Type :     ProcedureTypes\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasChildren\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasChildren:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:23\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(prodData: any, parent: IProcedure)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/procedure/ActionProcedure.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prodData\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parent\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCodeString\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCodeString(code_generator: ICodeGenerator)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:124\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        code_generator\n                                                        \n                                                                    ICodeGenerator\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasParent\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasParent()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:117\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(prodData: any, parent: IProcedure)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:137\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prodData\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parent\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasReturn\n                    \n                \n\n                \n                    \n                        gethasReturn()\n                    \n                \n                            \n                                \n                                    Defined in src/app/base-classes/procedure/ActionProcedure.ts:42\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Procedure} from \"./Procedure\";\nimport {IProcedure} from \"./IProcedure\";\nimport {ProcedureTypes} from \"./ProcedureTypes\";\nimport {IComponent} from \"./IComponent\";\n\nexport class ActionProcedure extends Procedure{\n\n\tprivate _hasReturn: boolean;\n\n\tconstructor(data ?: {result: string, module: string, function: string, params: any, hasReturn: boolean }){\n\t\tsuper(ProcedureTypes.Action, false); \n\n\t\tif(data == undefined){\n\t\t\tdata = {result: undefined, module: undefined, function: undefined, params: [], hasReturn: true} \n\t\t}\n\n\t\tthis._hasReturn = data.hasReturn;\n\n\t\tlet left: IComponent = { expression: data.result, \n\t\t\t\t\t\t\t\t isAction: false, \n\t\t\t\t\t\t\t\t module: undefined, \n\t\t\t\t\t\t\t\t category: undefined, \n\t\t\t\t\t\t\t\t fn_name: undefined,\n\t\t\t\t\t\t\t\t params: undefined\n\t\t\t\t\t\t\t\t}\n\t\tlet right: IComponent = { expression: data.module + /*\".\" + data.category +*/ \".\" + data.function, \n\t\t\t\t\t\t\t\t  isAction: true, \n\t\t\t\t\t\t\t\t  module: data.module, \n\t\t\t\t\t\t\t\t  category: undefined,//data.category, \n\t\t\t\t\t\t\t\t  fn_name: data.function,\n\t\t\t\t\t\t\t\t  params: data.params.map(function(p){ return { type: p.type, value: p.value }; })\n\t\t\t\t\t\t\t\t}\n\n\t\tif(data.result !== undefined){\n\t\t\tsuper.left = (left);\n\t\t}\n\n\t\tsuper.right = (right);\n\t\t\n\t}\n\n\tget hasReturn(){\n\t\treturn this._hasReturn;\n\t}\n\n\tupdate(prodData: any, parent: IProcedure): void{\n\t\tsuper.update(prodData, parent);\n\n\t\tthis._leftComponent = \t{ \n\t\t\t\t\t\t\t\t\texpression: prodData._leftComponent.expression,\n\t\t\t\t\t\t\t\t \tisAction: false, \n\t\t\t\t\t\t\t\t \tmodule: undefined, \n\t\t\t\t\t\t\t\t \tcategory: undefined, \n\t\t\t\t\t\t\t\t \tfn_name: undefined,\n\t\t\t\t\t\t\t\t \tparams: undefined\n\t\t\t\t\t\t\t\t};\n\n\n\t\tthis._rightComponent =  {  \n\t\t\t\t\t\t\t\t  expression: prodData._rightComponent.expression, \n\t\t\t\t\t\t\t\t  isAction: true, \n\t\t\t\t\t\t\t\t  module: prodData._rightComponent.module, \n\t\t\t\t\t\t\t\t  category: undefined,//data.category, \n\t\t\t\t\t\t\t\t  fn_name: prodData._rightComponent.fn_name, \n\t\t\t\t\t\t\t\t  params: prodData._rightComponent.params.map(function(p){ return { type: p.type, value: p.value }; })\n\t\t\t\t\t\t\t\t};\n\t}\n\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActiveNodeService.html":{"url":"injectables/ActiveNodeService.html","title":"injectable - ActiveNodeService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ActiveNodeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/global-services/selected-node.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _processing\n                            \n                            \n                                stateChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                stateChangedEmitter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/global-services/selected-node.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stateChangedEmitter\n                            \n                            \n                        \n                    \n                \n                \n                    \nstateChangedEmitter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/selected-node.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _processing\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _processing:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/global-services/selected-node.service.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stateChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stateChanged:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/global-services/selected-node.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        processing\n                    \n                \n\n                \n                    \n                        getprocessing()\n                    \n                \n                            \n                                \n                                    Defined in src/app/global-services/selected-node.service.ts:14\n                                \n                            \n\n                \n                    \n                        setprocessing(value: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/global-services/selected-node.service.ts:18\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EventEmitter } from '@angular/core';\n\n@Injectable()\nexport class ActiveNodeService {\n\n\tprivate _processing: boolean = false;\n\tstateChanged: EventEmitter = new EventEmitter();\n\n\tconstructor() {\n\t\tlet self = this;\n\t}\n\n    get processing(){\n      return this._processing;\n    }\n\n    set processing(value){\n      this._processing = value;\n      this.stateChanged.emit(this._processing);\n    }\n\n    stateChangedEmitter() {\n\t    return this.stateChanged;\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent{\n\n    constructor(){ \n\n    }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CesiumViewerComponent', 'selector': 'app-cesium-viewer'},{'name': 'CodeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ConsoleComponent', 'selector': 'app-console'},{'name': 'DataComponent', 'selector': 'app-data'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FileLoadDialogComponent', 'selector': 'file-load-dialog'},{'name': 'FlowchartControlsComponent', 'selector': 'app-flowchart-controls'},{'name': 'FlowchartViewerComponent', 'selector': 'app-flowchart-viewer'},{'name': 'GSViewerComponent', 'selector': 'gs-viewer'},{'name': 'GeometryViewerComponent', 'selector': 'app-geometry-viewer'},{'name': 'GraphEdgeComponent', 'selector': 'app-graph-edge'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HelpFundamentals', 'selector': 'app-help-fundamentals'},{'name': 'HelpModel', 'selector': 'app-help-model'},{'name': 'HelpViewerComponent', 'selector': 'app-help-viewer'},{'name': 'InfoViewerComponent', 'selector': 'app-info-viewer'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MobiusAbout', 'selector': 'app-help-about'},{'name': 'MobiusEditorComponent', 'selector': 'app-mobius-editor'},{'name': 'MobiusGalleryComponent', 'selector': 'mobius-gallery'},{'name': 'MobiusViewerComponent', 'selector': 'app-mobius-viewer'},{'name': 'MobiuscesiumComponent', 'selector': 'mobius-cesium'},{'name': 'ModuleViewerComponent', 'selector': 'app-module-viewer'},{'name': 'ModuleboxComponent', 'selector': 'app-modulebox'},{'name': 'NodeLibraryComponent', 'selector': 'app-node-library'},{'name': 'PanelComponent', 'selector': 'app-panel'},{'name': 'ParameterEditorComponent', 'selector': 'app-parameter-editor'},{'name': 'ParameterSettingsDialogComponent', 'selector': 'parameter-settings-dialog'},{'name': 'ParameterViewerComponent', 'selector': 'app-parameter-viewer'},{'name': 'ProcedureEditorComponent', 'selector': 'app-procedure-editor'},{'name': 'ProcedureItemComponent', 'selector': 'app-procedure-item'},{'name': 'PublishComponent', 'selector': 'app-publish'},{'name': 'PublishSettingsComponent', 'selector': 'app-publish-settings'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'TextViewerComponent', 'selector': 'app-text-viewer'},{'name': 'ToolwindowComponent', 'selector': 'app-toolwindow'},{'name': 'ViewerComponent', 'selector': 'app-viewer'},{'name': 'ViewerComponent', 'selector': 'cesium-viewer'},{'name': 'ViewerContainerComponent', 'selector': 'app-viewer-container'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCesiumViewerComponent\n\nCesiumViewerComponent\n\nAppModule -->\n\nCesiumViewerComponent->AppModule\n\n\n\n\n\nCodeViewerComponent\n\nCodeViewerComponent\n\nAppModule -->\n\nCodeViewerComponent->AppModule\n\n\n\n\n\nConsoleComponent\n\nConsoleComponent\n\nAppModule -->\n\nConsoleComponent->AppModule\n\n\n\n\n\nEditorComponent\n\nEditorComponent\n\nAppModule -->\n\nEditorComponent->AppModule\n\n\n\n\n\nFileLoadDialogComponent\n\nFileLoadDialogComponent\n\nAppModule -->\n\nFileLoadDialogComponent->AppModule\n\n\n\n\n\nFlowchartControlsComponent\n\nFlowchartControlsComponent\n\nAppModule -->\n\nFlowchartControlsComponent->AppModule\n\n\n\n\n\nFlowchartViewerComponent\n\nFlowchartViewerComponent\n\nAppModule -->\n\nFlowchartViewerComponent->AppModule\n\n\n\n\n\nGeometryViewerComponent\n\nGeometryViewerComponent\n\nAppModule -->\n\nGeometryViewerComponent->AppModule\n\n\n\n\n\nGraphEdgeComponent\n\nGraphEdgeComponent\n\nAppModule -->\n\nGraphEdgeComponent->AppModule\n\n\n\n\n\nHelpFundamentals\n\nHelpFundamentals\n\nAppModule -->\n\nHelpFundamentals->AppModule\n\n\n\n\n\nHelpModel\n\nHelpModel\n\nAppModule -->\n\nHelpModel->AppModule\n\n\n\n\n\nHelpViewerComponent\n\nHelpViewerComponent\n\nAppModule -->\n\nHelpViewerComponent->AppModule\n\n\n\n\n\nInfoViewerComponent\n\nInfoViewerComponent\n\nAppModule -->\n\nInfoViewerComponent->AppModule\n\n\n\n\n\nLandingComponent\n\nLandingComponent\n\nAppModule -->\n\nLandingComponent->AppModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nAppModule -->\n\nMenuComponent->AppModule\n\n\n\n\n\nMobiusAbout\n\nMobiusAbout\n\nAppModule -->\n\nMobiusAbout->AppModule\n\n\n\n\n\nMobiusEditorComponent\n\nMobiusEditorComponent\n\nAppModule -->\n\nMobiusEditorComponent->AppModule\n\n\n\n\n\nMobiusGalleryComponent\n\nMobiusGalleryComponent\n\nAppModule -->\n\nMobiusGalleryComponent->AppModule\n\n\n\n\n\nMobiusViewerComponent\n\nMobiusViewerComponent\n\nAppModule -->\n\nMobiusViewerComponent->AppModule\n\n\n\n\n\nModuleViewerComponent\n\nModuleViewerComponent\n\nAppModule -->\n\nModuleViewerComponent->AppModule\n\n\n\n\n\nModuleboxComponent\n\nModuleboxComponent\n\nAppModule -->\n\nModuleboxComponent->AppModule\n\n\n\n\n\nNodeLibraryComponent\n\nNodeLibraryComponent\n\nAppModule -->\n\nNodeLibraryComponent->AppModule\n\n\n\n\n\nPanelComponent\n\nPanelComponent\n\nAppModule -->\n\nPanelComponent->AppModule\n\n\n\n\n\nParameterEditorComponent\n\nParameterEditorComponent\n\nAppModule -->\n\nParameterEditorComponent->AppModule\n\n\n\n\n\nParameterSettingsDialogComponent\n\nParameterSettingsDialogComponent\n\nAppModule -->\n\nParameterSettingsDialogComponent->AppModule\n\n\n\n\n\nParameterViewerComponent\n\nParameterViewerComponent\n\nAppModule -->\n\nParameterViewerComponent->AppModule\n\n\n\n\n\nPortTypePipe\n\nPortTypePipe\n\nAppModule -->\n\nPortTypePipe->AppModule\n\n\n\n\n\nProcedureEditorComponent\n\nProcedureEditorComponent\n\nAppModule -->\n\nProcedureEditorComponent->AppModule\n\n\n\n\n\nProcedureItemComponent\n\nProcedureItemComponent\n\nAppModule -->\n\nProcedureItemComponent->AppModule\n\n\n\n\n\nPublishSettingsComponent\n\nPublishSettingsComponent\n\nAppModule -->\n\nPublishSettingsComponent->AppModule\n\n\n\n\n\nShortNamePipe\n\nShortNamePipe\n\nAppModule -->\n\nShortNamePipe->AppModule\n\n\n\n\n\nSimpleNamePipe\n\nSimpleNamePipe\n\nAppModule -->\n\nSimpleNamePipe->AppModule\n\n\n\n\n\nTextViewerComponent\n\nTextViewerComponent\n\nAppModule -->\n\nTextViewerComponent->AppModule\n\n\n\n\n\nViewerContainerComponent\n\nViewerContainerComponent\n\nAppModule -->\n\nViewerContainerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCustomMaterialModule\n\nCustomMaterialModule\n\nAppModule -->\n\nCustomMaterialModule->AppModule\n\n\n\n\n\nGSViewer\n\nGSViewer\n\nAppModule -->\n\nGSViewer->AppModule\n\n\n\n\n\nMobiusCesium\n\nMobiusCesium\n\nAppModule -->\n\nMobiusCesium->AppModule\n\n\n\n\n\nCodeService\n\nCodeService\n\nAppModule -->\n\nCodeService->AppModule\n\n\n\n\n\nConsoleService\n\nConsoleService\n\nAppModule -->\n\nConsoleService->AppModule\n\n\n\n\n\nExecuteService\n\nExecuteService\n\nAppModule -->\n\nExecuteService->AppModule\n\n\n\n\n\nFlowchartService\n\nFlowchartService\n\nAppModule -->\n\nFlowchartService->AppModule\n\n\n\n\n\nLayoutService\n\nLayoutService\n\nAppModule -->\n\nLayoutService->AppModule\n\n\n\n\n\nMobiusService\n\nMobiusService\n\nAppModule -->\n\nMobiusService->AppModule\n\n\n\n\n\nModuleService\n\nModuleService\n\nAppModule -->\n\nModuleService->AppModule\n\n\n\n\n\nNodeLibraryService\n\nNodeLibraryService\n\nAppModule -->\n\nNodeLibraryService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                CesiumViewerComponent\n                            \n                            \n                                CodeViewerComponent\n                            \n                            \n                                ConsoleComponent\n                            \n                            \n                                EditorComponent\n                            \n                            \n                                FileLoadDialogComponent\n                            \n                            \n                                FlowchartControlsComponent\n                            \n                            \n                                FlowchartViewerComponent\n                            \n                            \n                                GeometryViewerComponent\n                            \n                            \n                                GraphEdgeComponent\n                            \n                            \n                                HelpFundamentals\n                            \n                            \n                                HelpModel\n                            \n                            \n                                HelpViewerComponent\n                            \n                            \n                                InfoViewerComponent\n                            \n                            \n                                LandingComponent\n                            \n                            \n                                MenuComponent\n                            \n                            \n                                MobiusAbout\n                            \n                            \n                                MobiusEditorComponent\n                            \n                            \n                                MobiusGalleryComponent\n                            \n                            \n                                MobiusViewerComponent\n                            \n                            \n                                ModuleViewerComponent\n                            \n                            \n                                ModuleboxComponent\n                            \n                            \n                                NodeLibraryComponent\n                            \n                            \n                                PanelComponent\n                            \n                            \n                                ParameterEditorComponent\n                            \n                            \n                                ParameterSettingsDialogComponent\n                            \n                            \n                                ParameterViewerComponent\n                            \n                            \n                                PortTypePipe\n                            \n                            \n                                ProcedureEditorComponent\n                            \n                            \n                                ProcedureItemComponent\n                            \n                            \n                                PublishSettingsComponent\n                            \n                            \n                                ShortNamePipe\n                            \n                            \n                                SimpleNamePipe\n                            \n                            \n                                TextViewerComponent\n                            \n                            \n                                ViewerContainerComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                CesiumViewerComponent\n                            \n                            \n                                CodeViewerComponent\n                            \n                            \n                                ConsoleComponent\n                            \n                            \n                                EditorComponent\n                            \n                            \n                                FileLoadDialogComponent\n                            \n                            \n                                FlowchartViewerComponent\n                            \n                            \n                                GeometryViewerComponent\n                            \n                            \n                                HelpViewerComponent\n                            \n                            \n                                InfoViewerComponent\n                            \n                            \n                                ModuleboxComponent\n                            \n                            \n                                ParameterSettingsDialogComponent\n                            \n                            \n                                ParameterViewerComponent\n                            \n                            \n                                PublishSettingsComponent\n                            \n                            \n                                TextViewerComponent\n                            \n                            \n                                ViewerContainerComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     CodeService\n                            \n                            \n                                     ConsoleService\n                            \n                            \n                                     ExecuteService\n                            \n                            \n                                     FlowchartService\n                            \n                            \n                                     LayoutService\n                            \n                            \n                                     MobiusService\n                            \n                            \n                                     ModuleService\n                            \n                            \n                                     NodeLibraryService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    CustomMaterialModule\n                            \n                            \n                                    GSViewer\n                            \n                            \n                                    MobiusCesium\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\n\nimport { CustomMaterialModule } from './custom-angular-modules/CustomMaterialModule';\nimport { AngularSplitModule } from 'angular-split';\nimport { AceEditorModule } from 'ng2-ace-editor';\nimport { TreeModule } from 'angular-tree-component';\n\nimport { FlowchartService } from './global-services/flowchart.service';\nimport { ConsoleService } from './global-services/console.service';\nimport { LayoutService } from './global-services/layout.service'; \nimport { MobiusService } from './global-services/mobius.service'; \nimport { ModuleService } from './global-services/module.service'; \nimport { CodeService } from './global-services/code.service'; \nimport { ExecuteService } from './global-services/execute.service'; \nimport { NodeLibraryService } from './global-services/node-library.service'; \n\nimport { FlowchartControlsComponent } from './ui-components/controls/flowchart-controls/flowchart-controls.component';\nimport { MenuComponent } from './ui-components/controls/main-menu/menu.component';\n\nimport { ProcedureEditorComponent } from './ui-components/editors/procedure-editor/procedure-editor.component';\nimport { ProcedureItemComponent } from './ui-components/editors/procedure-editor/procedure-item.component';\n\nimport { ParameterEditorComponent } from './ui-components/editors/parameter-editor/parameter-editor.component';\nimport { ParameterSettingsDialogComponent } from './ui-components/editors/parameter-editor/parameter-settings-dialog.component';\nimport { FlowchartViewerComponent } from './ui-components/editors/flowchart-viewer/flowchart-viewer.component';\n\nimport { CodeViewerComponent } from './ui-components/viewers/code-viewer/code-viewer.component';\nimport { GeometryViewerComponent } from './ui-components/viewers/geometry-viewer/geometry-viewer.component';\nimport { CesiumViewerComponent } from './ui-components/viewers/cesium-viewer/cesium-viewer.component';\nimport { ModuleViewerComponent } from './ui-components/viewers/module-viewer/module-viewer.component';\nimport { ParameterViewerComponent } from './ui-components/viewers/parameter-viewer/parameter-viewer.component';\nimport { ModuleboxComponent } from './ui-components/controls/modulebox/modulebox.component';\nimport { EditorComponent } from './ui-components/editors/editor/editor.component';\nimport { ViewerContainerComponent } from './ui-components/viewers/viewer-container/viewer-container.component';\nimport { TextViewerComponent } from './ui-components/viewers/text-viewer/text-viewer.component';\nimport { NodeLibraryComponent } from './ui-components/viewers/node-library/node-library.component';\nimport { PanelComponent } from './ui-components/layout/panel/panel.component';\nimport { ConsoleComponent } from './ui-components/console/console.component';\n\nimport { InfoViewerComponent } from './ui-components/help/info-viewer/info-viewer.component';\nimport { HelpViewerComponent } from './ui-components/help/help-viewer/help-viewer.component';\nimport { MobiusAbout, HelpFundamentals, HelpModel } from './ui-components/help/info-viewer/help.template';\n\nimport { GSViewer } from './gs-viewer/gs-viewer.module';\nimport { MobiusCesium } from './mobius-cesium/mobius-cesium.module';\n\n\nimport { FileLoadDialogComponent } from './ui-components/dialogs/file-load-dialog.component';\nimport { GraphEdgeComponent } from './ui-components/graph/graph-edge/graph-edge.component';\nimport { MobiusEditorComponent } from './ui-components/main/mobius-editor/mobius-editor.component';\nimport { MobiusViewerComponent } from './ui-components/main/mobius-viewer/mobius-viewer.component';\nimport { LandingComponent } from './ui-components/main/mobius-landing/landing.component';\nimport { MobiusGalleryComponent } from './ui-components/main/mobius-gallery/mobius-gallery.component';\n\nimport { NgxJsonViewerModule } from 'ngx-json-viewer';\n\nimport { ShortNamePipe } from './pipes/short-name.pipe';\nimport { SimpleNamePipe } from './pipes/simple-name.pipe';\nimport { PortTypePipe } from './pipes/port-type-name.pipe';\n\nimport { PublishSettingsComponent } from './ui-components/controls/publish-settings/publish-settings.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nconst appRoutes: Routes = [\n  { path: 'editor', component: MobiusEditorComponent },\n  { path: 'gallery', component: MobiusGalleryComponent },\n  { path: 'viewer/:id',      component: MobiusViewerComponent },\n  { path: '**', component: MobiusEditorComponent }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MenuComponent,\n    FlowchartViewerComponent,\n    CodeViewerComponent,\n    GeometryViewerComponent,\n    CesiumViewerComponent,\n    FlowchartControlsComponent,\n    ModuleViewerComponent,\n    ProcedureEditorComponent,\n    ProcedureItemComponent,\n    ParameterViewerComponent,\n    ParameterEditorComponent,\n    ModuleboxComponent,\n    EditorComponent,\n    ViewerContainerComponent,\n    NodeLibraryComponent,\n    PanelComponent,\n    ParameterSettingsDialogComponent,\n    HelpViewerComponent,\n    InfoViewerComponent,\n    MobiusAbout, \n    HelpFundamentals,\n    HelpModel,\n    FileLoadDialogComponent,\n    GraphEdgeComponent,\n    MobiusEditorComponent,\n    MobiusViewerComponent,\n    LandingComponent,\n    MobiusGalleryComponent,\n    ShortNamePipe,\n    SimpleNamePipe,\n    PortTypePipe,\n    PublishSettingsComponent,\n    TextViewerComponent,\n    ConsoleComponent\n  ],\n  entryComponents: [\n    ModuleboxComponent,\n    ParameterSettingsDialogComponent,\n    FileLoadDialogComponent,\n    PublishSettingsComponent,\n    ParameterViewerComponent,\n    //\n    ViewerContainerComponent,\n    FlowchartViewerComponent,\n    EditorComponent,\n    GeometryViewerComponent,\n    CesiumViewerComponent,\n    TextViewerComponent,\n    CodeViewerComponent,\n    ConsoleComponent, \n    HelpViewerComponent,\n    InfoViewerComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    RouterModule.forRoot(\n      appRoutes,\n      { enableTracing: false } // \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CesiumViewerComponent.html":{"url":"components/CesiumViewerComponent.html","title":"component - CesiumViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CesiumViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui-components/viewers/cesium-viewer/cesium-viewer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cesium-viewer\n            \n\n            \n                styleUrls\n                cesium-viewer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./cesium-viewer.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                port\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                save_geojson\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mode\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_fs: FlowchartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui-components/viewers/cesium-viewer/cesium-viewer.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _fs\n                                                  \n                                                        \n                                                                    FlowchartService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mode\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui-components/viewers/cesium-viewer/cesium-viewer.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/viewers/cesium-viewer/cesium-viewer.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/viewers/cesium-viewer/cesium-viewer.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save_geojson\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave_geojson()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/viewers/cesium-viewer/cesium-viewer.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            port\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        port:     OutputPort\n\n                    \n                \n                    \n                        \n                            Type :     OutputPort\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/viewers/cesium-viewer/cesium-viewer.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/viewers/cesium-viewer/cesium-viewer.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Injector, OnInit, Input } from '@angular/core';\n\nimport { OutputPort } from '../../../base-classes/port/PortModule';\nimport { IGraphNode } from '../../../base-classes/node/NodeModule';\n\nimport * as gs from 'gs-json';\n\nimport { FlowchartService } from '../../../global-services/flowchart.service';\n\n@Component({\n  selector: 'app-cesium-viewer',\n  templateUrl: './cesium-viewer.component.html',\n  styleUrls: ['./cesium-viewer.component.scss']\n})\nexport class CesiumViewerComponent implements OnInit{\n\n  @Input() mode: string;\n\n\tport: OutputPort;\n  private subscriptions = [];\n\n  constructor(private _fs: FlowchartService){}\n\n  ngOnInit(){\n    this.subscriptions.push(this._fs.node$.subscribe( (node) => this.port = node.outputs[0] ));\n  }\n\n  ngOnDestroy(){\n    this.subscriptions.map(function(s){\n      s.unsubscribe();\n    })\n  }\n\n\n  // save the geojson\n  save_geojson(): void{\n    let fileString = JSON.stringify(this.port.value);\n    let blob = new Blob([fileString], {type: 'application/json'});\n    FileUtils.downloadContent(blob, \"output.geojson\");\n  }\n\n}\n\n\n\nabstract class FileUtils{\n  public static downloadContent(blob, filename) {\n    if (window.navigator.msSaveOrOpenBlob) {\n      window.navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n        const a = document.createElement('a');\n        document.body.appendChild(a);\n        const url = window.URL.createObjectURL(blob);\n        a.href = url;\n        a.download = filename;\n        a.click();\n        setTimeout(() => {\n          window.URL.revokeObjectURL(url);\n          document.body.removeChild(a);\n        }, 0)\n    }\n  }\n}\n    \n\n    \n        \n\t\n\t\t\n\t\t\n\t\t\n\n\n\t\t\n\t\t\tSave GeoJSON\n\t\t\n\t\n\t\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\t\t\t\t\t\t\tSave GeoJSON\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CesiumViewerComponent', 'selector': 'app-cesium-viewer'},{'name': 'CodeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ConsoleComponent', 'selector': 'app-console'},{'name': 'DataComponent', 'selector': 'app-data'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FileLoadDialogComponent', 'selector': 'file-load-dialog'},{'name': 'FlowchartControlsComponent', 'selector': 'app-flowchart-controls'},{'name': 'FlowchartViewerComponent', 'selector': 'app-flowchart-viewer'},{'name': 'GSViewerComponent', 'selector': 'gs-viewer'},{'name': 'GeometryViewerComponent', 'selector': 'app-geometry-viewer'},{'name': 'GraphEdgeComponent', 'selector': 'app-graph-edge'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HelpFundamentals', 'selector': 'app-help-fundamentals'},{'name': 'HelpModel', 'selector': 'app-help-model'},{'name': 'HelpViewerComponent', 'selector': 'app-help-viewer'},{'name': 'InfoViewerComponent', 'selector': 'app-info-viewer'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MobiusAbout', 'selector': 'app-help-about'},{'name': 'MobiusEditorComponent', 'selector': 'app-mobius-editor'},{'name': 'MobiusGalleryComponent', 'selector': 'mobius-gallery'},{'name': 'MobiusViewerComponent', 'selector': 'app-mobius-viewer'},{'name': 'MobiuscesiumComponent', 'selector': 'mobius-cesium'},{'name': 'ModuleViewerComponent', 'selector': 'app-module-viewer'},{'name': 'ModuleboxComponent', 'selector': 'app-modulebox'},{'name': 'NodeLibraryComponent', 'selector': 'app-node-library'},{'name': 'PanelComponent', 'selector': 'app-panel'},{'name': 'ParameterEditorComponent', 'selector': 'app-parameter-editor'},{'name': 'ParameterSettingsDialogComponent', 'selector': 'parameter-settings-dialog'},{'name': 'ParameterViewerComponent', 'selector': 'app-parameter-viewer'},{'name': 'ProcedureEditorComponent', 'selector': 'app-procedure-editor'},{'name': 'ProcedureItemComponent', 'selector': 'app-procedure-item'},{'name': 'PublishComponent', 'selector': 'app-publish'},{'name': 'PublishSettingsComponent', 'selector': 'app-publish-settings'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'TextViewerComponent', 'selector': 'app-text-viewer'},{'name': 'ToolwindowComponent', 'selector': 'app-toolwindow'},{'name': 'ViewerComponent', 'selector': 'app-viewer'},{'name': 'ViewerComponent', 'selector': 'cesium-viewer'},{'name': 'ViewerContainerComponent', 'selector': 'app-viewer-container'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CesiumViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CodeFactory.html":{"url":"classes/CodeFactory.html","title":"class - CodeFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  CodeFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/base-classes/code/CodeFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _modules\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getCodeGenerator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _modules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _modules:     IModule[]\n\n                    \n                \n                    \n                        \n                            Type :     IModule[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/base-classes/code/CodeFactory.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getCodeGenerator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCodeGenerator(language: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/code/CodeFactory.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        language\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ICodeGenerator\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {ICodeGenerator} from './ICodeGenerator';\nimport {CodeGeneratorJS} from './generators/javascript_generator';\nimport {IModule} from './computation-modules/IModule'; \n\nexport class CodeFactory{\n\n\tprivate _modules: IModule[];\n\n\tstatic getCodeGenerator(language: string): ICodeGenerator{\n\n\t\tif(language == \"js\"){\n\t\t\treturn new CodeGeneratorJS();\n\t\t}\n\t\telse\n\t\t\tthrow Error(\"Unknown language\");\n\n\t}; \n\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CodeGenerator.html":{"url":"classes/CodeGenerator.html","title":"class - CodeGenerator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  CodeGenerator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/base-classes/code/CodeGenerator.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ICodeGenerator\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _language\n                            \n                            \n                                    Private\n                                _modules\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute_node\n                            \n                            \n                                get_code_connection_line\n                            \n                            \n                                get_code_display\n                            \n                            \n                                get_code_function_call\n                            \n                            \n                                get_code_node\n                            \n                            \n                                get_code_node_def\n                            \n                            \n                                get_code_node_io\n                            \n                            \n                                get_code_port_input\n                            \n                            \n                                get_code_port_output\n                            \n                            \n                                get_code_procedure\n                            \n                            \n                                getLanguage\n                            \n                            \n                                setModules\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(language: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/base-classes/code/CodeGenerator.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        language\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _language\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _language:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/base-classes/code/CodeGenerator.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _modules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _modules:     IModule[]\n\n                    \n                \n                    \n                        \n                            Type :     IModule[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/base-classes/code/CodeGenerator.ts:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            execute_node\n                            \n                            \n                        \n                    \n                \n                \n                    \nexecute_node(node: IGraphNode, params: any, Modules: IModule, print: Function, globals?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/code/CodeGenerator.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    IGraphNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        params\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        Modules\n                                                        \n                                                                    IModule\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        print\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        globals\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_code_connection_line\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_code_connection_line(input_node: IGraphNode, input_port: number, output_node: IGraphNode, output_port: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/code/CodeGenerator.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input_node\n                                                        \n                                                                    IGraphNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        input_port\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        output_node\n                                                        \n                                                                    IGraphNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        output_port\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_code_display\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_code_display(flowchart: IFlowchart)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/code/CodeGenerator.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        flowchart\n                                                        \n                                                                    IFlowchart\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_code_function_call\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_code_function_call(node: IGraphNode, params?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/code/CodeGenerator.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    IGraphNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        params\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_code_node\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_code_node(node: IGraphNode, prodArr?: number, withoutFnOutput?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/code/CodeGenerator.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    IGraphNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        prodArr\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        withoutFnOutput\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_code_node_def\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_code_node_def(node: IGraphNode)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/code/CodeGenerator.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    IGraphNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_code_node_io\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_code_node_io(node: IGraphNode, output_idx: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/code/CodeGenerator.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    IGraphNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        output_idx\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_code_port_input\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_code_port_input(port: InputPort)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/code/CodeGenerator.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        port\n                                                        \n                                                                    InputPort\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_code_port_output\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_code_port_output(port: OutputPort)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/code/CodeGenerator.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        port\n                                                        \n                                                                    OutputPort\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_code_procedure\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_code_procedure(procedure: IProcedure)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/code/CodeGenerator.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        procedure\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLanguage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLanguage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/code/CodeGenerator.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setModules\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetModules(modules: IModule[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/code/CodeGenerator.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modules\n                                                        \n                                                                    IModule[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/code/CodeGenerator.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { IModule } from './computation-modules/IModule'; \n\nimport { ICodeGenerator } from \"./ICodeGenerator\";\n\nimport { IFlowchart } from \"../flowchart/FlowchartModule\";\nimport { IGraphNode } from \"../node/NodeModule\";\nimport { IProcedure } from \"../procedure/ProcedureModule\";\nimport { InputPort, OutputPort } from \"../port/PortModule\";\n\nexport abstract class CodeGenerator implements ICodeGenerator{\n\n\tprivate _language: string; \n\tprivate _modules: IModule[];\n\n\tconstructor(language: string){  this._language = language; };\n\n\ttoString(){\n\t\treturn `${this._language}-generator`;\n\t}\n\n\tsetModules(modules: IModule[]){  this._modules = modules; };\n\n\tgetLanguage(): string{  return this._language; };\n\n\tget_code_display(flowchart: IFlowchart) :string{ throw Error(\"Not Implemented: CodeGenerator\") };\n\tget_code_node_def(node: IGraphNode): string{ throw Error(\"Not Implemented: CodeGenerator\") };\n\tget_code_function_call(node: IGraphNode, params?: any): string{ throw Error(\"Not Implemented: CodeGenerator\") };\n\tget_code_node(node: IGraphNode, prodArr?: number, withoutFnOutput?: boolean): string{ throw Error(\"Not Implemented: CodeGenerator\") };\n\tget_code_node_io(node: IGraphNode, output_idx: number): string{ throw Error(\"Not Implemented: CodeGenerator\") };\n\tget_code_connection_line(input_node: IGraphNode, input_port: number, output_node: IGraphNode, output_port: number): string{ throw Error(\"Not Implemented: CodeGenerator\") };\n\tget_code_procedure(procedure: IProcedure): string{ throw Error(\"Not Implemented: CodeGenerator\") };\n\tget_code_port_input(port: InputPort): string{ throw Error(\"Not Implemented: CodeGenerator\") };\n\tget_code_port_output(port: OutputPort): string{ throw Error(\"Not Implemented: CodeGenerator\") };\n\texecute_node(node: IGraphNode, params: any, Modules: IModule, print: Function, globals?: any): any{ throw Error(\"Not Implemented: CodeGenerator\") };\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CodeService.html":{"url":"injectables/CodeService.html","title":"injectable - CodeService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CodeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/global-services/code.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _codeGenerator\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/global-services/code.service.ts:10\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _codeGenerator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _codeGenerator:     ICodeGenerator\n\n                    \n                \n                    \n                        \n                            Type :     ICodeGenerator\n\n                        \n                    \n                    \n                        \n                            Default value : CodeFactory.getCodeGenerator(\"js\")\n                        \n                    \n                        \n                            \n                                    Defined in src/app/global-services/code.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        generator\n                    \n                \n\n                \n                    \n                        getgenerator()\n                    \n                \n                            \n                                \n                                    Defined in src/app/global-services/code.service.ts:14\n                                \n                            \n\n                \n                    \n                        setgenerator(gen: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/global-services/code.service.ts:18\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            gen\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs/Subject';\n\nimport { ICodeGenerator, CodeFactory } from \"../base-classes/code/CodeModule\";\n\n@Injectable()\nexport class CodeService {\n\n\tprivate _codeGenerator: ICodeGenerator = CodeFactory.getCodeGenerator(\"js\");\n\n\tconstructor(){}\n\n\tget generator(): ICodeGenerator{\n\t\treturn this._codeGenerator;\n\t}\n\n\tset generator(gen: ICodeGenerator){\n\t\tthis._codeGenerator = gen;\n\t}\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CodeViewerComponent.html":{"url":"components/CodeViewerComponent.html","title":"component - CodeViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CodeViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui-components/viewers/code-viewer/code-viewer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-code-viewer\n            \n\n            \n                styleUrls\n                code-viewer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./code-viewer.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _codeString\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_cs: CodeService, _fs: FlowchartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui-components/viewers/code-viewer/code-viewer.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _cs\n                                                  \n                                                        \n                                                                    CodeService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _fs\n                                                  \n                                                        \n                                                                    FlowchartService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/viewers/code-viewer/code-viewer.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/viewers/code-viewer/code-viewer.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _codeString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _codeString:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/viewers/code-viewer/code-viewer.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/viewers/code-viewer/code-viewer.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Injector, OnInit, OnDestroy } from '@angular/core';\nimport { AceEditorModule } from 'ng2-ace-editor';\n\nimport { FlowchartService } from \"../../../global-services/flowchart.service\";\nimport { CodeService } from \"../../../global-services/code.service\";\n\nimport * as js_beautify from 'js-beautify';\n\n@Component({\n  selector: 'app-code-viewer',\n  templateUrl: './code-viewer.component.html',\n  styleUrls: ['./code-viewer.component.scss']\n})\nexport class CodeViewerComponent implements OnInit, OnDestroy{\n\n\tprivate subscriptions = [];\n\t\n\tprivate _codeString: string;\n\n\tconstructor(private _cs: CodeService, \n\t\t\t\tprivate _fs: FlowchartService) { }\n\n\tngOnInit(){\n\t\tthis.subscriptions.push( \t\n\t\t\tthis._fs.flowchart$.subscribe((fc) => \n\t\t\t\tthis._codeString = js_beautify.js_beautify(this._cs.generator.get_code_display(fc)) ) \n\t\t);\n\t}\n\n\tngOnDestroy(){\n\t\tthis.subscriptions.map(function(s){\n\t\t\ts.unsubscribe();\n\t\t})\n\t}\n\n} \n\n    \n\n    \n        \n\t\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CesiumViewerComponent', 'selector': 'app-cesium-viewer'},{'name': 'CodeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ConsoleComponent', 'selector': 'app-console'},{'name': 'DataComponent', 'selector': 'app-data'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FileLoadDialogComponent', 'selector': 'file-load-dialog'},{'name': 'FlowchartControlsComponent', 'selector': 'app-flowchart-controls'},{'name': 'FlowchartViewerComponent', 'selector': 'app-flowchart-viewer'},{'name': 'GSViewerComponent', 'selector': 'gs-viewer'},{'name': 'GeometryViewerComponent', 'selector': 'app-geometry-viewer'},{'name': 'GraphEdgeComponent', 'selector': 'app-graph-edge'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HelpFundamentals', 'selector': 'app-help-fundamentals'},{'name': 'HelpModel', 'selector': 'app-help-model'},{'name': 'HelpViewerComponent', 'selector': 'app-help-viewer'},{'name': 'InfoViewerComponent', 'selector': 'app-info-viewer'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MobiusAbout', 'selector': 'app-help-about'},{'name': 'MobiusEditorComponent', 'selector': 'app-mobius-editor'},{'name': 'MobiusGalleryComponent', 'selector': 'mobius-gallery'},{'name': 'MobiusViewerComponent', 'selector': 'app-mobius-viewer'},{'name': 'MobiuscesiumComponent', 'selector': 'mobius-cesium'},{'name': 'ModuleViewerComponent', 'selector': 'app-module-viewer'},{'name': 'ModuleboxComponent', 'selector': 'app-modulebox'},{'name': 'NodeLibraryComponent', 'selector': 'app-node-library'},{'name': 'PanelComponent', 'selector': 'app-panel'},{'name': 'ParameterEditorComponent', 'selector': 'app-parameter-editor'},{'name': 'ParameterSettingsDialogComponent', 'selector': 'parameter-settings-dialog'},{'name': 'ParameterViewerComponent', 'selector': 'app-parameter-viewer'},{'name': 'ProcedureEditorComponent', 'selector': 'app-procedure-editor'},{'name': 'ProcedureItemComponent', 'selector': 'app-procedure-item'},{'name': 'PublishComponent', 'selector': 'app-publish'},{'name': 'PublishSettingsComponent', 'selector': 'app-publish-settings'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'TextViewerComponent', 'selector': 'app-text-viewer'},{'name': 'ToolwindowComponent', 'selector': 'app-toolwindow'},{'name': 'ViewerComponent', 'selector': 'app-viewer'},{'name': 'ViewerComponent', 'selector': 'cesium-viewer'},{'name': 'ViewerContainerComponent', 'selector': 'app-viewer-container'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CodeViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConsoleComponent.html":{"url":"components/ConsoleComponent.html","title":"component - ConsoleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConsoleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui-components/console/console.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-console\n            \n\n            \n                styleUrls\n                console.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./console.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _messages\n                            \n                            \n                                _subscription\n                            \n                            \n                                    Private\n                                myScrollContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearConsole\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                notify\n                            \n                            \n                                scrollToBottom\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(consoleService: ConsoleService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui-components/console/console.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consoleService\n                                                  \n                                                        \n                                                                    ConsoleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearConsole\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearConsole()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/console/console.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/console/console.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notify\n                            \n                            \n                        \n                    \n                \n                \n                    \nnotify()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/console/console.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scrollToBottom\n                            \n                            \n                        \n                    \n                \n                \n                    \nscrollToBottom()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/console/console.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _messages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _messages:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/console/console.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _subscription:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/ui-components/console/console.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            myScrollContainer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        myScrollContainer:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/console/console.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, ViewEncapsulation} from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { ConsoleService } from '../../global-services/console.service';\n\n@Component({\n  selector: 'app-console',\n  templateUrl: './console.component.html',\n  styleUrls: ['./console.component.scss'],\n  encapsulation: ViewEncapsulation.None \n})\nexport class ConsoleComponent implements OnInit {\n\n  @ViewChild('scrollMe') private myScrollContainer: ElementRef;\n\n  _messages = [];\n  _subscription; \n\n  constructor(private consoleService: ConsoleService) { \n  \t\tthis._subscription = this.consoleService.getMessage().subscribe(message => { \n\t\t\tthis.notify();\n\t\t});\n  }\n\n  ngOnInit() {\n  \tthis._messages = this.consoleService.getContent();\n    this.scrollToBottom();\n  }\n\n  scrollToBottom(): void {\n      try {\n          this.myScrollContainer.nativeElement.scrollTop = this.myScrollContainer.nativeElement.scrollHeight;\n      } catch(err) { }                 \n  }\n\n  notify(){ \n  \tthis._messages = this.consoleService.getContent();\n  }\n\n  clearConsole(): void{\n    this.consoleService.clearConsole();\n  }\n\n}\n\n    \n\n    \n        '\n\t\n\t\t\n\t\n\t\n\t\t\n\t\t\t{{msg.time | date:'mediumTime'}}\n\t\t\t\n\t\t\t\n\t\t\n\t\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\\'\t\t\t\t\t\t\t\t\t\t{{msg.time | date:\\'mediumTime\\'}}\t\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CesiumViewerComponent', 'selector': 'app-cesium-viewer'},{'name': 'CodeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ConsoleComponent', 'selector': 'app-console'},{'name': 'DataComponent', 'selector': 'app-data'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FileLoadDialogComponent', 'selector': 'file-load-dialog'},{'name': 'FlowchartControlsComponent', 'selector': 'app-flowchart-controls'},{'name': 'FlowchartViewerComponent', 'selector': 'app-flowchart-viewer'},{'name': 'GSViewerComponent', 'selector': 'gs-viewer'},{'name': 'GeometryViewerComponent', 'selector': 'app-geometry-viewer'},{'name': 'GraphEdgeComponent', 'selector': 'app-graph-edge'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HelpFundamentals', 'selector': 'app-help-fundamentals'},{'name': 'HelpModel', 'selector': 'app-help-model'},{'name': 'HelpViewerComponent', 'selector': 'app-help-viewer'},{'name': 'InfoViewerComponent', 'selector': 'app-info-viewer'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MobiusAbout', 'selector': 'app-help-about'},{'name': 'MobiusEditorComponent', 'selector': 'app-mobius-editor'},{'name': 'MobiusGalleryComponent', 'selector': 'mobius-gallery'},{'name': 'MobiusViewerComponent', 'selector': 'app-mobius-viewer'},{'name': 'MobiuscesiumComponent', 'selector': 'mobius-cesium'},{'name': 'ModuleViewerComponent', 'selector': 'app-module-viewer'},{'name': 'ModuleboxComponent', 'selector': 'app-modulebox'},{'name': 'NodeLibraryComponent', 'selector': 'app-node-library'},{'name': 'PanelComponent', 'selector': 'app-panel'},{'name': 'ParameterEditorComponent', 'selector': 'app-parameter-editor'},{'name': 'ParameterSettingsDialogComponent', 'selector': 'parameter-settings-dialog'},{'name': 'ParameterViewerComponent', 'selector': 'app-parameter-viewer'},{'name': 'ProcedureEditorComponent', 'selector': 'app-procedure-editor'},{'name': 'ProcedureItemComponent', 'selector': 'app-procedure-item'},{'name': 'PublishComponent', 'selector': 'app-publish'},{'name': 'PublishSettingsComponent', 'selector': 'app-publish-settings'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'TextViewerComponent', 'selector': 'app-text-viewer'},{'name': 'ToolwindowComponent', 'selector': 'app-toolwindow'},{'name': 'ViewerComponent', 'selector': 'app-viewer'},{'name': 'ViewerComponent', 'selector': 'cesium-viewer'},{'name': 'ViewerContainerComponent', 'selector': 'app-viewer-container'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConsoleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleService.html":{"url":"injectables/ConsoleService.html","title":"injectable - ConsoleService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ConsoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/global-services/console.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _messages\n                            \n                            \n                                    Static\n                                IP\n                            \n                            \n                                level\n                            \n                            \n                                logWithDate\n                            \n                            \n                                    Private\n                                subject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMessage\n                            \n                            \n                                clearConsole\n                            \n                            \n                                clearMessage\n                            \n                            \n                                getContent\n                            \n                            \n                                getIP\n                            \n                            \n                                getMessage\n                            \n                            \n                                log\n                            \n                            \n                                    Static\n                                log_to_db\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/global-services/console.service.ts:28\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \naddMessage(message: string, type: EConsoleMessageType)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/console.service.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                                    EConsoleMessageType\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                EConsoleMessageType.General\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearConsole\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearConsole()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/console.service.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearMessage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/console.service.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getContent\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetContent()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/console.service.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIP\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIP()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/console.service.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMessage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/console.service.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            log\n                            \n                            \n                        \n                    \n                \n                \n                    \nlog(msg: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/console.service.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        msg\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            log_to_db\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        log_to_db(msg: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/console.service.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        msg\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendMessage(message?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/console.service.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _messages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _messages:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/global-services/console.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            IP\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        IP:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/global-services/console.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            level\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        level:     LogLevel\n\n                    \n                \n                    \n                        \n                            Type :     LogLevel\n\n                        \n                    \n                    \n                        \n                            Default value : LogLevel.All\n                        \n                    \n                        \n                            \n                                    Defined in src/app/global-services/console.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logWithDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        logWithDate:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/global-services/console.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subject:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/global-services/console.service.ts:41\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Subject} from 'rxjs/Subject';\n\nexport enum EConsoleMessageType{\n\tPrint = \"print\", \n\tError = \"error\", \n\tGeneral = \"general\"\n}\n\nexport enum LogLevel {\n  All = 0,\n  Debug = 1,\n  Info = 2,\n  Warn = 3,\n  Error = 4,\n  Fatal = 5,\n  Off = 6\n}\n\n@Injectable()\nexport class ConsoleService {\n\n\t_messages;\n\tlevel: LogLevel = LogLevel.All;\n\tlogWithDate: boolean = true;\n\n\tpublic static IP: string;\n\n\tconstructor() {\n\t\tthis._messages = [];\n\t\t//Enable in Production:: this.getIP();\n\t}\n\n\tgetIP(){\n\t\tfetch('https://ipapi.co/json/').then(result => result.json()).then((data)=> {ConsoleService.IP = data.ip;});\n\t}\n\n\t// message handling between components\n\t// \n\tprivate subject = new Subject();\n\tsendMessage(message ?: string) {\n\t  this.subject.next({ text: message });\n\t}\n\n\tclearMessage() {\n\t  this.subject.next();\n\t}\n\n\tgetMessage(): Observable {\n\t  return this.subject.asObservable(); \t\n\t}\n\n\taddMessage(message: string, type: EConsoleMessageType = EConsoleMessageType.General): void{\n  \t\tlet obj = {}\n  \t\tobj[\"time\"] = new Date();\n  \t\tobj[\"message\"] = message;\n  \t\tobj[\"type\"] = type;\n  \t\tthis._messages.push(obj);\n  \t\tthis.sendMessage();\n\t};\n\n\tgetContent(){\n\t\t\treturn this._messages; \n\t}\n\n\tclearConsole(): void{\n\t\tthis._messages = [];\n\t\tthis.sendMessage();\n\t}\n\n\tlog(msg: any){\n\t\t//fetch(`http://137.132.146.35:9000/insert?ip=127.0.0.1&msg=${msg}`)\n\t\tconsole.log(`[${(new Date()).toISOString()}] ${msg}`);\n\t}\n\n\tpublic static log_to_db(msg){\n\t\ttry{\n\t\t\tconsole.log(`Logging to database`);\n\t\t\t//fetch(`//137.132.146.35:9000/insert?ip=${ConsoleService.IP}&msg=${msg.split(\"\\n\").join(\"\")}`).then((res)=>console.log(res))\n\t\t}\n\t\tcatch(ex){\n\t\t\tconsole.log('Failed to push to database');\n\t\t}\n\t}\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Constants.html":{"url":"classes/Constants.html","title":"class - Constants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Constants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/constants.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        GALLERY_URL\n                    \n                \n\n                \n                    \n                        getGALLERY_URL()\n                    \n                \n                            \n                                \n                                    Defined in src/app/constants.ts:2\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        FILE_URL\n                    \n                \n\n                \n                    \n                        getFILE_URL()\n                    \n                \n                            \n                                \n                                    Defined in src/app/constants.ts:6\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export class Constants {\n\tpublic static get GALLERY_URL(): string \n\t\t{ return \"https://api.github.com/repos/design-automation/mobius-gallery/contents/examples?ref=master\"; \n\t};\n\n\tpublic static get FILE_URL(): string { \n\t\t\treturn \"https://raw.githubusercontent.com/design-automation/mobius-gallery/master/examples/\";\n\t};\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CustomMaterialModule.html":{"url":"modules/CustomMaterialModule.html","title":"module - CustomMaterialModule","body":"\n                   \n\n\n\n\n  Modules\n  CustomMaterialModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/custom-angular-modules/CustomMaterialModule.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatMenuModule, MatExpansionModule, \n\tMatButtonModule, MatCheckboxModule, MatTooltipModule, \n\tMatDialogModule, MatToolbarModule, MatIconModule, \n\tMatButtonToggleModule, MatTabsModule, MatInputModule, MatListModule,\n  MatSliderModule, MatGridListModule, MatCardModule, MatSidenavModule} from '@angular/material';\n\n\n/*\n * This module imports all thre required components from Angular Material\n */\n\n@NgModule({\n  imports: [BrowserAnimationsModule, MatExpansionModule, MatSidenavModule,\n  \t\t\tMatMenuModule, MatButtonModule, MatCheckboxModule, \n  \t\t\tMatTooltipModule, MatDialogModule, MatToolbarModule, MatIconModule, \n  \t\t\tMatButtonToggleModule, MatTabsModule, MatInputModule, MatListModule, MatSliderModule, MatGridListModule, MatCardModule],\n  exports: [BrowserAnimationsModule, MatExpansionModule,  MatSidenavModule,\n  \t\t\tMatMenuModule, MatButtonModule, MatCheckboxModule, \n  \t\t\tMatTooltipModule, MatDialogModule, MatToolbarModule, MatIconModule,\n  \t\t\tMatButtonToggleModule, MatTabsModule, MatInputModule, MatListModule, MatSliderModule, MatGridListModule, MatCardModule]\n})\nexport class CustomMaterialModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataProcedure.html":{"url":"classes/DataProcedure.html","title":"class - DataProcedure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataProcedure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/base-classes/procedure/DataProcedure.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Procedure\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                count\n                            \n                            \n                                    Public\n                                _children\n                            \n                            \n                                    Private\n                                _disabled\n                            \n                            \n                                    Private\n                                _error\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Protected\n                                _leftComponent\n                            \n                            \n                                    Private\n                                _level\n                            \n                            \n                                    Private\n                                _parent\n                            \n                            \n                                    Private\n                                _printToConsole\n                            \n                            \n                                    Protected\n                                _rightComponent\n                            \n                            \n                                    Private\n                                _selected\n                            \n                            \n                                    Private\n                                _type\n                            \n                            \n                                    Public\n                                hasChildren\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                update\n                            \n                            \n                                getCodeString\n                            \n                            \n                                hasParent\n                            \n                            \n                                reset\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data?: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/base-classes/procedure/DataProcedure.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            count\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        count:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/base-classes/procedure/DataProcedure.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _children\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _children:     IProcedure[]\n\n                    \n                \n                    \n                        \n                            Type :     IProcedure[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _disabled:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _error:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _leftComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _leftComponent:     IComponent\n\n                    \n                \n                    \n                        \n                            Type :     IComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _level\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _level:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _parent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _parent:     IProcedure\n\n                    \n                \n                    \n                        \n                            Type :     IProcedure\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _printToConsole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _printToConsole:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _rightComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _rightComponent:     IComponent\n\n                    \n                \n                    \n                        \n                            Type :     IComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _selected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selected:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _type:     ProcedureTypes\n\n                    \n                \n                    \n                        \n                            Type :     ProcedureTypes\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasChildren\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasChildren:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:23\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(prodData: any, parent: IProcedure)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/procedure/DataProcedure.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prodData\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parent\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCodeString\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCodeString(code_generator: ICodeGenerator)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:124\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        code_generator\n                                                        \n                                                                    ICodeGenerator\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasParent\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasParent()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:117\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(prodData: any, parent: IProcedure)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:137\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prodData\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parent\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Procedure} from \"./Procedure\";\nimport {IProcedure} from \"./IProcedure\";\nimport {ProcedureTypes} from \"./ProcedureTypes\";\nimport {IComponent} from \"./IComponent\";\n\nexport class DataProcedure extends Procedure{\n\n\tprivate static count: number = 1;\n\n\tconstructor(data ?: {result: string, value: string}){\n\t\tsuper(ProcedureTypes.Data, false); \n\n\t\tif(data == undefined){\n\t\t\tdata = {result: `var${DataProcedure.count}`, value: \"value\"};\n\t\t\tDataProcedure.count++;\n\t\t}\n\n\t\tlet left: IComponent = { expression: data.result, \n\t\t\t\t\t\t\t\t isAction: false, \n\t\t\t\t\t\t\t\t module: undefined, \n\t\t\t\t\t\t\t\t category: undefined, \n\t\t\t\t\t\t\t\t fn_name: undefined,\n\t\t\t\t\t\t\t\t params: undefined\n\t\t\t\t\t\t\t\t}\n\t\tlet right: IComponent = { expression: data.value, \n\t\t\t\t\t\t\t\t isAction: false, \n\t\t\t\t\t\t\t\t module: undefined, \n\t\t\t\t\t\t\t\t category: undefined, \n\t\t\t\t\t\t\t\t fn_name: undefined,\n\t\t\t\t\t\t\t\t params: undefined\n\t\t\t\t\t\t\t\t}\n\t\tsuper.left = (left);\n\t\tsuper.right = (right);\n\t}\n\n\tupdate(prodData: any, parent: IProcedure): void{\n\t\tsuper.update(prodData, parent);\n\n\t\tthis._leftComponent.expression = prodData._leftComponent.expression;\n\t\tthis._rightComponent.expression = prodData._rightComponent.expression;\n\t}\n\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataSubscriber.html":{"url":"classes/DataSubscriber.html","title":"class - DataSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/mobius-cesium/data/DataSubscriber.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _message\n                            \n                            \n                                    Private\n                                _subscription\n                            \n                            \n                                    Protected\n                                dataService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                notify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/mobius-cesium/data/DataSubscriber.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _message:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/mobius-cesium/data/DataSubscriber.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/mobius-cesium/data/DataSubscriber.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            dataService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataService:     DataService\n\n                    \n                \n                    \n                        \n                            Type :     DataService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/mobius-cesium/data/DataSubscriber.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notify\n                            \n                            \n                        \n                    \n                \n                \n                    \nnotify(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/mobius-cesium/data/DataSubscriber.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injector } from '@angular/core';\nimport { DataService } from \"./data.service\";\nimport { Subscription } from 'rxjs/Subscription';\n\nexport class DataSubscriber{\n\n\tprotected dataService: DataService;\n\tprivate _subscription: Subscription;\n\tprivate _message: any;\n\n\tconstructor(injector: Injector){ \n\t\tthis.dataService = injector.get(DataService);\n\t\tthis._subscription = this.dataService.getMessage().subscribe(message => { \n\t      this._message = message; \n\t      this.notify(message.text);\n\t    });\n\t}\n\n\tnotify(message: string){ \n\t\tconsole.warn(\"Notify function not Implemented\");\n\t}\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataSubscriber-1.html":{"url":"classes/DataSubscriber-1.html","title":"class - DataSubscriber-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/gs-viewer/data/DataSubscriber.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _message\n                            \n                            \n                                    Private\n                                _subscription\n                            \n                            \n                                    Protected\n                                dataService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                notify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/gs-viewer/data/DataSubscriber.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _message:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gs-viewer/data/DataSubscriber.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gs-viewer/data/DataSubscriber.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            dataService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataService:     DataService\n\n                    \n                \n                    \n                        \n                            Type :     DataService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gs-viewer/data/DataSubscriber.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notify\n                            \n                            \n                        \n                    \n                \n                \n                    \nnotify(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/gs-viewer/data/DataSubscriber.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injector } from '@angular/core';\nimport { DataService } from \"./data.service\";\nimport { Subscription } from 'rxjs/Subscription';\n\nexport class DataSubscriber{\n\n\tprotected dataService: DataService;\n\tprivate _subscription: Subscription;\n\tprivate _message: any;\n\n\tconstructor(injector: Injector){ \n\t\tthis.dataService = injector.get(DataService);\n\t\tthis._subscription = this.dataService.getMessage().subscribe(message => { \n\t      this._message = message; \n\t      this.notify(message.text);\n\t    });\n\t}\n\n\tnotify(message: string){ \n\t\tconsole.warn(\"Notify function not Implemented\");\n\t}\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DisplayComponent.html":{"url":"components/DisplayComponent.html","title":"component - DisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/mobius-cesium/setting/display.copmponent.ts\n\n\n\n    \n        Extends\n    \n    \n            DataSubscriber\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-display\n            \n\n            \n                styleUrls\n                display.copmponent.css\n            \n\n\n\n            \n                templateUrl\n                ./display.copmponent.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _Date\n                            \n                            \n                                    Private\n                                _Imagery\n                            \n                            \n                                    Private\n                                _ImageryList\n                            \n                            \n                                    Private\n                                _Shadow\n                            \n                            \n                                    Private\n                                _Sun\n                            \n                            \n                                    Private\n                                _UTC\n                            \n                            \n                                    Private\n                                data\n                            \n                            \n                                    Private\n                                mode\n                            \n                            \n                                    Private\n                                myElement\n                            \n                            \n                                    Private\n                                _message\n                            \n                            \n                                    Private\n                                _subscription\n                            \n                            \n                                    Protected\n                                dataService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeDate\n                            \n                            \n                                    Public\n                                changeShadow\n                            \n                            \n                                    Public\n                                changeSun\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                notify\n                            \n                            \n                                    Public\n                                onChangeImagery\n                            \n                            \n                                notify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector, myElement: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/mobius-cesium/setting/display.copmponent.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        myElement\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changeDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changeDate(_Date: , _UTC: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/mobius-cesium/setting/display.copmponent.ts:141\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _Date\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        _UTC\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changeShadow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changeShadow()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/mobius-cesium/setting/display.copmponent.ts:121\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changeSun\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changeSun()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/mobius-cesium/setting/display.copmponent.ts:107\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/mobius-cesium/setting/display.copmponent.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notify\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        notify(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/mobius-cesium/setting/display.copmponent.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onChangeImagery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onChangeImagery(_Imagery: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/mobius-cesium/setting/display.copmponent.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _Imagery\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notify\n                            \n                            \n                        \n                    \n                \n                \n                    \nnotify(message: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DataSubscriber\n\n                                \n                            \n                        \n                            \n                                    Defined in DataSubscriber:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _Date\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _Date:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/mobius-cesium/setting/display.copmponent.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _Imagery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _Imagery:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/mobius-cesium/setting/display.copmponent.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _ImageryList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _ImageryList:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/mobius-cesium/setting/display.copmponent.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _Shadow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _Shadow:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/mobius-cesium/setting/display.copmponent.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _Sun\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _Sun:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/mobius-cesium/setting/display.copmponent.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _UTC\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _UTC:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/mobius-cesium/setting/display.copmponent.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     JSON\n\n                    \n                \n                    \n                        \n                            Type :     JSON\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/mobius-cesium/setting/display.copmponent.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mode:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/mobius-cesium/setting/display.copmponent.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            myElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        myElement:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/mobius-cesium/setting/display.copmponent.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _message:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DataSubscriber\n\n                                \n                            \n                        \n                            \n                                    Defined in DataSubscriber:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DataSubscriber\n\n                                \n                            \n                        \n                            \n                                    Defined in DataSubscriber:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            dataService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataService:     DataService\n\n                    \n                \n                    \n                        \n                            Type :     DataService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DataSubscriber\n\n                                \n                            \n                        \n                            \n                                    Defined in DataSubscriber:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Injector, ElementRef ,NgModule} from \"@angular/core\";\nimport {DataSubscriber} from \"../data/DataSubscriber\";\nimport { DataService } from \"../data/data.service\";\nimport {ViewerComponent} from \"../viewer/viewer.component\";\nimport * as chroma from \"chroma-js\";\n\n@Component({\n  selector: \"app-display\",\n  templateUrl: \"./display.copmponent.html\",\n  styleUrls: [\"./display.copmponent.css\"],\n})\nexport class DisplayComponent extends DataSubscriber implements OnInit {\n  private myElement;\n  private data: JSON;\n  private mode: string;\n  private _ImageryList: any[];\n  private _Imagery: string;\n  private _Sun: boolean;\n  private _Shadow: boolean;\n  private _Date: string;\n  private _UTC: number;\n\n  constructor(injector: Injector, myElement: ElementRef) {\n  super(injector);\n  }\n  public ngOnInit() {\n    this.data = this.dataService.getGsModel();\n    this._ImageryList = [\"Disable\",\"Stamen Toner\",\"Stamen Toner(Lite)\",\"Terrain(Standard)\",\"Terrain(Background)\",\n                         \"OpenStreetMap\",\"Earth at Night\",\"Natural Earth\\u00a0II\",\"Blue Marble\"];\n    \n    if(this._Imagery === undefined){\n      this._Imagery = this._ImageryList[3];\n      this.onChangeImagery(this._Imagery);\n    }else {this._Imagery =this.dataService.get_Imagery();}\n\n    if(this._Sun === undefined){\n      this._Sun = false;\n      this.dataService.set_Sun(this._Sun);\n    }else {this._Sun =this.dataService.get_Sun();}\n\n    if(this._Shadow === undefined){\n      this._Shadow = false;\n      this.dataService.set_Shadow(this._Shadow);\n    }else {this._Shadow =this.dataService.get_Shadow();}\n\n    this._UTC = +8;\n    this.dataService.set_UTC(this._UTC);\n    if(this._Date ===undefined){\n      const today = new Date();\n      const year = today.getFullYear();\n      const month = String(today.getMonth()+1).padStart(2, \"0\");\n      const day = String(today.getDate()).padStart(2, \"0\");\n      this._Date = year+\"-\"+month+\"-\"+day;\n    }else {\n      this._Date = this.dataService.get_Date();\n      this.changeDate(this._Date,this._UTC);\n    }\n        this.dataService.set_Date(this._Date);\n  }\n  public  notify(message: string): void {\n  }\n  public onChangeImagery(_Imagery): void{\n    this._Imagery = _Imagery;\n    this.dataService.set_Imagery(_Imagery);\n    const layers = this.dataService.getViewer().scene.imageryLayers;\n    if(_Imagery === this._ImageryList[0]) {\n      layers.removeAll();\n      this.dataService.getViewer().scene.globe.baseColor = Cesium.Color.GRAY;\n    }else if(_Imagery === this._ImageryList[1]){\n      layers.removeAll();\n      var blackMarble = layers.addImageryProvider(Cesium.createOpenStreetMapImageryProvider({\n        url : \"https://stamen-tiles.a.ssl.fastly.net/toner/\"\n      }));\n    }else if(_Imagery === this._ImageryList[2]){\n      layers.removeAll();\n      var blackMarble = layers.addImageryProvider(Cesium.createOpenStreetMapImageryProvider({\n        url : \"https://stamen-tiles.a.ssl.fastly.net/toner-lite/\"\n      }));\n    }else if(_Imagery === this._ImageryList[3]){\n      layers.removeAll();\n      var blackMarble = layers.addImageryProvider(Cesium.createOpenStreetMapImageryProvider({\n        url : \"https://stamen-tiles.a.ssl.fastly.net/terrain/\"\n      }));\n    }else if(_Imagery === this._ImageryList[4]){\n      layers.removeAll();\n      var blackMarble = layers.addImageryProvider(Cesium.createOpenStreetMapImageryProvider({\n        url : \"https://stamen-tiles.a.ssl.fastly.net/terrain-background/\"\n      }));\n    }else if(_Imagery === this._ImageryList[5]){\n      layers.removeAll();\n      var blackMarble = layers.addImageryProvider(Cesium.createOpenStreetMapImageryProvider({\n        url : \"https://a.tile.openstreetmap.org/\"\n      }));\n    }else if(_Imagery === this._ImageryList[6]){\n      layers.removeAll();\n      var blackMarble = layers.addImageryProvider(new Cesium.IonImageryProvider({ assetId: 3812 }));\n    }else if(_Imagery === this._ImageryList[7]){\n      layers.removeAll();\n      var blackMarble = layers.addImageryProvider(Cesium.createTileMapServiceImageryProvider({\n             url : Cesium.buildModuleUrl(\"Assets/Textures/NaturalEarthII\"),\n      }));\n    }else if(_Imagery === this._ImageryList[8]){\n      layers.removeAll();\n      var blackMarble = layers.addImageryProvider(new Cesium.IonImageryProvider({ assetId: 3845 }));\n    }\n  }\n  public changeSun(){\n    const viewer = this.dataService.getViewer();\n    this._Sun = ! this._Sun;\n    if(this._Sun === true){\n      viewer.terrainShadows = Cesium.ShadowMode.ENABLED;\n      viewer.scene.globe.enableLighting =  true;\n      viewer.scene.sun.show = true;\n    } else {\n      viewer.terrainShadows = undefined;\n      viewer.scene.globe.enableLighting =  false;\n      viewer.scene.sun.show = false;\n    }\n    this.dataService.set_Sun(this._Sun);\n  }\n  public changeShadow(){\n    this._Shadow = ! this._Shadow;\n    const promise = this.dataService.getcesiumpromise();\n    if(this._Shadow === true){\n      promise.then(function(dataSource) {\n        const entities = dataSource.entities.values;\n        for(const entity of entities) {\n          entity.polygon.shadows = Cesium.ShadowMode.ENABLED;\n        }\n      });\n    } else {\n      promise.then(function(dataSource) {\n        const entities = dataSource.entities.values;\n        for(const entity of entities) {\n          entity.polygon.shadows = undefined;\n        }\n      });\n    }\n    this.dataService.set_Shadow(this._Shadow);\n  }\n  public changeDate(_Date,_UTC){\n    this._Date = _Date;\n    this._UTC = _UTC;\n    const viewer = this.dataService.getViewer();\n    const now = new Cesium.JulianDate.fromIso8601(this._Date);\n    const tomorrow = now.clone();\n    tomorrow.dayNumber = tomorrow.dayNumber + 1;\n    viewer.clock.currentTime = Cesium.JulianDate.addHours(now,this._UTC,now);\n    viewer.clock.startTime = now.clone();\n    viewer.clock.stopTime = tomorrow.clone();\n    viewer.timeline.zoomTo(viewer.clock.startTime, viewer.clock.stopTime);\n    this.dataService.set_Date(this._Date);\n    this.dataService.set_UTC(this._UTC);\n    viewer.timeline.updateFromClock();\n    /*viewer.animation.viewModel.dateFormatter = this.localeDateTimeFormatter\n    viewer.animation.viewModel.timeFormatter = this.localeTimeFormatter\n    //console.log(viewer.animation.viewModel.timeFormatter)\n    viewer.timeline.makeLabel = function (time) { return this.localeDateTimeFormatter(time) }*/\n\n  }\n  // Date formatting to a global form\n  /*localeDateTimeFormatter(datetime, viewModel, ignoredate) {\n    var julianDT = new Cesium.JulianDate(); \n    Cesium.JulianDate.addHours(datetime,8,julianDT)\n    var gregorianDT= Cesium.JulianDate.toGregorianDate(julianDT)\n    var objDT;\n    if (ignoredate)\n        objDT = '';\n    else {\n        objDT = new Date(gregorianDT.year, gregorianDT.month - 1, gregorianDT.day);\n        objDT = String(objDT).substr(4).slice(0, -44);\n        //console.log(objDT)\n        //objDT = gregorianDT.year  + '年' +objDT.toLocaleString(\"zh-cn\", { month: \"short\" })+ gregorianDT.day + '日' ;\n        //objDT = objDT.toLocaleString({ month: \"short\" }) + gregorianDT.day +gregorianDT.year;\n        \n        if (viewModel || gregorianDT.hour + gregorianDT.minute === 0)\n        return objDT;\n        objDT += ' ';\n    }\n    return objDT + Cesium.sprintf(\"%02d:%02d:%02d\", gregorianDT.hour, gregorianDT.minute, gregorianDT.second);\n  }\n  localeTimeFormatter(time, viewModel) {\n    //return this.localeDateTimeFormatter(time, viewModel, true);\n  }*/\n\n}\n\n    \n\n    \n        \n\t\n      \n      Imagery\n      \n        \n          {{Imagery}}\n        \n      \n      \n    \n    \n    \n      Sun\n      \n    \n    \n      Shadows\n      \n    \n    \n      Date\n        \n    \n    \n      UTC\n        \n    \n    \n\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t            Imagery                        {{Imagery}}                                      Sun                    Shadows                    Date                      UTC                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CesiumViewerComponent', 'selector': 'app-cesium-viewer'},{'name': 'CodeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ConsoleComponent', 'selector': 'app-console'},{'name': 'DataComponent', 'selector': 'app-data'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FileLoadDialogComponent', 'selector': 'file-load-dialog'},{'name': 'FlowchartControlsComponent', 'selector': 'app-flowchart-controls'},{'name': 'FlowchartViewerComponent', 'selector': 'app-flowchart-viewer'},{'name': 'GSViewerComponent', 'selector': 'gs-viewer'},{'name': 'GeometryViewerComponent', 'selector': 'app-geometry-viewer'},{'name': 'GraphEdgeComponent', 'selector': 'app-graph-edge'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HelpFundamentals', 'selector': 'app-help-fundamentals'},{'name': 'HelpModel', 'selector': 'app-help-model'},{'name': 'HelpViewerComponent', 'selector': 'app-help-viewer'},{'name': 'InfoViewerComponent', 'selector': 'app-info-viewer'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MobiusAbout', 'selector': 'app-help-about'},{'name': 'MobiusEditorComponent', 'selector': 'app-mobius-editor'},{'name': 'MobiusGalleryComponent', 'selector': 'mobius-gallery'},{'name': 'MobiusViewerComponent', 'selector': 'app-mobius-viewer'},{'name': 'MobiuscesiumComponent', 'selector': 'mobius-cesium'},{'name': 'ModuleViewerComponent', 'selector': 'app-module-viewer'},{'name': 'ModuleboxComponent', 'selector': 'app-modulebox'},{'name': 'NodeLibraryComponent', 'selector': 'app-node-library'},{'name': 'PanelComponent', 'selector': 'app-panel'},{'name': 'ParameterEditorComponent', 'selector': 'app-parameter-editor'},{'name': 'ParameterSettingsDialogComponent', 'selector': 'parameter-settings-dialog'},{'name': 'ParameterViewerComponent', 'selector': 'app-parameter-viewer'},{'name': 'ProcedureEditorComponent', 'selector': 'app-procedure-editor'},{'name': 'ProcedureItemComponent', 'selector': 'app-procedure-item'},{'name': 'PublishComponent', 'selector': 'app-publish'},{'name': 'PublishSettingsComponent', 'selector': 'app-publish-settings'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'TextViewerComponent', 'selector': 'app-text-viewer'},{'name': 'ToolwindowComponent', 'selector': 'app-toolwindow'},{'name': 'ViewerComponent', 'selector': 'app-viewer'},{'name': 'ViewerComponent', 'selector': 'cesium-viewer'},{'name': 'ViewerContainerComponent', 'selector': 'app-viewer-container'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditorComponent.html":{"url":"components/EditorComponent.html","title":"component - EditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui-components/editors/editor/editor.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editor\n            \n\n            \n                styleUrls\n                editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./editor.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _freeze\n                            \n                            \n                                _moduleList\n                            \n                            \n                                    Private\n                                _nodeX\n                            \n                            \n                                isVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                update_view\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_fs: FlowchartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui-components/editors/editor/editor.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _fs\n                                                  \n                                                        \n                                                                    FlowchartService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/editor/editor.component.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/editor/editor.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update_view\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate_view(node: IGraphNode)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/editor/editor.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    IGraphNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _freeze\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _freeze:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/editors/editor/editor.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _moduleList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _moduleList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/editors/editor/editor.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _nodeX\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _nodeX:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/ui-components/editors/editor/editor.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isVisible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isVisible:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/editors/editor/editor.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy} from '@angular/core';\nimport { FlowchartService } from '../../../global-services/flowchart.service';\nimport { IGraphNode } from '../../../base-classes/node/NodeModule';\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.scss']\n})\nexport class EditorComponent implements OnInit, OnDestroy{\n  \n  private _nodeX;\n\n  _moduleList = [];\n  _freeze: boolean;\n\n  isVisible: boolean = false;\n\n  constructor(private _fs: FlowchartService){}\n\n  ngOnInit(){ \n  \tthis._nodeX = this._fs.node$.subscribe( (node:IGraphNode) => this.update_view(node)  );\n  }\n\n  ngOnDestroy(){\n    this._nodeX.unsubscribe() \n  }\n\n  update_view(node:IGraphNode){\n    this.isVisible = node == undefined ? false : true; \n  }\n\n}\n\n    \n\n    \n        \n\t\n\t\n\t\tNo Node Selected\n\t\n\n\t\n\n\t\t\n\t\t\t\n\t\t\n\n\t\t\n\t\t\t\n\t\t \t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\n    \n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\tNo Node Selected\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CesiumViewerComponent', 'selector': 'app-cesium-viewer'},{'name': 'CodeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ConsoleComponent', 'selector': 'app-console'},{'name': 'DataComponent', 'selector': 'app-data'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FileLoadDialogComponent', 'selector': 'file-load-dialog'},{'name': 'FlowchartControlsComponent', 'selector': 'app-flowchart-controls'},{'name': 'FlowchartViewerComponent', 'selector': 'app-flowchart-viewer'},{'name': 'GSViewerComponent', 'selector': 'gs-viewer'},{'name': 'GeometryViewerComponent', 'selector': 'app-geometry-viewer'},{'name': 'GraphEdgeComponent', 'selector': 'app-graph-edge'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HelpFundamentals', 'selector': 'app-help-fundamentals'},{'name': 'HelpModel', 'selector': 'app-help-model'},{'name': 'HelpViewerComponent', 'selector': 'app-help-viewer'},{'name': 'InfoViewerComponent', 'selector': 'app-info-viewer'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MobiusAbout', 'selector': 'app-help-about'},{'name': 'MobiusEditorComponent', 'selector': 'app-mobius-editor'},{'name': 'MobiusGalleryComponent', 'selector': 'mobius-gallery'},{'name': 'MobiusViewerComponent', 'selector': 'app-mobius-viewer'},{'name': 'MobiuscesiumComponent', 'selector': 'mobius-cesium'},{'name': 'ModuleViewerComponent', 'selector': 'app-module-viewer'},{'name': 'ModuleboxComponent', 'selector': 'app-modulebox'},{'name': 'NodeLibraryComponent', 'selector': 'app-node-library'},{'name': 'PanelComponent', 'selector': 'app-panel'},{'name': 'ParameterEditorComponent', 'selector': 'app-parameter-editor'},{'name': 'ParameterSettingsDialogComponent', 'selector': 'parameter-settings-dialog'},{'name': 'ParameterViewerComponent', 'selector': 'app-parameter-viewer'},{'name': 'ProcedureEditorComponent', 'selector': 'app-procedure-editor'},{'name': 'ProcedureItemComponent', 'selector': 'app-procedure-item'},{'name': 'PublishComponent', 'selector': 'app-publish'},{'name': 'PublishSettingsComponent', 'selector': 'app-publish-settings'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'TextViewerComponent', 'selector': 'app-text-viewer'},{'name': 'ToolwindowComponent', 'selector': 'app-toolwindow'},{'name': 'ViewerComponent', 'selector': 'app-viewer'},{'name': 'ViewerComponent', 'selector': 'cesium-viewer'},{'name': 'ViewerContainerComponent', 'selector': 'app-viewer-container'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ElseControlProcedure.html":{"url":"classes/ElseControlProcedure.html","title":"class - ElseControlProcedure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ElseControlProcedure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/base-classes/procedure/ElseControlProcedure.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Procedure\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _children\n                            \n                            \n                                    Private\n                                _disabled\n                            \n                            \n                                    Private\n                                _error\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Protected\n                                _leftComponent\n                            \n                            \n                                    Private\n                                _level\n                            \n                            \n                                    Private\n                                _parent\n                            \n                            \n                                    Private\n                                _printToConsole\n                            \n                            \n                                    Protected\n                                _rightComponent\n                            \n                            \n                                    Private\n                                _selected\n                            \n                            \n                                    Private\n                                _type\n                            \n                            \n                                    Public\n                                hasChildren\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                update\n                            \n                            \n                                getCodeString\n                            \n                            \n                                hasParent\n                            \n                            \n                                reset\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data?: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/base-classes/procedure/ElseControlProcedure.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _children\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _children:     IProcedure[]\n\n                    \n                \n                    \n                        \n                            Type :     IProcedure[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _disabled:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _error:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _leftComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _leftComponent:     IComponent\n\n                    \n                \n                    \n                        \n                            Type :     IComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _level\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _level:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _parent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _parent:     IProcedure\n\n                    \n                \n                    \n                        \n                            Type :     IProcedure\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _printToConsole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _printToConsole:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _rightComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _rightComponent:     IComponent\n\n                    \n                \n                    \n                        \n                            Type :     IComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _selected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selected:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _type:     ProcedureTypes\n\n                    \n                \n                    \n                        \n                            Type :     ProcedureTypes\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasChildren\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasChildren:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:23\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(prodData: any, parent: IProcedure)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/procedure/ElseControlProcedure.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prodData\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parent\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCodeString\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCodeString(code_generator: ICodeGenerator)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:124\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        code_generator\n                                                        \n                                                                    ICodeGenerator\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasParent\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasParent()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:117\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(prodData: any, parent: IProcedure)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:137\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prodData\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parent\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {ProcedureTypes} from \"./ProcedureTypes\";\nimport {IComponent} from \"./IComponent\";\nimport {Procedure} from \"./Procedure\";\nimport {IProcedure} from \"./IProcedure\";\n\nexport class ElseControlProcedure extends Procedure{\n\n\tconstructor(data?: {condition: string}){\n\t\tsuper(ProcedureTypes.ElseControl, true);\n\n\t\tif(data == undefined){\n\t\t\tdata = {condition: \"conditional_expression\"}\n\t\t}\n\n\t\tlet left: IComponent = { expression: undefined, \n\t\t\t\t\t\t\t\t isAction: false, \n\t\t\t\t\t\t\t\t module: undefined, \n\t\t\t\t\t\t\t\t category: undefined, \n\t\t\t\t\t\t\t\t fn_name: undefined,\n\t\t\t\t\t\t\t\t params: undefined\n\t\t\t\t\t\t\t\t}\n\t\tlet right: IComponent = {\n\t\t\t\t\t\t\t     expression: data.condition, \n\t\t\t\t\t\t\t\t isAction: false, \n\t\t\t\t\t\t\t\t module: undefined, \n\t\t\t\t\t\t\t\t category: undefined, \n\t\t\t\t\t\t\t\t fn_name: undefined,\n\t\t\t\t\t\t\t\t params: undefined\n\t\t\t\t\t\t\t\t}\n\t\tsuper.left = (left);\n\t\tsuper.right = (right);\n\n\t}\n\n\tupdate(prodData: any, parent: IProcedure): void{\n\t\tsuper.update(prodData, parent);\n\n\t\tthis._leftComponent.expression = prodData._leftComponent.expression;\n\t\tthis._rightComponent.expression = prodData._rightComponent.expression;\n\t}\n\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ElseIfControlProcedure.html":{"url":"classes/ElseIfControlProcedure.html","title":"class - ElseIfControlProcedure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ElseIfControlProcedure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/base-classes/procedure/ElseIfControlProcedure.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Procedure\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _children\n                            \n                            \n                                    Private\n                                _disabled\n                            \n                            \n                                    Private\n                                _error\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Protected\n                                _leftComponent\n                            \n                            \n                                    Private\n                                _level\n                            \n                            \n                                    Private\n                                _parent\n                            \n                            \n                                    Private\n                                _printToConsole\n                            \n                            \n                                    Protected\n                                _rightComponent\n                            \n                            \n                                    Private\n                                _selected\n                            \n                            \n                                    Private\n                                _type\n                            \n                            \n                                    Public\n                                hasChildren\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                update\n                            \n                            \n                                getCodeString\n                            \n                            \n                                hasParent\n                            \n                            \n                                reset\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data?: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/base-classes/procedure/ElseIfControlProcedure.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _children\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _children:     IProcedure[]\n\n                    \n                \n                    \n                        \n                            Type :     IProcedure[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _disabled:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _error:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _leftComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _leftComponent:     IComponent\n\n                    \n                \n                    \n                        \n                            Type :     IComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _level\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _level:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _parent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _parent:     IProcedure\n\n                    \n                \n                    \n                        \n                            Type :     IProcedure\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _printToConsole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _printToConsole:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _rightComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _rightComponent:     IComponent\n\n                    \n                \n                    \n                        \n                            Type :     IComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _selected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selected:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _type:     ProcedureTypes\n\n                    \n                \n                    \n                        \n                            Type :     ProcedureTypes\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasChildren\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasChildren:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:23\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(prodData: any, parent: IProcedure)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/procedure/ElseIfControlProcedure.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prodData\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parent\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCodeString\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCodeString(code_generator: ICodeGenerator)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:124\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        code_generator\n                                                        \n                                                                    ICodeGenerator\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasParent\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasParent()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:117\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(prodData: any, parent: IProcedure)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:137\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prodData\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parent\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {ProcedureTypes} from \"./ProcedureTypes\";\nimport {IComponent} from \"./IComponent\";\nimport {Procedure} from \"./Procedure\";\nimport {IProcedure} from \"./IProcedure\";\n\nexport class ElseIfControlProcedure extends Procedure{\n\n\tconstructor(data?: {condition: string}){\n\t\tsuper(ProcedureTypes.ElseIfControl, true);\n\n\t\tif(data == undefined){\n\t\t\tdata = {condition: \"conditional_expression\"}\n\t\t}\n\n\t\tlet left: IComponent = { expression: undefined, \n\t\t\t\t\t\t\t\t isAction: false, \n\t\t\t\t\t\t\t\t module: undefined, \n\t\t\t\t\t\t\t\t category: undefined, \n\t\t\t\t\t\t\t\t fn_name: undefined,\n\t\t\t\t\t\t\t\t params: undefined\n\t\t\t\t\t\t\t\t}\n\t\tlet right: IComponent = {\n\t\t\t\t\t\t\t     expression: data.condition, \n\t\t\t\t\t\t\t\t isAction: false, \n\t\t\t\t\t\t\t\t module: undefined, \n\t\t\t\t\t\t\t\t category: undefined, \n\t\t\t\t\t\t\t\t fn_name: undefined,\n\t\t\t\t\t\t\t\t params: undefined\n\t\t\t\t\t\t\t\t}\n\t\tsuper.left = (left);\n\t\tsuper.right = (right);\n\n\n\t}\n\n\tupdate(prodData: any, parent: IProcedure): void{\n\t\tsuper.update(prodData, parent);\n\n\t\tthis._leftComponent.expression = prodData._leftComponent.expression;\n\t\tthis._rightComponent.expression = prodData._rightComponent.expression;\n\t}\n\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExecuteService.html":{"url":"injectables/ExecuteService.html","title":"injectable - ExecuteService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ExecuteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/global-services/execute.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                consoleMessages\n                            \n                            \n                                    Private\n                                    Static\n                                printFunction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_fs: FlowchartService, _cs: ConsoleService, _mb: MobiusService, _ms: ModuleService)\n                    \n                \n                        \n                            \n                                Defined in src/app/global-services/execute.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _fs\n                                                  \n                                                        \n                                                                    FlowchartService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _cs\n                                                  \n                                                        \n                                                                    ConsoleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _mb\n                                                  \n                                                        \n                                                                    MobiusService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _ms\n                                                  \n                                                        \n                                                                    ModuleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            execute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        execute()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/execute.service.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            consoleMessages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        consoleMessages:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/global-services/execute.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            printFunction\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        printFunction:     \n\n                    \n                \n                    \n                        \n                            Default value : function(varName: string, value: any){\n\n        let consoleHTML: string = \"\";\n        \n        let variable_name: string = varName;\n        let variable_value: string = value; \n\n        if(Array.isArray(value)){\n           variable_value = \"Array(\" + value.length + \" items)\"; //\"[\" + variable_value + \"]\";\n        }\n        else if(typeof value == 'string'){\n           variable_value = \"\\\"\" + value + \"\\\"\";\n        }\n        else if(typeof(value) == \"object\"){\n          let strRep: string = value.toString();\n          if(strRep !== \"[object Object]\"){\n            variable_value = strRep.replace(/\\n/g, '');\n          }\n          else{\n            let keys = Object.keys(value);\n            variable_value = \"JSON Object with properties: (\" + keys.toString() + \")\";;\n          }\n        }\n\n        consoleHTML += \"\" +  \"Value of \"  + variable_name + \": \" + \n               \"\"  + variable_value +  \"\";\n\n        console.log(`Printing ${consoleHTML}`);       \n        ExecuteService.consoleMessages.push(consoleHTML);\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/global-services/execute.service.ts:29\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Input, Output, EventEmitter } from '@angular/core';\n\nimport {ConsoleService, EConsoleMessageType} from \"./console.service\";\nimport {MobiusService} from \"./mobius.service\";\nimport {ModuleService} from \"./module.service\";\nimport {FlowchartService} from \"./flowchart.service\";\n\nimport {IFlowchart, FlowchartUtils} from '../base-classes/flowchart/FlowchartModule';\nimport {ICodeGenerator} from \"../base-classes/code/CodeModule\";\n\n\n@Injectable()\nexport class ExecuteService {\n\n    constructor(private _fs: FlowchartService, \n                private _cs: ConsoleService, \n                private _mb: MobiusService,\n                private _ms: ModuleService){\n\n    }\n\n    private static consoleMessages = [];\n\n\n    //\n    //    Global print function supplied to the execution \n    //    to print values to console viewer\n    //\n    private static printFunction = function(varName: string, value: any){\n\n        let consoleHTML: string = \"\";\n        \n        let variable_name: string = varName;\n        let variable_value: string = value; \n\n        if(Array.isArray(value)){\n           variable_value = \"Array(\" + value.length + \" items)\"; //\"[\" + variable_value + \"]\";\n        }\n        else if(typeof value == 'string'){\n           variable_value = \"\\\"\" + value + \"\\\"\";\n        }\n        else if(typeof(value) == \"object\"){\n          let strRep: string = value.toString();\n          if(strRep !== \"[object Object]\"){\n            variable_value = strRep.replace(/\\n/g, '');\n          }\n          else{\n            let keys = Object.keys(value);\n            variable_value = \"JSON Object with properties: (\" + keys.toString() + \")\";;\n          }\n        }\n\n        consoleHTML += \"\" +  \"Value of \"  + variable_name + \": \" + \n               \"\"  + variable_value +  \"\";\n\n        console.log(`Printing ${consoleHTML}`);       \n        ExecuteService.consoleMessages.push(consoleHTML);\n    }\n  \n\n    public execute(): any{\n\n        let flowchart: IFlowchart = this._fs.flowchart;\n        let code_generator: ICodeGenerator = this._mb.code_generator;\n\n\n        let consoleMessages: string[] = [ \"Printed Values\" ];\n\n        // get flowchart from _fs\n        // get code_generator from _mb\n\n        try{\n            \n            ExecuteService.consoleMessages = [];\n            FlowchartUtils.execute(flowchart, code_generator, ModuleService.MOB_MODS, ExecuteService.printFunction);\n            \n            this._cs.addMessage( ExecuteService.consoleMessages.join(\"\"), EConsoleMessageType.Print );\n\n            this._cs.addMessage(\"Flowchart was successfully executed.\");\n            \n            ///console.log(this._fs);\n            ///this.push_fs(this._fs);\n        }\n        catch(ex){\n\n            this._cs.log(ex);\n          \n            this._cs.addMessage( ExecuteService.consoleMessages.join(\"\"), EConsoleMessageType.Print );\n            \n            ExecuteService.consoleMessages = [];\n\n            let errorMessage: string = \"\" + ex + \"\";\n            this._cs.addMessage( errorMessage, EConsoleMessageType.Error );\n\n            // this.layoutService.showConsole();\n            // this.switchViewer(\"console-viewer\");\n        }\n\n        this._mb.processing = false;\n\n        // this.update();\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FileLoadDialogComponent.html":{"url":"components/FileLoadDialogComponent.html","title":"component - FileLoadDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FileLoadDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui-components/dialogs/file-load-dialog.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                file-load-dialog\n            \n\n\n\n\n            \n                templateUrl\n                file-load-dialog.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDialog\n                            \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui-components/dialogs/file-load-dialog.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseDialog(action: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/dialogs/file-load-dialog.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        action\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onNoClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonNoClick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/dialogs/file-load-dialog.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/dialogs/file-load-dialog.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/dialogs/file-load-dialog.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Injector, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nimport { MOBIUS } from '../../global-services/mobius.constants';\n//\n// Component for Parameter Settings\n//\n@Component({\n  selector: 'file-load-dialog',\n  templateUrl: 'file-load-dialog.html',\n})\nexport class FileLoadDialogComponent {\n\n  message: string;\n\n  constructor(public dialogRef: MatDialogRef) {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close('new');\n  }\n\n  closeDialog(action: string) {\n    this.dialogRef.close(action);\n  }\n\n}\n    \n\n    \n        {{message}}\n\n\n\nLoad File\nNew File\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{message}}Load FileNew File'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CesiumViewerComponent', 'selector': 'app-cesium-viewer'},{'name': 'CodeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ConsoleComponent', 'selector': 'app-console'},{'name': 'DataComponent', 'selector': 'app-data'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FileLoadDialogComponent', 'selector': 'file-load-dialog'},{'name': 'FlowchartControlsComponent', 'selector': 'app-flowchart-controls'},{'name': 'FlowchartViewerComponent', 'selector': 'app-flowchart-viewer'},{'name': 'GSViewerComponent', 'selector': 'gs-viewer'},{'name': 'GeometryViewerComponent', 'selector': 'app-geometry-viewer'},{'name': 'GraphEdgeComponent', 'selector': 'app-graph-edge'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HelpFundamentals', 'selector': 'app-help-fundamentals'},{'name': 'HelpModel', 'selector': 'app-help-model'},{'name': 'HelpViewerComponent', 'selector': 'app-help-viewer'},{'name': 'InfoViewerComponent', 'selector': 'app-info-viewer'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MobiusAbout', 'selector': 'app-help-about'},{'name': 'MobiusEditorComponent', 'selector': 'app-mobius-editor'},{'name': 'MobiusGalleryComponent', 'selector': 'mobius-gallery'},{'name': 'MobiusViewerComponent', 'selector': 'app-mobius-viewer'},{'name': 'MobiuscesiumComponent', 'selector': 'mobius-cesium'},{'name': 'ModuleViewerComponent', 'selector': 'app-module-viewer'},{'name': 'ModuleboxComponent', 'selector': 'app-modulebox'},{'name': 'NodeLibraryComponent', 'selector': 'app-node-library'},{'name': 'PanelComponent', 'selector': 'app-panel'},{'name': 'ParameterEditorComponent', 'selector': 'app-parameter-editor'},{'name': 'ParameterSettingsDialogComponent', 'selector': 'parameter-settings-dialog'},{'name': 'ParameterViewerComponent', 'selector': 'app-parameter-viewer'},{'name': 'ProcedureEditorComponent', 'selector': 'app-procedure-editor'},{'name': 'ProcedureItemComponent', 'selector': 'app-procedure-item'},{'name': 'PublishComponent', 'selector': 'app-publish'},{'name': 'PublishSettingsComponent', 'selector': 'app-publish-settings'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'TextViewerComponent', 'selector': 'app-text-viewer'},{'name': 'ToolwindowComponent', 'selector': 'app-toolwindow'},{'name': 'ViewerComponent', 'selector': 'app-viewer'},{'name': 'ViewerComponent', 'selector': 'cesium-viewer'},{'name': 'ViewerContainerComponent', 'selector': 'app-viewer-container'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FileLoadDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileService.html":{"url":"classes/FileService.html","title":"class - FileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/global-services/file.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                downloadAsJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            downloadAsJSON\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        downloadAsJSON(fileString: , filename: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/file.service.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileString\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        filename\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class FileService{\n\n    //\n    //  Takes a string and a filename, downloads it as a file\n    //\n    public static downloadAsJSON(fileString, filename) {\n\n      let blob = new Blob([fileString], {type: 'application/json'});\n\n      if (window.navigator.msSaveOrOpenBlob) {\n        window.navigator.msSaveOrOpenBlob(blob, filename);\n      } else {\n          const a = document.createElement('a');\n          document.body.appendChild(a);\n          const url = window.URL.createObjectURL(blob);\n          a.href = url;\n          a.download = filename;\n          a.click();\n          setTimeout(() => {\n            window.URL.revokeObjectURL(url);\n            document.body.removeChild(a);\n          }, 0)\n      }\n    }\n\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileUtils.html":{"url":"classes/FileUtils.html","title":"class - FileUtils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileUtils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/base-classes/port/Port.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                PREFIX\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                add_file_to_memory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            PREFIX\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        PREFIX:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"MOBIUS_FILES_\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/base-classes/port/Port.ts:210\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            add_file_to_memory\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        add_file_to_memory(value: any, id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/port/Port.ts:212\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {IdGenerator} from '../misc/GUID';\nimport {IPort} from './IPort';\nimport {InputPortTypes} from './InputPortTypes';\nimport {OutputPortTypes} from './OutputPortTypes';\n\n\nexport abstract class Port implements IPort{\n\n\tprivate _id: string;\n\tprotected _type: InputPortTypes|OutputPortTypes;\n\tprotected _opts;\n\n\tprivate _selected: boolean = false;\n\tprivate _disabled: boolean = false;\n\n\tprivate _name: string;\n\n\tprivate _connected: boolean = false; \n\n\t// values\n\tprivate _default: any = undefined;  \n\tprivate _computed: any = undefined;\n\n\tpublic _hasDefault: boolean;\n\tpublic _hasComputed: boolean;\n\n\tconstructor(name: string){ \n\t\tthis._id =  IdGenerator.getId();\n\t\tthis._name = name;\n\t\tthis._opts = {};\n\t}\n\n\t// ----- Update function for Port from Data \n\tupdate(portData: IPort, type?: string): void{\n\t\tthis._id = portData[\"_id\"];\n\n\t\tthis._type = portData[\"_type\"];\n\t\tif( typeof(this._type) == \"number\" && type == \"inp\"){\n\t\t\t//this._type = (InputPortTypes)this._type; \n\t\t\tthis._type = Object.keys(InputPortTypes)[this._type]\n\t\t}\n\t\telse if( typeof(this._type) == \"number\" && type == \"out\"){\n\t\t\t//this._type = Object.keys(OutputPortTypes)[this._type]\n\t\t}\n\n\t\t// will be programmatically selected later \n\t\tthis._selected = false;\n\n\t\t// will be programmatically connected later\n\t\tthis._connected = false;\n\t\t\n\t\tthis._disabled = portData[\"_disabled\"];\n\t\tthis._default = portData[\"_default\"];\n\t\tthis._opts = portData[\"_opts\"];\n\n\n\t\t// todo: assign computed also??\n\t\t//this._computed = portData[\"_computed\"];\n\t}\t\n\n\tget id(): string{\n\t\treturn this._id;\n\t}\n\n\tset id(value: string){\n\t\tthis._id = value;\n\t}\n\n\tget name(): string{\n\t\treturn this._name;\n\t}\n\n\tset name(value: string){\n\t\tthis._name = value;\n\t}\n\n\tget type(){\n\t\treturn this._type;\n\t}\n\n\tset type(value){\n\t\tthis._type = value;\n\t\n\t\tif(value == InputPortTypes.Slider){\n          this.opts = {min: 0, max: 100, step: 1};\n          this.setDefaultValue(50);\n        }\n\t}\n\n\tget value(): any{\n\t\treturn this.getValue();\n\t}\n\n\tset value(value: any){\n\t\tconsole.log(`Setting value of Port: ${this.name} as ${value}`);\n\t\tthis.setComputedValue(value);\n\t}\n\n\tget opts(): any{\n\t\treturn this._opts;\n\t}\n\n\tset opts(value: any){\n\t\tthis._opts = value;\n\t}\n\n\n\t// ------------ Port Values Functions \n\t_executionAddr: string = undefined;\n\tgetValue(): any{\n\n\t\tlet final;  \n\n\t\tif(this._executionAddr !== undefined){\n\t\t\treturn this._executionAddr;\n\t\t}\n\t\telse{\n\t\t\tif (this._computed !== undefined){\n\t\t\t\tfinal = this._computed;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tfinal = this._default;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn final;\n\t}\n\n\tprivate setComputedValue(value: any): void{\n\n\t\tif (value == undefined)\treturn;\n\n\t\tswitch(this._type){\n\t\t\tcase InputPortTypes.FilePicker:\n\t\t\tcase InputPortTypes.URL:\n\t\t\t\tthis._computed = FileUtils.add_file_to_memory(value, this._id);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthis._computed = value;\n\t\t}\n\n\t\tthis._hasComputed = true;\n\n\t}\n\n\treset(): void{\n\t\tthis.value = \" \";\n\t}\n\n\n\t//--- Default Values\n\tgetDefaultValue(): any{\n\t\t//console.log(`Get default`);\n\t\treturn this._default;\n\t}\n\n\t// Todo: Is this redundant?\t\n\tsetDefaultValue(value: any): void{\n\t\t//console.log(`Set default called with ${value}`);\n\t\tthis._default = value;\n\n\t\tif(value !== undefined){\n\t\t\tthis._hasDefault = true;\n\t\t}\n\t}\n\n\n\n\t// ---- Getters and Settings\n\t// TODO: Convert to get/set methods\n\n\tisSelected(): boolean{\n\t\treturn this._selected; \n\t}\n\n\tisDisabled(): boolean{\n\t\treturn this._disabled;\n\t}\n\n\tdisable(): void{\n\t\tthis._disabled = true;\n\t}\n\n\tenable(): void{\n\t\tthis._disabled = false;\n\t}\t\n\n\tget enabled(): boolean{\n\t\treturn !this._disabled;\n\t}\n\n\tset enabled(value: boolean){\n\t\tthis._disabled = !value;\n\t}\n\n\tget isConnected(): boolean{\n\t\treturn this._connected;\n\t}\n\n\tset isConnected(value: boolean){\n\t\tthis._connected = value;\n\t}\n\n}\n\n\nabstract class FileUtils{\n\n\tprivate static PREFIX: string = \"MOBIUS_FILES_\";\n\n\tpublic static add_file_to_memory(value: any, id: string): string{\n\t\tlet file_name: string = FileUtils.PREFIX + id;\n\t\twindow[file_name] = value;\n\n\t\t// TODO: Convert this to a decorator\n\t\treturn  \"(new Function('value', 'return value'))( window[ '\" + file_name + \"' ])\"; \n\t}\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Flowchart.html":{"url":"classes/Flowchart.html","title":"class - Flowchart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Flowchart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/base-classes/flowchart/Flowchart.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        IFlowchart\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _author\n                            \n                            \n                                    Private\n                                _description\n                            \n                            \n                                    Private\n                                _displayed_node\n                            \n                            \n                                    Private\n                                _edges\n                            \n                            \n                                    Private\n                                _editable\n                            \n                            \n                                    Private\n                                _globals\n                            \n                            \n                                    Private\n                                _name\n                            \n                            \n                                    Private\n                                _nodes\n                            \n                            \n                                    Private\n                                _selected\n                            \n                            \n                                    Private\n                                _sortOrder\n                            \n                            \n                                    Private\n                                _summary\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data?: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/base-classes/flowchart/Flowchart.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _author\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _author:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/base-classes/flowchart/Flowchart.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _description\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _description:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/base-classes/flowchart/Flowchart.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _displayed_node\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _displayed_node:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/base-classes/flowchart/Flowchart.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _edges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _edges:     IEdge[]\n\n                    \n                \n                    \n                        \n                            Type :     IEdge[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/base-classes/flowchart/Flowchart.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _editable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _editable:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/base-classes/flowchart/Flowchart.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _globals\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _globals:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/base-classes/flowchart/Flowchart.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/base-classes/flowchart/Flowchart.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _nodes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _nodes:     IGraphNode[]\n\n                    \n                \n                    \n                        \n                            Type :     IGraphNode[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/base-classes/flowchart/Flowchart.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _selected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selected:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/base-classes/flowchart/Flowchart.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _sortOrder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _sortOrder:     number[]\n\n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/base-classes/flowchart/Flowchart.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _summary\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _summary:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/base-classes/flowchart/Flowchart.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/base-classes/flowchart/Flowchart.ts:57\n                                \n                            \n\n                \n                    \n                        setname(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/base-classes/flowchart/Flowchart.ts:61\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        author\n                    \n                \n\n                \n                    \n                        getauthor()\n                    \n                \n                            \n                                \n                                    Defined in src/app/base-classes/flowchart/Flowchart.ts:65\n                                \n                            \n\n                \n                    \n                        setauthor(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/base-classes/flowchart/Flowchart.ts:69\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n\n                \n                    \n                        getdescription()\n                    \n                \n                            \n                                \n                                    Defined in src/app/base-classes/flowchart/Flowchart.ts:73\n                                \n                            \n\n                \n                    \n                        setdescription(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/base-classes/flowchart/Flowchart.ts:77\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        summary\n                    \n                \n\n                \n                    \n                        getsummary()\n                    \n                \n                            \n                                \n                                    Defined in src/app/base-classes/flowchart/Flowchart.ts:81\n                                \n                            \n\n                \n                    \n                        setsummary(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/base-classes/flowchart/Flowchart.ts:85\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        selected_node\n                    \n                \n\n                \n                    \n                        getselected_node()\n                    \n                \n                            \n                                \n                                    Defined in src/app/base-classes/flowchart/Flowchart.ts:89\n                                \n                            \n\n                \n                    \n                        setselected_node(index: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/base-classes/flowchart/Flowchart.ts:93\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            index\n                                                    \n                                                            \n                                                                        number\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        globals\n                    \n                \n\n                \n                    \n                        getglobals()\n                    \n                \n                            \n                                \n                                    Defined in src/app/base-classes/flowchart/Flowchart.ts:97\n                                \n                            \n\n                \n                    \n                        setglobals(arr: any)\n                    \n                \n                            \n                                \n                                    Defined in src/app/base-classes/flowchart/Flowchart.ts:101\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            arr\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        nodes\n                    \n                \n\n                \n                    \n                        getnodes()\n                    \n                \n                            \n                                \n                                    Defined in src/app/base-classes/flowchart/Flowchart.ts:105\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        edges\n                    \n                \n\n                \n                    \n                        getedges()\n                    \n                \n                            \n                                \n                                    Defined in src/app/base-classes/flowchart/Flowchart.ts:109\n                                \n                            \n\n                \n                    \n                        setedges(edges: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/base-classes/flowchart/Flowchart.ts:113\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            edges\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        editable\n                    \n                \n\n                \n                    \n                        geteditable()\n                    \n                \n                            \n                                \n                                    Defined in src/app/base-classes/flowchart/Flowchart.ts:121\n                                \n                            \n\n                \n                    \n                        seteditable(value: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/base-classes/flowchart/Flowchart.ts:117\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        display_node\n                    \n                \n\n                \n                    \n                        getdisplay_node()\n                    \n                \n                            \n                                \n                                    Defined in src/app/base-classes/flowchart/Flowchart.ts:125\n                                \n                            \n\n                \n                    \n                        setdisplay_node(index: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/base-classes/flowchart/Flowchart.ts:129\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            index\n                                                    \n                                                            \n                                                                        number\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {IFlowchart} from './IFlowchart';\nimport {IGraphNode, IEdge, GraphNode} from '../node/NodeModule';\nimport {ICodeGenerator, IModule} from '../code/CodeModule';\nimport {InputPort} from '../port/PortModule';\n\nimport * as gs from 'gs-json';\n\nexport class Flowchart implements IFlowchart{\n\n\tprivate _name: string;\n\tprivate _description: string;\n\tprivate _author: string; \n\tprivate _selected: number;\n\tprivate _summary: string; \n\n\tprivate _nodes: IGraphNode[] = [];\n\tprivate _edges: IEdge[] = [];\n\n\tprivate _sortOrder: number[];\n\n\tprivate _globals = [];\n\tprivate _displayed_node: number;\n\n\tprivate _editable;\n\n\tconstructor(data?: any){ \n\t\tthis._name = \"new_flowchart.mob\";\n\t\tthis._description = \"Hello, World!\";\n\t\tthis._author = \"new_author\";\n\t\tthis._editable = true;\n\t\tthis._globals = [];\n\t\tthis._nodes = [];\n\t\tthis._edges = [];\n\n\t\tif(data){\n\t\t\tthis._name = data[\"_name\"];\n\t\t\tthis._description = data[\"_description\"];\n\t\t\tthis._author = data[\"_author\"];\n\t\t\tthis._editable = data[\"_editable\"];\n\n\t\t\tif(data[\"_globals\"]){\n\t\t\t\tthis._globals = data[\"_globals\"].map(function(in_data){\n\t\t\t\t\tlet input_port = new InputPort(in_data[\"_name\"]);\n\t\t\t\t\tinput_port.update(in_data);\n\t\t\t\t\treturn input_port;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\tget name(): string{\n\t\treturn this._name;\n\t}\n\n\tset name(value: string){\n\t\tthis._name = value;\n\t}\n\n\tget author(): string{\n\t\treturn this._author;\n\t}\n\n\tset author(value: string){\n\t\tthis._author = value;\n\t}\n\n\tget description(): string{\n\t\treturn this._description;\n\t}\n\n\tset description(value: string){\n\t\tthis._description = value;\n\t}\n\n\tget summary(): string{\n\t\treturn this._summary;\n\t}\n\n\tset summary(value: string){\n\t\tthis._summary = value;\n\t}\n\n\tget selected_node(): number{\n\t\treturn this._selected;\n\t}\n\n\tset selected_node(index: number){\n\t\tthis._selected = index;\n\t}\n\n\tget globals(): any{\n\t\treturn this._globals;\n\t}\n\n\tset globals(arr: any){\n\t\tthis._globals = arr;\n\t}\n\n\tget nodes(): IGraphNode[]{\n\t\treturn this._nodes;\n\t}\n\n\tget edges(): IEdge[]{\n\t\treturn this._edges;\n\t}\n\n\tset edges(edges: IEdge[]){\n\t\tthis._edges = edges;\n\t}\n\n\tset editable(value){\n\t\tthis._editable = value;\n\t}\n\n\tget editable(): any{\n\t\treturn this._editable;\n\t}\n\n\tget display_node(): number{\n\t\treturn this._displayed_node;\n\t}\n\n\tset display_node(index: number){\n\t\tthis._displayed_node = index;\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FlowchartConnectionUtils.html":{"url":"classes/FlowchartConnectionUtils.html","title":"class - FlowchartConnectionUtils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  FlowchartConnectionUtils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/base-classes/flowchart/FlowchartConnectionUtils.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                disconnect_edges_with_port_idx\n                            \n                            \n                                    Static\n                                disconnect_node\n                            \n                            \n                                    Static\n                                remove_edges_with_node\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            disconnect_edges_with_port_idx\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        disconnect_edges_with_port_idx(flowchart: IFlowchart, nodeIndex: number, portIndex: number, type: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/flowchart/FlowchartConnectionUtils.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        flowchart\n                                                        \n                                                                    IFlowchart\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nodeIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        portIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            disconnect_node\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        disconnect_node(flowchart: IFlowchart, idx: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/flowchart/FlowchartConnectionUtils.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        flowchart\n                                                        \n                                                                    IFlowchart\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        idx\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     IFlowchart\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            remove_edges_with_node\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        remove_edges_with_node(flowchart: IFlowchart, node_index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/flowchart/FlowchartConnectionUtils.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        flowchart\n                                                        \n                                                                    IFlowchart\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        node_index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { IFlowchart } from './IFlowchart';\nimport { Flowchart } from './Flowchart';\n\nimport { IGraphNode, IEdge, GraphNode, NodeUtils } from '../node/NodeModule';\nimport { ICodeGenerator, IModule } from '../code/CodeModule';\nimport { InputPort, PortTypes } from '../port/PortModule';\n\n\nexport class FlowchartConnectionUtils{\n\n\t// =============== Disconnect Nodes\n\n\t//\n\t//\tDisconnects a node\n\t//\tDeletes any edges connected to the node\n\t//\tResets all ports, connected to the edges, connected to the node\n\t//\n\tpublic static disconnect_node(flowchart: IFlowchart, idx: number): IFlowchart{\n\t\tlet node = flowchart.nodes[idx];\n\n  \t\tnode.inputs.map(function(input){\n\t  \t\t\tinput.isConnected = false;\n\t  \t\t\tinput.value = \" \";\n  \t\t});\n\n  \t\tnode.outputs.map(function(output){\n    \t\t\toutput.isConnected = false;\n    \t\t\toutput.value = \" \";\n  \t\t});\n\n      \tlet edges: number[] = FlowchartConnectionUtils.remove_edges_with_node(flowchart, idx);\n        flowchart.edges = flowchart.edges.filter( (edge, index) => edges.indexOf(index) == -1 );\n\n  \t\treturn flowchart;\n  \t}\n\n\n\tpublic static disconnect_edges_with_port_idx(flowchart: IFlowchart, nodeIndex: number, portIndex: number, type: string): number[]{\n      let splicedEdges: number[] = [];\n      let edges = flowchart.edges;\n      \n      for(let e=0; e \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FlowchartControlsComponent.html":{"url":"components/FlowchartControlsComponent.html","title":"component - FlowchartControlsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FlowchartControlsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui-components/controls/flowchart-controls/flowchart-controls.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-flowchart-controls\n            \n\n            \n                styleUrls\n                flowchart-controls.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./flowchart-controls.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fileInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add_node\n                            \n                            \n                                load_file\n                            \n                            \n                                new_flowchart\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                open_picker\n                            \n                            \n                                publish_settings\n                            \n                            \n                                save_file\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_mb: MobiusService, _ms: ModuleService, $log: ConsoleService, _fs: FlowchartService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui-components/controls/flowchart-controls/flowchart-controls.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _mb\n                                                  \n                                                        \n                                                                    MobiusService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _ms\n                                                  \n                                                        \n                                                                    ModuleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        $log\n                                                  \n                                                        \n                                                                    ConsoleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _fs\n                                                  \n                                                        \n                                                                    FlowchartService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add_node\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd_node()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/controls/flowchart-controls/flowchart-controls.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load_file\n                            \n                            \n                        \n                    \n                \n                \n                    \nload_file(url?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/controls/flowchart-controls/flowchart-controls.component.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            new_flowchart\n                            \n                            \n                        \n                    \n                \n                \n                    \nnew_flowchart()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/controls/flowchart-controls/flowchart-controls.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/controls/flowchart-controls/flowchart-controls.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            open_picker\n                            \n                            \n                        \n                    \n                \n                \n                    \nopen_picker()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/controls/flowchart-controls/flowchart-controls.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publish_settings\n                            \n                            \n                        \n                    \n                \n                \n                    \npublish_settings()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/controls/flowchart-controls/flowchart-controls.component.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save_file\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave_file()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/controls/flowchart-controls/flowchart-controls.component.ts:105\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileInput\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fileInput:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/controls/flowchart-controls/flowchart-controls.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\n\nimport { FlowchartUtils } from '../../../base-classes/flowchart/FlowchartUtils';\nimport { MobiusService } from '../../../global-services/mobius.service';\nimport { FlowchartService } from '../../../global-services/flowchart.service';\nimport { ModuleService } from '../../../global-services/module.service';\nimport { ConsoleService } from '../../../global-services/console.service';\n\nimport { ICodeGenerator, CodeFactory } from '../../../base-classes/code/CodeModule';\nimport { IFlowchart, FlowchartReader, FlowchartWriter } from '../../../base-classes/flowchart/FlowchartModule';\n\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatMenuModule } from '@angular/material/menu';\n\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { PublishSettingsComponent } from '../publish-settings/publish-settings.component';\n\n\n@Component({\n  selector: 'app-flowchart-controls',\n  templateUrl: './flowchart-controls.component.html',\n  styleUrls: ['./flowchart-controls.component.scss']\n})\nexport class FlowchartControlsComponent implements OnInit{\n\n  //\n  //  FileInput View Child to open file for loading\n  //\n  @ViewChild('fileInput') fileInput: ElementRef;\n  open_picker(): void{\n    let el: HTMLElement = this.fileInput.nativeElement as HTMLElement;\n    el.click();\n  }\n\n  // doesn't really need to extend viewer \n  constructor(private _mb: MobiusService, \n              private _ms: ModuleService,\n              private $log: ConsoleService,\n              private _fs: FlowchartService, \n              private dialog: MatDialog) { }\n\n  //\n  //  Creates new file on loading\n  //\n  ngOnInit(){ this.new_flowchart(); }  \n\n  //\n  //  Loads a new file by \n  //  - Creating a new flowchart\n  //  - Setting the Code Generator to JS\n  //  - Loading the modules\n  //\n  new_flowchart(): void{\n    this._fs.new_flowchart();\n  }\n\n  //\n  //  Adds a new node to the flowchart \n  //\n  add_node(): void{\n    FlowchartUtils.add_node(this._fs.flowchart)\n  }\n\n\n  //\n  //\n  //  Loads a Mobius file from disk\n  //  String to Flowchart Conversion: Handled by FlowchartService\n  //\n  load_file(url?: string): void{\n    let file = this.fileInput.nativeElement.files[0];\n    if (file) {\n        var reader = new FileReader();\n        reader.readAsText(file, \"UTF-8\");\n        let fs = this._fs;\n        reader.onload = function (evt) {\n            let fileString: string = evt.target[\"result\"];\n            fs.load_flowchart_from_string(fileString);\n        }\n        reader.onerror = function (evt) {\n            console.log(\"Error reading file\");\n        }\n    }\n  }\n\n  //\n  //  Opens the publish settings dialog box \n  //\n  publish_settings(): void{\n    let dialogRef = this.dialog.open(PublishSettingsComponent, {\n            height: '500px',\n            width: '450px',          \n            data: this._fs.flowchart\n        });\n\n    dialogRef.afterClosed().subscribe(result => {\n        console.log('The dialog was closed');\n    });\n\n  }\n\n  //\n  //  Uses FlowchartWriter to save the flowchart as a JSON file\n  //\n  save_file(): void{ \n    FlowchartWriter.save_flowchart_as_json(this._fs.flowchart);\n  }\n\n\n}\n\n    \n\n    \n        \n\tNew File\n\tOpen File\n\t\t \n\t\n\tSave File\n\tPublish\n\n\n\n\n\n\tNew Node\n\t -->\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\tNew File\tOpen File\t\t \t\tSave File\tPublish\tNew Node\t -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CesiumViewerComponent', 'selector': 'app-cesium-viewer'},{'name': 'CodeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ConsoleComponent', 'selector': 'app-console'},{'name': 'DataComponent', 'selector': 'app-data'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FileLoadDialogComponent', 'selector': 'file-load-dialog'},{'name': 'FlowchartControlsComponent', 'selector': 'app-flowchart-controls'},{'name': 'FlowchartViewerComponent', 'selector': 'app-flowchart-viewer'},{'name': 'GSViewerComponent', 'selector': 'gs-viewer'},{'name': 'GeometryViewerComponent', 'selector': 'app-geometry-viewer'},{'name': 'GraphEdgeComponent', 'selector': 'app-graph-edge'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HelpFundamentals', 'selector': 'app-help-fundamentals'},{'name': 'HelpModel', 'selector': 'app-help-model'},{'name': 'HelpViewerComponent', 'selector': 'app-help-viewer'},{'name': 'InfoViewerComponent', 'selector': 'app-info-viewer'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MobiusAbout', 'selector': 'app-help-about'},{'name': 'MobiusEditorComponent', 'selector': 'app-mobius-editor'},{'name': 'MobiusGalleryComponent', 'selector': 'mobius-gallery'},{'name': 'MobiusViewerComponent', 'selector': 'app-mobius-viewer'},{'name': 'MobiuscesiumComponent', 'selector': 'mobius-cesium'},{'name': 'ModuleViewerComponent', 'selector': 'app-module-viewer'},{'name': 'ModuleboxComponent', 'selector': 'app-modulebox'},{'name': 'NodeLibraryComponent', 'selector': 'app-node-library'},{'name': 'PanelComponent', 'selector': 'app-panel'},{'name': 'ParameterEditorComponent', 'selector': 'app-parameter-editor'},{'name': 'ParameterSettingsDialogComponent', 'selector': 'parameter-settings-dialog'},{'name': 'ParameterViewerComponent', 'selector': 'app-parameter-viewer'},{'name': 'ProcedureEditorComponent', 'selector': 'app-procedure-editor'},{'name': 'ProcedureItemComponent', 'selector': 'app-procedure-item'},{'name': 'PublishComponent', 'selector': 'app-publish'},{'name': 'PublishSettingsComponent', 'selector': 'app-publish-settings'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'TextViewerComponent', 'selector': 'app-text-viewer'},{'name': 'ToolwindowComponent', 'selector': 'app-toolwindow'},{'name': 'ViewerComponent', 'selector': 'app-viewer'},{'name': 'ViewerComponent', 'selector': 'cesium-viewer'},{'name': 'ViewerContainerComponent', 'selector': 'app-viewer-container'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FlowchartControlsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FlowchartReader.html":{"url":"classes/FlowchartReader.html","title":"class - FlowchartReader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  FlowchartReader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/base-classes/flowchart/FlowchartReader.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                read_flowchart_from_data\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            read_flowchart_from_data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        read_flowchart_from_data(data: IFlowchart)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/flowchart/FlowchartReader.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    IFlowchart\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     IFlowchart\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { IFlowchart } from './IFlowchart';\nimport { Flowchart } from './Flowchart';\nimport { FlowchartUtils } from './FlowchartUtils';\nimport { FlowchartConnectionUtils } from './FlowchartConnectionUtils';\n\nimport { IGraphNode, GraphNode, IEdge, NodeUtils } from '../node/NodeModule';\nimport { FunctionProcedure } from '../procedure/FunctionProcedure';\nimport { ProcedureTypes } from '../procedure/ProcedureTypes';\n\nexport abstract class FlowchartReader{\n\n\n\tstatic read_flowchart_from_data(data: IFlowchart): IFlowchart{\n\n\t    // recreate the flowchart from data\n\t    let fc: IFlowchart = new Flowchart(data); \n\n\t    let nodes_data: IGraphNode[] = data[\"_nodes\"];\n\t    let edges_data: IEdge[] = data[\"_edges\"];\n\n\t    console.log(\"original data: \", fc);\n\n\t    /// adding all nodes\n\t    for(let node_data of nodes_data){\t\n\t    \tlet n: IGraphNode = NodeUtils.copy_node(node_data, true);\n\t    \tfc.nodes.push(n);\n\t    \tconsole.log(`Added ${n.name}`);\n\t    \t//FlowchartUtils.add_node_from_data(fc, node_data);\n\t    }\n\n\t    /// adding all edges\n\t    for(let e_data of edges_data){\n\t    \tlet in_node = e_data.input_address[0];\n\t    \tlet out_node = e_data.output_address[0];\n\n\t    \tconsole.log(`Attempt to add edge between ${in_node} and ${out_node} in the FlowchartReader`);\n\t    \t\n\t    \tlet valid_input: boolean = (in_node  >= 0 && in_node = 0 && out_node \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FlowchartRenderUtils.html":{"url":"classes/FlowchartRenderUtils.html","title":"class - FlowchartRenderUtils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  FlowchartRenderUtils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui-components/editors/flowchart-viewer/flowchart-viewer.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                _margin\n                            \n                            \n                                    Private\n                                    Static\n                                _portWidth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                get_port_position\n                            \n                            \n                                    Static\n                                node_width\n                            \n                            \n                                    Static\n                                port_dom_element\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _margin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _margin:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/editors/flowchart-viewer/flowchart-viewer.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _portWidth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _portWidth:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 15\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/editors/flowchart-viewer/flowchart-viewer.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            get_port_position\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get_port_position(node: IGraphNode, portIndex: number, portType: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/flowchart-viewer/flowchart-viewer.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    IGraphNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        portIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        portType\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     literal type\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            node_width\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        node_width(node: IGraphNode)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/flowchart-viewer/flowchart-viewer.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    IGraphNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            port_dom_element\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        port_dom_element(node: IGraphNode, portIndex: number, portType: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/flowchart-viewer/flowchart-viewer.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    IGraphNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        portIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        portType\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, \n         Output, EventEmitter,\n         OnInit, OnDestroy, \n         ViewChild, ElementRef, \n         HostListener } from '@angular/core';\nimport { NgClass } from '@angular/common';\n\nimport { IFlowchart } from '../../../base-classes/flowchart/IFlowchart';\nimport { FlowchartUtils } from '../../../base-classes/flowchart/FlowchartUtils';\nimport { FlowchartConnectionUtils } from '../../../base-classes/flowchart/FlowchartConnectionUtils';\nimport { IGraphNode, IEdge, GraphNode, NodeUtils } from '../../../base-classes/node/NodeModule';\nimport { InputPort, OutputPort } from '../../../base-classes/port/PortModule';\n\nimport { FlowchartService } from '../../../global-services/flowchart.service';\nimport { ConsoleService } from '../../../global-services/console.service';\nimport { MobiusService } from '../../../global-services/mobius.service';\nimport { NodeLibraryService } from '../../../global-services/node-library.service';\n\nabstract class  FlowchartRenderUtils{\n  private static _portWidth: number = 15; \n  private static _margin: number = 10;  \n\n  public static node_width(node: IGraphNode): number{\n    let max = Math.max(node.inputs.length, node.outputs.length); \n    let width = FlowchartRenderUtils._margin*(max+1) + (max)*FlowchartRenderUtils._portWidth;\n    return width;\n  }\n\n  public static port_dom_element(node: IGraphNode, portIndex: number, portType: string): any{\n    let name: string = \"n\" + node.id + portType + portIndex;\n    let el: any = document.getElementById(name);\n\n    if(el == undefined) throw Error(`Element with ID ${name} not found`);\n    //else console.log(`Element with ID ${name} was found`)\n\n    return el;\n  }  \n\n  public static get_port_position(node: IGraphNode, portIndex: number, portType: string): {x: number, y: number}{\n\n    let x: number;\n    let y: number;\n    let port_size: number = 15;\n\n    // let name: string = \"n\" + node.id + portType + portIndex;\n    // let el: any = document.getElementById(name);\n\n    let el: any = FlowchartRenderUtils.port_dom_element(node, portIndex, portType);\n\n    if(el == null || node == undefined){\n      return {x: 0, y: 0};\n    }\n\n    let node_pos: number[] = node.position;\n\n    let port_pos_x = el.offsetLeft;\n    let port_pos_y = el.offsetTop;\n    let node_width = el.offsetParent.offsetWidth;\n\n    if(portType == \"pi\"){\n      x = node_pos[0];\n      y = node_pos[1] + (port_pos_y + port_size/2);\n    } \n    else if(portType == \"po\"){\n      x = node_pos[0] + node_width;\n      y = node_pos[1] + (port_pos_y + port_size/2);\n    }\n    else{\n      throw Error(\"Unknown port type\");\n    }\n\n    return {x: x, y: y};\n  }\n}\n\n\n@Component({\n  selector: 'app-flowchart-viewer',\n  templateUrl: './flowchart-viewer.component.html',\n  styleUrls: ['./flowchart-viewer.component.scss']\n})\nexport class FlowchartViewerComponent implements OnInit, OnDestroy{\n\n  pan_mode: boolean = false;\n  pan_init;\n  left: number = 0; \n  top: number = 0;\n  zoom: number = 1; \n\n  _selectedNode: IGraphNode;\n  _selectedNodeIndex: number;\n  _selectedPortIndex: number;\n\n  showLibrary: boolean = false;\n\n  showDialog: {status: boolean, position: number[]} = {status: false, position: [0,0]};\n\n  private subscriptions = [];\n  private fc: IFlowchart;\n  private active_node: IGraphNode;\n\n  constructor(private _fs: FlowchartService, \n    private _mb: MobiusService,\n    private $log: ConsoleService, \n    private _ns: NodeLibraryService){}\n\n  ngOnInit(){\n    this.subscriptions.push(this._fs.flowchart$.subscribe((fc) => { if(fc){ this.fc = fc; this.render_flowchart(); }  }));\n    //this.subscriptions.push(this._fs.node$.subscribe( (node) => this.active_node = node ));\n  }\n\n  ngOnDestroy(){\n    this.subscriptions.map(function(s){\n      s.unsubscribe();\n    })\n  }\n  \n  push_flowchart(){\n    this._fs.push_flowchart(this.fc)\n  }\n\n  push_node(){\n    this._fs.push_node(this.active_node);\n  }\n\n  render_edges(){\n    try{\n      this.fc.edges.map( (edge) => {\n        edge[\"inputPosition\"] = FlowchartRenderUtils.get_port_position( this.fc.nodes[edge.input_address[0]], edge.input_address[1], \"pi\");\n        edge[\"outputPosition\"] = FlowchartRenderUtils.get_port_position(this.fc.nodes[edge.output_address[0]], edge.output_address[1], \"po\");\n      });\n      //console.log(`Edges rendered successfully`);\n    }\n    catch(ex){\n      console.log(`Error while rendering edges, trying again in 0.5s`);\n\n      //TODO: Find a better way!\n      let that = this;\n      setTimeout(() => {that.render_edges()}, 500);\n    }\n  }\n\n  render_flowchart(){\n    if(this.fc){\n      this.fc.nodes.map( (node) => node[\"width\"] = FlowchartRenderUtils.node_width(node) );\n      this.render_edges();\n    }  \n    //this.$log.log(`Re-rendering flowchart`);\n  }\n\n\n  duplicate_node(): void{\n    this._fs.flowchart.nodes.push(NodeUtils.copy_node(this.active_node));\n    console.log(this._fs.flowchart.nodes.length);\n  }\n\n  // node utils\n  delete_node(node_id: string): void{\n    this._selectedNode = undefined; \n    if (this.active_node.id == node_id)   this._fs.push_node(undefined); \n\n    this.fc = FlowchartUtils.delete_node(this.fc, node_id);\n  }\n\n  save_node_to_library(): void{\n      NodeLibraryService.save_library_node(this.active_node);\n  }\n\n\n  //\n  //\n  //  Viewer Related Functions\n  //\n  //\n  resetViewer(): void{\n    this.zoom = 1; \n    this.left = 0; \n    this.top = 0; \n    this.pan_mode = false;\n\n  }\n\n  //\n  //\n  //\n  pan($event): void{\n    //console.log(\"mousedown\", $event);\n  }\n\n  //\n  //  node class is assigned a zoom value based on this value\n  //  this position of this node is absolute coordinates\n  //\n  scale($event): void{\n    $event.preventDefault();\n    $event.stopPropagation();\n\n    let scaleFactor: number = 0.1;\n    let value: number = this.zoom  + (Math.sign($event.wheelDelta))*scaleFactor;\n    \n    if(value > 0.2 && value \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FlowchartService.html":{"url":"injectables/FlowchartService.html","title":"injectable - FlowchartService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  FlowchartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/global-services/flowchart.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _active_node\n                            \n                            \n                                    Private\n                                _flowchart\n                            \n                            \n                                    Private\n                                _origData\n                            \n                            \n                                    Private\n                                _user\n                            \n                            \n                                    Private\n                                code_generator\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Private\n                                fcX\n                            \n                            \n                                    Public\n                                flowchart$\n                            \n                            \n                                    Public\n                                node$\n                            \n                            \n                                    Private\n                                nX\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEdge\n                            \n                            \n                                deleteEdge\n                            \n                            \n                                deletePort\n                            \n                            \n                                disconnectNode\n                            \n                            \n                                disconnectPort\n                            \n                            \n                                load_file_from_url\n                            \n                            \n                                load_flowchart_from_string\n                            \n                            \n                                new_flowchart\n                            \n                            \n                                push_flowchart\n                            \n                            \n                                push_node\n                            \n                            \n                                update_code_generator\n                            \n                            \n                                update_modules\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor($log: ConsoleService, _mb: MobiusService, _ms: ModuleService, dialog: MatDialog, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/global-services/flowchart.service.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $log\n                                                  \n                                                        \n                                                                    ConsoleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _mb\n                                                  \n                                                        \n                                                                    MobiusService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _ms\n                                                  \n                                                        \n                                                                    ModuleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addEdge\n                            \n                            \n                        \n                    \n                \n                \n                    \naddEdge(outputAddress: number[], inputAddress: number[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/flowchart.service.ts:131\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        outputAddress\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        inputAddress\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteEdge\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteEdge(edgeIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/flowchart.service.ts:158\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edgeIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletePort\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeletePort(type: string, portIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/flowchart.service.ts:154\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        portIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disconnectNode\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisconnectNode(nodeIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/flowchart.service.ts:150\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nodeIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disconnectPort\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisconnectPort(type: string, portIndex: number, nodeIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/flowchart.service.ts:146\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        portIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nodeIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load_file_from_url\n                            \n                            \n                        \n                    \n                \n                \n                    \nload_file_from_url(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/flowchart.service.ts:118\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load_flowchart_from_string\n                            \n                            \n                        \n                    \n                \n                \n                    \nload_flowchart_from_string(fileString: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/flowchart.service.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileString\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            new_flowchart\n                            \n                            \n                        \n                    \n                \n                \n                    \nnew_flowchart()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/flowchart.service.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            push_flowchart\n                            \n                            \n                        \n                    \n                \n                \n                    \npush_flowchart(fc: IFlowchart)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/flowchart.service.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fc\n                                                        \n                                                                    IFlowchart\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            push_node\n                            \n                            \n                        \n                    \n                \n                \n                    \npush_node(node: IGraphNode)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/flowchart.service.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    IGraphNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update_code_generator\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate_code_generator(value: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/flowchart.service.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update_modules\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate_modules()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/flowchart.service.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _active_node\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _active_node:     IGraphNode\n\n                    \n                \n                    \n                        \n                            Type :     IGraphNode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/global-services/flowchart.service.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _flowchart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _flowchart:     IFlowchart\n\n                    \n                \n                    \n                        \n                            Type :     IFlowchart\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/global-services/flowchart.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _origData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _origData:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/global-services/flowchart.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _user:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"AKM\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/global-services/flowchart.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            code_generator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        code_generator:     ICodeGenerator\n\n                    \n                \n                    \n                        \n                            Type :     ICodeGenerator\n\n                        \n                    \n                    \n                        \n                            Default value : CodeFactory.getCodeGenerator(\"js\")\n                        \n                    \n                        \n                            \n                                    Defined in src/app/global-services/flowchart.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialog:     MatDialog\n\n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/global-services/flowchart.service.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fcX\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fcX:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(this._flowchart)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/global-services/flowchart.service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            flowchart$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        flowchart$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.fcX.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/global-services/flowchart.service.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            node$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        node$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.nX.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/global-services/flowchart.service.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            nX\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nX:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(this._active_node)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/global-services/flowchart.service.ts:33\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        flowchart\n                    \n                \n\n                \n                    \n                        getflowchart()\n                    \n                \n                            \n                                \n                                    Defined in src/app/global-services/flowchart.service.ts:59\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, Input, Output, EventEmitter } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Subject } from 'rxjs/Subject';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport {IFlowchart, Flowchart, FlowchartReader, FlowchartUtils, FlowchartConnectionUtils} from '../base-classes/flowchart/FlowchartModule';\nimport {IGraphNode, GraphNode} from '../base-classes/node/NodeModule';\nimport {ICodeGenerator, CodeFactory, IModule, ModuleUtils} from \"../base-classes/code/CodeModule\";\nimport {IPort} from \"../base-classes/port/PortModule\";\nimport {IProcedure} from \"../base-classes/procedure/IProcedure\";\n\nimport {ConsoleService, EConsoleMessageType} from \"./console.service\";\nimport {ModuleService} from \"./module.service\";\nimport {MobiusService} from \"./mobius.service\";\nimport * as CircularJSON from 'circular-json';\n\n\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\n\n@Injectable()\nexport class FlowchartService {\n\n\tprivate _user: string = \"AKM\";\n\tprivate _origData: any;\n  private code_generator: ICodeGenerator = CodeFactory.getCodeGenerator(\"js\");\n\n\n  // Observable Data sources\n  // fcX.next() (this._flowchart);\n\tprivate nX = new BehaviorSubject(this._active_node);\n\n\t// Observable data streams\n\t// flowchart$.subscribe()  { \n              this.load_flowchart_from_string(JSON.stringify(res));\n          });\n      }\n      catch(ex){\n          this.$log.log(\"Error fetching file from from URL: ${url}\");\n      }\n  }\n\n\n  // ------------ Edge Utils\n  addEdge(outputAddress: number[], inputAddress: number[]):  void{\n\n      if(outputAddress[0] == inputAddress[0]){\n        return;\n      }\n\n      try{\n        this.fcX.next(FlowchartUtils.add_edge(this.flowchart, outputAddress, inputAddress));\n        this.$log.log(\"New Edge was added\");\n      }\n      catch(ex){\n        this.$log.log(ex);\n      }\n  }\n\n  disconnectPort(type: string, portIndex: number, nodeIndex: number): void{\n    this.fcX.next(FlowchartUtils.disconnect_port(this._flowchart, type, portIndex, nodeIndex));\n  }\n\n  disconnectNode(nodeIndex: number): void{\n    //this.fcX.next();\n  }\n\n  deletePort(type: string, portIndex: number): void{\n    //this._flowchart.deletePort(type, portIndex, this._selectedNode);\n  }\n\n  deleteEdge(edgeIndex: number): void{\n    FlowchartUtils.delete_edge(this._flowchart, edgeIndex);\n    \n    // print message to console\n    this.$log.log(\"Edge was deleted\");\n  }\n\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FlowchartUtils.html":{"url":"classes/FlowchartUtils.html","title":"class - FlowchartUtils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  FlowchartUtils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/base-classes/flowchart/FlowchartUtils.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                add_edge\n                            \n                            \n                                    Static\n                                add_node\n                            \n                            \n                                    Static\n                                delete_edge\n                            \n                            \n                                    Static\n                                delete_edges\n                            \n                            \n                                    Static\n                                delete_node\n                            \n                            \n                                    Static\n                                delete_port\n                            \n                            \n                                    Static\n                                disconnect_port\n                            \n                            \n                                    Static\n                                execute\n                            \n                            \n                                    Static\n                                get_new_node_name\n                            \n                            \n                                    Static\n                                get_node_idx\n                            \n                            \n                                    Static\n                                reset\n                            \n                            \n                                    Static\n                                update_dependent_inputs\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            add_edge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        add_edge(flowchart: IFlowchart, outputAddress: number[], inputAddress: number[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/flowchart/FlowchartUtils.ts:147\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        flowchart\n                                                        \n                                                                    IFlowchart\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        outputAddress\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        inputAddress\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     IFlowchart\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            add_node\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        add_node(flowchart: IFlowchart)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/flowchart/FlowchartUtils.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        flowchart\n                                                        \n                                                                    IFlowchart\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            delete_edge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        delete_edge(flowchart: IFlowchart, edgeIdx: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/flowchart/FlowchartUtils.ts:191\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        flowchart\n                                                        \n                                                                    IFlowchart\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        edgeIdx\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     IFlowchart\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            delete_edges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        delete_edges(flowchart: IFlowchart, edgeIds: number[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/flowchart/FlowchartUtils.ts:199\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        flowchart\n                                                        \n                                                                    IFlowchart\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        edgeIds\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     IFlowchart\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            delete_node\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        delete_node(flowchart: IFlowchart, uuid: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/flowchart/FlowchartUtils.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        flowchart\n                                                        \n                                                                    IFlowchart\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        uuid\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     IFlowchart\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            delete_port\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        delete_port(flowchart: IFlowchart, type: string, portIndex: number, nodeIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/flowchart/FlowchartUtils.ts:92\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        flowchart\n                                                        \n                                                                    IFlowchart\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        portIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nodeIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            disconnect_port\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        disconnect_port(flowchart: IFlowchart, type: string, portIndex: number, nodeIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/flowchart/FlowchartUtils.ts:98\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        flowchart\n                                                        \n                                                                    IFlowchart\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        portIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nodeIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     IFlowchart\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            execute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        execute(flowchart: IFlowchart, code_generator: ICodeGenerator, modules: any, print: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/flowchart/FlowchartUtils.ts:246\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        flowchart\n                                                        \n                                                                    IFlowchart\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        code_generator\n                                                        \n                                                                    ICodeGenerator\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        modules\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        print\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            get_new_node_name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get_new_node_name(flowchart: IFlowchart, prefix?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/flowchart/FlowchartUtils.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        flowchart\n                                                        \n                                                                    IFlowchart\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        prefix\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            get_node_idx\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get_node_idx(flowchart: IFlowchart, uuid: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/flowchart/FlowchartUtils.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        flowchart\n                                                        \n                                                                    IFlowchart\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        uuid\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset(flowchart: IFlowchart)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/flowchart/FlowchartUtils.ts:324\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        flowchart\n                                                        \n                                                                    IFlowchart\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            update_dependent_inputs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        update_dependent_inputs(flowchart: IFlowchart, node: IGraphNode, originalRank: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/flowchart/FlowchartUtils.ts:213\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        flowchart\n                                                        \n                                                                    IFlowchart\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        node\n                                                        \n                                                                    IGraphNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        originalRank\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { IFlowchart } from './IFlowchart';\nimport { Flowchart } from './Flowchart';\nimport { FlowchartConnectionUtils } from './FlowchartConnectionUtils'\nimport { IGraphNode, IEdge, GraphNode, NodeUtils } from '../node/NodeModule';\nimport { ICodeGenerator, IModule } from '../code/CodeModule';\nimport { InputPort, PortTypes } from '../port/PortModule';\n\nexport class FlowchartUtils{\t\n\n\n\t// === General Util Functions\n\tpublic static get_new_node_name(flowchart: IFlowchart, prefix?: string): string{\n\t\tlet default_node_name: string = prefix + (flowchart.nodes.length + 1);\n\t\treturn default_node_name;\n\t}\n\n\tpublic static get_node_idx(flowchart: IFlowchart, uuid: string): number{\n\t\t\n\t\tlet nodes: IGraphNode[] = flowchart.nodes;\n\t\tlet idx: number = undefined;\n\t\tfor(let i=0; i node_index){\n\t\t\t\tedge.input_address[0] = input_node - 1;\n\t\t\t}\n\t\t\t\n\t\t\tif(output_node > node_index){\n\t\t\t\tedge.output_address[0] = output_node - 1;\n\t\t\t}\n\n\t\t}\n\n  \t\treturn flowchart;\n\t}\n\n\tpublic static delete_port(flowchart: IFlowchart, type: string, portIndex: number, nodeIndex: number): void{\n\t\tFlowchartUtils.disconnect_port(flowchart, type, portIndex, nodeIndex);\n\t\tNodeUtils.delete_port_by_index(flowchart.nodes[nodeIndex], type, portIndex);\n\t}\n\n\t// ========== Disconnect ports\n\tpublic static disconnect_port(flowchart: IFlowchart, type: string, portIndex: number, nodeIndex: number): IFlowchart{\n\t  let edges = flowchart.edges;\n\n\t  /// disconnect the edges related to this port\n\t  let edgesArr: number[] = FlowchartConnectionUtils.disconnect_edges_with_port_idx(flowchart, nodeIndex, portIndex, type); \n\t  FlowchartUtils.delete_edges(flowchart, edgesArr);\n\n\t  /// update indices of edges\n\t  /// delete port\n\t  for(let e=0; e = portIndex){\n\t            edges[e].input_address[1] = edges[e].input_address[1] - 1;\n\t          }\n\t      }\n\t      else if(type == \"output\"){\n\t         let output_node: number = edges[e].output_address[0];\n\t         let output_port: number = edges[e].output_address[1];\n\n\t          if(output_node == nodeIndex && output_port >= portIndex){\n\t            edges[e].output_address[1] = edges[e].output_address[1] - 1;\n\t          }\n\t      }\n\t      else{\n\t         console.warn(\"reached 358\");\n\t      }\n\t  }\n\n\t  return flowchart;\n\t}\n\n\n\n\t// \n\t// =============== \n\t// Edge related\n\t// \n\t// \n\n\t//\n  \t// Adds an edge between two ports\n  \t//\n\tpublic static add_edge(flowchart: IFlowchart, outputAddress: number[], inputAddress: number[]): IFlowchart{\n\n\t\tif(outputAddress.length !== 2 || inputAddress.length !== 2){\n\t\t\tthrow Error(\"Invalid arguments for edge\");\n\t\t}\n\n\t\tconsole.log(`Edge created`);\n\n\t\tlet oNode = flowchart.nodes[outputAddress[0]];\n     \tlet iNode = flowchart.nodes[inputAddress[0]];\n\n     \t// dont remove previous edges for outputs\n\t\tlet output = oNode.outputs[outputAddress[1]];\n\t\tlet input = iNode.inputs[inputAddress[1]];\n\n      \tif (input.isConnected){\n\t        FlowchartUtils.delete_edges(flowchart, \n\t        \t\t\t\t\t\t\tFlowchartConnectionUtils.disconnect_edges_with_port_idx(flowchart, \n\t        \t\t\t\t\t\t\tinputAddress[0], inputAddress[1], \"input\"));\n\t    }\n\n\t\tif( !flowchart.nodes[outputAddress[0]].enabled ||  !flowchart.nodes[inputAddress[0]].enabled ){\n\t\t\tconsole.warn(\"Cannot connect to disabled nodes\");\n\t\t}\n\t\telse{\n\t\t\tlet edge: IEdge = { output_address: outputAddress, input_address: inputAddress };\n\n\t\t\tinput.value = {port: outputAddress};\n\t\t    output.isConnected = true;\n\t\t    input.isConnected = true;\n\t\t\t\n\n\t\t\t// todo: check for valid input/output addresses and port address\n\t\t\tflowchart.edges.push(edge);\n\t\t}\n\n\t\treturn flowchart;\n\t};\n\n\n\t//\n\t//\tDeletes an edge by index number of the edges\n\t//\tTODO: Overload\n\t//\n\tpublic static delete_edge(flowchart: IFlowchart, edgeIdx: number): IFlowchart{\n\t\treturn FlowchartUtils.delete_edges(flowchart, [edgeIdx]);\n\t}\n\n\n\t//\n\t//\tDeletes edges by arrya of indices\n\t//\n\tpublic static delete_edges(flowchart: IFlowchart, edgeIds: number[]): IFlowchart{\n\n\t\tflowchart.edges = flowchart.edges.filter(function(edge, index){\n\t\t\treturn ( edgeIds.indexOf(index) == -1 );\n\t\t})\n\n\t\treturn flowchart;\n\t}\n\n\n\t// ==== Execution related\n\t//\n\t// Updates dependent inputs of a node\n\t//\n\tpublic static update_dependent_inputs(flowchart: IFlowchart, node: IGraphNode, originalRank: number): void{\n\n\t\tlet selectedEdges: IEdge[] = flowchart.edges.filter(function(edge){\n\t\t\treturn edge.output_address[0] == originalRank;\n\t\t});\n\n\t\tfor( let e=0;  e  -1){\n\t\t\t\t\tconsole.log(`${node.name} is already executed`);\n\t\t\t\t}\n\t\t\t\telse{\n\n\t\t\t\t\tconsole.log(`${node.name} is enabled: ${node.enabled}`);\n\n\n\t\t\t\t\tif( !node.enabled ){\n\t\t\t\t\t\t//\n\t\t\t\t\t\t//\tIf node is disabled, do nothing and add index of the node\n\t\t\t\t\t\t//\tto the executed array\n\t\t\t\t\t\t//\n\t\t\t\t\t\texecuted.push(index);\n\t\t\t\t\t\tconsole.log(`${node.name} is disabled, hence skipped}`);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\n\t\t\t\t\t\t//\n\t\t\t\t\t\t//\tIf node is enabled, check if all inputs are satisfied\n\t\t\t\t\t\t//\n\t\t\t\t\t\tlet flag = true;\n\t\t\t\t\t\tlet inputs = node.inputs;\n\t\t\t\t\t\tfor(const inp of node.inputs){\n\t\t\t\t\t\t\t// input value contains reference to a port\n\t\t\t\t\t\t\t// mark flag as false, to revisit\n\t\t\t\t\t\t\tif(inp.value && inp.value[\"port\"]){\n\t\t\t\t\t\t\t\tflag = false;\n\t\t\t\t\t\t\t\tconsole.log(`${node.name} is has unfulfilled values}`);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If all inputs are determined, \n\t\t\t\t\t\t// execute the node\n\t\t\t\t\t\tif(flag){\n\t\t\t\t\t\t\tconsole.log(`${node.name} executing...`);\n\t\t\t\t\t\t\tlet time1 = (new Date()).getTime();\n\t\t\t\t\t\t\tNodeUtils.execute_node(node, code_generator, modules, print, gld);\n\t\t\t\t\t\t\tFlowchartUtils.update_dependent_inputs(flowchart, node, index); \n\t\t\t\t\t\t\texecuted.push(index);\n\t\t\t\t\t\t\tlet time2 = (new Date()).getTime();\n\t\t\t\t\t\t\tlet time_taken = (time2 - time1)/1000;\n\t\t\t\t\t\t\tnode.time_taken = time_taken;\n\t\t\t\t\t\t\tconsole.log(`${node.name} executed in ${time_taken}s`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} \n\t\t}\n\n\t\treturn true;\n\t}\n\n\t//\n\t//\tclears all the cached results\n\t//\n\tpublic static reset(flowchart: IFlowchart): void{\n\t\tfor(let n=0; n \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FlowchartWriter.html":{"url":"classes/FlowchartWriter.html","title":"class - FlowchartWriter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  FlowchartWriter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/base-classes/flowchart/FlowchartWriter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                save_flowchart_as_json\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            save_flowchart_as_json\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        save_flowchart_as_json(flowchart: IFlowchart)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/flowchart/FlowchartWriter.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        flowchart\n                                                        \n                                                                    IFlowchart\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { IFlowchart } from './IFlowchart';\nimport { FlowchartReader } from './FlowchartReader';\nimport * as CircularJSON from 'circular-json';\nimport { FileService } from '../../global-services/file.service';\n\nexport abstract class FlowchartWriter{\n\n\tpublic static save_flowchart_as_json(flowchart: IFlowchart): void{\n\t    let file = {};\n\t    let fileString: string;\n\n\t    file[\"language\"] = \"js\";\n\t    file[\"modules\"] = [];\n\n\t    let newFlowchart: IFlowchart = FlowchartReader.read_flowchart_from_data(flowchart);\n\t    file[\"flowchart\"] = newFlowchart;\n\t    fileString = CircularJSON.stringify(file);\n\n\t    let fname: string = 'Scene' + (new Date()).getTime() + \".mob\";\n\t    if(flowchart.name){\n\t      fname = flowchart.name;\n\t      if(!fname.endsWith(\".mob\")){\n\t        fname = fname + \".mob\";\n\t      }\n\t    }\n\t    \n\t    FileService.downloadAsJSON(fileString, fname);\n\t}\n\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForLoopControlProcedure.html":{"url":"classes/ForLoopControlProcedure.html","title":"class - ForLoopControlProcedure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForLoopControlProcedure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/base-classes/procedure/ForLoopControlProcedure.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Procedure\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _children\n                            \n                            \n                                    Private\n                                _disabled\n                            \n                            \n                                    Private\n                                _error\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Protected\n                                _leftComponent\n                            \n                            \n                                    Private\n                                _level\n                            \n                            \n                                    Private\n                                _parent\n                            \n                            \n                                    Private\n                                _printToConsole\n                            \n                            \n                                    Protected\n                                _rightComponent\n                            \n                            \n                                    Private\n                                _selected\n                            \n                            \n                                    Private\n                                _type\n                            \n                            \n                                    Public\n                                hasChildren\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                update\n                            \n                            \n                                getCodeString\n                            \n                            \n                                hasParent\n                            \n                            \n                                reset\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data?: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/base-classes/procedure/ForLoopControlProcedure.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _children\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _children:     IProcedure[]\n\n                    \n                \n                    \n                        \n                            Type :     IProcedure[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _disabled:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _error:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _leftComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _leftComponent:     IComponent\n\n                    \n                \n                    \n                        \n                            Type :     IComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _level\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _level:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _parent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _parent:     IProcedure\n\n                    \n                \n                    \n                        \n                            Type :     IProcedure\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _printToConsole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _printToConsole:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _rightComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _rightComponent:     IComponent\n\n                    \n                \n                    \n                        \n                            Type :     IComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _selected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selected:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _type:     ProcedureTypes\n\n                    \n                \n                    \n                        \n                            Type :     ProcedureTypes\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasChildren\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasChildren:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:23\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(prodData: any, parent: IProcedure)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/procedure/ForLoopControlProcedure.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prodData\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parent\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCodeString\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCodeString(code_generator: ICodeGenerator)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:124\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        code_generator\n                                                        \n                                                                    ICodeGenerator\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasParent\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasParent()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:117\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(prodData: any, parent: IProcedure)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:137\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prodData\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parent\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {ProcedureTypes} from \"./ProcedureTypes\";\nimport {IComponent} from \"./IComponent\";\nimport {Procedure} from \"./Procedure\";\nimport {IProcedure} from \"./IProcedure\";\n\nexport class ForLoopControlProcedure extends Procedure{\n\n\tconstructor(data ?: {variable: string, array_name: string}){\n\t\tsuper(ProcedureTypes.ForLoopControl, true);\n\n\t\tif(data == undefined){\n\t\t\tdata = {variable: \"variable_name\", array_name: \"array_name\"}\n\t\t}\n\n\t\tlet left: IComponent = { expression: data.variable, \n\t\t\t\t\t\t\t\t isAction: false, \n\t\t\t\t\t\t\t\t module: undefined, \n\t\t\t\t\t\t\t\t category: undefined, \n\t\t\t\t\t\t\t\t fn_name: undefined,\n\t\t\t\t\t\t\t\t params: undefined\n\t\t\t\t\t\t\t\t}\n\t\tlet right: IComponent = {\n\t\t\t\t\t\t\t     expression: data.array_name, \n\t\t\t\t\t\t\t\t isAction: false, \n\t\t\t\t\t\t\t\t module: undefined, \n\t\t\t\t\t\t\t\t category: undefined, \n\t\t\t\t\t\t\t\t fn_name: undefined,\n\t\t\t\t\t\t\t\t params: undefined\n\t\t\t\t\t\t\t\t}\n\t\tsuper.left = (left);\n\t\tsuper.right = (right);\n\n\t}\n\n\tupdate(prodData: any, parent: IProcedure): void{\n\t\tsuper.update(prodData, parent);\n\n\t\tthis._leftComponent.expression = prodData._leftComponent.expression;\n\t\tthis._rightComponent.expression = prodData._rightComponent.expression;\n\t}\n\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Frame.html":{"url":"classes/Frame.html","title":"class - Frame","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Frame\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/geometry-modules/gis_module.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                xAxis\n                            \n                            \n                                yAxis\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            xAxis\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        xAxis:     number[]\n\n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/geometry-modules/gis_module.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yAxis\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        yAxis:     number[]\n\n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/geometry-modules/gis_module.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Module } from './Module';\nimport * as THREE from 'three'\n\n//\n//\t\tMobius Classes\n//\n\nclass Point {\n}\n\nclass Polyline {\n    isPlanar():boolean {\n        return true;\n    }\n}\n\nclass Polygon {\n    isPlanar():boolean {\n        return false;\n    }\n}\n\nclass Frame{\n\txAxis: number[];\n\tyAxis: number[];\n}\n\ninterface HasIsPlanar{\n    isPlanar(): boolean;\n}\n\n\nexport class gis_module extends Module{\n\t\n\tpublic srf : any;\n\tpublic sld : any;\n\n\tconstructor(){\n\t\t// name of module, author of module\n\t\tsuper(\"gis\", \"akm\");\n\t}\n\t\n\tgetPoint(): Point{\n\t\tlet pnt: Point = new Point();\n\t\treturn pnt;\n\t}\n\n\tgetPlane(): Polyline{\n\t\tlet pln: Polyline = new Polyline();\n\t\treturn pln;\n\t}\n\n\tisPlanar(entity:T):boolean {\n   \t\treturn entity.isPlanar();\n\t}\n\n\tbyXYPoints(): Frame{\n\t\treturn new Frame();\n\t}\n\n\tmakeCube(size: number): any{\n\t\treturn new THREE.Mesh(new THREE.BoxGeometry(size, size, size));\n\t}\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FunctionProcedure.html":{"url":"classes/FunctionProcedure.html","title":"class - FunctionProcedure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  FunctionProcedure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/base-classes/procedure/FunctionProcedure.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Procedure\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                node\n                            \n                            \n                                    Private\n                                port\n                            \n                            \n                                    Public\n                                _children\n                            \n                            \n                                    Private\n                                _disabled\n                            \n                            \n                                    Private\n                                _error\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Protected\n                                _leftComponent\n                            \n                            \n                                    Private\n                                _level\n                            \n                            \n                                    Private\n                                _parent\n                            \n                            \n                                    Private\n                                _printToConsole\n                            \n                            \n                                    Protected\n                                _rightComponent\n                            \n                            \n                                    Private\n                                _selected\n                            \n                            \n                                    Private\n                                _type\n                            \n                            \n                                    Public\n                                hasChildren\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFunctionName\n                            \n                            \n                                getNode\n                            \n                            \n                                getOutputs\n                            \n                            \n                                setNode\n                            \n                            \n                                update\n                            \n                            \n                                updateParams\n                            \n                            \n                                getCodeString\n                            \n                            \n                                hasParent\n                            \n                            \n                                reset\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data?: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/base-classes/procedure/FunctionProcedure.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            node\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        node:     IGraphNode\n\n                    \n                \n                    \n                        \n                            Type :     IGraphNode\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/base-classes/procedure/FunctionProcedure.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            port\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        port:     InputPort\n\n                    \n                \n                    \n                        \n                            Type :     InputPort\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/base-classes/procedure/FunctionProcedure.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _children\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _children:     IProcedure[]\n\n                    \n                \n                    \n                        \n                            Type :     IProcedure[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _disabled:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _error:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _leftComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _leftComponent:     IComponent\n\n                    \n                \n                    \n                        \n                            Type :     IComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _level\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _level:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _parent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _parent:     IProcedure\n\n                    \n                \n                    \n                        \n                            Type :     IProcedure\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _printToConsole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _printToConsole:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _rightComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _rightComponent:     IComponent\n\n                    \n                \n                    \n                        \n                            Type :     IComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _selected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selected:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _type:     ProcedureTypes\n\n                    \n                \n                    \n                        \n                            Type :     ProcedureTypes\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasChildren\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasChildren:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:23\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFunctionName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFunctionName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/procedure/FunctionProcedure.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNode\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNode()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/procedure/FunctionProcedure.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     IGraphNode\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOutputs\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOutputs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/procedure/FunctionProcedure.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setNode\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetNode(graphNode: IGraphNode)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/procedure/FunctionProcedure.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        graphNode\n                                                        \n                                                                    IGraphNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(prodData: any, parent: IProcedure)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/procedure/FunctionProcedure.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prodData\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parent\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateParams\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateParams()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/procedure/FunctionProcedure.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCodeString\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCodeString(code_generator: ICodeGenerator)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:124\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        code_generator\n                                                        \n                                                                    ICodeGenerator\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasParent\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasParent()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:117\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(prodData: any, parent: IProcedure)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:137\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prodData\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parent\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Procedure} from \"./Procedure\";\nimport {IProcedure} from \"./IProcedure\";\nimport {ProcedureTypes} from \"./ProcedureTypes\";\nimport {IComponent} from \"./IComponent\";\nimport {IGraphNode} from \"../node/IGraphNode\";\nimport {InputPort} from \"../port/InputPort\";\n\nexport class FunctionProcedure extends Procedure{\n\n\tprivate node: IGraphNode = undefined;\n\tprivate port: InputPort = undefined;\n\n\tconstructor(data?: {node: IGraphNode, port: InputPort}){\n\n\t\tsuper(ProcedureTypes.Function, false); \n\n\t\tif(data){\n\t\t\tthis.node = data.node;\n\t\t\tthis.port = data.port;\n\t\t}\n\n\t\tlet left: IComponent = { \n\t\t\t\t\t\t\t\t\texpression: \"new_variable\", \n\t\t\t\t\t\t\t\t\tisAction: false, \n\t\t\t\t\t\t\t\t\tmodule: undefined, \n\t\t\t\t\t\t\t\t\tcategory: undefined, \n\t\t\t\t\t\t\t\t\tfn_name: undefined,\n\t\t\t\t\t\t\t\t\tparams: undefined\n\t\t\t\t\t\t\t\t};\n\n\t\tlet right: IComponent = { \n\t\t\t\t\t\t\t\t\texpression: undefined, \n\t\t\t\t\t\t\t\t\tisAction: true, \n\t\t\t\t\t\t\t\t\tmodule: undefined, \n\t\t\t\t\t\t\t\t\tcategory: undefined,\n\t\t\t\t\t\t\t\t\tfn_name: undefined,\n\t\t\t\t\t\t\t\t\tparams: this.node && this.node.inputs ? [this.node.inputs.map(function(inp){ return \" \"; })] : []\n\t\t\t\t\t\t\t\t}\n\n\t\tsuper.left = (left);\n\t\tsuper.right = (right);\n\n\t}\n\n\tgetNode(): IGraphNode{\n\t\treturn this.node;\n\t}\n\n\tsetNode(graphNode: IGraphNode): void{\n\t\tthis.node = graphNode;\n\t}\n\n\tgetFunctionName(): string{\n\t\treturn this.port ? this.port.name : \"\";\t\t\n\t}\n\n\tupdateParams(): string[]{\n\t\tlet inp_range = this.node.inputs.map(function(inp){\n\t\t\treturn \" \";\n\t\t})\n\t\treturn inp_range;\n\t}\n\n\tgetOutputs(): string[]{\n\t\tlet outputs = this.node.outputs.map(function(output){\n\t\t\treturn output.name;\n\t\t});\n\t\treturn outputs;\n\t}\t\n\n\tupdate(prodData: any, parent: IProcedure): void{\n\t\tsuper.update(prodData, parent);\n\n\t\tthis._leftComponent = \t{ \n\t\t\t\t\t\t\t\t\texpression: prodData._leftComponent.expression,\n\t\t\t\t\t\t\t\t \tisAction: false, \n\t\t\t\t\t\t\t\t \tmodule: undefined, \n\t\t\t\t\t\t\t\t \tcategory: undefined, \n\t\t\t\t\t\t\t\t \tfn_name: undefined,\n\t\t\t\t\t\t\t\t \tparams: undefined\n\t\t\t\t\t\t\t\t};\n\n\n\t\tthis._rightComponent =  {  \n\t\t\t\t\t\t\t\t\texpression: prodData._rightComponent.expression, \n\t\t\t\t\t\t\t\t\tisAction: true, \n\t\t\t\t\t\t\t\t\tmodule: undefined, \n\t\t\t\t\t\t\t\t\tcategory: prodData._rightComponent.category, \n\t\t\t\t\t\t\t\t\tfn_name: undefined,\n\t\t\t\t\t\t\t\t\tparams: prodData._rightComponent.params\n\t\t\t\t\t\t\t\t};\n\t}\n\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GSViewer.html":{"url":"modules/GSViewer.html","title":"module - GSViewer","body":"\n                   \n\n\n\n\n  Modules\n  GSViewer\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GSViewer\n\n\n\ncluster_GSViewer_declarations\n\n\n\ncluster_GSViewer_exports\n\n\n\ncluster_GSViewer_providers\n\n\n\n\nGSViewerComponent\n\nGSViewerComponent\n\n\n\nGSViewer\n\nGSViewer\n\nGSViewer -->\n\nGSViewerComponent->GSViewer\n\n\n\n\n\nGroupsComponent\n\nGroupsComponent\n\nGSViewer -->\n\nGroupsComponent->GSViewer\n\n\n\n\n\nSettingComponent\n\nSettingComponent\n\nGSViewer -->\n\nSettingComponent->GSViewer\n\n\n\n\n\nToolwindowComponent\n\nToolwindowComponent\n\nGSViewer -->\n\nToolwindowComponent->GSViewer\n\n\n\n\n\nViewerComponent\n\nViewerComponent\n\nGSViewer -->\n\nViewerComponent->GSViewer\n\n\n\n\n\nGSViewerComponent \n\nGSViewerComponent \n\nGSViewerComponent  -->\n\nGSViewer->GSViewerComponent \n\n\n\n\n\nDataService\n\nDataService\n\nGSViewer -->\n\nDataService->GSViewer\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/gs-viewer/gs-viewer.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                GSViewerComponent\n                            \n                            \n                                GroupsComponent\n                            \n                            \n                                SettingComponent\n                            \n                            \n                                ToolwindowComponent\n                            \n                            \n                                ViewerComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     DataService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    GSViewerComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AngularSplitModule } from 'angular-split';\nimport {MatSliderModule } from '@angular/material/slider';\nimport { GSViewerComponent } from './gs-viewer.component';\nimport { ViewerComponent } from './viewer/viewer.component';\nimport { SettingComponent } from './setting/setting.component';\nimport { ToolwindowComponent } from './toolwindow/toolwindow.component';\nimport { DataService } from './data/data.service';\nimport { GroupsComponent } from './toolwindow/groups.component';\nimport { NgxPaginationModule} from 'ngx-pagination';\nimport { MatExpansionModule} from '@angular/material/expansion';\nimport { BrowserAnimationsModule ,NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatTabsModule} from '@angular/material/tabs';\n//import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserModule, HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatSortModule} from '@angular/material/sort';\n\n\n@NgModule({\n    imports: [ \tCommonModule,\n    \t\t\tAngularSplitModule,\n\t\t\t   \tMatSliderModule,\n                NgxPaginationModule,\n                MatExpansionModule,\n                BrowserAnimationsModule,\n                NoopAnimationsModule,\n                MatTabsModule,\n                BrowserModule,\n                MatTooltipModule,\n                MatSortModule\n\t\t\t ],\n    exports: [ GSViewerComponent ],\n    declarations: [GSViewerComponent,\n    \t\t\tViewerComponent,\n\t\t\t    SettingComponent,\n\t\t\t    ToolwindowComponent,\n\t\t\t    GroupsComponent],\n    providers: [DataService],\n})\nexport class GSViewer {\n \t\n \tstatic forRoot(): ModuleWithProviders {\n        return {\n            ngModule: GSViewer,\n            providers: [\n                DataService\n            ]\n        };\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GSViewerComponent.html":{"url":"components/GSViewerComponent.html","title":"component - GSViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GSViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/gs-viewer/gs-viewer.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                gs-viewer\n            \n\n            \n                styleUrls\n                gs-viewer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./gs-viewer.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                imVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                leaflet\n                            \n                            \n                                ngDoCheck\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setModel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/gs-viewer/gs-viewer.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                    DataService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                    \n                            \n                            Type:    gs.IModel\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/gs-viewer/gs-viewer.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            leaflet\n                            \n                            \n                        \n                    \n                \n                \n                    \nleaflet()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/gs-viewer/gs-viewer.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngDoCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \nngDoCheck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/gs-viewer/gs-viewer.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/gs-viewer/gs-viewer.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setModel\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetModel(data: gs.IModel)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/gs-viewer/gs-viewer.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    gs.IModel\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imVisible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        imVisible:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gs-viewer/gs-viewer.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport {DataService} from './data/data.service';\nimport * as gs from \"gs-json\";\n\n@Component({\n  selector: 'gs-viewer',\n  templateUrl: './gs-viewer.component.html',\n  styleUrls: ['./gs-viewer.component.scss']\n})\nexport class GSViewerComponent {\n\timVisible:boolean=false;\n\n\t// gs model data passed to the viewer\n\t@Input() data: gs.IModel;\n\n\tconstructor(private dataService: DataService){\n\t};\n\n\tsetModel(data: gs.IModel): void{\n\t\ttry{\n\t\t\tthis.dataService.setGsModel(data);\n\t\t}\n\t\tcatch(ex){\n\t\t\tthis.data = undefined;\n\t\t\tconsole.error(\"Error generating model\");\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.setModel(this.data);\n\t\t\n\t}\n\n\tngDoCheck(){\n\t\tif(this.dataService.getGsModel() !== this.data){\n\t\t\tthis.setModel(this.data);\n\t\t}\n\t}\n\tleaflet(){\n\t\tthis.imVisible=this.dataService.imVisible;\n\t}\n\n}\n    \n\n    \n        \n\t\n\t\t\n\t\t  \n\t\t    \n\t\t      \n\t\t        \n\t\t      \n\t\t      \n\t\t        \n\t\t         -->\n\t\t        \n\t\t      \n\t\t    \n\t\t  \n\t\t\n\t\t\n\t\t\t\n\t\t\n\t\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t  \t\t    \t\t      \t\t        \t\t      \t\t      \t\t        \t\t         -->\t\t        \t\t      \t\t    \t\t  \t\t\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CesiumViewerComponent', 'selector': 'app-cesium-viewer'},{'name': 'CodeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ConsoleComponent', 'selector': 'app-console'},{'name': 'DataComponent', 'selector': 'app-data'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FileLoadDialogComponent', 'selector': 'file-load-dialog'},{'name': 'FlowchartControlsComponent', 'selector': 'app-flowchart-controls'},{'name': 'FlowchartViewerComponent', 'selector': 'app-flowchart-viewer'},{'name': 'GSViewerComponent', 'selector': 'gs-viewer'},{'name': 'GeometryViewerComponent', 'selector': 'app-geometry-viewer'},{'name': 'GraphEdgeComponent', 'selector': 'app-graph-edge'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HelpFundamentals', 'selector': 'app-help-fundamentals'},{'name': 'HelpModel', 'selector': 'app-help-model'},{'name': 'HelpViewerComponent', 'selector': 'app-help-viewer'},{'name': 'InfoViewerComponent', 'selector': 'app-info-viewer'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MobiusAbout', 'selector': 'app-help-about'},{'name': 'MobiusEditorComponent', 'selector': 'app-mobius-editor'},{'name': 'MobiusGalleryComponent', 'selector': 'mobius-gallery'},{'name': 'MobiusViewerComponent', 'selector': 'app-mobius-viewer'},{'name': 'MobiuscesiumComponent', 'selector': 'mobius-cesium'},{'name': 'ModuleViewerComponent', 'selector': 'app-module-viewer'},{'name': 'ModuleboxComponent', 'selector': 'app-modulebox'},{'name': 'NodeLibraryComponent', 'selector': 'app-node-library'},{'name': 'PanelComponent', 'selector': 'app-panel'},{'name': 'ParameterEditorComponent', 'selector': 'app-parameter-editor'},{'name': 'ParameterSettingsDialogComponent', 'selector': 'parameter-settings-dialog'},{'name': 'ParameterViewerComponent', 'selector': 'app-parameter-viewer'},{'name': 'ProcedureEditorComponent', 'selector': 'app-procedure-editor'},{'name': 'ProcedureItemComponent', 'selector': 'app-procedure-item'},{'name': 'PublishComponent', 'selector': 'app-publish'},{'name': 'PublishSettingsComponent', 'selector': 'app-publish-settings'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'TextViewerComponent', 'selector': 'app-text-viewer'},{'name': 'ToolwindowComponent', 'selector': 'app-toolwindow'},{'name': 'ViewerComponent', 'selector': 'app-viewer'},{'name': 'ViewerComponent', 'selector': 'cesium-viewer'},{'name': 'ViewerContainerComponent', 'selector': 'app-viewer-container'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GSViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GeometryViewerComponent.html":{"url":"components/GeometryViewerComponent.html","title":"component - GeometryViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GeometryViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui-components/viewers/geometry-viewer/geometry-viewer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-geometry-viewer\n            \n\n            \n                styleUrls\n                geometry-viewer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./geometry-viewer.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _port\n                            \n                            \n                                gs_dummy_data\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_fs: FlowchartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui-components/viewers/geometry-viewer/geometry-viewer.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _fs\n                                                  \n                                                        \n                                                                    FlowchartService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/viewers/geometry-viewer/geometry-viewer.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/viewers/geometry-viewer/geometry-viewer.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/viewers/geometry-viewer/geometry-viewer.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _port\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _port:     OutputPort\n\n                    \n                \n                    \n                        \n                            Type :     OutputPort\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/viewers/geometry-viewer/geometry-viewer.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gs_dummy_data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gs_dummy_data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/viewers/geometry-viewer/geometry-viewer.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/viewers/geometry-viewer/geometry-viewer.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Injector, OnInit } from '@angular/core';\n\nimport { OutputPort } from '../../../base-classes/port/PortModule';\nimport { FlowchartService } from '../../../global-services/flowchart.service';\n\nimport * as gs from 'gs-json';\n\n@Component({\n  selector: 'app-geometry-viewer',\n  templateUrl: './geometry-viewer.component.html',\n  styleUrls: ['./geometry-viewer.component.scss']\n})\nexport class GeometryViewerComponent implements OnInit{\n\n\t_port: OutputPort;\n\tgs_dummy_data: any;\n\n  private subscriptions = [];\n\n  constructor(private _fs: FlowchartService){}\n\n  ngOnInit(){\n    this.subscriptions.push(this._fs.node$.subscribe( (node) => {\n          this._port = node.outputs[0];\n    }));\n  }\n\n  ngOnDestroy(){\n    this.subscriptions.map(function(s){\n      s.unsubscribe();\n    })\n  }\n\n\treset(){ \n    this.gs_dummy_data = undefined;\n\t}\n\n}\n\n\n    \n\n    \n        \n\t\n\t\t\n\t\t\n\t\t\tNo Model Available\n\t\t\n\n\t\t\n\t\n\t\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\t\t\tNo Model Available\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CesiumViewerComponent', 'selector': 'app-cesium-viewer'},{'name': 'CodeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ConsoleComponent', 'selector': 'app-console'},{'name': 'DataComponent', 'selector': 'app-data'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FileLoadDialogComponent', 'selector': 'file-load-dialog'},{'name': 'FlowchartControlsComponent', 'selector': 'app-flowchart-controls'},{'name': 'FlowchartViewerComponent', 'selector': 'app-flowchart-viewer'},{'name': 'GSViewerComponent', 'selector': 'gs-viewer'},{'name': 'GeometryViewerComponent', 'selector': 'app-geometry-viewer'},{'name': 'GraphEdgeComponent', 'selector': 'app-graph-edge'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HelpFundamentals', 'selector': 'app-help-fundamentals'},{'name': 'HelpModel', 'selector': 'app-help-model'},{'name': 'HelpViewerComponent', 'selector': 'app-help-viewer'},{'name': 'InfoViewerComponent', 'selector': 'app-info-viewer'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MobiusAbout', 'selector': 'app-help-about'},{'name': 'MobiusEditorComponent', 'selector': 'app-mobius-editor'},{'name': 'MobiusGalleryComponent', 'selector': 'mobius-gallery'},{'name': 'MobiusViewerComponent', 'selector': 'app-mobius-viewer'},{'name': 'MobiuscesiumComponent', 'selector': 'mobius-cesium'},{'name': 'ModuleViewerComponent', 'selector': 'app-module-viewer'},{'name': 'ModuleboxComponent', 'selector': 'app-modulebox'},{'name': 'NodeLibraryComponent', 'selector': 'app-node-library'},{'name': 'PanelComponent', 'selector': 'app-panel'},{'name': 'ParameterEditorComponent', 'selector': 'app-parameter-editor'},{'name': 'ParameterSettingsDialogComponent', 'selector': 'parameter-settings-dialog'},{'name': 'ParameterViewerComponent', 'selector': 'app-parameter-viewer'},{'name': 'ProcedureEditorComponent', 'selector': 'app-procedure-editor'},{'name': 'ProcedureItemComponent', 'selector': 'app-procedure-item'},{'name': 'PublishComponent', 'selector': 'app-publish'},{'name': 'PublishSettingsComponent', 'selector': 'app-publish-settings'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'TextViewerComponent', 'selector': 'app-text-viewer'},{'name': 'ToolwindowComponent', 'selector': 'app-toolwindow'},{'name': 'ViewerComponent', 'selector': 'app-viewer'},{'name': 'ViewerComponent', 'selector': 'cesium-viewer'},{'name': 'ViewerContainerComponent', 'selector': 'app-viewer-container'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GeometryViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GraphEdgeComponent.html":{"url":"components/GraphEdgeComponent.html","title":"component - GraphEdgeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GraphEdgeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui-components/graph/graph-edge/graph-edge.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-graph-edge\n            \n\n            \n                styleUrls\n                graph-edge.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./graph-edge.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _buffer\n                            \n                            \n                                canvas\n                            \n                            \n                                height\n                            \n                            \n                                left\n                            \n                            \n                                top\n                            \n                            \n                                    Private\n                                visible\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drawEdge\n                            \n                            \n                                edgeClicked\n                            \n                            \n                                getHeight\n                            \n                            \n                                getLeft\n                            \n                            \n                                getPosition\n                            \n                            \n                                getTop\n                            \n                            \n                                getWidth\n                            \n                            \n                                isValid\n                            \n                            \n                                ngDoCheck\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSelect\n                            \n                            \n                                setDimensions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                edge\n                            \n                            \n                                inputPosition\n                            \n                            \n                                outputPosition\n                            \n                            \n                                temporary\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/ui-components/graph/graph-edge/graph-edge.component.ts:23\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        edge\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui-components/graph/graph-edge/graph-edge.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inputPosition\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui-components/graph/graph-edge/graph-edge.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        outputPosition\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui-components/graph/graph-edge/graph-edge.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        temporary\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui-components/graph/graph-edge/graph-edge.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            drawEdge\n                            \n                            \n                        \n                    \n                \n                \n                    \ndrawEdge()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/graph/graph-edge/graph-edge.component.ts:75\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            edgeClicked\n                            \n                            \n                        \n                    \n                \n                \n                    \nedgeClicked()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/graph/graph-edge/graph-edge.component.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getHeight\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetHeight()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/graph/graph-edge/graph-edge.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLeft\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLeft()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/graph/graph-edge/graph-edge.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPosition\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPosition(edge: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/graph/graph-edge/graph-edge.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edge\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTop\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTop()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/graph/graph-edge/graph-edge.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getWidth\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetWidth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/graph/graph-edge/graph-edge.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isValid\n                            \n                            \n                        \n                    \n                \n                \n                    \nisValid()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/graph/graph-edge/graph-edge.component.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngDoCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \nngDoCheck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/graph/graph-edge/graph-edge.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/graph/graph-edge/graph-edge.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSelect\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSelect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/graph/graph-edge/graph-edge.component.ts:194\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setDimensions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetDimensions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/graph/graph-edge/graph-edge.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _buffer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _buffer:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/graph/graph-edge/graph-edge.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canvas\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        canvas:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/graph/graph-edge/graph-edge.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            height\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        height:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/ui-components/graph/graph-edge/graph-edge.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            left\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        left:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/ui-components/graph/graph-edge/graph-edge.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            top\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        top:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/ui-components/graph/graph-edge/graph-edge.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            visible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visible:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/graph/graph-edge/graph-edge.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            width\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        width:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/ui-components/graph/graph-edge/graph-edge.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ViewChild, ElementRef, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-graph-edge',\n  templateUrl: './graph-edge.component.html',\n  styleUrls: ['./graph-edge.component.scss'],\n})\nexport class GraphEdgeComponent implements OnInit {\n\n  @Input() edge;\n  @Input() inputPosition;\n  @Input() outputPosition;\n  @Input() temporary;\n  @ViewChild('canvas') canvas: ElementRef;\n\n  private visible: boolean = false;\n\n  _buffer: number = 50;\n  \n  top; \n  left;\n  width; \n  height;\n\n  constructor() {  }\n\n  ngOnInit() {\n      let canvas: HTMLCanvasElement = this.canvas.nativeElement;\n      let context  = canvas.getContext('2d');\n      \n      this.drawEdge();\n  }\n\n  ngDoCheck(){\n      this.drawEdge()\n  }\n\n  setDimensions(): void{\n    this.top = this.getTop();\n    this.left = this.getLeft();\n    this.width = this.getWidth();\n    this.height = this.getHeight();\n  }\n\n  getTop(): number{\n    // return smallest y value\n    return Math.min(this.edge.outputPosition.y, this.edge.inputPosition.y) - this._buffer;\n  }\t\n\n  getLeft(): number{\n    // return smallest x value\n    return Math.min(this.edge.outputPosition.x, this.edge.inputPosition.x);//this.edge.outputPosition[0];\n  }\n\n  getWidth(): number{\n  \treturn Math.max(10, Math.abs(this.edge.inputPosition.x - this.edge.outputPosition.x));//this.edge.outputPosition[0];\n  }\n\n  getHeight(): number{\n    return 2*this._buffer + Math.max(10, Math.abs(this.edge.inputPosition.y - this.edge.outputPosition.y));\n  }\n\n  getPosition(edge): string{\n  \treturn JSON.stringify(edge);\n  }\n\n  edgeClicked(): void{\n\n  }\n\n  isValid(): boolean{\n      return Boolean(this.edge && this.edge.inputPosition && this.edge.outputPosition);\n  }\n\n  drawEdge(): void{\n    try{\n      if( this.isValid() ){\n\n          this.setDimensions();\n\n          let canvas: HTMLCanvasElement = this.canvas.nativeElement;\n          let context  = canvas.getContext('2d');\n\n          canvas.width = this.getWidth();\n          canvas.height = this.getHeight();\n\n          context.clearRect(0, 0, canvas.width, canvas.height);\n          context.lineWidth = 2;\n\n          context.strokeStyle = this.temporary ? '#8AA8C0' : '#395D73';\n\n          // if temporary edge\n          if(this.temporary){\n            context.setLineDash([5, 10])\n          };\n\n          let left_point = this.edge.outputPosition.x  this.edge.inputPosition.x ? this.edge.outputPosition : this.edge.inputPosition;\n\n          let startPoint: number[];\n          let endPoint:  number[];\n\n          if(left_point.y  [0.01, 0.3]\n              // fn(x) = (0.3*2/Math.PI)*tanh(x) + (1/ln(x + e^100))\n              //let x: number = this.getWidth();\n              //let distance_factor: number = (0.3*2/Math.PI)*Math.tanh(x) + (1/Math.log(x + Math.exp(100)));\n              let distance_factor: number = 0.25;//canvas.width \n    \n\n    \n        \n\n\t\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CesiumViewerComponent', 'selector': 'app-cesium-viewer'},{'name': 'CodeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ConsoleComponent', 'selector': 'app-console'},{'name': 'DataComponent', 'selector': 'app-data'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FileLoadDialogComponent', 'selector': 'file-load-dialog'},{'name': 'FlowchartControlsComponent', 'selector': 'app-flowchart-controls'},{'name': 'FlowchartViewerComponent', 'selector': 'app-flowchart-viewer'},{'name': 'GSViewerComponent', 'selector': 'gs-viewer'},{'name': 'GeometryViewerComponent', 'selector': 'app-geometry-viewer'},{'name': 'GraphEdgeComponent', 'selector': 'app-graph-edge'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HelpFundamentals', 'selector': 'app-help-fundamentals'},{'name': 'HelpModel', 'selector': 'app-help-model'},{'name': 'HelpViewerComponent', 'selector': 'app-help-viewer'},{'name': 'InfoViewerComponent', 'selector': 'app-info-viewer'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MobiusAbout', 'selector': 'app-help-about'},{'name': 'MobiusEditorComponent', 'selector': 'app-mobius-editor'},{'name': 'MobiusGalleryComponent', 'selector': 'mobius-gallery'},{'name': 'MobiusViewerComponent', 'selector': 'app-mobius-viewer'},{'name': 'MobiuscesiumComponent', 'selector': 'mobius-cesium'},{'name': 'ModuleViewerComponent', 'selector': 'app-module-viewer'},{'name': 'ModuleboxComponent', 'selector': 'app-modulebox'},{'name': 'NodeLibraryComponent', 'selector': 'app-node-library'},{'name': 'PanelComponent', 'selector': 'app-panel'},{'name': 'ParameterEditorComponent', 'selector': 'app-parameter-editor'},{'name': 'ParameterSettingsDialogComponent', 'selector': 'parameter-settings-dialog'},{'name': 'ParameterViewerComponent', 'selector': 'app-parameter-viewer'},{'name': 'ProcedureEditorComponent', 'selector': 'app-procedure-editor'},{'name': 'ProcedureItemComponent', 'selector': 'app-procedure-item'},{'name': 'PublishComponent', 'selector': 'app-publish'},{'name': 'PublishSettingsComponent', 'selector': 'app-publish-settings'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'TextViewerComponent', 'selector': 'app-text-viewer'},{'name': 'ToolwindowComponent', 'selector': 'app-toolwindow'},{'name': 'ViewerComponent', 'selector': 'app-viewer'},{'name': 'ViewerComponent', 'selector': 'cesium-viewer'},{'name': 'ViewerContainerComponent', 'selector': 'app-viewer-container'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GraphEdgeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasIsPlanar.html":{"url":"interfaces/HasIsPlanar.html","title":"interface - HasIsPlanar","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HasIsPlanar\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/geometry-modules/gis_module.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isPlanar\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isPlanar\n                            \n                            \n                        \n                    \n                \n                \n                    \nisPlanar()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/geometry-modules/gis_module.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Module } from './Module';\nimport * as THREE from 'three'\n\n//\n//\t\tMobius Classes\n//\n\nclass Point {\n}\n\nclass Polyline {\n    isPlanar():boolean {\n        return true;\n    }\n}\n\nclass Polygon {\n    isPlanar():boolean {\n        return false;\n    }\n}\n\nclass Frame{\n\txAxis: number[];\n\tyAxis: number[];\n}\n\ninterface HasIsPlanar{\n    isPlanar(): boolean;\n}\n\n\nexport class gis_module extends Module{\n\t\n\tpublic srf : any;\n\tpublic sld : any;\n\n\tconstructor(){\n\t\t// name of module, author of module\n\t\tsuper(\"gis\", \"akm\");\n\t}\n\t\n\tgetPoint(): Point{\n\t\tlet pnt: Point = new Point();\n\t\treturn pnt;\n\t}\n\n\tgetPlane(): Polyline{\n\t\tlet pln: Polyline = new Polyline();\n\t\treturn pln;\n\t}\n\n\tisPlanar(entity:T):boolean {\n   \t\treturn entity.isPlanar();\n\t}\n\n\tbyXYPoints(): Frame{\n\t\treturn new Frame();\n\t}\n\n\tmakeCube(size: number): any{\n\t\treturn new THREE.Mesh(new THREE.BoxGeometry(size, size, size));\n\t}\n}\n\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HelpFundamentals.html":{"url":"components/HelpFundamentals.html","title":"component - HelpFundamentals","body":"\n                   \n\n\n\n\n\n  Components\n  HelpFundamentals\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui-components/help/info-viewer/help.template.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-help-fundamentals\n            \n\n            \n                styleUrls\n                help.fundamentals.tpl.scss\n            \n\n\n\n            \n                templateUrl\n                ./help.fundamentals.tpl.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/ui-components/help/info-viewer/help.template.ts:22\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/help/info-viewer/help.template.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-help-about',\n  templateUrl: './help.about.tpl.html',\n  styleUrls: ['./help.about.tpl.scss']\n})\nexport class MobiusAbout implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n@Component({\n  selector: 'app-help-fundamentals',\n  templateUrl: './help.fundamentals.tpl.html',\n  styleUrls: ['./help.fundamentals.tpl.scss']\n})\nexport class HelpFundamentals implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n@Component({\n  selector: 'app-help-model',\n  templateUrl: './help.model.tpl.html',\n  styleUrls: ['./help.model.tpl.scss']\n})\nexport class HelpModel implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n    \n\n    \n        Fundamentals\n\n\n    In order to get a better understanding of creating procedures in Möbius, it will be helpful to review some of the fundamental constructs of programming.\n\n\n\n    Execution\n    Variables\n    Primitive Data Types\n    List Data Type\n    Passing Data: By Value and By Reference\n    Expressions\n    If-else Conditions\n    For-each Loop\n    Variable Scope\n    Functions\n\n\nExecution\n\n\n    A procedure consists of a sequence of lines of code. When you execute the procedure, your computer will execute the each line of code, one by one. It is like a sequence of instructions.\n\n\n\n    // code on line 1\n    // code on line 2\n    // code on line 3\n\n\n\n    (Note that in the code example above, each line starts with a \"//\". This is actually a shorthand to indicate that this line consists of a comment. The computer will ignore such lines.)\n\n\n\n    (Note also that in this document, various code snippet are given as examples. The code that you create in Möbius of course looks a little different, but the structure is exactly the same. We are just writing the code snippets in this way in order to avoid having to do lots of screen captures. Each code snippet is assumed to be independent and stand alone.)\n\n\n\n    In general, the flow of the execution goes one line at a time, top to bottom. You can change this linear behaviour by using if-else conditions and for-loops. More on that later.\n\n\n\n    Each line of code can contain various types of statements. The most basic is a variable assignment.\n\n\nVariables\n\n\n    A variable can be thought of as a named container in which you can place some data. A variable is something like this:\n\n\n\n    x = 123\n\n\n\n    In the above code, the variable named x contains the number 123. We can say: \"the value of the variable is 123\". The first time you use a variable like this, it gets declared, which creates the container in memory. Once it is declared, you can change the value at any time.\n\n\n\n    x = 123\n    x = 456\n\n\n\n    In the above code, the variable named x was used for the first time, and value was set to 123. Then, on the second line, the value 123 was discarded and replaced with the value 456. We can say: \"the value of 456 was assigned to the variable x\". You can change the value as many times as you like.\n\n\n\n    By convention, variables are typically named using lowercase letters only. For example, \"my_variable\". The variable name should not contain spaces, or any special character. Also, it should not start with a number.\n\n\nPrimitive Data Types\n\n\n    The data that you assign to a variable can have different types. Möbius allows you to work with three primitive data types:\n\n\n\n    Numbers, eg. 123, 120.50 etc.\n    Strings of text e.g. \"This text string\" etc.\n    Boolean e.g. true or false.\n\n\n\n    Below is an example of some variable assignments for the three different primitive data types:\n\n\n\n    my_age = 47\n    my_name = \"Patrick\"\n    lives_in_sg = true\n\n\n\n    There is also a special data type called null. When a value has already been assigned, and you want to clear it without assigning some other value, then you can assign null.\n\n\n\n    my_age = 47\n    // do some other stuff\n    my_age = null\n\n\n\n    Strings can contain a lot of data. Here is an example of a longer string:\n\n\n\n    some_text = \"The Möbius Modeller is a 3D parametric modelling software. It has a visual programming interface that combines dataflow programming with blocks-based programming. Dataflow programming is used to define the overall structure of your code, using nodes connected by wires. Blocks-based programming is used to define the individual procedures in each of your nodes. Procedures contain fours main types if elements: 1) variables, 2) if-else conditions, 3) for loops, and 4) function calls.\"\n\n\n\n    In the example above, the variable called some_text is assigned a longer string. A string can also be much longer than that - for example, maybe a whole book.\n\n\n\n    Also, note also that strings can contain text that looks like a number, but that is actually not a number data type. Here is an example:\n\n\n\n    text_that_looks_like_number = \"123.456\"\n    a_number = 123.456\n\n\n\n    Note that characters in a string can also be accessed using the square bracket notation. For example:\n\n\n\n    my_name = \"patrick\"\n    first_letter = my_name[0]\n    last_letter = my_name[6]\n\n\n\n    The square bracket notation for indexing will be explained in more detail in the section on lists.\n\n\nList Data Types\n\n\n    The three primitive data types already allow many useful procedures to be written. However, there is one key problem: none of them allow you to handle collections of data items. When creating procedures, you will find that a lot of data needs to managed as a collection.\n\n\n\n    For example, lets say you have 10 people in your group, and you want to store their names. You could create 10 variables, named person1=\"patrick\", person2=\"kainwee\", person3=\"akshata\",etc, and assign each one a different name. But that would get tedious. You could store them all in one string, for example: people=\"patrick, kainwee, akshata\". But that is rather inflexible, since everything is stored in a single lump of text.\n\n\n\n    In order to be easily handle collections of data, Möbius allows you to use a list data type. A list lets you store multiple values in a single variable. A list is defined using square brackets, like this:\n\n\n\n    names_list = [\"patrick\", \"kianwee\", \"akshata\"]\n    some_numbers = [1, 2, 3, 4.5, 6.7, 1000, 2000]\n\n\n\n    In the first line of the above code, a variable called names_list has been created, and a value has been assigned to it that has a list data type. The list has three items inside it, each of which is a string. In the second line, a variable called some_numbers has been created, and the value is a list of various numbers.\n\n\n\n    The items in a list can be accessed using a zero based index. This index starts at zero, and counts up the list, one item at a time. So in the names_list above, \"patrick\" is at index 0, \"kianwee\" at 1, and \"akshata\" at 2. Below is an example of accessing items in names_list:\n\n\n\n    names_list = [\"patrick\", \"kianwee\", \"akshata\"]\n    person = names_list[1]\n\n\n\n    The variable called person is now assigned the value \"kianwee\". (This is because \"kainwee\" is at index position 1.) If you wanted to assign \"patrick\" to person, one would write names_list[0], if you wanted \"akshata\", one would write names_list[2]. Note that for the first item, the index is 0, and for teh last item the index is the list length minus 1.\n\n\n\n    The same approach can be used in order to set the values of the items in a list. For example, we could change one of the names as follows:\n\n\n\n    names_list = [\"patrick\", \"kianwee\", \"akshata\"]\n    names_list[0] = \"patrick_janssen\"\n\n\n\n    The names_list would contain three items, namely [\"patrick_janssen\", \"kianwee\", \"akshata\"]. You can also add items to the list, like this.\n\n\n\n    names_list = [\"patrick\", \"kianwee\", \"akshata\"]\n    names_list[3] = \"kamel\"\n\n\n\n    The names_list would contain four items, namely [\"patrick\", \"kianwee\", \"akshata\", \"kamel\"].\n\n\n\n    In some cases, rather than filling a list with items, we may instead need to create an empty list, that then gets filled later. Here is an example:\n\n\n\n    names_list = []\n    // some other code\n    names_list[0] = \"joie\"\n    names_list[1] = \"derek\"\n\n\nPassing Data: By Value and By Reference\n\n\n    Finally, the last thing to say about lists goes a little deeper into programming concepts. It may not be immediately relevant when you first get started, but still it s worth mentioning. It relates to how data is passed around. There are basically two ways that data can get passed: by value and by reference. Lets say you set variable_a = variable_b:\n\n\n\n    By Value: The data value in variable_a is copied, and assigned to variable_b. The two variables now have separate values stored in different locations in memory. The two values will currently be the same, but if you later change one, the other will not be affected.\n    By Reference: A reference to the data value in variable_a is copied, and the reference is assigned to variable_b. The two variables now have the same value stored in the same locations in memory. This means that is you change the value of one variable, the other will change as well.\n\n\n\n\n    The easiest way to understand this is with a pair of example. The first example will be using primitive data types (which are passed by value), and the second with a list data type (which is passed by reference).\n\n\n\n    a = 5\n    b = a\n    a = 6\n\n\n\n    The question is, after executing all three lines of code, what is the value of b? The answer is 5. If we follow this line by line it makes sense.\n\n\n\n    Line 1) We set the value of a to 5. \n    Line 2) We set the value of b to a. This results in the value being passed by value.\n    Line 3) We change the value of a to 6. This does not affect b in any way,\n\n\n\n    Now lets look at a similar case using lists.\n\n\n\n\n    list_a = [1, 2, 3] \n    list_b = list_a\n    list_a[0] = 10\n\n\n\n    The question again is, after executing all three lines of code, what is the value of b? The answer is [10, 2, 3]. This may be more surprising. Why is the first item now 10? In the third line, we change a, not b. Lets set through it line by line.\n\n\n\n    Line 1: We set the value of list_a to [1, 2, 3]. \n    Line 2: We set the value of list_b to list_a. This results in the value being passed by reference.\n    Line 3: We change the value of a to [10, 2, 3]. Since list_a and list_b are referencing the same value, this means that list_b now also has a value of [10, 2, 3]. \n\n\nExpressions\n\n\n    As we have see above, a variable assignment has an \"=\" with something on the left and something on the right. The left hand side must specify a container in which the data will be stored. This can either be a variable name (for example my_variable), or, if the variable type is a list, then it can be a variable name with an index (for example, my_list[1]).\n\n\n\n    The right hand side of the assignment operator can be more interesting. So far, we have only been assigning a value. But on the right side you can write more complex expressions. For example:\n\n\n\n    my_variable = ((4 * 3) / 2) - 1\n\n\n\n    Expressions can use arithmetic and comparison operators. For example, let us take a simple expression: 4 + 5 is equal to 9. Here 4 and 5 are called operands and ‘+’ is called the operator, which in this case is an arithmetic operator.\n\n\n\n    The arithmetic operators are as follows:\n\n\n\n    + (Addition) Adds two operands\n    - (Subtraction) Subtracts the second operand from the first\n    * (Multiplication) Multiply both operands\n    / (Division) Divide the numerator by the denominator\n    % (Modulus) Outputs the remainder of an integer division\n    ++ (Increment) Increases an integer value by one\n    -- (Decrement) Decreases an integer value by one\n\n\n\n    The comparison operators are as follows:\n\n\n\n    (A == B) Checks if the value of two operands are equal or not, if yes, then the condition becomes true. \n    (A != B) Checks if the value of two operands are equal or not, if the values are not equal, then the condition becomes true.\n    (A > B) Checks if the value of the left operand is greater than the value of the right operand, if yes, then the condition becomes true.\n    (A \n    (A >= B) Checks if the value of the left operand is greater than or equal to the value of the right operand, if yes, then the condition becomes true.\n    (A \n\n\nIf-else Conditions\n\n\n    While creating a procedure, there may be a situation when you need to perform different actions based on different conditions.\n\n\n\n    Möbius supports an if-else conditional statements. Here is an example:\n\n\n\n    if (variable_a > 100)\n    &nbsp;&nbsp;// execute the code that is inside the if, only if the condition is true\n    else\n    &nbsp;&nbsp;// execute the code that is inside the else, only if the condition is not true\n\n\n\n    (In the Möbius procedure window, pay attention to the left indentation of the code. You can drag your lines of code into the if-else block, and they will become indented. This indicates that they are inside the if-condition, or the else condition.)\n\n\n\n    In this case, if variable_a is greater than 100, then the first set of code is executed. Otherwise the second set of code is executed.\n\n\nFor-each Loops\n\n\n    While creating a procedure, you may encounter a situation where you need to perform an action over and over again. In such situations, you would need to write loop statements.\n\n\n\n    Möbius provides a for-each loop that allows you to loop over a list of values.\n\n\n\n    list_of_items = [10, 20, 30, 40, 50]\n    if (item in list_of_items)\n    &nbsp;&nbsp;// execute the code that is inside the loop multiple times, using item\n\n\n\n    (In the Möbius procedure window, pay attention to the left indentation of the code. You can drag your lines of code into the for-loop block, and they will become indented. This indicates that they are inside the loop.)\n\n\n\n    The example above shows the basic loop construct. The list_of_items contains five values, so the loop will execute five times. Each time, the a variable called item is created with a new value. The first time around the loop, item will have a value of 10, the second time, it will have a value of 20, and so forth. Each time around the loop, the code will most likely do something useful with this item variable.\n\n\nVariable Scope\n\n\n    When using if-else conditions and for-each loops, it is important to look a little deeper at creating variables. If-else condition and for-each loops define inner blocks of code (shown graphically by the level of indentation). These blocks of code can have multiple lines, and these lines may include the creation of new variables. The are certain rules that define where variables are visible, referred to as the variable scope.\n\n\n\n    Lets assume you you create variable in your procedure called variable_a. Where can you use that variable name? Which is the same as asking, where is that variable \"in scope\"? (If you do it wrong, you will get a \"ReferenceError\" when you run your program.) To figure this out, you need to follow two basic rules (both rules need to be true).:\n\n\n\n    Rule 1: The line of code accessing the variable must come after the line of code that created the variable. \n    Rule 2: The line of code accessing the variable must be contained inside the code block that created the variable.\n\n\n\n    Lets look at an example, and analyse it line by line.\n\n\n\n    a = 2\n    if (condition)\n    &nbsp;&nbsp;b = a * 4\n    c = b * 6 // ReferenceError\n\n\n\n    Line 1:The variable a is created.\n    Line 2:The if creates a code sub-block, with a single line of code in it. There are now two code blocks, the main code block of the procedure, and nested inside that, this if code sub-block.\n    Line 3:This line is inside the if code block, which is inside the main code block. A new variable, b is created. The value is set to a multiplied by 4. In this cases, there is no problem accessing the variable a, because both rules are true. Rule 1: Line 3 come after line 1. Rule 2: Line 3 is inside the line 1 code block.\n    Line 4:This line is inside the if code block. This line generates an ReferenceError. A new variable, c is created, no problem here. But the problem occurs when the value is set to b multiplied by 6. In this cases, line 4 cannot access the variable b define on line 3. Rule 1 is still OK: Line 4 come after line 3. However, Rule 2 is not OK: Line 4 is not inside the line 3 code block. So, as far as this line is concerned, variable b does not exist.\n\n\n\n    Basically, anything you create in these inner code blocks is not visible to the code outside the block. To someone who is new to programming, this may seem annoying. However, it is actually a good thing, since it avoids many errors that are hard to catch. Furthermore, there is actually a simple way to fix this, as follows:\n\n\n\n    a = 2\n    b = 0 // a default value\n    if (condition)\n    &nbsp;&nbsp;b = a * 4\n    c = b * 6\n\n\n\n    Since b is now created in the main code block, the last line no longer has an error.\n\n\nFunctions\n\n\n    Finally, we get to the functions, which is where most of the useful operations can be performed. Möbius allow users to create procedures that call a set of predefined functions, organised into modules to make the easier to find. These functions are all called it the same way.\n\n\n\n    The function name species the function to be called.\n    The function inputs are called the \"arguments\", and are specified in round brackets after the function name. \n    The function may have an output, which is called the \"return value\". If it has a return value, then the return value will typically be assigned to a variable.\n\n\n\n    For example, consider the string.len() function that calculates the length of a string.\n\n\n\n    my_str = \"This is some text.\"\n    result = string.len(my_str)\n\n\n\n    In this case, the module name is string, and the function name is len. The function takes one argument as input, which is the string whose length needs to be calculated, which in this case is my_str. The function returns a number (the length of the string), which gets assigned to the variable called result.\n\n\n\n    The sections below give help documentation on all the functions available in Möbius.\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Fundamentals    In order to get a better understanding of creating procedures in Möbius, it will be helpful to review some of the fundamental constructs of programming.    Execution    Variables    Primitive Data Types    List Data Type    Passing Data: By Value and By Reference    Expressions    If-else Conditions    For-each Loop    Variable Scope    FunctionsExecution    A procedure consists of a sequence of lines of code. When you execute the procedure, your computer will execute the each line of code, one by one. It is like a sequence of instructions.    // code on line 1    // code on line 2    // code on line 3    (Note that in the code example above, each line starts with a \"//\". This is actually a shorthand to indicate that this line consists of a comment. The computer will ignore such lines.)    (Note also that in this document, various code snippet are given as examples. The code that you create in Möbius of course looks a little different, but the structure is exactly the same. We are just writing the code snippets in this way in order to avoid having to do lots of screen captures. Each code snippet is assumed to be independent and stand alone.)    In general, the flow of the execution goes one line at a time, top to bottom. You can change this linear behaviour by using if-else conditions and for-loops. More on that later.    Each line of code can contain various types of statements. The most basic is a variable assignment.Variables    A variable can be thought of as a named container in which you can place some data. A variable is something like this:    x = 123    In the above code, the variable named x contains the number 123. We can say: \"the value of the variable is 123\". The first time you use a variable like this, it gets declared, which creates the container in memory. Once it is declared, you can change the value at any time.    x = 123    x = 456    In the above code, the variable named x was used for the first time, and value was set to 123. Then, on the second line, the value 123 was discarded and replaced with the value 456. We can say: \"the value of 456 was assigned to the variable x\". You can change the value as many times as you like.    By convention, variables are typically named using lowercase letters only. For example, \"my_variable\". The variable name should not contain spaces, or any special character. Also, it should not start with a number.Primitive Data Types    The data that you assign to a variable can have different types. Möbius allows you to work with three primitive data types:    Numbers, eg. 123, 120.50 etc.    Strings of text e.g. \"This text string\" etc.    Boolean e.g. true or false.    Below is an example of some variable assignments for the three different primitive data types:    my_age = 47    my_name = \"Patrick\"    lives_in_sg = true    There is also a special data type called null. When a value has already been assigned, and you want to clear it without assigning some other value, then you can assign null.    my_age = 47    // do some other stuff    my_age = null    Strings can contain a lot of data. Here is an example of a longer string:    some_text = \"The Möbius Modeller is a 3D parametric modelling software. It has a visual programming interface that combines dataflow programming with blocks-based programming. Dataflow programming is used to define the overall structure of your code, using nodes connected by wires. Blocks-based programming is used to define the individual procedures in each of your nodes. Procedures contain fours main types if elements: 1) variables, 2) if-else conditions, 3) for loops, and 4) function calls.\"    In the example above, the variable called some_text is assigned a longer string. A string can also be much longer than that - for example, maybe a whole book.    Also, note also that strings can contain text that looks like a number, but that is actually not a number data type. Here is an example:    text_that_looks_like_number = \"123.456\"    a_number = 123.456    Note that characters in a string can also be accessed using the square bracket notation. For example:    my_name = \"patrick\"    first_letter = my_name[0]    last_letter = my_name[6]    The square bracket notation for indexing will be explained in more detail in the section on lists.List Data Types    The three primitive data types already allow many useful procedures to be written. However, there is one key problem: none of them allow you to handle collections of data items. When creating procedures, you will find that a lot of data needs to managed as a collection.    For example, lets say you have 10 people in your group, and you want to store their names. You could create 10 variables, named person1=\"patrick\", person2=\"kainwee\", person3=\"akshata\",etc, and assign each one a different name. But that would get tedious. You could store them all in one string, for example: people=\"patrick, kainwee, akshata\". But that is rather inflexible, since everything is stored in a single lump of text.    In order to be easily handle collections of data, Möbius allows you to use a list data type. A list lets you store multiple values in a single variable. A list is defined using square brackets, like this:    names_list = [\"patrick\", \"kianwee\", \"akshata\"]    some_numbers = [1, 2, 3, 4.5, 6.7, 1000, 2000]    In the first line of the above code, a variable called names_list has been created, and a value has been assigned to it that has a list data type. The list has three items inside it, each of which is a string. In the second line, a variable called some_numbers has been created, and the value is a list of various numbers.    The items in a list can be accessed using a zero based index. This index starts at zero, and counts up the list, one item at a time. So in the names_list above, \"patrick\" is at index 0, \"kianwee\" at 1, and \"akshata\" at 2. Below is an example of accessing items in names_list:    names_list = [\"patrick\", \"kianwee\", \"akshata\"]    person = names_list[1]    The variable called person is now assigned the value \"kianwee\". (This is because \"kainwee\" is at index position 1.) If you wanted to assign \"patrick\" to person, one would write names_list[0], if you wanted \"akshata\", one would write names_list[2]. Note that for the first item, the index is 0, and for teh last item the index is the list length minus 1.    The same approach can be used in order to set the values of the items in a list. For example, we could change one of the names as follows:    names_list = [\"patrick\", \"kianwee\", \"akshata\"]    names_list[0] = \"patrick_janssen\"    The names_list would contain three items, namely [\"patrick_janssen\", \"kianwee\", \"akshata\"]. You can also add items to the list, like this.    names_list = [\"patrick\", \"kianwee\", \"akshata\"]    names_list[3] = \"kamel\"    The names_list would contain four items, namely [\"patrick\", \"kianwee\", \"akshata\", \"kamel\"].    In some cases, rather than filling a list with items, we may instead need to create an empty list, that then gets filled later. Here is an example:    names_list = []    // some other code    names_list[0] = \"joie\"    names_list[1] = \"derek\"Passing Data: By Value and By Reference    Finally, the last thing to say about lists goes a little deeper into programming concepts. It may not be immediately relevant when you first get started, but still it s worth mentioning. It relates to how data is passed around. There are basically two ways that data can get passed: by value and by reference. Lets say you set variable_a = variable_b:    By Value: The data value in variable_a is copied, and assigned to variable_b. The two variables now have separate values stored in different locations in memory. The two values will currently be the same, but if you later change one, the other will not be affected.    By Reference: A reference to the data value in variable_a is copied, and the reference is assigned to variable_b. The two variables now have the same value stored in the same locations in memory. This means that is you change the value of one variable, the other will change as well.    The easiest way to understand this is with a pair of example. The first example will be using primitive data types (which are passed by value), and the second with a list data type (which is passed by reference).    a = 5    b = a    a = 6    The question is, after executing all three lines of code, what is the value of b? The answer is 5. If we follow this line by line it makes sense.    Line 1) We set the value of a to 5.     Line 2) We set the value of b to a. This results in the value being passed by value.    Line 3) We change the value of a to 6. This does not affect b in any way,    Now lets look at a similar case using lists.    list_a = [1, 2, 3]     list_b = list_a    list_a[0] = 10    The question again is, after executing all three lines of code, what is the value of b? The answer is [10, 2, 3]. This may be more surprising. Why is the first item now 10? In the third line, we change a, not b. Lets set through it line by line.    Line 1: We set the value of list_a to [1, 2, 3].     Line 2: We set the value of list_b to list_a. This results in the value being passed by reference.    Line 3: We change the value of a to [10, 2, 3]. Since list_a and list_b are referencing the same value, this means that list_b now also has a value of [10, 2, 3]. Expressions    As we have see above, a variable assignment has an \"=\" with something on the left and something on the right. The left hand side must specify a container in which the data will be stored. This can either be a variable name (for example my_variable), or, if the variable type is a list, then it can be a variable name with an index (for example, my_list[1]).    The right hand side of the assignment operator can be more interesting. So far, we have only been assigning a value. But on the right side you can write more complex expressions. For example:    my_variable = ((4 * 3) / 2) - 1    Expressions can use arithmetic and comparison operators. For example, let us take a simple expression: 4 + 5 is equal to 9. Here 4 and 5 are called operands and ‘+’ is called the operator, which in this case is an arithmetic operator.    The arithmetic operators are as follows:    + (Addition) Adds two operands    - (Subtraction) Subtracts the second operand from the first    * (Multiplication) Multiply both operands    / (Division) Divide the numerator by the denominator    % (Modulus) Outputs the remainder of an integer division    ++ (Increment) Increases an integer value by one    -- (Decrement) Decreases an integer value by one    The comparison operators are as follows:    (A == B) Checks if the value of two operands are equal or not, if yes, then the condition becomes true.     (A != B) Checks if the value of two operands are equal or not, if the values are not equal, then the condition becomes true.    (A > B) Checks if the value of the left operand is greater than the value of the right operand, if yes, then the condition becomes true.    (A     (A >= B) Checks if the value of the left operand is greater than or equal to the value of the right operand, if yes, then the condition becomes true.    (A If-else Conditions    While creating a procedure, there may be a situation when you need to perform different actions based on different conditions.    Möbius supports an if-else conditional statements. Here is an example:    if (variable_a > 100)      // execute the code that is inside the if, only if the condition is true    else      // execute the code that is inside the else, only if the condition is not true    (In the Möbius procedure window, pay attention to the left indentation of the code. You can drag your lines of code into the if-else block, and they will become indented. This indicates that they are inside the if-condition, or the else condition.)    In this case, if variable_a is greater than 100, then the first set of code is executed. Otherwise the second set of code is executed.For-each Loops    While creating a procedure, you may encounter a situation where you need to perform an action over and over again. In such situations, you would need to write loop statements.    Möbius provides a for-each loop that allows you to loop over a list of values.    list_of_items = [10, 20, 30, 40, 50]    if (item in list_of_items)      // execute the code that is inside the loop multiple times, using item    (In the Möbius procedure window, pay attention to the left indentation of the code. You can drag your lines of code into the for-loop block, and they will become indented. This indicates that they are inside the loop.)    The example above shows the basic loop construct. The list_of_items contains five values, so the loop will execute five times. Each time, the a variable called item is created with a new value. The first time around the loop, item will have a value of 10, the second time, it will have a value of 20, and so forth. Each time around the loop, the code will most likely do something useful with this item variable.Variable Scope    When using if-else conditions and for-each loops, it is important to look a little deeper at creating variables. If-else condition and for-each loops define inner blocks of code (shown graphically by the level of indentation). These blocks of code can have multiple lines, and these lines may include the creation of new variables. The are certain rules that define where variables are visible, referred to as the variable scope.    Lets assume you you create variable in your procedure called variable_a. Where can you use that variable name? Which is the same as asking, where is that variable \"in scope\"? (If you do it wrong, you will get a \"ReferenceError\" when you run your program.) To figure this out, you need to follow two basic rules (both rules need to be true).:    Rule 1: The line of code accessing the variable must come after the line of code that created the variable.     Rule 2: The line of code accessing the variable must be contained inside the code block that created the variable.    Lets look at an example, and analyse it line by line.    a = 2    if (condition)      b = a * 4    c = b * 6 // ReferenceError    Line 1:The variable a is created.    Line 2:The if creates a code sub-block, with a single line of code in it. There are now two code blocks, the main code block of the procedure, and nested inside that, this if code sub-block.    Line 3:This line is inside the if code block, which is inside the main code block. A new variable, b is created. The value is set to a multiplied by 4. In this cases, there is no problem accessing the variable a, because both rules are true. Rule 1: Line 3 come after line 1. Rule 2: Line 3 is inside the line 1 code block.    Line 4:This line is inside the if code block. This line generates an ReferenceError. A new variable, c is created, no problem here. But the problem occurs when the value is set to b multiplied by 6. In this cases, line 4 cannot access the variable b define on line 3. Rule 1 is still OK: Line 4 come after line 3. However, Rule 2 is not OK: Line 4 is not inside the line 3 code block. So, as far as this line is concerned, variable b does not exist.    Basically, anything you create in these inner code blocks is not visible to the code outside the block. To someone who is new to programming, this may seem annoying. However, it is actually a good thing, since it avoids many errors that are hard to catch. Furthermore, there is actually a simple way to fix this, as follows:    a = 2    b = 0 // a default value    if (condition)      b = a * 4    c = b * 6    Since b is now created in the main code block, the last line no longer has an error.Functions    Finally, we get to the functions, which is where most of the useful operations can be performed. Möbius allow users to create procedures that call a set of predefined functions, organised into modules to make the easier to find. These functions are all called it the same way.    The function name species the function to be called.    The function inputs are called the \"arguments\", and are specified in round brackets after the function name.     The function may have an output, which is called the \"return value\". If it has a return value, then the return value will typically be assigned to a variable.    For example, consider the string.len() function that calculates the length of a string.    my_str = \"This is some text.\"    result = string.len(my_str)    In this case, the module name is string, and the function name is len. The function takes one argument as input, which is the string whose length needs to be calculated, which in this case is my_str. The function returns a number (the length of the string), which gets assigned to the variable called result.    The sections below give help documentation on all the functions available in Möbius.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CesiumViewerComponent', 'selector': 'app-cesium-viewer'},{'name': 'CodeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ConsoleComponent', 'selector': 'app-console'},{'name': 'DataComponent', 'selector': 'app-data'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FileLoadDialogComponent', 'selector': 'file-load-dialog'},{'name': 'FlowchartControlsComponent', 'selector': 'app-flowchart-controls'},{'name': 'FlowchartViewerComponent', 'selector': 'app-flowchart-viewer'},{'name': 'GSViewerComponent', 'selector': 'gs-viewer'},{'name': 'GeometryViewerComponent', 'selector': 'app-geometry-viewer'},{'name': 'GraphEdgeComponent', 'selector': 'app-graph-edge'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HelpFundamentals', 'selector': 'app-help-fundamentals'},{'name': 'HelpModel', 'selector': 'app-help-model'},{'name': 'HelpViewerComponent', 'selector': 'app-help-viewer'},{'name': 'InfoViewerComponent', 'selector': 'app-info-viewer'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MobiusAbout', 'selector': 'app-help-about'},{'name': 'MobiusEditorComponent', 'selector': 'app-mobius-editor'},{'name': 'MobiusGalleryComponent', 'selector': 'mobius-gallery'},{'name': 'MobiusViewerComponent', 'selector': 'app-mobius-viewer'},{'name': 'MobiuscesiumComponent', 'selector': 'mobius-cesium'},{'name': 'ModuleViewerComponent', 'selector': 'app-module-viewer'},{'name': 'ModuleboxComponent', 'selector': 'app-modulebox'},{'name': 'NodeLibraryComponent', 'selector': 'app-node-library'},{'name': 'PanelComponent', 'selector': 'app-panel'},{'name': 'ParameterEditorComponent', 'selector': 'app-parameter-editor'},{'name': 'ParameterSettingsDialogComponent', 'selector': 'parameter-settings-dialog'},{'name': 'ParameterViewerComponent', 'selector': 'app-parameter-viewer'},{'name': 'ProcedureEditorComponent', 'selector': 'app-procedure-editor'},{'name': 'ProcedureItemComponent', 'selector': 'app-procedure-item'},{'name': 'PublishComponent', 'selector': 'app-publish'},{'name': 'PublishSettingsComponent', 'selector': 'app-publish-settings'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'TextViewerComponent', 'selector': 'app-text-viewer'},{'name': 'ToolwindowComponent', 'selector': 'app-toolwindow'},{'name': 'ViewerComponent', 'selector': 'app-viewer'},{'name': 'ViewerComponent', 'selector': 'cesium-viewer'},{'name': 'ViewerContainerComponent', 'selector': 'app-viewer-container'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HelpFundamentals'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HelpModel.html":{"url":"components/HelpModel.html","title":"component - HelpModel","body":"\n                   \n\n\n\n\n\n  Components\n  HelpModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui-components/help/info-viewer/help.template.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-help-model\n            \n\n            \n                styleUrls\n                help.model.tpl.scss\n            \n\n\n\n            \n                templateUrl\n                ./help.model.tpl.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/ui-components/help/info-viewer/help.template.ts:36\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/help/info-viewer/help.template.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-help-about',\n  templateUrl: './help.about.tpl.html',\n  styleUrls: ['./help.about.tpl.scss']\n})\nexport class MobiusAbout implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n@Component({\n  selector: 'app-help-fundamentals',\n  templateUrl: './help.fundamentals.tpl.html',\n  styleUrls: ['./help.fundamentals.tpl.scss']\n})\nexport class HelpFundamentals implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n@Component({\n  selector: 'app-help-model',\n  templateUrl: './help.model.tpl.html',\n  styleUrls: ['./help.model.tpl.scss']\n})\nexport class HelpModel implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n    \n\n    \n        About the Model\n\nMobius v0.9.19-cesium\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'About the ModelMobius v0.9.19-cesium'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CesiumViewerComponent', 'selector': 'app-cesium-viewer'},{'name': 'CodeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ConsoleComponent', 'selector': 'app-console'},{'name': 'DataComponent', 'selector': 'app-data'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FileLoadDialogComponent', 'selector': 'file-load-dialog'},{'name': 'FlowchartControlsComponent', 'selector': 'app-flowchart-controls'},{'name': 'FlowchartViewerComponent', 'selector': 'app-flowchart-viewer'},{'name': 'GSViewerComponent', 'selector': 'gs-viewer'},{'name': 'GeometryViewerComponent', 'selector': 'app-geometry-viewer'},{'name': 'GraphEdgeComponent', 'selector': 'app-graph-edge'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HelpFundamentals', 'selector': 'app-help-fundamentals'},{'name': 'HelpModel', 'selector': 'app-help-model'},{'name': 'HelpViewerComponent', 'selector': 'app-help-viewer'},{'name': 'InfoViewerComponent', 'selector': 'app-info-viewer'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MobiusAbout', 'selector': 'app-help-about'},{'name': 'MobiusEditorComponent', 'selector': 'app-mobius-editor'},{'name': 'MobiusGalleryComponent', 'selector': 'mobius-gallery'},{'name': 'MobiusViewerComponent', 'selector': 'app-mobius-viewer'},{'name': 'MobiuscesiumComponent', 'selector': 'mobius-cesium'},{'name': 'ModuleViewerComponent', 'selector': 'app-module-viewer'},{'name': 'ModuleboxComponent', 'selector': 'app-modulebox'},{'name': 'NodeLibraryComponent', 'selector': 'app-node-library'},{'name': 'PanelComponent', 'selector': 'app-panel'},{'name': 'ParameterEditorComponent', 'selector': 'app-parameter-editor'},{'name': 'ParameterSettingsDialogComponent', 'selector': 'parameter-settings-dialog'},{'name': 'ParameterViewerComponent', 'selector': 'app-parameter-viewer'},{'name': 'ProcedureEditorComponent', 'selector': 'app-procedure-editor'},{'name': 'ProcedureItemComponent', 'selector': 'app-procedure-item'},{'name': 'PublishComponent', 'selector': 'app-publish'},{'name': 'PublishSettingsComponent', 'selector': 'app-publish-settings'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'TextViewerComponent', 'selector': 'app-text-viewer'},{'name': 'ToolwindowComponent', 'selector': 'app-toolwindow'},{'name': 'ViewerComponent', 'selector': 'app-viewer'},{'name': 'ViewerComponent', 'selector': 'cesium-viewer'},{'name': 'ViewerContainerComponent', 'selector': 'app-viewer-container'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HelpModel'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HelpViewerComponent.html":{"url":"components/HelpViewerComponent.html","title":"component - HelpViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HelpViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui-components/help/help-viewer/help-viewer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-help-viewer\n            \n\n            \n                styleUrls\n                help-viewer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./help-viewer.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _activeMod\n                            \n                            \n                                _loadedModules\n                            \n                            \n                                    Private\n                                _subscription\n                            \n                            \n                                _url\n                            \n                            \n                                fnObj\n                            \n                            \n                                    Private\n                                helpAvailable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSubModule\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                notify\n                            \n                            \n                                replaceLineBreaks\n                            \n                            \n                                showAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sanitizer: DomSanitizer, flowchartService: FlowchartService, _ms: ModuleService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui-components/help/help-viewer/help-viewer.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        flowchartService\n                                                  \n                                                        \n                                                                    FlowchartService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _ms\n                                                  \n                                                        \n                                                                    ModuleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSubModule\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSubModule(alldocs: , modname: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/help/help-viewer/help-viewer.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alldocs\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        modname\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/help/help-viewer/help-viewer.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notify\n                            \n                            \n                        \n                    \n                \n                \n                    \nnotify()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/help/help-viewer/help-viewer.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            replaceLineBreaks\n                            \n                            \n                        \n                    \n                \n                \n                    \nreplaceLineBreaks(str: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/help/help-viewer/help-viewer.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        str\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/help/help-viewer/help-viewer.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _activeMod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _activeMod:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/help/help-viewer/help-viewer.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _loadedModules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _loadedModules:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/help/help-viewer/help-viewer.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/help/help-viewer/help-viewer.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _url:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/ui-components/help/help-viewer/help-viewer.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fnObj\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fnObj:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/help/help-viewer/help-viewer.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            helpAvailable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        helpAvailable:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/help/help-viewer/help-viewer.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FlowchartService } from '../../../global-services/flowchart.service'; \nimport { ModuleService } from '../../../global-services/module.service'; \n\nimport { Subscription } from 'rxjs/Subscription';\nimport { DomSanitizer} from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-help-viewer',\n  templateUrl: './help-viewer.component.html',\n  styleUrls: ['./help-viewer.component.scss']\n})\nexport class HelpViewerComponent implements OnInit {\n\n  _url;\n  private _subscription: Subscription;\n  private helpAvailable: boolean = false;\n\n  _loadedModules: any;\n  _activeMod: string;\n\n  fnObj: {module: string, name: string};\n\n  //modules/_group_.html\n  constructor(private sanitizer: DomSanitizer, \n      private flowchartService: FlowchartService, \n      private _ms: ModuleService) { \n  \t\tthis.sanitizer = sanitizer;\n      try{\n        let mods = ModuleService.modules.map(function(m){\n            return m[\"_name\"].toLowerCase();\n        });\n\n        this._loadedModules = ModuleService.modules;\n        this.helpAvailable = true;\n      }\n      catch(ex){\n        this.helpAvailable = false;\n      }\n  };\n\n  getSubModule(alldocs, modname){\n    for(let i=0; i  0) ? m.children : []);\n      }\n    }\n  };\n\n  notify(): void{\n\n  }\n\n  showAll(): void{\n\n  };  \n\n  ngOnInit() { \n      this.notify();\n  };\n\n  replaceLineBreaks(str: string): string{\n      return str.split(\"\\n\").join(\"\")\n  }\n\n}\n\n    \n\n    \n        \n\t\n\tMöbius Functions\n\n\t\n\t\tSorry! The help documentation seems to be missing\n\t -->\n\n\t\n\n\t\t\n\n\t\t\t\n\t\t \t\t    \t\n\t\t \t\t    \t\t\n\t\t \t\t\t\t      {{ mod._name }} \n\t\t \t\t\t\t    \n\t\t \t\t    \t\n\t\t \t\n\t\t \t\t\t\t\n\n\t\t \t\t\t\t \t\n\t\t \t\t\t\t \t\t\n\t\t \t\t\t\t\t \t\t{{fn.name}}\n\n\t\t \t\t\t\t\t \t\t\n\t\t \t\t\t\t\t \t\t\t\n\t\t\t \t\t    \t\t\t\t\n\t\t\t \t\t    \t\t\t\t{{fn.signatures[0].comment.shortText}}\n\t\t\t \t\t\t\t\t\t\t\n\t\t\t \t\t\t\t\t\t\t\n\t\t\t \t\t\t\t\t\t\t\n\t\t\t \t\t\t\t\t\t\t\t\n\t\t\t \t\t\t\t\t\t\t\t\t{{pa.name}}: \n\t\t\t \t\t\t\t\t\t\t\t\t{{pa.comment.text}}\n\n\t\t\t \t\t\t\t\t\t\t\t\t\n\t\t\t \t\t\t\t\t\t\t\t\t(Type:{{pa.type.name}})\n\t\t\t \t\t\t\t\t\t\t\t\t(Type:{{pa.type.type}})\n\t\t\t \t\t\t\t\t\t\t\t\tDefault: {{pa.defaultValue}}\n\t\t\t \t\t\t\t\t\t\t\t\t{{pa.comment.shortText}}\n\t\t\t \t\t\t\t\t\t\t\t\n\t\t\t \t\t\t\t\t\t\t\t\n\t\t\t\t \t\t\t    \t\t\t\tReturns:  \n\t\t\t\t \t\t\t    \t\t\t\t{{fn.signatures[0].comment.returns}}\t\n\t\t\t \t\t\t    \t\t\t\t\n\t\t\t \t\t\t\t\t\t\t\n\t\t\t \t\n\t\t\t \t\t\t\t\t\t\t\n\n\n\t\t\t \t\t\t    \t\t\t\n\t\t\t\t \t\t\t    \t\t\tExample: \n\t\t\t \t\t\t    \t\t\t\t\n\t\t\t\t \t\t\t    \t\t\t\t\n\t\t\t \t\t\t    \t\t\t\t\n\t\t\t \t\t\t\t\t\t\t\n\t\t\t \t\t    \t\t\t\t\t\n\t\t\t \t\t    \t\t\t\t\tMore\n\t\t\t \t\t    \t\t\t\t -->\n\t\t \t\t    \t\t\t\t\n\t\t \t\n\t\t \t    \t\t\t\t\n\t\t \t\t\t\t \t\n\n\t\t \t\n\t\t \t\t\t\t \t\n\t\t \t\t\t\t\n\t\t \t\t\t\t\n\t\t \t\n\t\t \t\n\t\t \t\n\t\t\n\n\t\t\n\t\t\n\n\t\t\tModule: {{fnObj.module}}\n\t\t\t{{fnObj.name}}\n\t\t\t\n\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t{{fnObj.content.signatures[0].comment.shortText}}\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t{{pa.name}}: \n\t\t\t\t\t\t\tType: {{pa.type.type}} -->\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\n\t\t\t\t\t\n\t    \t\t\t\tReturns: \n\t    \t\t\t\t\n\t    \t\t\t\n\n\t\t\t\t\t\t\n\t\t\t\t\t\tMore\n\t\t\t\t\t\n\n\t\t\t\t\t\n\t\t\t\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t[Show All]\n\t\t\n\t\t\n\n\t\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\tMöbius Functions\t\t\tSorry! The help documentation seems to be missing\t -->\t\t\t\t\t\t\t\t \t\t    \t\t\t \t\t    \t\t\t\t \t\t\t\t      {{ mod._name }} \t\t \t\t\t\t    \t\t \t\t    \t\t\t \t\t\t \t\t\t\t\t\t \t\t\t\t \t\t\t \t\t\t\t \t\t\t\t \t\t\t\t\t \t\t{{fn.name}}\t\t \t\t\t\t\t \t\t\t\t \t\t\t\t\t \t\t\t\t\t\t \t\t    \t\t\t\t\t\t\t \t\t    \t\t\t\t{{fn.signatures[0].comment.shortText}}\t\t\t \t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t{{pa.name}}: \t\t\t \t\t\t\t\t\t\t\t\t{{pa.comment.text}}\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t(Type:{{pa.type.name}})\t\t\t \t\t\t\t\t\t\t\t\t(Type:{{pa.type.type}})\t\t\t \t\t\t\t\t\t\t\t\tDefault: {{pa.defaultValue}}\t\t\t \t\t\t\t\t\t\t\t\t{{pa.comment.shortText}}\t\t\t \t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t \t\t\t    \t\t\t\tReturns:  \t\t\t\t \t\t\t    \t\t\t\t{{fn.signatures[0].comment.returns}}\t\t\t\t \t\t\t    \t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t \t\t\t\t \t\t\t\t\t\t\t\t\t\t \t\t\t    \t\t\t\t\t\t\t \t\t\t    \t\t\tExample: \t\t\t \t\t\t    \t\t\t\t\t\t\t\t \t\t\t    \t\t\t\t\t\t\t \t\t\t    \t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t \t\t    \t\t\t\t\t\t\t\t \t\t    \t\t\t\t\tMore\t\t\t \t\t    \t\t\t\t -->\t\t \t\t    \t\t\t\t\t\t \t\t\t \t    \t\t\t\t\t\t \t\t\t\t \t\t\t \t\t\t \t\t\t\t \t\t\t \t\t\t\t\t\t \t\t\t\t\t\t \t\t\t \t\t\t \t\t\t\t\t\t\t\t\t\tModule: {{fnObj.module}}\t\t\t{{fnObj.name}}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{fnObj.content.signatures[0].comment.shortText}}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{pa.name}}: \t\t\t\t\t\t\tType: {{pa.type.type}} -->\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t    \t\t\t\tReturns: \t    \t\t\t\t\t    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tMore\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[Show All]\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CesiumViewerComponent', 'selector': 'app-cesium-viewer'},{'name': 'CodeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ConsoleComponent', 'selector': 'app-console'},{'name': 'DataComponent', 'selector': 'app-data'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FileLoadDialogComponent', 'selector': 'file-load-dialog'},{'name': 'FlowchartControlsComponent', 'selector': 'app-flowchart-controls'},{'name': 'FlowchartViewerComponent', 'selector': 'app-flowchart-viewer'},{'name': 'GSViewerComponent', 'selector': 'gs-viewer'},{'name': 'GeometryViewerComponent', 'selector': 'app-geometry-viewer'},{'name': 'GraphEdgeComponent', 'selector': 'app-graph-edge'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HelpFundamentals', 'selector': 'app-help-fundamentals'},{'name': 'HelpModel', 'selector': 'app-help-model'},{'name': 'HelpViewerComponent', 'selector': 'app-help-viewer'},{'name': 'InfoViewerComponent', 'selector': 'app-info-viewer'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MobiusAbout', 'selector': 'app-help-about'},{'name': 'MobiusEditorComponent', 'selector': 'app-mobius-editor'},{'name': 'MobiusGalleryComponent', 'selector': 'mobius-gallery'},{'name': 'MobiusViewerComponent', 'selector': 'app-mobius-viewer'},{'name': 'MobiuscesiumComponent', 'selector': 'mobius-cesium'},{'name': 'ModuleViewerComponent', 'selector': 'app-module-viewer'},{'name': 'ModuleboxComponent', 'selector': 'app-modulebox'},{'name': 'NodeLibraryComponent', 'selector': 'app-node-library'},{'name': 'PanelComponent', 'selector': 'app-panel'},{'name': 'ParameterEditorComponent', 'selector': 'app-parameter-editor'},{'name': 'ParameterSettingsDialogComponent', 'selector': 'parameter-settings-dialog'},{'name': 'ParameterViewerComponent', 'selector': 'app-parameter-viewer'},{'name': 'ProcedureEditorComponent', 'selector': 'app-procedure-editor'},{'name': 'ProcedureItemComponent', 'selector': 'app-procedure-item'},{'name': 'PublishComponent', 'selector': 'app-publish'},{'name': 'PublishSettingsComponent', 'selector': 'app-publish-settings'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'TextViewerComponent', 'selector': 'app-text-viewer'},{'name': 'ToolwindowComponent', 'selector': 'app-toolwindow'},{'name': 'ViewerComponent', 'selector': 'app-viewer'},{'name': 'ViewerComponent', 'selector': 'cesium-viewer'},{'name': 'ViewerContainerComponent', 'selector': 'app-viewer-container'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HelpViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICodeGenerator.html":{"url":"interfaces/ICodeGenerator.html","title":"interface - ICodeGenerator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICodeGenerator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/base-classes/code/ICodeGenerator.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    execute_node\n                                \n                                \n                                    get_code_connection_line\n                                \n                                \n                                    get_code_display\n                                \n                                \n                                    get_code_function_call\n                                \n                                \n                                    get_code_node\n                                \n                                \n                                    get_code_node_def\n                                \n                                \n                                    get_code_node_io\n                                \n                                \n                                    get_code_port_input\n                                \n                                \n                                    get_code_port_output\n                                \n                                \n                                    get_code_procedure\n                                \n                                \n                                    getLanguage\n                                \n                                \n                                    setModules\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            execute_node\n                            \n                            \n                        \n                    \n                \n                \n                    \nexecute_node(node: IGraphNode, params: any, Modules: any, print: Function, globals?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/code/ICodeGenerator.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    IGraphNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        params\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        Modules\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        print\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        globals\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_code_connection_line\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_code_connection_line(input_node: IGraphNode, input_port: number, output_node: IGraphNode, output_port: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/code/ICodeGenerator.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input_node\n                                                        \n                                                                    IGraphNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        input_port\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        output_node\n                                                        \n                                                                    IGraphNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        output_port\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_code_display\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_code_display(flowchart: IFlowchart)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/code/ICodeGenerator.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        flowchart\n                                                        \n                                                                    IFlowchart\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_code_function_call\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_code_function_call(node: IGraphNode, params?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/code/ICodeGenerator.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    IGraphNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        params\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_code_node\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_code_node(node: IGraphNode, prodArr?: number, withoutFnOutput?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/code/ICodeGenerator.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    IGraphNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        prodArr\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        withoutFnOutput\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_code_node_def\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_code_node_def(node: IGraphNode)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/code/ICodeGenerator.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    IGraphNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_code_node_io\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_code_node_io(node: IGraphNode, output_idx: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/code/ICodeGenerator.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    IGraphNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        output_idx\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_code_port_input\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_code_port_input(port: InputPort)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/code/ICodeGenerator.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        port\n                                                        \n                                                                    InputPort\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_code_port_output\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_code_port_output(port: OutputPort)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/code/ICodeGenerator.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        port\n                                                        \n                                                                    OutputPort\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_code_procedure\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_code_procedure(procedure: IProcedure)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/code/ICodeGenerator.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        procedure\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLanguage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLanguage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/code/ICodeGenerator.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setModules\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetModules(modules: IModule[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/code/ICodeGenerator.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modules\n                                                        \n                                                                    IModule[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { IFlowchart } from \"../flowchart/FlowchartModule\";\nimport { IGraphNode } from \"../node/NodeModule\";\nimport { IProcedure } from \"../procedure/ProcedureModule\";\nimport { InputPort, OutputPort } from \"../port/PortModule\";\nimport { IModule } from \"./computation-modules/IModule\";\n\nexport interface ICodeGenerator{\n\tgetLanguage(): string;\n\tsetModules(modules: IModule[]): void;\n\n\tget_code_display(flowchart: IFlowchart) :string;\n\n\tget_code_node_def(node: IGraphNode): string;\n\tget_code_function_call(node: IGraphNode, params?: any): string;\n\n\tget_code_node(node: IGraphNode, prodArr?: number, withoutFnOutput?: boolean): string;\n\tget_code_node_io(node: IGraphNode, output_idx: number): string;\n\n\tget_code_connection_line(input_node: IGraphNode, input_port: number, output_node: IGraphNode, output_port: number): string;\n\tget_code_procedure(procedure: IProcedure): string;\n\n\tget_code_port_input(port: InputPort): string;\n\tget_code_port_output(port: OutputPort): string;\n\n\texecute_node(node: IGraphNode, params: any, Modules: any, print: Function, globals?: any): any;\n};\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IComponent.html":{"url":"interfaces/IComponent.html","title":"interface - IComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/base-classes/procedure/IComponent.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        category\n                                \n                                \n                                        expression\n                                \n                                \n                                        fn_name\n                                \n                                \n                                        isAction\n                                \n                                \n                                        module\n                                \n                                \n                                        params\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                    \n                                \n                                \n                                    \n                                        category:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expression\n                                    \n                                \n                                \n                                    \n                                        expression:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fn_name\n                                    \n                                \n                                \n                                    \n                                        fn_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAction\n                                    \n                                \n                                \n                                    \n                                        isAction:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        module\n                                    \n                                \n                                \n                                    \n                                        module:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                    \n                                \n                                \n                                    \n                                        params:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IComponent{\n\texpression: string;\n\tisAction: boolean;\n\tmodule: string;\n\tcategory: string|string[]; \n\tfn_name: string; \n\tparams: Array;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IEdge.html":{"url":"interfaces/IEdge.html","title":"interface - IEdge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IEdge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/base-classes/node/IEdge.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        input_address\n                                \n                                \n                                        output_address\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        input_address\n                                    \n                                \n                                \n                                    \n                                        input_address:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        output_address\n                                    \n                                \n                                \n                                    \n                                        output_address:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IEdge{\n\toutput_address: number[];\n\tinput_address: number[];\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFlowchart.html":{"url":"interfaces/IFlowchart.html","title":"interface - IFlowchart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IFlowchart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/base-classes/flowchart/IFlowchart.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        author\n                                \n                                \n                                        description\n                                \n                                \n                                        display_node\n                                \n                                \n                                        edges\n                                \n                                \n                                        editable\n                                \n                                \n                                        globals\n                                \n                                \n                                        name\n                                \n                                \n                                        nodes\n                                \n                                \n                                        selected_node\n                                \n                                \n                                        summary\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        author\n                                    \n                                \n                                \n                                    \n                                        author:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display_node\n                                    \n                                \n                                \n                                    \n                                        display_node:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        edges\n                                    \n                                \n                                \n                                    \n                                        edges:     IEdge[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IEdge[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editable\n                                    \n                                \n                                \n                                    \n                                        editable:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        globals\n                                    \n                                \n                                \n                                    \n                                        globals:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodes\n                                    \n                                \n                                \n                                    \n                                        nodes:     IGraphNode[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IGraphNode[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected_node\n                                    \n                                \n                                \n                                    \n                                        selected_node:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        summary\n                                    \n                                \n                                \n                                    \n                                        summary:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {IGraphNode, IEdge} from '../node/NodeModule';\nimport {ICodeGenerator}  from '../code/CodeModule';\nimport {IModule} from \"../code/CodeModule\";\n\n\nexport interface IFlowchart{\n\tname: string;\n\tauthor: string; \n\tsummary: string;\n\tdescription: string;\n\tselected_node: number;\n\tdisplay_node: number;\n\t\n\tglobals;\n\teditable;\n\n\tnodes: IGraphNode[];\n\tedges: IEdge[];\n};\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGraphNode.html":{"url":"interfaces/IGraphNode.html","title":"interface - IGraphNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IGraphNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/base-classes/node/IGraphNode.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        active_procedure\n                                \n                                \n                                        children\n                                \n                                \n                                        enabled\n                                \n                                \n                                        hasError\n                                \n                                \n                                        hasExecuted\n                                \n                                \n                                        id\n                                \n                                \n                                        inputs\n                                \n                                \n                                        name\n                                \n                                \n                                        outputs\n                                \n                                \n                                        position\n                                \n                                \n                                        procedure\n                                \n                                \n                                        time_taken\n                                \n                                \n                                        type\n                                \n                                \n                                        version\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    reset\n                                \n                                \n                                    update_properties\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/node/IGraphNode.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update_properties\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate_properties(data: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/node/IGraphNode.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active_procedure\n                                    \n                                \n                                \n                                    \n                                        active_procedure:     IProcedure\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IProcedure\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:     IProcedure[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IProcedure[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                    \n                                \n                                \n                                    \n                                        enabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasError\n                                    \n                                \n                                \n                                    \n                                        hasError:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasExecuted\n                                    \n                                \n                                \n                                    \n                                        hasExecuted:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputs\n                                    \n                                \n                                \n                                    \n                                        inputs:     InputPort[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     InputPort[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outputs\n                                    \n                                \n                                \n                                    \n                                        outputs:     OutputPort[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OutputPort[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                    \n                                \n                                \n                                    \n                                        position:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        procedure\n                                    \n                                \n                                \n                                    \n                                        procedure:     IProcedure[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IProcedure[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time_taken\n                                    \n                                \n                                \n                                    \n                                        time_taken:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {ICodeGenerator} from \"../code/CodeModule\";\nimport {InputPort, OutputPort} from \"../port/PortModule\";\nimport {IProcedure} from \"../procedure/ProcedureModule\";\n\nexport interface IGraphNode{\n\n\tposition: number[];\n\tname: string;\n\tid: string;\n\ttype: string;\n\tversion: number;\n\n\tinputs: InputPort[];\n\toutputs: OutputPort[];\n\tprocedure: IProcedure[];\n\tchildren: IProcedure[];\n\tactive_procedure: IProcedure;\n\n\tenabled: boolean;\n\thasExecuted: boolean;\n\thasError: boolean;\n\ttime_taken: number;\n\n\tupdate_properties(data: any);\n\treset();\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IModule.html":{"url":"interfaces/IModule.html","title":"interface - IModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/geometry-modules/Module.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getAuthor\n                                \n                                \n                                    getName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAuthor\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAuthor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/geometry-modules/Module.ts:3\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/geometry-modules/Module.ts:2\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        interface IModule{\n\tgetName(): string;\n\tgetAuthor(): string;\n}\n\nexport class Module implements IModule{\n\t\n\tprivate name: string;\n\tprivate author: string;\n\n\tconstructor(name: string, author: string){\n\t\tthis.name = name; \n\t\tthis.author = author;\n\t}\n\n\tgetName(): string{\n\t\treturn this.name;\n\t}\n\n\tgetAuthor(): string{\n\t\treturn this.author;\n\t}\n\n\tgetAllMethodNames(): Set{\n\n\t\tlet obj:any = this;\n\n\t\tlet methods = new Set();\n\t\twhile (obj = Reflect.getPrototypeOf(obj)) {\n\t\t\tlet keys = Reflect.ownKeys(obj)\n\t\t\tkeys.forEach((k) => methods.add(k));\n\t\t}\n\n\t\treturn methods;\n\n\t}\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPort.html":{"url":"interfaces/IPort.html","title":"interface - IPort","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPort\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/base-classes/port/IPort.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _executionAddr\n                                \n                                \n                                        _hasComputed\n                                \n                                \n                                        _hasDefault\n                                \n                                \n                                        enabled\n                                \n                                \n                                        id\n                                \n                                \n                                        isConnected\n                                \n                                \n                                        name\n                                \n                                \n                                        opts\n                                \n                                \n                                        type\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isSelected\n                                \n                                \n                                    reset\n                                \n                                \n                                    update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSelected()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/port/IPort.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/port/IPort.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(portData: IPort)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/port/IPort.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        portData\n                                                        \n                                                                    IPort\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _executionAddr\n                                    \n                                \n                                \n                                    \n                                        _executionAddr:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        _hasComputed\n                                    \n                                \n                                \n                                    \n                                        _hasComputed:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        _hasDefault\n                                    \n                                \n                                \n                                    \n                                        _hasDefault:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                    \n                                \n                                \n                                    \n                                        enabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isConnected\n                                    \n                                \n                                \n                                    \n                                        isConnected:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opts\n                                    \n                                \n                                \n                                    \n                                        opts:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {InputPortTypes} from \"./InputPortTypes\";\nimport {OutputPortTypes} from \"./OutputPortTypes\";\n\nexport interface IPort{\n\n\t_hasDefault: boolean;\n\t_hasComputed: boolean;\n\t_executionAddr: string;\n\n\tname;\n\ttype;\n\tid;\n\tvalue;\n\tenabled: boolean;\n\tisConnected: boolean;\n\n\topts;\n\n\tisSelected(): boolean;\n\n\tupdate(portData: IPort): void;\n\n\treset(); \n}\n\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProcedure.html":{"url":"interfaces/IProcedure.html","title":"interface - IProcedure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IProcedure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/base-classes/procedure/IProcedure.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        children\n                                \n                                \n                                        enabled\n                                \n                                \n                                        error\n                                \n                                \n                                        hasChildren\n                                \n                                \n                                        id\n                                \n                                \n                                        left\n                                \n                                \n                                        parent\n                                \n                                \n                                        print\n                                \n                                \n                                        right\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    reset\n                                \n                                \n                                    update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/procedure/IProcedure.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(prodData: any, parent: IProcedure)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/procedure/IProcedure.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prodData\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parent\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:     IProcedure[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IProcedure[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                    \n                                \n                                \n                                    \n                                        enabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasChildren\n                                    \n                                \n                                \n                                    \n                                        hasChildren:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        left\n                                    \n                                \n                                \n                                    \n                                        left:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:     IProcedure\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IProcedure\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        print\n                                    \n                                \n                                \n                                    \n                                        print:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        right\n                                    \n                                \n                                \n                                    \n                                        right:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {ICodeGenerator} from \"../code/CodeModule\";\nimport {ProcedureTypes} from \"./ProcedureTypes\";\nimport {IComponent} from \"./IComponent\"; \n\nexport interface IProcedure{\n\n\thasChildren: boolean; \n\tchildren: IProcedure[];\n\tparent: IProcedure;\n\tid;\n\ttype;\n\n\tprint: boolean;\n\tenabled: boolean;\n\n\tleft; \n\tright;\n\n\terror; \n\treset();\n\tupdate(prodData: any, parent: IProcedure);\n}\n\n\n\n\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdGenerator.html":{"url":"classes/IdGenerator.html","title":"class - IdGenerator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdGenerator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/base-classes/misc/GUID.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getId\n                            \n                            \n                                    Private\n                                    Static\n                                s4\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getId()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/misc/GUID.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            s4\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        s4()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/misc/GUID.ts:3\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class IdGenerator{\n\t\n\tprivate static s4(): string{\n\t    return Math.floor((1 + Math.random()) * 0x10000)\n\t      .toString(16)\n\t      .substring(1);\n\t}\n\n\tstatic getId(): string{\n\t  return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' +\n\t    this.s4() + '-' + this.s4() + this.s4() + this.s4();\n\t}\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IfControlProcedure.html":{"url":"classes/IfControlProcedure.html","title":"class - IfControlProcedure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  IfControlProcedure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/base-classes/procedure/IfControlProcedure.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Procedure\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _children\n                            \n                            \n                                    Private\n                                _disabled\n                            \n                            \n                                    Private\n                                _error\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Protected\n                                _leftComponent\n                            \n                            \n                                    Private\n                                _level\n                            \n                            \n                                    Private\n                                _parent\n                            \n                            \n                                    Private\n                                _printToConsole\n                            \n                            \n                                    Protected\n                                _rightComponent\n                            \n                            \n                                    Private\n                                _selected\n                            \n                            \n                                    Private\n                                _type\n                            \n                            \n                                    Public\n                                hasChildren\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                update\n                            \n                            \n                                getCodeString\n                            \n                            \n                                hasParent\n                            \n                            \n                                reset\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data?: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/base-classes/procedure/IfControlProcedure.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _children\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _children:     IProcedure[]\n\n                    \n                \n                    \n                        \n                            Type :     IProcedure[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _disabled:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _error:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _leftComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _leftComponent:     IComponent\n\n                    \n                \n                    \n                        \n                            Type :     IComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _level\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _level:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _parent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _parent:     IProcedure\n\n                    \n                \n                    \n                        \n                            Type :     IProcedure\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _printToConsole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _printToConsole:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _rightComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _rightComponent:     IComponent\n\n                    \n                \n                    \n                        \n                            Type :     IComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _selected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selected:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _type:     ProcedureTypes\n\n                    \n                \n                    \n                        \n                            Type :     ProcedureTypes\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasChildren\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasChildren:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:23\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(prodData: any, parent: IProcedure)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/procedure/IfControlProcedure.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prodData\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parent\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCodeString\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCodeString(code_generator: ICodeGenerator)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:124\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        code_generator\n                                                        \n                                                                    ICodeGenerator\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasParent\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasParent()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:117\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(prodData: any, parent: IProcedure)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:137\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prodData\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parent\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {ProcedureTypes} from \"./ProcedureTypes\";\nimport {IComponent} from \"./IComponent\";\nimport {Procedure} from \"./Procedure\";\nimport {IProcedure} from \"./IProcedure\";\n\nexport class IfControlProcedure extends Procedure{\n\n\tconstructor(data ?: {condition: string}){\n\t\tsuper(ProcedureTypes.IfControl, true);\n\n\t\tif(data == undefined){\n\t\t\tdata = {condition: \"conditional_expression\"}\n\t\t}\n\n\t\tlet left: IComponent = { expression: undefined, \n\t\t\t\t\t\t\t\t isAction: false, \n\t\t\t\t\t\t\t\t module: undefined, \n\t\t\t\t\t\t\t\t category: undefined, \n\t\t\t\t\t\t\t\t fn_name: undefined,\n\t\t\t\t\t\t\t\t params: undefined\n\t\t\t\t\t\t\t\t}\n\t\tlet right: IComponent = {\n\t\t\t\t\t\t\t     expression: data.condition, \n\t\t\t\t\t\t\t\t isAction: false, \n\t\t\t\t\t\t\t\t module: undefined, \n\t\t\t\t\t\t\t\t category: undefined, \n\t\t\t\t\t\t\t\t fn_name: undefined,\n\t\t\t\t\t\t\t\t params: undefined\n\t\t\t\t\t\t\t\t}\n\t\tsuper.left = (left);\n\t\tsuper.right = (right);\n\n\n\t}\n\n\tupdate(prodData: any, parent: IProcedure): void{\n\t\tsuper.update(prodData, parent);\n\n\t\tthis._leftComponent.expression = prodData._leftComponent.expression;\n\t\tthis._rightComponent.expression = prodData._rightComponent.expression;\n\t}\n\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IfElseControlProcedure.html":{"url":"classes/IfElseControlProcedure.html","title":"class - IfElseControlProcedure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  IfElseControlProcedure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/base-classes/procedure/IfElseControlProcedure.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Procedure\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _children\n                            \n                            \n                                    Private\n                                _disabled\n                            \n                            \n                                    Private\n                                _error\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Protected\n                                _leftComponent\n                            \n                            \n                                    Private\n                                _level\n                            \n                            \n                                    Private\n                                _parent\n                            \n                            \n                                    Private\n                                _printToConsole\n                            \n                            \n                                    Protected\n                                _rightComponent\n                            \n                            \n                                    Private\n                                _selected\n                            \n                            \n                                    Private\n                                _type\n                            \n                            \n                                    Public\n                                hasChildren\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCodeString\n                            \n                            \n                                hasParent\n                            \n                            \n                                reset\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _children\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _children:     IProcedure[]\n\n                    \n                \n                    \n                        \n                            Type :     IProcedure[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _disabled:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _error:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _leftComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _leftComponent:     IComponent\n\n                    \n                \n                    \n                        \n                            Type :     IComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _level\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _level:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _parent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _parent:     IProcedure\n\n                    \n                \n                    \n                        \n                            Type :     IProcedure\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _printToConsole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _printToConsole:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _rightComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _rightComponent:     IComponent\n\n                    \n                \n                    \n                        \n                            Type :     IComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _selected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selected:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _type:     ProcedureTypes\n\n                    \n                \n                    \n                        \n                            Type :     ProcedureTypes\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasChildren\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasChildren:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:23\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCodeString\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCodeString(code_generator: ICodeGenerator)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:124\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        code_generator\n                                                        \n                                                                    ICodeGenerator\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasParent\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasParent()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:117\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(prodData: any, parent: IProcedure)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:137\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prodData\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parent\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {IProcedure} from \"./IProcedure\";\nimport {Procedure} from \"./Procedure\";\nimport {ProcedureTypes} from \"./ProcedureTypes\";\nimport {IComponent} from \"./IComponent\";\n\nexport class IfElseControlProcedure extends Procedure{\n\n/*\tconstructor(title: ProcedureTypes.IfElseControl|ProcedureTypes.IfControl|ProcedureTypes.ElseControl, \n\t\tdata ?: {if_condition: string, el_condition: string}){\n\t\t\n\t\tsuper(title, true);\n\n\t\tif (title == ProcedureTypes.IfElseControl){\n\t\t\tlet if_control: IProcedure = new IfElseControlProcedure( ProcedureTypes.IfControl, data )\n\t\t\tlet else_control: IProcedure = new IfElseControlProcedure( ProcedureTypes.ElseControl, data)\n\t\t\t\n\t\t\tthis[\"virtual\"] = true;\n\n\t\t\tsuper.addChild(if_control);\n\t\t\tsuper.addChild(else_control);\n\t\t}\n\t\telse{\n\n\t\t\tif(title == ProcedureTypes.IfControl){\n\n\t\t\t\tif(data == undefined){\n\t\t\t\t\tdata = {if_condition: undefined, el_condition: undefined}\n\t\t\t\t}\n\n\t\t\t\tlet left: IComponent =  { \n\t\t\t\t\t\t\t\t\t\t\t expression: data.if_condition, \n\t\t\t\t\t\t\t\t\t\t\t isAction: false, \n\t\t\t\t\t\t\t\t\t\t\t module: undefined, \n\t\t\t\t\t\t\t\t\t\t\t category: undefined, \n\t\t\t\t\t\t\t\t\t\t\t fn_name: undefined,\n\t\t\t\t\t\t\t\t\t\t\t params: undefined\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\tthis.setLeftComponent(left)\n\t\t\t}\n\t\t\telse if(title == ProcedureTypes.ElseControl){\n\t\t\t\t\n\t\t\t}\n\t\t}\n\n\t}\n\n\taddChild(prod: IProcedure): IProcedure{\n\t\tif(this.getType() == ProcedureTypes.IfElseControl){\n\t\t\talert(\"Cannot add child to this\");\n\t\t\treturn undefined;\n\t\t}\n\t\telse{\n\t\t\treturn super.addChild(prod);\n\t\t}\n\t}\n\n\tupdate(prodData: any, parent: IProcedure): void{\n\t\tsuper.update(prodData, parent);\n\n\t\tif(prodData._leftComponent){\n\t\t\tthis._leftComponent.expression = prodData._leftComponent.expression;\n\t\t}\n\n\t\tif(prodData._rightComponent){\n\t\t\tthis._rightComponent.expression = prodData._rightComponent.expression;\n\t\t}\n\t}*/\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoViewerComponent.html":{"url":"components/InfoViewerComponent.html","title":"component - InfoViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InfoViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui-components/help/info-viewer/info-viewer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-info-viewer\n            \n\n            \n                styleUrls\n                info-viewer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info-viewer.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/ui-components/help/info-viewer/info-viewer.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/help/info-viewer/info-viewer.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MobiusAbout, HelpFundamentals, HelpModel } from './help.template';\n\n@Component({\n  selector: 'app-info-viewer',\n  templateUrl: './info-viewer.component.html',\n  styleUrls: ['./info-viewer.component.scss']\n})\nexport class InfoViewerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n    Möbius Procedures -->\n\n    \n\n        \n            \n                \n                    ABOUT\n                \n            \n            \n             \n                \n            \n            \n        \n\n        \n        \n            \n                \n                    FUNDAMENTALS\n                \n            \n            \n             \n                \n            \n\n        \n\n        \n        \n            \n                \n                    MODEL\n                \n            \n            \n             \n                \n            \n\n        \n\n    \n\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Möbius Proceduresn    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CesiumViewerComponent', 'selector': 'app-cesium-viewer'},{'name': 'CodeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ConsoleComponent', 'selector': 'app-console'},{'name': 'DataComponent', 'selector': 'app-data'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FileLoadDialogComponent', 'selector': 'file-load-dialog'},{'name': 'FlowchartControlsComponent', 'selector': 'app-flowchart-controls'},{'name': 'FlowchartViewerComponent', 'selector': 'app-flowchart-viewer'},{'name': 'GSViewerComponent', 'selector': 'gs-viewer'},{'name': 'GeometryViewerComponent', 'selector': 'app-geometry-viewer'},{'name': 'GraphEdgeComponent', 'selector': 'app-graph-edge'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HelpFundamentals', 'selector': 'app-help-fundamentals'},{'name': 'HelpModel', 'selector': 'app-help-model'},{'name': 'HelpViewerComponent', 'selector': 'app-help-viewer'},{'name': 'InfoViewerComponent', 'selector': 'app-info-viewer'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MobiusAbout', 'selector': 'app-help-about'},{'name': 'MobiusEditorComponent', 'selector': 'app-mobius-editor'},{'name': 'MobiusGalleryComponent', 'selector': 'mobius-gallery'},{'name': 'MobiusViewerComponent', 'selector': 'app-mobius-viewer'},{'name': 'MobiuscesiumComponent', 'selector': 'mobius-cesium'},{'name': 'ModuleViewerComponent', 'selector': 'app-module-viewer'},{'name': 'ModuleboxComponent', 'selector': 'app-modulebox'},{'name': 'NodeLibraryComponent', 'selector': 'app-node-library'},{'name': 'PanelComponent', 'selector': 'app-panel'},{'name': 'ParameterEditorComponent', 'selector': 'app-parameter-editor'},{'name': 'ParameterSettingsDialogComponent', 'selector': 'parameter-settings-dialog'},{'name': 'ParameterViewerComponent', 'selector': 'app-parameter-viewer'},{'name': 'ProcedureEditorComponent', 'selector': 'app-procedure-editor'},{'name': 'ProcedureItemComponent', 'selector': 'app-procedure-item'},{'name': 'PublishComponent', 'selector': 'app-publish'},{'name': 'PublishSettingsComponent', 'selector': 'app-publish-settings'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'TextViewerComponent', 'selector': 'app-text-viewer'},{'name': 'ToolwindowComponent', 'selector': 'app-toolwindow'},{'name': 'ViewerComponent', 'selector': 'app-viewer'},{'name': 'ViewerComponent', 'selector': 'cesium-viewer'},{'name': 'ViewerContainerComponent', 'selector': 'app-viewer-container'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InputPort.html":{"url":"classes/InputPort.html","title":"class - InputPort","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  InputPort\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/base-classes/port/InputPort.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Port\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _computed\n                            \n                            \n                                    Private\n                                _connected\n                            \n                            \n                                    Private\n                                _default\n                            \n                            \n                                    Private\n                                _disabled\n                            \n                            \n                                _executionAddr\n                            \n                            \n                                    Public\n                                _hasComputed\n                            \n                            \n                                    Public\n                                _hasDefault\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _name\n                            \n                            \n                                    Protected\n                                _opts\n                            \n                            \n                                    Private\n                                _selected\n                            \n                            \n                                    Protected\n                                _type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                update\n                            \n                            \n                                disable\n                            \n                            \n                                enable\n                            \n                            \n                                getDefaultValue\n                            \n                            \n                                getValue\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isSelected\n                            \n                            \n                                reset\n                            \n                            \n                                    Private\n                                setComputedValue\n                            \n                            \n                                setDefaultValue\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type?: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/base-classes/port/InputPort.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _computed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _computed:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _connected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _connected:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _default\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _default:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _disabled:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _executionAddr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _executionAddr:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:109\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _hasComputed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _hasComputed:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _hasDefault\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _hasDefault:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _opts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _opts:     \n\n                    \n                \n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _selected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selected:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _type:     InputPortTypes | OutputPortTypes\n\n                    \n                \n                    \n                        \n                            Type :     InputPortTypes | OutputPortTypes\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(portData: IPort, type?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/port/InputPort.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        portData\n                                                        \n                                                                    IPort\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disable\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisable()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:181\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enable\n                            \n                            \n                        \n                    \n                \n                \n                    \nenable()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:185\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDefaultValue\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDefaultValue()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:153\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getValue\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetValue()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:110\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDisabled()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:177\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSelected()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:173\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:147\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setComputedValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setComputedValue(value: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:129\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setDefaultValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetDefaultValue(value: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:159\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(portData: IPort, type?: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        portData\n                                                        \n                                                                    IPort\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Port} from \"./Port\";\nimport {IPort} from \"./IPort\";\nimport {IGraphNode} from \"../node/IGraphNode\";\nimport {InputPortTypes} from \"./InputPortTypes\";\n\nexport class InputPort extends Port{\n\t\n\t// input type \n\t// slider\n\t// input\n\t// color\n\t// file\n\tconstructor(name: string, type?: {name: InputPortTypes, value: any}){ \n\t\tsuper(name);\n\n\t\tif(type !== undefined){\n\t\t\tthis._type = type.name;\n\t\t\tthis.setDefaultValue(type.value || \"undefined\");\n\t\t}\n\t\telse{\n\t\t\tthis._type = InputPortTypes.Input;\n\t\t}\n\t}\n\n\n\tupdate(portData: IPort, type?: string): void{\n\t\tsuper.update(portData, type);\n\n\t\tif( !(this._type === InputPortTypes.FilePicker || this._type === InputPortTypes.URL) && !portData['_connected'] ){\n\t\t\tthis.value = portData[\"_computed\"];\n\t\t}\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingComponent.html":{"url":"components/LandingComponent.html","title":"component - LandingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LandingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui-components/main/mobius-landing/landing.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-landing\n            \n\n            \n                styleUrls\n                landing.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./landing.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/ui-components/main/mobius-landing/landing.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/main/mobius-landing/landing.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.scss']\n})\nexport class LandingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\tMobius Modeller\n\tCesium Integration\n\t\n\t\n\t\t\n\t\t\n\t\t\tThe Möbius Modeller is a web application that allows users to create automated procedures using visual programming. All procedures are executed in the browser on the client side, and as such no server side process is required.\n\t\t\n\t\t\n\t\t\t\t\n\t\t\tCurrently, Möbius Modeller has be developed to support Parametric Information Modelling (PIM) in the architectural and urban design domain, allowing procedures to be developed for generating and evaluating 3D models of buildings and urban neighbourhoods.\n\t\t\n\n\t\t\n\t\t\tThe Möbius Modeller can be customised to a wide different domains by developing specialized function libraries and specialized viewers. Contact us if you are interested in applying the Möbius Modeller in your domain.\n\t\t\n\n\t\n\n\t\n\n\t\t\n\t\t\tTry Mobius\n\t\t\n\n\t\t\n\t\t\tView Gallery\n\t\t\n\n\t\t\n\t\t\tContribute on Github\n\t\t\n\n\t\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\tMobius Modeller\tCesium Integration\t\t\t\t\t\t\t\t\tThe Möbius Modeller is a web application that allows users to create automated procedures using visual programming. All procedures are executed in the browser on the client side, and as such no server side process is required.\t\t\t\t\t\t\t\t\t\t\tCurrently, Möbius Modeller has be developed to support Parametric Information Modelling (PIM) in the architectural and urban design domain, allowing procedures to be developed for generating and evaluating 3D models of buildings and urban neighbourhoods.\t\t\t\t\t\t\tThe Möbius Modeller can be customised to a wide different domains by developing specialized function libraries and specialized viewers. Contact us if you are interested in applying the Möbius Modeller in your domain.\t\t\t\t\t\t\t\t\tTry Mobius\t\t\t\t\t\t\tView Gallery\t\t\t\t\t\t\tContribute on Github\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CesiumViewerComponent', 'selector': 'app-cesium-viewer'},{'name': 'CodeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ConsoleComponent', 'selector': 'app-console'},{'name': 'DataComponent', 'selector': 'app-data'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FileLoadDialogComponent', 'selector': 'file-load-dialog'},{'name': 'FlowchartControlsComponent', 'selector': 'app-flowchart-controls'},{'name': 'FlowchartViewerComponent', 'selector': 'app-flowchart-viewer'},{'name': 'GSViewerComponent', 'selector': 'gs-viewer'},{'name': 'GeometryViewerComponent', 'selector': 'app-geometry-viewer'},{'name': 'GraphEdgeComponent', 'selector': 'app-graph-edge'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HelpFundamentals', 'selector': 'app-help-fundamentals'},{'name': 'HelpModel', 'selector': 'app-help-model'},{'name': 'HelpViewerComponent', 'selector': 'app-help-viewer'},{'name': 'InfoViewerComponent', 'selector': 'app-info-viewer'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MobiusAbout', 'selector': 'app-help-about'},{'name': 'MobiusEditorComponent', 'selector': 'app-mobius-editor'},{'name': 'MobiusGalleryComponent', 'selector': 'mobius-gallery'},{'name': 'MobiusViewerComponent', 'selector': 'app-mobius-viewer'},{'name': 'MobiuscesiumComponent', 'selector': 'mobius-cesium'},{'name': 'ModuleViewerComponent', 'selector': 'app-module-viewer'},{'name': 'ModuleboxComponent', 'selector': 'app-modulebox'},{'name': 'NodeLibraryComponent', 'selector': 'app-node-library'},{'name': 'PanelComponent', 'selector': 'app-panel'},{'name': 'ParameterEditorComponent', 'selector': 'app-parameter-editor'},{'name': 'ParameterSettingsDialogComponent', 'selector': 'parameter-settings-dialog'},{'name': 'ParameterViewerComponent', 'selector': 'app-parameter-viewer'},{'name': 'ProcedureEditorComponent', 'selector': 'app-procedure-editor'},{'name': 'ProcedureItemComponent', 'selector': 'app-procedure-item'},{'name': 'PublishComponent', 'selector': 'app-publish'},{'name': 'PublishSettingsComponent', 'selector': 'app-publish-settings'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'TextViewerComponent', 'selector': 'app-text-viewer'},{'name': 'ToolwindowComponent', 'selector': 'app-toolwindow'},{'name': 'ViewerComponent', 'selector': 'app-viewer'},{'name': 'ViewerComponent', 'selector': 'cesium-viewer'},{'name': 'ViewerContainerComponent', 'selector': 'app-viewer-container'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LandingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LayoutService.html":{"url":"injectables/LayoutService.html","title":"injectable - LayoutService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LayoutService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/global-services/layout.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _fnObj\n                            \n                            \n                                _url\n                            \n                            \n                                    Static\n                                ComponentMap\n                            \n                            \n                                    Private\n                                layout\n                            \n                            \n                                    Private\n                                subject\n                            \n                            \n                                    Private\n                                viewContainerIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearMessage\n                            \n                            \n                                getAssets\n                            \n                            \n                                getMessage\n                            \n                            \n                                getObj\n                            \n                            \n                                getUrl\n                            \n                            \n                                getView\n                            \n                            \n                                getViewContainer\n                            \n                            \n                                maximize\n                            \n                            \n                                minimize\n                            \n                            \n                                restore\n                            \n                            \n                                sendMessage\n                            \n                            \n                                setEditor\n                            \n                            \n                                setObj\n                            \n                            \n                                setViewContainer\n                            \n                            \n                                setViewer\n                            \n                            \n                                showConsole\n                            \n                            \n                                showHelp\n                            \n                            \n                                toggleMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector, r: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in src/app/global-services/layout.service.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        r\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearMessage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/layout.service.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAssets\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAssets()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/layout.service.ts:92\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     { useTransition: boolean; mode: string; gutter: number; size: { main: number; side: number; top: ...\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMessage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/layout.service.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getObj\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetObj()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/layout.service.ts:153\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     literal type\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUrl()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/layout.service.ts:149\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getView\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetView(panel_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/layout.service.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        panel_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { name: string; view: any; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getViewContainer\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetViewContainer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/layout.service.ts:137\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maximize\n                            \n                            \n                        \n                    \n                \n                \n                    \nmaximize(panel_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/layout.service.ts:97\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        panel_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minimize\n                            \n                            \n                        \n                    \n                \n                \n                    \nminimize(panel_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/layout.service.ts:117\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        panel_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            restore\n                            \n                            \n                        \n                    \n                \n                \n                    \nrestore(panel_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/layout.service.ts:121\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        panel_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendMessage(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/layout.service.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setEditor\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetEditor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/layout.service.ts:180\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setObj\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetObj()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/layout.service.ts:157\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setViewContainer\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetViewContainer(index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/layout.service.ts:143\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setViewer\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetViewer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/layout.service.ts:187\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showConsole\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowConsole()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/layout.service.ts:133\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showHelp\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowHelp(fn: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/layout.service.ts:127\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleMode\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleMode()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/layout.service.ts:163\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _fnObj\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _fnObj:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/global-services/layout.service.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"index\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/global-services/layout.service.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            ComponentMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ComponentMap:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n      \"Output\" : ViewerContainerComponent,\n      \"Flowchart\" : FlowchartViewerComponent,\n      \"Procedure\": EditorComponent, \n      \"Parameters\": ParameterViewerComponent, \n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/global-services/layout.service.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            layout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layout:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        useTransition: true,\n        mode: 'Editor',\n        gutter: 7,\n        size: {\n          main: 70, \n          side: 30, \n          top: 33, \n          middle: 33, \n          bottom: 33\n        },\n        content: {\n          main: EViewer.Flowchart, \n          side: {\n            top: EViewer.Viewer, \n            middle: EViewer.Editor,\n            bottom: EViewer.Parameter\n          }\n        }, \n        views: []\n  \t}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/global-services/layout.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subject:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/global-services/layout.service.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            viewContainerIndex\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewContainerIndex:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 500\n                        \n                    \n                        \n                            \n                                    Defined in src/app/global-services/layout.service.ts:41\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injector, ComponentFactoryResolver} from '@angular/core';\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs/Subject';\n\n//import {OutputPortTypes} from '../../../base-classes/Port/PortModule';\nimport { EViewer } from '../ui-components/viewers/EViewer';\n\nimport { ViewerContainerComponent } from \"../ui-components/viewers/viewer-container/viewer-container.component\";\nimport { FlowchartViewerComponent } from \"../ui-components/editors/flowchart-viewer/flowchart-viewer.component\";\nimport { EditorComponent } from \"../ui-components/editors/editor/editor.component\";\nimport { ParameterViewerComponent } from \"../ui-components/viewers/parameter-viewer/parameter-viewer.component\";\n\n@Injectable()\nexport class LayoutService {\n\n   \n  \tprivate layout = {\n        useTransition: true,\n        mode: 'Editor',\n        gutter: 7,\n        size: {\n          main: 70, \n          side: 30, \n          top: 33, \n          middle: 33, \n          bottom: 33\n        },\n        content: {\n          main: EViewer.Flowchart, \n          side: {\n            top: EViewer.Viewer, \n            middle: EViewer.Editor,\n            bottom: EViewer.Parameter\n          }\n        }, \n        views: []\n  \t}\n\n    private viewContainerIndex: number = 500; \n\n    _url: string = \"index\";\n    _fnObj: {module: string, name: string};\n\n    public static ComponentMap = {\n      \"Output\" : ViewerContainerComponent,\n      \"Flowchart\" : FlowchartViewerComponent,\n      \"Procedure\": EditorComponent, \n      \"Parameters\": ParameterViewerComponent, \n    }\n\n  \tconstructor(injector: Injector, private r: ComponentFactoryResolver) { \n\n      function createView(component_name: string){\n        let component = LayoutService.ComponentMap[component_name];\n        let factory = r.resolveComponentFactory(component);\n          let componentRef = factory.create(injector);\n          let view = componentRef.hostView;\n          return view;\n      }\n\n      this.layout.views[EViewer.Editor] = createView(EViewer.Editor);\n      this.layout.views[EViewer.Viewer] = createView(EViewer.Viewer);\n      this.layout.views[EViewer.Flowchart] = createView(EViewer.Flowchart);\n      this.layout.views[EViewer.Parameter] = createView(EViewer.Parameter);\n\n    }\n\n    // handing subscriptions\n    private subject = new Subject();\n    sendMessage(message: string) {\n        this.subject.next({ text: message });\n    }\n   \n    clearMessage() {\n        this.subject.next();\n    }\n\n    getMessage(): Observable {\n        return this.subject.asObservable();\n    }\n\n    // general \n    getView(panel_id: string){\n        let viewer_name: string\n                = panel_id == \"main\" ? this.layout.content.main :\n                  this.layout.content.side[panel_id];\n        return {name: viewer_name, view: this.layout.views[viewer_name]};\n    } \n    \n    getAssets(){\n      return this.layout;\n    }\n\n    //panels related\n    maximize(panel_id: string): void{\n\n        if(panel_id == \"main\"){\n          return;\n        }\n\n        // get the panel_id passed and the corresponding component\n        // interchange values\n        let max_item = this.layout.content.side[panel_id];\n\n        if(max_item){\n           let current_main = this.layout.content.main;\n           this.layout.content.main = max_item; \n           this.layout.content.side[panel_id] = current_main;\n        }\n\n        this.sendMessage(\"Layout Changed\");\n\n    }\n\n    minimize(panel_id: string): void{\n      alert(\"To be implemented\");\n    }\n\n    restore(panel_id: string): void{\n      alert(\"To be implemented\");\n    }\n\n\n    // functions\n    showHelp(fn: {module: string, name: string}): void{\n        this._url  = \"modules/\" + \"_\" + fn.module.toLowerCase() + \"_\";\n        this._fnObj = fn;\n        this.sendMessage(\"Module: \" + fn.module);\n    } \n\n    showConsole(): void{\n        this.sendMessage(\"console\");\n    }\n\n    getViewContainer(): number{\n      return this.viewContainerIndex;\n    }\n\n\n    //\n    setViewContainer(index: number): void{\n      this.viewContainerIndex = index;\n    }\n\n\n    // help\n    getUrl(): string{\n      return this._url;\n    }\n\n    getObj(): {module: string, name: string}{\n      return this._fnObj;\n    }\n\n    setObj(): void{\n      this._url = undefined;\n    }\n\n\n    // modes - mobius editor or mobius viewer\n    toggleMode(): void{\n      \n      if(this.layout.mode == 'Editor'){\n        this.layout.mode = 'Viewer';\n        this.layout.size.top = 0; \n        this.layout.size.middle = 0; \n        this.layout.size.bottom = 100; \n      }\n      else{\n        this.layout.mode = 'Editor';\n        this.layout.size.top = 33; \n        this.layout.size.middle = 33; \n        this.layout.size.bottom = 33; \n\n      }\n    }\n\n    setEditor(): void{\n        this.layout.mode = 'Editor';\n        this.layout.size.top = 33; \n        this.layout.size.middle = 33; \n        this.layout.size.bottom = 33; \n    }\n\n    setViewer(): void{\n        this.layout.mode = 'Viewer';\n        this.layout.size.top = 0; \n        this.layout.size.middle = 0; \n        this.layout.size.bottom = 33; \n    }\n\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuComponent.html":{"url":"components/MenuComponent.html","title":"component - MenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui-components/controls/main-menu/menu.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-menu\n            \n\n            \n                styleUrls\n                menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fileInput\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileInput\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fileInput:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/controls/main-menu/menu.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { FlowchartService } from '../../../global-services/flowchart.service';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent{\n\t\n\t@ViewChild('fileInput') fileInput: ElementRef;\n\n\n}\n\n    \n\n    \n        \n  \n    \n\t\t\n\t\t\t\n\t\t\t\tFile\n\t\t\t\n\t\t\t\n\t\t\tNode\n\t\t\tCode\n\t\t\tHelp\n\t\t\n\t\n\t\n\t\tMobius v2.0\n\t\n  \n\n\n\n  New File\n  Save File\n  \n  \t\t\n  \t\tLoad File\n  \n  Run File\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      \t\t\t\t\t\t\t\t\tFile\t\t\t\t\t\t\t\t\tNode\t\t\tCode\t\t\tHelp\t\t\t\t\t\tMobius v2.0\t    New File  Save File    \t\t  \t\tLoad File    Run File'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CesiumViewerComponent', 'selector': 'app-cesium-viewer'},{'name': 'CodeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ConsoleComponent', 'selector': 'app-console'},{'name': 'DataComponent', 'selector': 'app-data'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FileLoadDialogComponent', 'selector': 'file-load-dialog'},{'name': 'FlowchartControlsComponent', 'selector': 'app-flowchart-controls'},{'name': 'FlowchartViewerComponent', 'selector': 'app-flowchart-viewer'},{'name': 'GSViewerComponent', 'selector': 'gs-viewer'},{'name': 'GeometryViewerComponent', 'selector': 'app-geometry-viewer'},{'name': 'GraphEdgeComponent', 'selector': 'app-graph-edge'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HelpFundamentals', 'selector': 'app-help-fundamentals'},{'name': 'HelpModel', 'selector': 'app-help-model'},{'name': 'HelpViewerComponent', 'selector': 'app-help-viewer'},{'name': 'InfoViewerComponent', 'selector': 'app-info-viewer'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MobiusAbout', 'selector': 'app-help-about'},{'name': 'MobiusEditorComponent', 'selector': 'app-mobius-editor'},{'name': 'MobiusGalleryComponent', 'selector': 'mobius-gallery'},{'name': 'MobiusViewerComponent', 'selector': 'app-mobius-viewer'},{'name': 'MobiuscesiumComponent', 'selector': 'mobius-cesium'},{'name': 'ModuleViewerComponent', 'selector': 'app-module-viewer'},{'name': 'ModuleboxComponent', 'selector': 'app-modulebox'},{'name': 'NodeLibraryComponent', 'selector': 'app-node-library'},{'name': 'PanelComponent', 'selector': 'app-panel'},{'name': 'ParameterEditorComponent', 'selector': 'app-parameter-editor'},{'name': 'ParameterSettingsDialogComponent', 'selector': 'parameter-settings-dialog'},{'name': 'ParameterViewerComponent', 'selector': 'app-parameter-viewer'},{'name': 'ProcedureEditorComponent', 'selector': 'app-procedure-editor'},{'name': 'ProcedureItemComponent', 'selector': 'app-procedure-item'},{'name': 'PublishComponent', 'selector': 'app-publish'},{'name': 'PublishSettingsComponent', 'selector': 'app-publish-settings'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'TextViewerComponent', 'selector': 'app-text-viewer'},{'name': 'ToolwindowComponent', 'selector': 'app-toolwindow'},{'name': 'ViewerComponent', 'selector': 'app-viewer'},{'name': 'ViewerComponent', 'selector': 'cesium-viewer'},{'name': 'ViewerContainerComponent', 'selector': 'app-viewer-container'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MobiusAbout.html":{"url":"components/MobiusAbout.html","title":"component - MobiusAbout","body":"\n                   \n\n\n\n\n\n  Components\n  MobiusAbout\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui-components/help/info-viewer/help.template.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-help-about\n            \n\n            \n                styleUrls\n                help.about.tpl.scss\n            \n\n\n\n            \n                templateUrl\n                ./help.about.tpl.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/ui-components/help/info-viewer/help.template.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/help/info-viewer/help.template.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-help-about',\n  templateUrl: './help.about.tpl.html',\n  styleUrls: ['./help.about.tpl.scss']\n})\nexport class MobiusAbout implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n@Component({\n  selector: 'app-help-fundamentals',\n  templateUrl: './help.fundamentals.tpl.html',\n  styleUrls: ['./help.fundamentals.tpl.scss']\n})\nexport class HelpFundamentals implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n@Component({\n  selector: 'app-help-model',\n  templateUrl: './help.model.tpl.html',\n  styleUrls: ['./help.model.tpl.scss']\n})\nexport class HelpModel implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n    \n\n    \n            \n        Möbius Modeller\n    \n    \n        Möbius Modeller is a free and open-source web-application for parametric\n        modelling. It runs in the Chrome browser.\n    \n\n    \n       Getting started with Möbius\n    \n    \n        \n        \n    \n\n    \n        Visual Programming\n    \n    \n        In Möbius, users are provided with a set of visual programming tools to\n        define scripts for generating models. These tools integrate two types of\n        visual programming: flowcharts and procedures.\n    \n    \n        Flowcharts consist of nodes connected together with wires. Each node in the\n        flowchart has a set of input and output ports, and contains a small\n        procedure to perform some type of action.\n    \n    \n        Procedures consist of a sequence of lines of code. There are four types of\n        code lines: 1) variables assignments, 2) ‘for-each’ loops, 3) ‘if-else’\n        conditions, and 4) function calls.\n    \n    \n        Function calls are lines of code that call a particular function. Libraries\n        of different functions are provided. Additional libraries of functions can\n        be added at any stage.\n    \n    \n        User Interface\n    \n    \n        The Möbius Modeller user interface consists of four main viewports, with\n        one viewport on the left and three viewports on the right. The viewports\n        can be rearrange into any configuration. By default, the Output viewport is\n        on the right side, and the Flowchart, Procedure and Parameters viewports\n        are on the right side.\n    \n    \n        · The Flowchart viewports is for defining the flowcharts, consisting of\n        nodes connected with wires. Selecting one of the nodes in the Flowchart\n        viewport will change the contents of the other three viewports.\n    \n    \n        · The Procedure viewport is for defining the procedure inside each node.\n        The procedure that is shown is for the node selected in the Flowchart\n        viewport.\n    \n    \n        · The Parameters viewport is for setting the parameter values associated\n        with each node. The parameters that are shown are for the node selected in\n        the Flowchart viewport. This viewport also contain the green ‘Execute\n        Flowchart’ button, which will execute the flowchart using the specified\n        parameter values.\n    \n    \n        · The Output viewport is for viewing the output generated by executing the\n        script, as well as for viewing Help. The Output viewport has a number of\n        different viewers. The most basic viewer is the Text Viewer, which is for\n        viewing basic text. There is also an Output console, which is where various\n        messages (including error messages) get printed.\n    \n    \n        \n    \n    \n        Flowchart\n    \n    \n        The Flowchart viewport allows you to create and delete nodes, and to wire\n        them together into a network. The flowchart flows from left to right, and\n        form a chain of execution. Nodes without wires attached to any of the\n        inputs are called “start nodes”, and nodes without wires attached to any of\n        the outputs are called “end nodes”. (An “isolated node” has neither.)\n    \n    \n        When a flowchart is executed, the first nodes to be executed are all the\n        start nodes. The data produced by the nodes will travel down the wires to\n        the next set of nodes, which are then executed. This continues until end\n        nodes are reached on the right hand side.\n    \n    \n        \n    \n    \n        When a flowchart is executed, the data generated by each output of each\n        node is saved. This means that after execution, you can explore the data\n        generated by each node by clicking on its output ports and view the results\n        in one of the Output viewers. (See the section on Outputs.)\n    \n    \n        When wiring nodes together, inputs can only have a single wire attached.\n        However, outputs can have multiple wires attached. If an output has\n        multiple wires attached, then the data is copied and sent down each wire\n        separately.\n    \n    \n        \n    \n    \n        If a node has multiple inputs, then it will not be executed until all the\n        data for all its inputs has been received.\n    \n    \n        \n    \n    \n        The left sidebar allows you perform various operations:\n    \n    \n        · Save and Load Flowcharts as a file. These are saved as .mob files. It is\n        important to save often.\n    \n    \n        · Create new nodes and subnets. (Subnets are coming soon.)\n    \n    \n        \n            Save and Load Libraries of nodes as a file.\n        \n    \n    \n        Each node has three buttons (only displayed when the node is selected):\n    \n    \n        · Delete: Deletes the node. This cannot be undone, so be careful!\n    \n    \n        · Disable: Disables the node. When the network is executed, the network\n        behaves as if the node did not exist.\n    \n    \n        · Save: Saves the node to your library, stored in the browser cache.\n    \n    \n        Saving nodes allows you to use them multiple times in different Flowcharts.\n        It also allows you to share nodes with others. Note that the library is\n        stored in the browser cache. If you clear your cache, then you will lose\n        all your saved nodes. Therefore, if you have nodes that you want to keep,\n        it is a good idea to save them to file.\n    \n    \n        Procedure\n    \n    \n        The Procedure viewport allows you to define the procedure that gets\n        executed inside a node. The Procedure shown in this viewport is for the\n        node selected in the flowchart.\n    \n    \n        The procedure is basically a small script, but rather than typing the\n        script in a text editor, you create your Procedure by dragging and dropping\n        lines of code into the script.\n    \n    \n        The procedure consists of three sections, each of which can be expanded and\n        contracted. The Input and Outputs sections list the input and outputs for\n        the node. For each input and output, the name can be set, and the type can\n        be selected from a drop-down list. Based on the selection, other settings\n        can be set. Selecting an input or output line will show a ‘delete’ button\n        on the right hand side, allowing you to delete it.\n    \n    \n        The main procedure is define under the Procedure section. The procedure\n        consists of a sequence of lines of code that get executed one at a time.\n        These lines of code will read data from the inputs and write data to the\n        outputs. In the example below, the procedure has three lines of code that\n        do the following:\n    \n    \n        1. Creates a variable called ‘my_var’ and sets its value to the value from\n        the first input multiplied by 10.\n    \n    \n        2. Creates a second variable called ‘rand_num’ and uses a function call to\n        set its value to a random number between 0 and 1.\n    \n    \n        3. Set the value of the first output (named ‘out0’) to the value of\n        ‘my_var’ divided by the value of ‘rand_num’.\n    \n    \n        \n    \n    \n        Procedures will typically include one or more function calls, and may also\n        include various variable assignments, for-each loops, and if-else\n        conditions. Clicking any of these items in the left sidebar will add them\n        to the procedure, underneath the currently selected line. The lines of code\n        can be repositioned by dragging and dropping.\n    \n    \n        There are four types of lines of code that can be inserted:\n    \n    \n        · Variable: Create a new variable or assigns a value to an existing\n        variable. Variables can have different data types. See Data Types for a\n        more detailed explanation.\n    \n    \n        · For-each loop: Create a loop that repeats the operations inside it,\n        multiple times. See For-Loop for a more detailed explanation.\n    \n    \n        · If-else condition: Create a conditional statement, and execute the\n        operations inside it based on whether the condition is true or false.\n    \n    \n        · Function: Call a function in the built the function library.\n    \n    \n        Selecting or hovering on a line in the procedure will show a set of buttons\n        on the right hand side.\n    \n    \n        · Help: Show the help for the particular function. The help will be\n        displayed in under the Output viewport.\n    \n    \n        · Print: Prints the value generated by that line of code to the console.\n        This is mainly used for debugging.\n    \n    \n        · Disable: Disables the line of code. When the code is executed, it will\n        simply ignore this line of code.\n    \n    \n        \n            Delete: Deletes the line of code.\n        \n    \n    \n        For more information about writing Procedures, see the Procedure help file.\n    \n    \n        Parameters\n    \n    \n        Each node can have zero or more parameters whose values can be set in the\n        Parameters viewport. The parameters shown in this viewport are for the node\n        selected in the flowchart.\n    \n    \n        The parameters are all node inputs for which no wires have been attached.\n        In the example below, the node has three inputs. The first input (‘in0’)\n        has a wire attached, so it does not appear as a parameter. The other two\n        parameters have no wires, so these will appear as Parameters whose values\n        you can set manually in the parameters viewport.\n    \n    \n        \n        \n    \n    \n        Clicking the execute button will execute the flowchart with the specified\n        parameters.\n    \n    \n        Output\n    \n    \n        Once a flowchart has been executed, the results can be viewed in the Output\n        viewport. The outputs that are shown in this viewport are for the node\n        selected in the flowchart.\n    \n    \n        The Output viewport has a number of different viewers.\n    \n    \n        The Console viewer shows messages resulting from the execution of the\n        flowchart. Each message has a time stamp and a short piece of text. If any\n        errors occurred, then an error message will also be shown. These outputs\n        are not linked to any particular node. As a result, selecting different\n        nodes in the flowchart has no effect on what is being displayed in the\n        Console. This is not the case with the other Output viewers.\n    \n    \n        The Console is an important viewer when debugging. For example, in the\n        example below, the ‘print’ on the variable called ‘rand_num’ was enabled,\n        which resulted in the value being printed out as a console message. This\n        allows you to see that variable was set to a value of ‘0.154…’.\n    \n    \n        \n    \n    \n        The Text viewer shows the output or all the outputs of the node selected in\n        the Viewport. This is the most basic was of looking at the output of the\n        node, and works for any type of output. If the output is actually a text\n        value, then it is directly printed in the text viewer. If the output is not\n        text, then it is first converted to text and shown in the viewer.\n    \n    \n        \n        \n    \n    \n        The 3D viewer shows the output for the selected output port for the\n        selected node in the flowchart. Selecting different nodes and different\n        output ports in the flowchart will change what is being displayed in the 3D\n        viewer. However, note that the 3D viewer will only be able to display the\n        output if the content is compatible. Thus, if an output port is outputting\n        some text, then there is little that the 3D viewer will be able to do with\n        this and as a result nothing will be displayed.\n    \n    \n        In order to make switching between viewers easier, each output port has a\n        default Viewer. When an output port is selected, and the Output window will\n        automatically switch to that default Viewer. In the example below, the\n        first output (‘out0’) is set to use the Console viewer is set to use the\n        Console Viewer, while the other two outputs (‘out1’ and ‘out2’) are set to\n        use the Text Viewer.\n    \n    \n        \n    \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Möbius Modeller                Möbius Modeller is a free and open-source web-application for parametric        modelling. It runs in the Chrome browser.               Getting started with Möbius                                        Visual Programming                In Möbius, users are provided with a set of visual programming tools to        define scripts for generating models. These tools integrate two types of        visual programming: flowcharts and procedures.                Flowcharts consist of nodes connected together with wires. Each node in the        flowchart has a set of input and output ports, and contains a small        procedure to perform some type of action.                Procedures consist of a sequence of lines of code. There are four types of        code lines: 1) variables assignments, 2) ‘for-each’ loops, 3) ‘if-else’        conditions, and 4) function calls.                Function calls are lines of code that call a particular function. Libraries        of different functions are provided. Additional libraries of functions can        be added at any stage.                User Interface                The Möbius Modeller user interface consists of four main viewports, with        one viewport on the left and three viewports on the right. The viewports        can be rearrange into any configuration. By default, the Output viewport is        on the right side, and the Flowchart, Procedure and Parameters viewports        are on the right side.                · The Flowchart viewports is for defining the flowcharts, consisting of        nodes connected with wires. Selecting one of the nodes in the Flowchart        viewport will change the contents of the other three viewports.                · The Procedure viewport is for defining the procedure inside each node.        The procedure that is shown is for the node selected in the Flowchart        viewport.                · The Parameters viewport is for setting the parameter values associated        with each node. The parameters that are shown are for the node selected in        the Flowchart viewport. This viewport also contain the green ‘Execute        Flowchart’ button, which will execute the flowchart using the specified        parameter values.                · The Output viewport is for viewing the output generated by executing the        script, as well as for viewing Help. The Output viewport has a number of        different viewers. The most basic viewer is the Text Viewer, which is for        viewing basic text. There is also an Output console, which is where various        messages (including error messages) get printed.                                Flowchart                The Flowchart viewport allows you to create and delete nodes, and to wire        them together into a network. The flowchart flows from left to right, and        form a chain of execution. Nodes without wires attached to any of the        inputs are called “start nodes”, and nodes without wires attached to any of        the outputs are called “end nodes”. (An “isolated node” has neither.)                When a flowchart is executed, the first nodes to be executed are all the        start nodes. The data produced by the nodes will travel down the wires to        the next set of nodes, which are then executed. This continues until end        nodes are reached on the right hand side.                                When a flowchart is executed, the data generated by each output of each        node is saved. This means that after execution, you can explore the data        generated by each node by clicking on its output ports and view the results        in one of the Output viewers. (See the section on Outputs.)                When wiring nodes together, inputs can only have a single wire attached.        However, outputs can have multiple wires attached. If an output has        multiple wires attached, then the data is copied and sent down each wire        separately.                                If a node has multiple inputs, then it will not be executed until all the        data for all its inputs has been received.                                The left sidebar allows you perform various operations:                · Save and Load Flowcharts as a file. These are saved as .mob files. It is        important to save often.                · Create new nodes and subnets. (Subnets are coming soon.)                            Save and Load Libraries of nodes as a file.                        Each node has three buttons (only displayed when the node is selected):                · Delete: Deletes the node. This cannot be undone, so be careful!                · Disable: Disables the node. When the network is executed, the network        behaves as if the node did not exist.                · Save: Saves the node to your library, stored in the browser cache.                Saving nodes allows you to use them multiple times in different Flowcharts.        It also allows you to share nodes with others. Note that the library is        stored in the browser cache. If you clear your cache, then you will lose        all your saved nodes. Therefore, if you have nodes that you want to keep,        it is a good idea to save them to file.                Procedure                The Procedure viewport allows you to define the procedure that gets        executed inside a node. The Procedure shown in this viewport is for the        node selected in the flowchart.                The procedure is basically a small script, but rather than typing the        script in a text editor, you create your Procedure by dragging and dropping        lines of code into the script.                The procedure consists of three sections, each of which can be expanded and        contracted. The Input and Outputs sections list the input and outputs for        the node. For each input and output, the name can be set, and the type can        be selected from a drop-down list. Based on the selection, other settings        can be set. Selecting an input or output line will show a ‘delete’ button        on the right hand side, allowing you to delete it.                The main procedure is define under the Procedure section. The procedure        consists of a sequence of lines of code that get executed one at a time.        These lines of code will read data from the inputs and write data to the        outputs. In the example below, the procedure has three lines of code that        do the following:                1. Creates a variable called ‘my_var’ and sets its value to the value from        the first input multiplied by 10.                2. Creates a second variable called ‘rand_num’ and uses a function call to        set its value to a random number between 0 and 1.                3. Set the value of the first output (named ‘out0’) to the value of        ‘my_var’ divided by the value of ‘rand_num’.                                Procedures will typically include one or more function calls, and may also        include various variable assignments, for-each loops, and if-else        conditions. Clicking any of these items in the left sidebar will add them        to the procedure, underneath the currently selected line. The lines of code        can be repositioned by dragging and dropping.                There are four types of lines of code that can be inserted:                · Variable: Create a new variable or assigns a value to an existing        variable. Variables can have different data types. See Data Types for a        more detailed explanation.                · For-each loop: Create a loop that repeats the operations inside it,        multiple times. See For-Loop for a more detailed explanation.                · If-else condition: Create a conditional statement, and execute the        operations inside it based on whether the condition is true or false.                · Function: Call a function in the built the function library.                Selecting or hovering on a line in the procedure will show a set of buttons        on the right hand side.                · Help: Show the help for the particular function. The help will be        displayed in under the Output viewport.                · Print: Prints the value generated by that line of code to the console.        This is mainly used for debugging.                · Disable: Disables the line of code. When the code is executed, it will        simply ignore this line of code.                            Delete: Deletes the line of code.                        For more information about writing Procedures, see the Procedure help file.                Parameters                Each node can have zero or more parameters whose values can be set in the        Parameters viewport. The parameters shown in this viewport are for the node        selected in the flowchart.                The parameters are all node inputs for which no wires have been attached.        In the example below, the node has three inputs. The first input (‘in0’)        has a wire attached, so it does not appear as a parameter. The other two        parameters have no wires, so these will appear as Parameters whose values        you can set manually in the parameters viewport.                                        Clicking the execute button will execute the flowchart with the specified        parameters.                Output                Once a flowchart has been executed, the results can be viewed in the Output        viewport. The outputs that are shown in this viewport are for the node        selected in the flowchart.                The Output viewport has a number of different viewers.                The Console viewer shows messages resulting from the execution of the        flowchart. Each message has a time stamp and a short piece of text. If any        errors occurred, then an error message will also be shown. These outputs        are not linked to any particular node. As a result, selecting different        nodes in the flowchart has no effect on what is being displayed in the        Console. This is not the case with the other Output viewers.                The Console is an important viewer when debugging. For example, in the        example below, the ‘print’ on the variable called ‘rand_num’ was enabled,        which resulted in the value being printed out as a console message. This        allows you to see that variable was set to a value of ‘0.154…’.                                The Text viewer shows the output or all the outputs of the node selected in        the Viewport. This is the most basic was of looking at the output of the        node, and works for any type of output. If the output is actually a text        value, then it is directly printed in the text viewer. If the output is not        text, then it is first converted to text and shown in the viewer.                                        The 3D viewer shows the output for the selected output port for the        selected node in the flowchart. Selecting different nodes and different        output ports in the flowchart will change what is being displayed in the 3D        viewer. However, note that the 3D viewer will only be able to display the        output if the content is compatible. Thus, if an output port is outputting        some text, then there is little that the 3D viewer will be able to do with        this and as a result nothing will be displayed.                In order to make switching between viewers easier, each output port has a        default Viewer. When an output port is selected, and the Output window will        automatically switch to that default Viewer. In the example below, the        first output (‘out0’) is set to use the Console viewer is set to use the        Console Viewer, while the other two outputs (‘out1’ and ‘out2’) are set to        use the Text Viewer.                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CesiumViewerComponent', 'selector': 'app-cesium-viewer'},{'name': 'CodeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ConsoleComponent', 'selector': 'app-console'},{'name': 'DataComponent', 'selector': 'app-data'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FileLoadDialogComponent', 'selector': 'file-load-dialog'},{'name': 'FlowchartControlsComponent', 'selector': 'app-flowchart-controls'},{'name': 'FlowchartViewerComponent', 'selector': 'app-flowchart-viewer'},{'name': 'GSViewerComponent', 'selector': 'gs-viewer'},{'name': 'GeometryViewerComponent', 'selector': 'app-geometry-viewer'},{'name': 'GraphEdgeComponent', 'selector': 'app-graph-edge'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HelpFundamentals', 'selector': 'app-help-fundamentals'},{'name': 'HelpModel', 'selector': 'app-help-model'},{'name': 'HelpViewerComponent', 'selector': 'app-help-viewer'},{'name': 'InfoViewerComponent', 'selector': 'app-info-viewer'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MobiusAbout', 'selector': 'app-help-about'},{'name': 'MobiusEditorComponent', 'selector': 'app-mobius-editor'},{'name': 'MobiusGalleryComponent', 'selector': 'mobius-gallery'},{'name': 'MobiusViewerComponent', 'selector': 'app-mobius-viewer'},{'name': 'MobiuscesiumComponent', 'selector': 'mobius-cesium'},{'name': 'ModuleViewerComponent', 'selector': 'app-module-viewer'},{'name': 'ModuleboxComponent', 'selector': 'app-modulebox'},{'name': 'NodeLibraryComponent', 'selector': 'app-node-library'},{'name': 'PanelComponent', 'selector': 'app-panel'},{'name': 'ParameterEditorComponent', 'selector': 'app-parameter-editor'},{'name': 'ParameterSettingsDialogComponent', 'selector': 'parameter-settings-dialog'},{'name': 'ParameterViewerComponent', 'selector': 'app-parameter-viewer'},{'name': 'ProcedureEditorComponent', 'selector': 'app-procedure-editor'},{'name': 'ProcedureItemComponent', 'selector': 'app-procedure-item'},{'name': 'PublishComponent', 'selector': 'app-publish'},{'name': 'PublishSettingsComponent', 'selector': 'app-publish-settings'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'TextViewerComponent', 'selector': 'app-text-viewer'},{'name': 'ToolwindowComponent', 'selector': 'app-toolwindow'},{'name': 'ViewerComponent', 'selector': 'app-viewer'},{'name': 'ViewerComponent', 'selector': 'cesium-viewer'},{'name': 'ViewerContainerComponent', 'selector': 'app-viewer-container'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MobiusAbout'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MobiusCesium.html":{"url":"modules/MobiusCesium.html","title":"module - MobiusCesium","body":"\n                   \n\n\n\n\n  Modules\n  MobiusCesium\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MobiusCesium\n\n\n\ncluster_MobiusCesium_declarations\n\n\n\ncluster_MobiusCesium_exports\n\n\n\ncluster_MobiusCesium_providers\n\n\n\n\nDataComponent\n\nDataComponent\n\n\n\nMobiusCesium\n\nMobiusCesium\n\nMobiusCesium -->\n\nDataComponent->MobiusCesium\n\n\n\n\n\nDisplayComponent\n\nDisplayComponent\n\nMobiusCesium -->\n\nDisplayComponent->MobiusCesium\n\n\n\n\n\nMobiuscesiumComponent\n\nMobiuscesiumComponent\n\nMobiusCesium -->\n\nMobiuscesiumComponent->MobiusCesium\n\n\n\n\n\nPublishComponent\n\nPublishComponent\n\nMobiusCesium -->\n\nPublishComponent->MobiusCesium\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\nMobiusCesium -->\n\nSelectComponent->MobiusCesium\n\n\n\n\n\nSettingComponent\n\nSettingComponent\n\nMobiusCesium -->\n\nSettingComponent->MobiusCesium\n\n\n\n\n\nViewerComponent\n\nViewerComponent\n\nMobiusCesium -->\n\nViewerComponent->MobiusCesium\n\n\n\n\n\nMobiuscesiumComponent \n\nMobiuscesiumComponent \n\nMobiuscesiumComponent  -->\n\nMobiusCesium->MobiuscesiumComponent \n\n\n\n\n\nDataService\n\nDataService\n\nMobiusCesium -->\n\nDataService->MobiusCesium\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/mobius-cesium/mobius-cesium.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DataComponent\n                            \n                            \n                                DisplayComponent\n                            \n                            \n                                MobiuscesiumComponent\n                            \n                            \n                                PublishComponent\n                            \n                            \n                                SelectComponent\n                            \n                            \n                                SettingComponent\n                            \n                            \n                                ViewerComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     DataService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    MobiuscesiumComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders,Component } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MobiuscesiumComponent} from \"./mobius-cesium.component\";\nimport { ViewerComponent} from \"./viewer/viewer.component\";\nimport { DataService } from \"./data/data.service\";\nimport { AngularSplitModule } from \"angular-split\";\nimport { BrowserAnimationsModule ,NoopAnimationsModule} from \"@angular/platform-browser/animations\";\nimport { BrowserModule, HAMMER_GESTURE_CONFIG } from \"@angular/platform-browser\";\nimport { MatTabsModule} from \"@angular/material/tabs\";\nimport { MatTooltipModule} from \"@angular/material/tooltip\";\nimport {MatSliderModule } from \"@angular/material/slider\";\nimport { FormsModule } from \"@angular/forms\";\nimport { SettingComponent } from \"./setting/setting.component\";\nimport { DataComponent } from \"./setting/visualise.component\";\nimport { SelectComponent } from \"./setting/attributes.copmponent\";\nimport { PublishComponent } from \"./setting/publish.component\";\nimport { DisplayComponent } from \"./setting/display.copmponent\";\n\n\n@NgModule({\n    imports: [CommonModule,\n              AngularSplitModule,\n              MatTabsModule,\n              BrowserAnimationsModule,\n              NoopAnimationsModule,\n              BrowserModule,\n              MatTooltipModule,\n              MatSliderModule,\n              FormsModule\n       ],\n    exports: [ MobiuscesiumComponent ],\n    declarations: [MobiuscesiumComponent,\n                    ViewerComponent,\n                    SettingComponent,\n                    DataComponent,\n                    SelectComponent,\n                    PublishComponent,\n                    DisplayComponent],\n    providers: [DataService],\n})\nexport class MobiusCesium {\n   static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: MobiusCesium,\n            providers: [\n               DataService,\n            ],\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MobiusEditorComponent.html":{"url":"components/MobiusEditorComponent.html","title":"component - MobiusEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MobiusEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui-components/main/mobius-editor/mobius-editor.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-mobius-editor\n            \n\n            \n                styleUrls\n                mobius-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./mobius-editor.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                layout\n                            \n                            \n                                processing\n                            \n                            \n                                supported\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkBrowser\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filepath\n                            \n                            \n                                mode\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(layoutService: LayoutService, flowchartService: FlowchartService, _mb: MobiusService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui-components/main/mobius-editor/mobius-editor.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                    LayoutService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        flowchartService\n                                                  \n                                                        \n                                                                    FlowchartService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _mb\n                                                  \n                                                        \n                                                                    MobiusService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filepath\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui-components/main/mobius-editor/mobius-editor.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mode\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui-components/main/mobius-editor/mobius-editor.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkBrowser\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckBrowser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/main/mobius-editor/mobius-editor.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/main/mobius-editor/mobius-editor.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            layout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layout:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/ui-components/main/mobius-editor/mobius-editor.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processing\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        processing:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/main/mobius-editor/mobius-editor.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            supported\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        supported:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/main/mobius-editor/mobius-editor.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toggle:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/ui-components/main/mobius-editor/mobius-editor.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { LayoutService } from '../../../global-services/layout.service';\nimport { FlowchartService } from '../../../global-services/flowchart.service';\nimport { MobiusService } from '../../../global-services/mobius.service';\n\n@Component({\n  selector: 'app-mobius-editor',\n  templateUrl: './mobius-editor.component.html',\n  styleUrls: ['./mobius-editor.component.scss']\n})\nexport class MobiusEditorComponent implements OnInit {\n\n\n\t// mode: 0 ==> Viewer\n\t// mode: 1 ==> Editor\n\t@Input() mode: string;\n\t@Input() filepath: string;\n\n\tlayout;\n\ttoggle;\n    supported: boolean = false;\n    processing: boolean = false;\n\n    constructor(private layoutService: LayoutService, \n    \t\t\tprivate flowchartService: FlowchartService, \n    \t\t\tprivate _mb: MobiusService){ \n\n    \tlet browser: string = this.checkBrowser();\n    \tif(browser == \"Chrome\"){\n    \t\tthis.layout = layoutService.getAssets(); \n    \t\tthis.toggle = layoutService.toggleMode;\n    \t\tthis.supported = true;\n    \t\tthis.processing = _mb.processing;\n    \t\tlet self = this;\n    \t\t_mb.stateChangedEmitter().subscribe({\n    \t\t\tnext(value){ self.processing = value; },\n    \t\t\terror(message){ }\n    \t\t})\n    \t}\n    \telse{\n    \t\talert(\"Oops... You seem to be using a browser not supported by Mobius. Please use Chrome.\");\n    \t\tthis.supported = false;\n    \t}\n\n    }\n\n    ngOnInit(){\n\n    \tif(this.mode == \"Editor\" ){\n    \t\tthis.layoutService.setEditor();\n    \t}\n    \telse if(this.mode == \"Viewer\"){\n    \t\tthis.layoutService.setViewer();\n    \t}\n\n    \tif(this.layout.mode == 'Editor'){\n\t    \twindow.onbeforeunload = function(e) {\n\t\t\t  var dialogText = 'Dialog text here';\n\t\t\t  e.returnValue = dialogText;\n\t\t\t  return dialogText;\n\t\t\t};\n    \t}\n    \telse{\n    \t\twindow.onbeforeunload = undefined;\n    \t}\n\n    }\n\n    checkBrowser(): string { \n    \tlet brw: string = \"\";\n     \tif((navigator.userAgent.indexOf(\"Opera\") || navigator.userAgent.indexOf('OPR')) != -1 ) \n\t    {\n\t        brw = 'Opera';\n\t    }\n\t    else if(navigator.userAgent.indexOf(\"Chrome\") != -1 )\n\t    {\n\t        brw = 'Chrome';\n\t    }\n\t    else if(navigator.userAgent.indexOf(\"Safari\") != -1)\n\t    {\n\t        brw = 'Safari';\n\t    }\n\t    else if(navigator.userAgent.indexOf(\"Firefox\") != -1 ) \n\t    {\n\t         brw = 'Firefox';\n\t    }\n\t    else if((navigator.userAgent.indexOf(\"MSIE\") != -1 ) || (!!document[\"documentMode\"] == true )) //IF IE > 10\n\t    {\n\t      brw = 'IE'; \n\t    } \n\t    else if(window.navigator.userAgent.indexOf(\"Edge\") > -1) //IF IE > 10\n\t    {\n\t      brw = 'Edge'; \n\t    } \n\t    else \n\t    {\n\t       brw = 'unknown';\n\t    }\n\n\t    return brw;\n    }\n\n}\n\n    \n\n    \n        \n\n  \n\n    \n\n      \n\n            \n            \n              \n            \n\n            \n            \n\n                \n\n                    \n                      \n                    \n\n                    \n                      \n                    \n\n                    \n                    \n                      \n                    \n\n                \n\n            \n            \n      \n\n    \n\n  \n\n\n\n\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CesiumViewerComponent', 'selector': 'app-cesium-viewer'},{'name': 'CodeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ConsoleComponent', 'selector': 'app-console'},{'name': 'DataComponent', 'selector': 'app-data'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FileLoadDialogComponent', 'selector': 'file-load-dialog'},{'name': 'FlowchartControlsComponent', 'selector': 'app-flowchart-controls'},{'name': 'FlowchartViewerComponent', 'selector': 'app-flowchart-viewer'},{'name': 'GSViewerComponent', 'selector': 'gs-viewer'},{'name': 'GeometryViewerComponent', 'selector': 'app-geometry-viewer'},{'name': 'GraphEdgeComponent', 'selector': 'app-graph-edge'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HelpFundamentals', 'selector': 'app-help-fundamentals'},{'name': 'HelpModel', 'selector': 'app-help-model'},{'name': 'HelpViewerComponent', 'selector': 'app-help-viewer'},{'name': 'InfoViewerComponent', 'selector': 'app-info-viewer'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MobiusAbout', 'selector': 'app-help-about'},{'name': 'MobiusEditorComponent', 'selector': 'app-mobius-editor'},{'name': 'MobiusGalleryComponent', 'selector': 'mobius-gallery'},{'name': 'MobiusViewerComponent', 'selector': 'app-mobius-viewer'},{'name': 'MobiuscesiumComponent', 'selector': 'mobius-cesium'},{'name': 'ModuleViewerComponent', 'selector': 'app-module-viewer'},{'name': 'ModuleboxComponent', 'selector': 'app-modulebox'},{'name': 'NodeLibraryComponent', 'selector': 'app-node-library'},{'name': 'PanelComponent', 'selector': 'app-panel'},{'name': 'ParameterEditorComponent', 'selector': 'app-parameter-editor'},{'name': 'ParameterSettingsDialogComponent', 'selector': 'parameter-settings-dialog'},{'name': 'ParameterViewerComponent', 'selector': 'app-parameter-viewer'},{'name': 'ProcedureEditorComponent', 'selector': 'app-procedure-editor'},{'name': 'ProcedureItemComponent', 'selector': 'app-procedure-item'},{'name': 'PublishComponent', 'selector': 'app-publish'},{'name': 'PublishSettingsComponent', 'selector': 'app-publish-settings'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'TextViewerComponent', 'selector': 'app-text-viewer'},{'name': 'ToolwindowComponent', 'selector': 'app-toolwindow'},{'name': 'ViewerComponent', 'selector': 'app-viewer'},{'name': 'ViewerComponent', 'selector': 'cesium-viewer'},{'name': 'ViewerContainerComponent', 'selector': 'app-viewer-container'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MobiusEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MobiusGalleryComponent.html":{"url":"components/MobiusGalleryComponent.html","title":"component - MobiusGalleryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MobiusGalleryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui-components/main/mobius-gallery/mobius-gallery.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mobius-gallery\n            \n\n            \n                styleUrls\n                mobius-gallery.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./mobius-gallery.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                all_files\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui-components/main/mobius-gallery/mobius-gallery.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/main/mobius-gallery/mobius-gallery.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            all_files\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        all_files:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/ui-components/main/mobius-gallery/mobius-gallery.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { Constants } from \"../../../constants\";\n\n@Component({\n  selector: 'mobius-gallery',\n  templateUrl: './mobius-gallery.component.html',\n  styleUrls: ['./mobius-gallery.component.scss']\n})\nexport class MobiusGalleryComponent implements OnInit {\n\n  private all_files;\n\n  constructor(private http: HttpClient) { \n    this.http.get(Constants.GALLERY_URL).subscribe(data => this.all_files = data);\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n    \n\n    \n        \n\n  \n    Möbius Gallery\n  \n\n  \n      Displaying {{all_files.length}} projects\n  \n\n  \n    \n        \n          \n            {{ f.name | simplename }}\n          \n        \n    \n  \n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Möbius Gallery          Displaying {{all_files.length}} projects                                      {{ f.name | simplename }}                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CesiumViewerComponent', 'selector': 'app-cesium-viewer'},{'name': 'CodeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ConsoleComponent', 'selector': 'app-console'},{'name': 'DataComponent', 'selector': 'app-data'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FileLoadDialogComponent', 'selector': 'file-load-dialog'},{'name': 'FlowchartControlsComponent', 'selector': 'app-flowchart-controls'},{'name': 'FlowchartViewerComponent', 'selector': 'app-flowchart-viewer'},{'name': 'GSViewerComponent', 'selector': 'gs-viewer'},{'name': 'GeometryViewerComponent', 'selector': 'app-geometry-viewer'},{'name': 'GraphEdgeComponent', 'selector': 'app-graph-edge'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HelpFundamentals', 'selector': 'app-help-fundamentals'},{'name': 'HelpModel', 'selector': 'app-help-model'},{'name': 'HelpViewerComponent', 'selector': 'app-help-viewer'},{'name': 'InfoViewerComponent', 'selector': 'app-info-viewer'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MobiusAbout', 'selector': 'app-help-about'},{'name': 'MobiusEditorComponent', 'selector': 'app-mobius-editor'},{'name': 'MobiusGalleryComponent', 'selector': 'mobius-gallery'},{'name': 'MobiusViewerComponent', 'selector': 'app-mobius-viewer'},{'name': 'MobiuscesiumComponent', 'selector': 'mobius-cesium'},{'name': 'ModuleViewerComponent', 'selector': 'app-module-viewer'},{'name': 'ModuleboxComponent', 'selector': 'app-modulebox'},{'name': 'NodeLibraryComponent', 'selector': 'app-node-library'},{'name': 'PanelComponent', 'selector': 'app-panel'},{'name': 'ParameterEditorComponent', 'selector': 'app-parameter-editor'},{'name': 'ParameterSettingsDialogComponent', 'selector': 'parameter-settings-dialog'},{'name': 'ParameterViewerComponent', 'selector': 'app-parameter-viewer'},{'name': 'ProcedureEditorComponent', 'selector': 'app-procedure-editor'},{'name': 'ProcedureItemComponent', 'selector': 'app-procedure-item'},{'name': 'PublishComponent', 'selector': 'app-publish'},{'name': 'PublishSettingsComponent', 'selector': 'app-publish-settings'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'TextViewerComponent', 'selector': 'app-text-viewer'},{'name': 'ToolwindowComponent', 'selector': 'app-toolwindow'},{'name': 'ViewerComponent', 'selector': 'app-viewer'},{'name': 'ViewerComponent', 'selector': 'cesium-viewer'},{'name': 'ViewerContainerComponent', 'selector': 'app-viewer-container'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MobiusGalleryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MobiusService.html":{"url":"injectables/MobiusService.html","title":"injectable - MobiusService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  MobiusService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/global-services/mobius.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _code_gen\n                            \n                            \n                                    Private\n                                _processing\n                            \n                            \n                                    Private\n                                _user\n                            \n                            \n                                stateChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                stateChangedEmitter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor($log: ConsoleService)\n                    \n                \n                        \n                            \n                                Defined in src/app/global-services/mobius.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $log\n                                                  \n                                                        \n                                                                    ConsoleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stateChangedEmitter\n                            \n                            \n                        \n                    \n                \n                \n                    \nstateChangedEmitter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/mobius.service.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _code_gen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _code_gen:     ICodeGenerator\n\n                    \n                \n                    \n                        \n                            Type :     ICodeGenerator\n\n                        \n                    \n                    \n                        \n                            Default value : CodeFactory.getCodeGenerator(\"js\")\n                        \n                    \n                        \n                            \n                                    Defined in src/app/global-services/mobius.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _processing\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _processing:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/global-services/mobius.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _user:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"local_user\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/global-services/mobius.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stateChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stateChanged:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/global-services/mobius.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        processing\n                    \n                \n\n                \n                    \n                        getprocessing()\n                    \n                \n                            \n                                \n                                    Defined in src/app/global-services/mobius.service.ts:20\n                                \n                            \n\n                \n                    \n                        setprocessing(value: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/global-services/mobius.service.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        code_generator\n                    \n                \n\n                \n                    \n                        getcode_generator()\n                    \n                \n                            \n                                \n                                    Defined in src/app/global-services/mobius.service.ts:29\n                                \n                            \n\n                \n                    \n                        setcode_generator(cg: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/global-services/mobius.service.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            cg\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n                \n                    \n                        getuser()\n                    \n                \n                            \n                                \n                                    Defined in src/app/global-services/mobius.service.ts:37\n                                \n                            \n\n                \n                    \n                        setuser(username: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/global-services/mobius.service.ts:41\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            username\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EventEmitter } from '@angular/core';\n\nimport { ICodeGenerator, CodeFactory } from '../base-classes/code/CodeModule';\n\nimport { ConsoleService } from './console.service';\n\n\n@Injectable()\nexport class MobiusService {\n\n  private _user: string = \"local_user\";\n  private _code_gen: ICodeGenerator = CodeFactory.getCodeGenerator(\"js\");\n  private _processing: boolean = false;\n\n\tstateChanged: EventEmitter = new EventEmitter();\n\n\tconstructor( $log: ConsoleService ) { }\n\n  get processing(){\n    return this._processing;\n  }\n\n  set processing(value){\n    this._processing = value;\n    this.stateChanged.emit(this._processing);\n  }\n\n  get code_generator(){\n      return this._code_gen;\n  }\n\n  set code_generator(cg: ICodeGenerator){\n      this._code_gen = cg;\n  }\n\n  get user(): string{\n    return this._user;\n  }\n\n  set user(username: string){\n    this._user = username;\n  }\n\n  stateChangedEmitter() {\n    return this.stateChanged;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MobiusViewerComponent.html":{"url":"components/MobiusViewerComponent.html","title":"component - MobiusViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MobiusViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui-components/main/mobius-viewer/mobius-viewer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-mobius-viewer\n            \n\n            \n                styleUrls\n                mobius-viewer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./mobius-viewer.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editable\n                            \n                            \n                                filepath\n                            \n                            \n                                layout\n                            \n                            \n                                router\n                            \n                            \n                                slider_state\n                            \n                            \n                                sub\n                            \n                            \n                                supported\n                            \n                            \n                                toggle\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkBrowser\n                            \n                            \n                                getFlowchart\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: ActivatedRoute, http: HttpClient, layoutService: LayoutService, _mb: MobiusService, _fs: FlowchartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui-components/main/mobius-viewer/mobius-viewer.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                    LayoutService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _mb\n                                                  \n                                                        \n                                                                    MobiusService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _fs\n                                                  \n                                                        \n                                                                    FlowchartService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkBrowser\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckBrowser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/main/mobius-viewer/mobius-viewer.component.ts:90\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFlowchart\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFlowchart(filename: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/main/mobius-viewer/mobius-viewer.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filename\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/main/mobius-viewer/mobius-viewer.component.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/main/mobius-viewer/mobius-viewer.component.ts:86\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/main/mobius-viewer/mobius-viewer.component.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleMenu\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleMenu()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/main/mobius-viewer/mobius-viewer.component.ts:124\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editable:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/main/mobius-viewer/mobius-viewer.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filepath\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filepath:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/main/mobius-viewer/mobius-viewer.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            layout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layout:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/ui-components/main/mobius-viewer/mobius-viewer.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/ui-components/main/mobius-viewer/mobius-viewer.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slider_state\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        slider_state:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/main/mobius-viewer/mobius-viewer.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sub:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/ui-components/main/mobius-viewer/mobius-viewer.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            supported\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        supported:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/main/mobius-viewer/mobius-viewer.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toggle:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/ui-components/main/mobius-viewer/mobius-viewer.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visible:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/main/mobius-viewer/mobius-viewer.component.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { AsyncPipe } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from \"rxjs/Rx\";\n\nimport { trigger, state, style, transition, animate, keyframes } from '@angular/animations';\n\nimport { LayoutService } from '../../../global-services/layout.service';\nimport { MobiusService } from '../../../global-services/mobius.service';\nimport { FlowchartService } from '../../../global-services/flowchart.service';\n\n\nimport { Constants } from \"../../../constants\";\n\n\n@Component({\n  selector: 'app-mobius-viewer',\n  templateUrl: './mobius-viewer.component.html',\n  styleUrls: ['./mobius-viewer.component.scss'],\n  animations: [\n    trigger('slide_in_out', [\n      state('slide_in', style({\n         \"right\": \"0px\"\n      })),\n      state('slide_out', style({\n        //background: 'blue',\n         \"right\": \"-380px\"\n      })),\n      //transition('slide_in  slide_out', animate('300ms')),\n      transition(\"slide_in  slide_out\", animate(\"3s\")),\n    ]),\n  ]\n})\nexport class MobiusViewerComponent implements OnInit, AfterViewInit {\n\n\tvisible: boolean = false; \n\tlayout;\n\ttoggle;\n    supported: boolean = false;\n    slider_state:string;\n    editable: boolean;\n\n\trouter; sub;\n\tfilepath: string;\n\n\tconstructor(private _router: ActivatedRoute, \n\t\t\t\tprivate http: HttpClient,\n\t\t\t\tprivate layoutService: LayoutService, \n\t\t\t\tprivate _mb: MobiusService, \n\t\t\t\tprivate _fs: FlowchartService) {\n\t\t\n\t\tthis.router = _router;\n\n\t\tlet browser: string = this.checkBrowser();\n    \tif(browser == \"Chrome\"){\n    \t\tthis.layout = layoutService.getAssets(); \n    \t\tthis.toggle = layoutService.toggleMode;\n    \t\tthis.supported = true;\n    \t}\n    \telse{\n    \t\talert(\"Oops... You seem to be using a browser not supported by Mobius. Please use Chrome.\");\n    \t\tthis.supported = false;\n    \t}\n\t}\n\n\tngOnInit() {\n\t\tthis.sub = this.router.params.subscribe(params => {\n\t\t   this.filepath = this.getFlowchart(params.id);\n\t\t   this._fs.load_file_from_url(this.filepath);\n\t\t});\n\n\t\tthis.slider_state = 'slide_in';\n\t}\n\n\tngAfterViewInit(){\n\t\tthis.visible = true;\n\t\t//this.editable = this._fs.getFlowchart().editable;\n\t}\n\n\tgetFlowchart(filename: string){\n\t\tlet filepath: string = Constants.FILE_URL + filename;\n\t\treturn filepath;\n\t}\n\n\tngOnDestroy() {\n\t\tthis.sub.unsubscribe();\n\t}\n\n\tcheckBrowser(): string { \n    \tlet brw: string = \"\";\n     \tif((navigator.userAgent.indexOf(\"Opera\") || navigator.userAgent.indexOf('OPR')) != -1 ) \n\t    {\n\t        brw = 'Opera';\n\t    }\n\t    else if(navigator.userAgent.indexOf(\"Chrome\") != -1 )\n\t    {\n\t        brw = 'Chrome';\n\t    }\n\t    else if(navigator.userAgent.indexOf(\"Safari\") != -1)\n\t    {\n\t        brw = 'Safari';\n\t    }\n\t    else if(navigator.userAgent.indexOf(\"Firefox\") != -1 ) \n\t    {\n\t         brw = 'Firefox';\n\t    }\n\t    else if((navigator.userAgent.indexOf(\"MSIE\") != -1 ) || (!!document[\"documentMode\"] == true )) //IF IE > 10\n\t    {\n\t      brw = 'IE'; \n\t    } \n\t    else if(window.navigator.userAgent.indexOf(\"Edge\") > -1) //IF IE > 10\n\t    {\n\t      brw = 'Edge'; \n\t    } \n\t    else \n\t    {\n\t       brw = 'unknown';\n\t    }\n\n\t    return brw;\n    }\n\n    toggleMenu(){\n    \tthis.slider_state = this.slider_state == 'slide_in' ? 'slide_out' : 'slide_in';\n    }\n}\n\n    \n\n    \n        \n\n    \n        \n    \n\n\n    \n    \t\n    \t\t▹\n    \t\t◃\n    \t\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        \t    \t\t▹    \t\t◃    \t            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CesiumViewerComponent', 'selector': 'app-cesium-viewer'},{'name': 'CodeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ConsoleComponent', 'selector': 'app-console'},{'name': 'DataComponent', 'selector': 'app-data'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FileLoadDialogComponent', 'selector': 'file-load-dialog'},{'name': 'FlowchartControlsComponent', 'selector': 'app-flowchart-controls'},{'name': 'FlowchartViewerComponent', 'selector': 'app-flowchart-viewer'},{'name': 'GSViewerComponent', 'selector': 'gs-viewer'},{'name': 'GeometryViewerComponent', 'selector': 'app-geometry-viewer'},{'name': 'GraphEdgeComponent', 'selector': 'app-graph-edge'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HelpFundamentals', 'selector': 'app-help-fundamentals'},{'name': 'HelpModel', 'selector': 'app-help-model'},{'name': 'HelpViewerComponent', 'selector': 'app-help-viewer'},{'name': 'InfoViewerComponent', 'selector': 'app-info-viewer'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MobiusAbout', 'selector': 'app-help-about'},{'name': 'MobiusEditorComponent', 'selector': 'app-mobius-editor'},{'name': 'MobiusGalleryComponent', 'selector': 'mobius-gallery'},{'name': 'MobiusViewerComponent', 'selector': 'app-mobius-viewer'},{'name': 'MobiuscesiumComponent', 'selector': 'mobius-cesium'},{'name': 'ModuleViewerComponent', 'selector': 'app-module-viewer'},{'name': 'ModuleboxComponent', 'selector': 'app-modulebox'},{'name': 'NodeLibraryComponent', 'selector': 'app-node-library'},{'name': 'PanelComponent', 'selector': 'app-panel'},{'name': 'ParameterEditorComponent', 'selector': 'app-parameter-editor'},{'name': 'ParameterSettingsDialogComponent', 'selector': 'parameter-settings-dialog'},{'name': 'ParameterViewerComponent', 'selector': 'app-parameter-viewer'},{'name': 'ProcedureEditorComponent', 'selector': 'app-procedure-editor'},{'name': 'ProcedureItemComponent', 'selector': 'app-procedure-item'},{'name': 'PublishComponent', 'selector': 'app-publish'},{'name': 'PublishSettingsComponent', 'selector': 'app-publish-settings'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'TextViewerComponent', 'selector': 'app-text-viewer'},{'name': 'ToolwindowComponent', 'selector': 'app-toolwindow'},{'name': 'ViewerComponent', 'selector': 'app-viewer'},{'name': 'ViewerComponent', 'selector': 'cesium-viewer'},{'name': 'ViewerContainerComponent', 'selector': 'app-viewer-container'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MobiusViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MobiuscesiumComponent.html":{"url":"components/MobiuscesiumComponent.html","title":"component - MobiuscesiumComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MobiuscesiumComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/mobius-cesium/mobius-cesium.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mobius-cesium\n            \n\n            \n                styleUrls\n                mobius-cesium.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./mobius-cesium.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                showFiller\n                            \n                            \n                                    Private\n                                slider_state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngDoCheck\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                setModel\n                            \n                            \n                                    Public\n                                toggleSlider\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                mode\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/mobius-cesium/mobius-cesium.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                    DataService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                    \n                            \n                            Type:    JSON\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/mobius-cesium/mobius-cesium.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mode\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/mobius-cesium/mobius-cesium.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngDoCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngDoCheck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/mobius-cesium/mobius-cesium.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/mobius-cesium/mobius-cesium.component.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setModel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setModel(data: JSON)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/mobius-cesium/mobius-cesium.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    JSON\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleSlider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleSlider()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/mobius-cesium/mobius-cesium.component.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            showFiller\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showFiller:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/mobius-cesium/mobius-cesium.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            slider_state\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        slider_state:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"slide_out\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/mobius-cesium/mobius-cesium.component.ts:57\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from \"@angular/core\";\nimport {DataService} from \"./data/data.service\";\nimport { trigger, state, style, transition, animate, keyframes } from \"@angular/animations\";\n\n@Component({\n  selector: \"mobius-cesium\",\n  templateUrl: \"./mobius-cesium.component.html\",\n  styleUrls: [\"./mobius-cesium.component.scss\"],\n  animations: [\n    trigger(\"slide_in_out\", [\n      state(\"slide_in\", style({\n        width: \"280px\",\n        // css styles when the element is in slide_in\n      })),\n      state(\"slide_out\", style({\n        width: \"0px\"\n        // css styles when the element is in slide_out\n      })),\n      // animation effect when transitioning from one state to another\n      transition(\"slide_in  slide_out\", animate(300))\n    ]),\n  ],\n})\nexport class MobiuscesiumComponent {\n  @Input() data: JSON;\n  @Input() mode: string;\n  private showFiller:boolean;\n\n  constructor(private dataService: DataService) {\n\n  \t};\n  public setModel(data: JSON): void {\n  \ttry {\n  \t\tthis.dataService.setGsModel(data);\n      // console.log(\"mode: \", this.mode);\n  \t}\n  \tcatch(ex) {\n  \t\tthis.data = undefined;\n  \t\t//console.error(\"Error generating model\");\n\n  \t}\n  }\n  public ngOnInit() {\n  \tthis.setModel(this.data);\n    // console.log(\"Setting\", this.mode)\n    this.dataService.setMode(this.mode);\n    // console.log(this.data);\n\n  }\n  public ngDoCheck() {\n  \tif(this.dataService.getGsModel() !== this.data) {\n  \t\tthis.setModel(this.data);\n      // console.log(\"data changed\");\n      // console.log(\"mode:\", this.mode);\n  \t}\n  }\n  private slider_state:string = \"slide_out\";\n  public toggleSlider(): void {\n    // do something to change the animation_state variable\n  \tthis.slider_state = this.slider_state === \"slide_out\" ? \"slide_in\" : \"slide_out\";\n  \tlet toggle=document.getElementById(\"Toggle\");\n  \tif(this.slider_state === \"slide_out\") {\n  \t  toggle.style.left=\"0px\";\n      toggle.innerHTML=\"▹\";\n  \t} else if(this.slider_state === \"slide_in\") {\n  \t  toggle.style.left=\"280px\";\n      toggle.innerHTML=\"◃\";\n\n  \t}\n\t}\n}\n\n    \n\n    \n        \n\t\n\t▹\n\t\n  \t\t\n\t\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t▹\t  \t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CesiumViewerComponent', 'selector': 'app-cesium-viewer'},{'name': 'CodeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ConsoleComponent', 'selector': 'app-console'},{'name': 'DataComponent', 'selector': 'app-data'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FileLoadDialogComponent', 'selector': 'file-load-dialog'},{'name': 'FlowchartControlsComponent', 'selector': 'app-flowchart-controls'},{'name': 'FlowchartViewerComponent', 'selector': 'app-flowchart-viewer'},{'name': 'GSViewerComponent', 'selector': 'gs-viewer'},{'name': 'GeometryViewerComponent', 'selector': 'app-geometry-viewer'},{'name': 'GraphEdgeComponent', 'selector': 'app-graph-edge'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HelpFundamentals', 'selector': 'app-help-fundamentals'},{'name': 'HelpModel', 'selector': 'app-help-model'},{'name': 'HelpViewerComponent', 'selector': 'app-help-viewer'},{'name': 'InfoViewerComponent', 'selector': 'app-info-viewer'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MobiusAbout', 'selector': 'app-help-about'},{'name': 'MobiusEditorComponent', 'selector': 'app-mobius-editor'},{'name': 'MobiusGalleryComponent', 'selector': 'mobius-gallery'},{'name': 'MobiusViewerComponent', 'selector': 'app-mobius-viewer'},{'name': 'MobiuscesiumComponent', 'selector': 'mobius-cesium'},{'name': 'ModuleViewerComponent', 'selector': 'app-module-viewer'},{'name': 'ModuleboxComponent', 'selector': 'app-modulebox'},{'name': 'NodeLibraryComponent', 'selector': 'app-node-library'},{'name': 'PanelComponent', 'selector': 'app-panel'},{'name': 'ParameterEditorComponent', 'selector': 'app-parameter-editor'},{'name': 'ParameterSettingsDialogComponent', 'selector': 'parameter-settings-dialog'},{'name': 'ParameterViewerComponent', 'selector': 'app-parameter-viewer'},{'name': 'ProcedureEditorComponent', 'selector': 'app-procedure-editor'},{'name': 'ProcedureItemComponent', 'selector': 'app-procedure-item'},{'name': 'PublishComponent', 'selector': 'app-publish'},{'name': 'PublishSettingsComponent', 'selector': 'app-publish-settings'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'TextViewerComponent', 'selector': 'app-text-viewer'},{'name': 'ToolwindowComponent', 'selector': 'app-toolwindow'},{'name': 'ViewerComponent', 'selector': 'app-viewer'},{'name': 'ViewerComponent', 'selector': 'cesium-viewer'},{'name': 'ViewerContainerComponent', 'selector': 'app-viewer-container'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MobiuscesiumComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Module.html":{"url":"classes/Module.html","title":"class - Module","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Module\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/geometry-modules/Module.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        IModule\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                author\n                            \n                            \n                                    Private\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllMethodNames\n                            \n                            \n                                getAuthor\n                            \n                            \n                                getName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, author: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/geometry-modules/Module.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        author\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            author\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        author:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/geometry-modules/Module.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/geometry-modules/Module.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAllMethodNames\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAllMethodNames()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/geometry-modules/Module.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Set\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAuthor\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAuthor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/geometry-modules/Module.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/geometry-modules/Module.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        interface IModule{\n\tgetName(): string;\n\tgetAuthor(): string;\n}\n\nexport class Module implements IModule{\n\t\n\tprivate name: string;\n\tprivate author: string;\n\n\tconstructor(name: string, author: string){\n\t\tthis.name = name; \n\t\tthis.author = author;\n\t}\n\n\tgetName(): string{\n\t\treturn this.name;\n\t}\n\n\tgetAuthor(): string{\n\t\treturn this.author;\n\t}\n\n\tgetAllMethodNames(): Set{\n\n\t\tlet obj:any = this;\n\n\t\tlet methods = new Set();\n\t\twhile (obj = Reflect.getPrototypeOf(obj)) {\n\t\t\tlet keys = Reflect.ownKeys(obj)\n\t\t\tkeys.forEach((k) => methods.add(k));\n\t\t}\n\n\t\treturn methods;\n\n\t}\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModuleService.html":{"url":"injectables/ModuleService.html","title":"injectable - ModuleService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ModuleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/global-services/module.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                MOB_MODS\n                            \n                            \n                                    Static\n                                modules\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load_functions\n                            \n                            \n                                load_modules\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/global-services/module.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load_functions\n                            \n                            \n                        \n                    \n                \n                \n                    \nload_functions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/module.service.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load_modules\n                            \n                            \n                        \n                    \n                \n                \n                    \nload_modules()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/module.service.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            MOB_MODS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MOB_MODS:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/global-services/module.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            modules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modules:     IModule[]\n\n                    \n                \n                    \n                        \n                            Type :     IModule[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/global-services/module.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        modules\n                    \n                \n\n                \n                    \n                        getmodules()\n                    \n                \n                            \n                                \n                                    Defined in src/app/global-services/module.service.ts:16\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ModuleUtils, IModule } from \"../base-classes/code/CodeModule\"; \n\nimport { AllModules as ModuleSet } from \"../../assets/modules/AllModules\";\n\n@Injectable()\nexport class ModuleService {\n\n  public static modules: IModule[] = [];\n\n  // the actual library loaded\n  public static MOB_MODS = {};\n\n  constructor() { }\n\n  get modules(){\n    return ModuleService.modules;\n  }\n\n  load_functions(){\n    let mObj = {};\n    ModuleSet.map((m) => { \n        let fnsObj = {}; \n\n        ModuleUtils.getFunctions(m).map((fn) => {\n          fnsObj[fn[\"name\"]] = fn.def;\n\n        });\n\n        console.log(m[\"_name\"] + \" :: \" , Object.keys(fnsObj))\n\n        if(mObj[m[\"_name\"]]){\n          console.log(\"not undefined ... add functions\")\n          console.log(Object.keys(mObj[m[\"_name\"]]));\n          console.log(Object.keys(fnsObj));\n          mObj[m[\"_name\"]] = {...mObj[m[\"_name\"]], ...fnsObj};\n          console.log(Object.keys(mObj[m[\"_name\"]]));\n        }\n        else{\n          mObj[m[\"_name\"]] = fnsObj;\n        }\n    });\n\n    ModuleService.MOB_MODS = mObj;\n  }\n\n  load_modules(){\n      // do something\n      let module_set = [];\n      let module_map = [];\n      let moduleSet = module_set;\n      let moduleMap = module_map;\n\n      let self = this;\n      ModuleSet.map(function(mod){\n          let name: string = ModuleUtils.getName(mod);\n\n          if(moduleMap[name] !== undefined){\n            let fns = ModuleUtils.getFunctions(mod);\n            let original_mod = moduleMap[name];\n\n            for(let i=0; i (f.def);\n            }\n\n          }\n          else{\n            moduleMap[name] = mod;\n            moduleSet.push(mod);\n          }\n      })\n\n      // sort the set\n      // for the library rendering\n      module_set = module_set.sort(function(a, b){\n        return a[\"_name\"].toLowerCase().localeCompare(b[\"_name\"].toLowerCase());\n      })\n\n\n      ModuleService.modules = module_set;     \n      this.load_functions();\n  }\n\n}\n\n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModuleUtils.html":{"url":"classes/ModuleUtils.html","title":"class - ModuleUtils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModuleUtils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/base-classes/code/computation-modules/ModuleUtils.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createModule\n                            \n                            \n                                    Static\n                                getAuthor\n                            \n                            \n                                    Static\n                                getFunctions\n                            \n                            \n                                    Static\n                                getModuleFromSet\n                            \n                            \n                                    Static\n                                getName\n                            \n                            \n                                    Static\n                                getParams\n                            \n                            \n                                    Static\n                                getVersion\n                            \n                            \n                                    Static\n                                hasReturn\n                            \n                            \n                                    Static\n                                isCompatible\n                            \n                            \n                                    Static\n                                isValid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            createModule\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createModule(name: string, fn_list: any, helpname?: string, help?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/code/computation-modules/ModuleUtils.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        fn_list\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        helpname\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        help\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getAuthor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAuthor(mod: IModule)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/code/computation-modules/ModuleUtils.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mod\n                                                        \n                                                                    IModule\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getFunctions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFunctions(mod: IModule)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/code/computation-modules/ModuleUtils.ts:148\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mod\n                                                        \n                                                                    IModule\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     literal type[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getModuleFromSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getModuleFromSet(ModuleSet: , name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/code/computation-modules/ModuleUtils.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ModuleSet\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getName(mod: IModule)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/code/computation-modules/ModuleUtils.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mod\n                                                        \n                                                                    IModule\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getParams(func: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/code/computation-modules/ModuleUtils.ts:124\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        func\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     literal type[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getVersion\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getVersion(mod: IModule)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/code/computation-modules/ModuleUtils.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mod\n                                                        \n                                                                    IModule\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            hasReturn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasReturn(func: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/code/computation-modules/ModuleUtils.ts:92\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        func\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isCompatible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isCompatible(mod1: IModule, mod2: IModule)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/code/computation-modules/ModuleUtils.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mod1\n                                                        \n                                                                    IModule\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        mod2\n                                                        \n                                                                    IModule\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isValid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isValid(mod: IModule)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/code/computation-modules/ModuleUtils.ts:75\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mod\n                                                        \n                                                                    IModule\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {IModule} from \"./IModule\";\n\nexport class ModuleUtils{\n\n\tstatic createModule(name: string, fn_list: any, helpname?: string, help?: any){\n\n\t\tlet helpObj;\n\t\t// if(help && help.children){\n\t\t// \thelpObj = help.children.filter(function(child){\n\t\t// \t\t let name: string = child.name;\n\t\t// \t\t if(name.substr(1, name.length - 2)  == helpname){\n\t\t// \t\t \treturn true;\n\t\t// \t\t }\n\t\t// \t\t else{\n\t\t// \t\t \treturn false;\n\t\t// \t\t }\n\t\t// \t})\n\t\t// }\n\n\t\tlet obj: IModule  =  {\n\t\t\t_name: name, \n\t\t\t_version: 0.1, \n\t\t\t_author: \"Patrick\",\n\t\t\t_helpObj: help ? help.children : help\n\t\t};\n\n\t\tfor (let prop in fn_list){\n\t\t\tobj[prop] = fn_list[prop];\n\t\t}\n\n\t\treturn obj;\n\n\t}\n\n\tstatic getModuleFromSet(ModuleSet, name: string){\n\t\tlet imod;\n\t\tfor(let key in ModuleSet){\n\t\t\tlet mod = ModuleSet[key];\n\n\t\t\tif( key !== name){\n\t\t\t\tfor(let prop in mod){\n\t\t\t\t\tlet submod = mod[prop]; ;\n\n\t\t\t\t\tif(typeof(submod) == \"function\"){\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(prop == name && typeof(submod) == \"object\"){\n\t\t\t\t\t\timod = this.createModule(prop, submod);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\telse{\n\t\t\t\timod = this.createModule(key, mod);\n\t\t\t}\n\t\t}\n\n\t\treturn imod;\n\t}\n\n\tstatic getName(mod: IModule): string{\n\t\treturn mod[\"_name\"];\n\t}\n\n\tstatic getAuthor(mod: IModule): string{\n\t\treturn mod[\"_author\"];\n\t}\n\n\tstatic getVersion(mod: IModule): string{\n\t\treturn mod[\"_version\"];\n\t}\n\n\tstatic isValid(mod: IModule): boolean{\n\t\tif(mod == undefined)\n\t\t\treturn undefined;\n\t\treturn !!(this.getName(mod) && this.getVersion(mod) && this.getAuthor(mod));\n\t}\n\n\tstatic isCompatible(mod1: IModule, mod2: IModule): boolean{\n\t\tif(mod1 == undefined || mod2 == undefined)\n\t\t\treturn false;\n\t\t\n\t\tlet _nameCheck: boolean = this.getName(mod1)  == this.getName(mod2);\n\t\tlet _versionCheck: boolean = this.getVersion(mod1)  == this.getVersion(mod2);\n\t\tlet _authorCheck: boolean = this.getAuthor(mod1)  == this.getAuthor(mod2);\n\n\t\treturn _nameCheck  &&  _versionCheck && _authorCheck; \n\t}\n\n\tstatic hasReturn(func: Function): boolean{\n\t\tconst str = func.toString();\n\t\tconst regex = /return(.*);/gm;\n\t\tlet m;\n\t\tlet flag = false;\n\t\twhile ((m = regex.exec(str)) !== null) {\n\t\t    // This is necessary to avoid infinite loops with zero-width matches\n\t\t    if (m.index === regex.lastIndex) {\n\t\t        regex.lastIndex++;\n\t\t    }\t\n\n\t\t    if(!(m[1].length == 0)){\t\n\t\t    \tflag = true;\n\t\t    \tbreak;\n\t\t    }\n\n\t\t    /*for(let en of m){\n\t\t    \tlet match = en[0]; \n\t\t    \tlet groupIndex = en[1];\n\t\t    \tconsole.log(en, match, groupIndex);\n\t\t    \tif(groupIndex == 1 && match != ''){\n\t\t        \t//console.log(`Found match, group ${groupIndex}: ${match}`);\n\t\t        \tflag = true;\n\t\t        \tbreak;\n\t\t    \t}\n\t\t    }*/\n\t\t}\n\n\t\treturn flag;\n\t}\n\n\t\n\tstatic getParams(func: Function): {type: string, value: any}[]{\n\n\t \tlet fnStr = func.toString().replace( /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg, '');\n\t\tlet result = fnStr.slice(fnStr.indexOf('(')+1, fnStr.indexOf(')')).split(\",\")//.match( /([^\\s,]+)/g);\n\t\tif(result === null || result[0]==\"\"){\n\t\t \tresult = [];\n\t\t}\n\n\t\tlet final_result = result.map(function(r){ \n\t\t\tr = r.trim();\n\t\t\tlet r_value = r.split(\"=\");\n\n\t\t\tif (r_value.length == 1){\n\t\t\t\treturn {type: r_value[0].trim(), value: r_value[0].trim()} \n\t\t\t}\n\t\t\telse{\n\t\t\t\treturn {type: r_value[0].trim(), value: r_value[1].trim()} \n\t\t\t}\n\n\t\t});\n\n\t\treturn final_result;\n\t}\n\n\tstatic getFunctions(mod: IModule): {name: string, module: string, def: Function}[]{\n\n\t\t// default names to exclude\n\t\tlet fn: {name: string, module: string, def: Function}[] = [];\n\t\tlet module_name = this.getName(mod);\n\t\tlet fns = Object.getOwnPropertyNames(mod).filter(function(prop){ \n\t\t\t\t\treturn [ \"length\", \"prototype\", \"name\", \"_name\", \"_author\", \"_version\", \"_helpObj\", \"_url\"].indexOf(prop) == -1;\n\t\t\t\t});\n\n\t\tfor(let f=0; f \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModuleViewerComponent.html":{"url":"components/ModuleViewerComponent.html","title":"component - ModuleViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModuleViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui-components/viewers/module-viewer/module-viewer.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-module-viewer\n            \n\n            \n                styleUrls\n                module-viewer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./module-viewer.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                functions\n                            \n                            \n                                module_service\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui-components/viewers/module-viewer/module-viewer.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            functions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        functions:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/viewers/module-viewer/module-viewer.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            module_service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        module_service:     ModuleService\n\n                    \n                \n                    \n                        \n                            Type :     ModuleService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/viewers/module-viewer/module-viewer.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Injector } from '@angular/core';\nimport { ModuleService } from '../../../global-services/module.service'; \n\n@Component({\n  selector: 'app-module-viewer',\n  templateUrl: './module-viewer.component.html',\n  styleUrls: ['./module-viewer.component.scss']\n})\nexport class ModuleViewerComponent{\n\n  module_service: ModuleService;\n  functions: string[] = [];\n\n  constructor(injector: Injector){ \n      /*this.module_service = injector.get(ModuleService);\n      let modules = this.module_service.getModule(\"gis\");\n      let fn_names = Object.keys(Object.getPrototypeOf(modules)).filter(function(t){  return (t != \"constructor\"); });\n      this.functions = this.functions.concat(fn_names); */\n  };\n\n\n}\n\n    \n\n    \n        \n  \t\n\t    \n\t      Modules\n\t    \n  \t\n\t\n\t\t\n\t\t\t{{fn}}\n\t\t\n\t\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  \t\t    \t      Modules\t      \t\t\t\t\t\t\t{{fn}}\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CesiumViewerComponent', 'selector': 'app-cesium-viewer'},{'name': 'CodeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ConsoleComponent', 'selector': 'app-console'},{'name': 'DataComponent', 'selector': 'app-data'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FileLoadDialogComponent', 'selector': 'file-load-dialog'},{'name': 'FlowchartControlsComponent', 'selector': 'app-flowchart-controls'},{'name': 'FlowchartViewerComponent', 'selector': 'app-flowchart-viewer'},{'name': 'GSViewerComponent', 'selector': 'gs-viewer'},{'name': 'GeometryViewerComponent', 'selector': 'app-geometry-viewer'},{'name': 'GraphEdgeComponent', 'selector': 'app-graph-edge'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HelpFundamentals', 'selector': 'app-help-fundamentals'},{'name': 'HelpModel', 'selector': 'app-help-model'},{'name': 'HelpViewerComponent', 'selector': 'app-help-viewer'},{'name': 'InfoViewerComponent', 'selector': 'app-info-viewer'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MobiusAbout', 'selector': 'app-help-about'},{'name': 'MobiusEditorComponent', 'selector': 'app-mobius-editor'},{'name': 'MobiusGalleryComponent', 'selector': 'mobius-gallery'},{'name': 'MobiusViewerComponent', 'selector': 'app-mobius-viewer'},{'name': 'MobiuscesiumComponent', 'selector': 'mobius-cesium'},{'name': 'ModuleViewerComponent', 'selector': 'app-module-viewer'},{'name': 'ModuleboxComponent', 'selector': 'app-modulebox'},{'name': 'NodeLibraryComponent', 'selector': 'app-node-library'},{'name': 'PanelComponent', 'selector': 'app-panel'},{'name': 'ParameterEditorComponent', 'selector': 'app-parameter-editor'},{'name': 'ParameterSettingsDialogComponent', 'selector': 'parameter-settings-dialog'},{'name': 'ParameterViewerComponent', 'selector': 'app-parameter-viewer'},{'name': 'ProcedureEditorComponent', 'selector': 'app-procedure-editor'},{'name': 'ProcedureItemComponent', 'selector': 'app-procedure-item'},{'name': 'PublishComponent', 'selector': 'app-publish'},{'name': 'PublishSettingsComponent', 'selector': 'app-publish-settings'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'TextViewerComponent', 'selector': 'app-text-viewer'},{'name': 'ToolwindowComponent', 'selector': 'app-toolwindow'},{'name': 'ViewerComponent', 'selector': 'app-viewer'},{'name': 'ViewerComponent', 'selector': 'cesium-viewer'},{'name': 'ViewerContainerComponent', 'selector': 'app-viewer-container'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModuleViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModuleboxComponent.html":{"url":"components/ModuleboxComponent.html","title":"component - ModuleboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModuleboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui-components/controls/modulebox/modulebox.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modulebox\n            \n\n            \n                styleUrls\n                modulebox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./modulebox.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _category\n                            \n                            \n                                _moduleList\n                            \n                            \n                                    Private\n                                active_node\n                            \n                            \n                                    Readonly\n                                getStr\n                            \n                            \n                                    Readonly\n                                procedureTypes\n                            \n                            \n                                    Readonly\n                                PTYPE\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addActionProcedure\n                            \n                            \n                                addPort\n                            \n                            \n                                addProcedure\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openModuleHelp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_fs: FlowchartService, _ms: ModuleService, layoutService: LayoutService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui-components/controls/modulebox/modulebox.component.ts:90\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _fs\n                                                  \n                                                        \n                                                                    FlowchartService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _ms\n                                                  \n                                                        \n                                                                    ModuleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                    LayoutService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addActionProcedure\n                            \n                            \n                        \n                    \n                \n                \n                    \naddActionProcedure(fn: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/controls/modulebox/modulebox.component.ts:119\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addPort\n                            \n                            \n                        \n                    \n                \n                \n                    \naddPort(port_type: PortTypes)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/controls/modulebox/modulebox.component.ts:146\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        port_type\n                                                        \n                                                                    PortTypes\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addProcedure\n                            \n                            \n                        \n                    \n                \n                \n                    \naddProcedure($event: , type: ProcedureTypes)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/controls/modulebox/modulebox.component.ts:135\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                                    ProcedureTypes\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/controls/modulebox/modulebox.component.ts:110\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/controls/modulebox/modulebox.component.ts:96\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModuleHelp\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModuleHelp($event: , category: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/controls/modulebox/modulebox.component.ts:153\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        category\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _category\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _category:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/controls/modulebox/modulebox.component.ts:90\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _moduleList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _moduleList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/controls/modulebox/modulebox.component.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            active_node\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        active_node:     IGraphNode\n\n                    \n                \n                    \n                        \n                            Type :     IGraphNode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/controls/modulebox/modulebox.component.ts:87\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            getStr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getStr:     \n\n                    \n                \n                    \n                        \n                            Default value : getStringForProcedureType\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/controls/modulebox/modulebox.component.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            procedureTypes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        procedureTypes:     ProcedureTypes[]\n\n                    \n                \n                    \n                        \n                            Type :     ProcedureTypes[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n\t\tProcedureTypes.Data, \n\t\tProcedureTypes.ForLoopControl,\n\t\tProcedureTypes.WhileControl,\n\t\tProcedureTypes.IfControl,\n\t\tProcedureTypes.ElseControl, \n\t\tProcedureTypes.ElseIfControl,\n\t\tProcedureTypes.LoopBreak, \n\t\tProcedureTypes.LoopContinue,\n\t\tProcedureTypes.Comment\n  \t]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/controls/modulebox/modulebox.component.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            PTYPE\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        PTYPE:     \n\n                    \n                \n                    \n                        \n                            Default value : PortTypes\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/controls/modulebox/modulebox.component.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/controls/modulebox/modulebox.component.ts:86\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Injector, OnInit} from '@angular/core';\nimport {FlowchartService} from '../../../global-services/flowchart.service';\nimport {LayoutService} from '../../../global-services/layout.service';\nimport {ModuleService} from '../../../global-services/module.service';\n\nimport {ModuleUtils} from \"../../../base-classes/code/CodeModule\";\nimport {IProcedure, ProcedureFactory, ProcedureTypes} from '../../../base-classes/procedure/ProcedureModule';\nimport {NodeUtils} from '../../../base-classes/node/NodeUtils';\nimport {IGraphNode} from '../../../base-classes/node/NodeModule';\nimport {PortTypes} from '../../../base-classes/port/PortModule';\n\nconst getStringForProcedureType = function(type: ProcedureTypes): string{\n\tlet value:string = \"\";\n\n\tswitch(type){\n\n\t\tcase ProcedureTypes.Data: \n\t\t\tvalue = \"Variable\";\n\t\t\tbreak;\n\n\t\tcase ProcedureTypes.Action: \n\t\t\tvalue = \"Function\";\n\t\t\tbreak;\n\n\t\tcase ProcedureTypes.IfControl: \n\t\t\tvalue = \"If\";\n\t\t\tbreak;\n\n\t\tcase ProcedureTypes.ElseControl: \n\t\t\tvalue = \"Else\";\n\t\t\tbreak;\n\n\t\tcase ProcedureTypes.ElseIfControl: \n\t\t\tvalue = \"Else-If\";\n\t\t\tbreak;\n\n\t\tcase ProcedureTypes.ForLoopControl: \n\t\t\tvalue = \"For-loop\";\n\t\t\tbreak;\n\n\t\tcase ProcedureTypes.WhileControl: \n\t\t\tvalue = \"While-loop\";\n\t\t\tbreak;\n\n\t\tcase ProcedureTypes.LoopBreak: \n\t\t\tvalue = \"Break\";\n\t\t\tbreak;\n\n\t\tcase ProcedureTypes.LoopContinue: \n\t\t\tvalue = \"Continue\";\n\t\t\tbreak;\n\n\t\tcase ProcedureTypes.Comment: \n\t\t\tvalue = \"Comment\";\n\t\t\tbreak;\n\t}\n\n\treturn value;\n}\n\n\n@Component({\n  selector: 'app-modulebox',\n  templateUrl: './modulebox.component.html',\n  styleUrls: ['./modulebox.component.scss']\n})\nexport class ModuleboxComponent implements OnInit{\n\n\t// Defines the currently allowed procedure types\n  \treadonly procedureTypes: ProcedureTypes[] = [\n\t\tProcedureTypes.Data, \n\t\tProcedureTypes.ForLoopControl,\n\t\tProcedureTypes.WhileControl,\n\t\tProcedureTypes.IfControl,\n\t\tProcedureTypes.ElseControl, \n\t\tProcedureTypes.ElseIfControl,\n\t\tProcedureTypes.LoopBreak, \n\t\tProcedureTypes.LoopContinue,\n\t\tProcedureTypes.Comment\n  \t];\n\n  \t// Port types: Input / Output\n  \treadonly PTYPE = PortTypes;\n  \treadonly getStr = getStringForProcedureType;\n\n  \tprivate subscriptions = [];\n  \tprivate active_node: IGraphNode;\n\n  \t_moduleList = [];\n  \t_category: string[] = [];\n \n  \tconstructor(private _fs: FlowchartService, \n  \t\t\t\tprivate _ms: ModuleService,\n  \t\t\t\tprivate layoutService: LayoutService) { }\n\n\tngOnInit(){\n\t\t\n\t\tthis._moduleList = [];\n\n\t\tlet modules = this._ms.modules;\n\t\tfor(let mod=0; mod  this.active_node = node ));\n\t}\n\n\tngOnDestroy(){\n\t\tthis.subscriptions.map(function(s){\n\t  \t\ts.unsubscribe();\n\t\t})\n\t}\n\n\t//\n\t//  Adds a function from the function library to the procedure\n\t// \n\taddActionProcedure(fn: {name: string, params: string[], module: string, hasReturn: boolean}){\n\t\tif(this.active_node == undefined){\n\t\t\talert(\"Oops.. No Node Selected\");\n\t\t\treturn;\n\t\t}\n\n\t\tlet prod_data :  \n\t\t\t{result: string, module: string, function: any, params: string[], hasReturn: boolean} = \n\t\t\t{result: \"\", module: fn.module, function: fn.name, params: fn.params, hasReturn: fn.hasReturn};\n\t\tlet prod:IProcedure = ProcedureFactory.getProcedure( ProcedureTypes.Action, prod_data);\n\t\tthis.active_node = NodeUtils.add_procedure(this.active_node, prod);\n\t}\n\n\t//\n\t//\tAdds a variable / for-loop / while-loop / if / else / else-if\n\t//\n\taddProcedure($event, type: ProcedureTypes): void{\n\t\t$event.stopPropagation();\n\t\tlet prod:IProcedure;\n\t\tlet prod_data; \n\t\tthis.active_node = NodeUtils.add_procedure(this.active_node, ProcedureFactory.getProcedure(type));\n\t}\n\n\n\t//\n\t// Adds an input or output port to the node\n\t//\n\taddPort(port_type: PortTypes): void{\n\t  NodeUtils.add_port(this.active_node, port_type, undefined);\n    }\n\n    //\n    //\tTODO: Opens Module Help Viewer\n    //\n    openModuleHelp($event, category: string): void{\n    \t$event.stopPropagation();\n    \tthis.layoutService.showHelp({module: category, name: undefined})\n\t}\n\n}\n\n    \n\n    \n        \n\t\n\t\t\n\t\t\tAdd Input\n\t\t\tAdd Output\n\t\t\n\n\t\t\n\t\t\t\n\t\t\t\t\tAdd {{getStr(type)}}\n\t\t\t\n\t\t\n\n\t\t\n\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t  {{ cat.replace(\"_\", \".\") }} \n\t\t\t\t\t\t  help_outline\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t  \n\t\t\t\t\t\t\n\t\t\t\t\t\n\n\t\t\t\t\t\n\t\t\t\t\t \t \n\t\t\t\t\t \t\t{{ fn.module.replace(\"_\", \".\") }}.{{ fn.name }}\n\t\t\t\t\t \t\n\t\t\t\t\t\n\n\t\t\t\t\n\t\t\t\t\n\t\t\n\t\t\n\t\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\tAdd Input\t\t\tAdd Output\t\t\t\t\t\t\t\t\t\t\t\tAdd {{getStr(type)}}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {{ cat.replace(\"_\", \".\") }} \t\t\t\t\t\t  help_outline\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t \t\t\t\t\t \t\t{{ fn.module.replace(\"_\", \".\") }}.{{ fn.name }}\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CesiumViewerComponent', 'selector': 'app-cesium-viewer'},{'name': 'CodeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ConsoleComponent', 'selector': 'app-console'},{'name': 'DataComponent', 'selector': 'app-data'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FileLoadDialogComponent', 'selector': 'file-load-dialog'},{'name': 'FlowchartControlsComponent', 'selector': 'app-flowchart-controls'},{'name': 'FlowchartViewerComponent', 'selector': 'app-flowchart-viewer'},{'name': 'GSViewerComponent', 'selector': 'gs-viewer'},{'name': 'GeometryViewerComponent', 'selector': 'app-geometry-viewer'},{'name': 'GraphEdgeComponent', 'selector': 'app-graph-edge'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HelpFundamentals', 'selector': 'app-help-fundamentals'},{'name': 'HelpModel', 'selector': 'app-help-model'},{'name': 'HelpViewerComponent', 'selector': 'app-help-viewer'},{'name': 'InfoViewerComponent', 'selector': 'app-info-viewer'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MobiusAbout', 'selector': 'app-help-about'},{'name': 'MobiusEditorComponent', 'selector': 'app-mobius-editor'},{'name': 'MobiusGalleryComponent', 'selector': 'mobius-gallery'},{'name': 'MobiusViewerComponent', 'selector': 'app-mobius-viewer'},{'name': 'MobiuscesiumComponent', 'selector': 'mobius-cesium'},{'name': 'ModuleViewerComponent', 'selector': 'app-module-viewer'},{'name': 'ModuleboxComponent', 'selector': 'app-modulebox'},{'name': 'NodeLibraryComponent', 'selector': 'app-node-library'},{'name': 'PanelComponent', 'selector': 'app-panel'},{'name': 'ParameterEditorComponent', 'selector': 'app-parameter-editor'},{'name': 'ParameterSettingsDialogComponent', 'selector': 'parameter-settings-dialog'},{'name': 'ParameterViewerComponent', 'selector': 'app-parameter-viewer'},{'name': 'ProcedureEditorComponent', 'selector': 'app-procedure-editor'},{'name': 'ProcedureItemComponent', 'selector': 'app-procedure-item'},{'name': 'PublishComponent', 'selector': 'app-publish'},{'name': 'PublishSettingsComponent', 'selector': 'app-publish-settings'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'TextViewerComponent', 'selector': 'app-text-viewer'},{'name': 'ToolwindowComponent', 'selector': 'app-toolwindow'},{'name': 'ViewerComponent', 'selector': 'app-viewer'},{'name': 'ViewerComponent', 'selector': 'cesium-viewer'},{'name': 'ViewerContainerComponent', 'selector': 'app-viewer-container'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModuleboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NodeLibraryComponent.html":{"url":"components/NodeLibraryComponent.html","title":"component - NodeLibraryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NodeLibraryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui-components/viewers/node-library/node-library.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-node-library\n            \n\n            \n                styleUrls\n                node-library.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./node-library.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _savedNodes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNode\n                            \n                            \n                                clearLibrary\n                            \n                            \n                                deleteNode\n                            \n                            \n                                downloadLibrary\n                            \n                            \n                                loadLibrary\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/ui-components/viewers/node-library/node-library.component.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addNode\n                            \n                            \n                        \n                    \n                \n                \n                    \naddNode($event: , type: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/viewers/node-library/node-library.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearLibrary\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearLibrary()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/viewers/node-library/node-library.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteNode\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteNode($event: , node: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/viewers/node-library/node-library.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        node\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            downloadLibrary\n                            \n                            \n                        \n                    \n                \n                \n                    \ndownloadLibrary()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/viewers/node-library/node-library.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadLibrary\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadLibrary()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/viewers/node-library/node-library.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/viewers/node-library/node-library.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _savedNodes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _savedNodes:     IGraphNode[]\n\n                    \n                \n                    \n                        \n                            Type :     IGraphNode[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/viewers/node-library/node-library.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Injector, Inject } from '@angular/core';\nimport { NodeLibraryService } from '../../../global-services/node-library.service';\n\nimport { IGraphNode, IEdge, GraphNode } from '../../../base-classes/node/NodeModule';\n\n@Component({\n  selector: 'app-node-library',\n  templateUrl: './node-library.component.html',\n  styleUrls: ['./node-library.component.scss']\n})\nexport class NodeLibraryComponent{\n\n\t_savedNodes: IGraphNode[]; \n\n\tconstructor(){}\n\n\treset(): void{\n\t\tthis._savedNodes = NodeLibraryService.nodes;\n\t}\n\n\taddNode($event, type: number): void{\n\t}\n\n\tdeleteNode($event, node): void{\n\t\t$event.stopPropagation();\n\t\tNodeLibraryService.delete_library_node(node[\"_id\"])\n\t}\n\n\tclearLibrary(){\n\t\tNodeLibraryService.delete_library_node()\n\t}\n\n\tdownloadLibrary(){\n\t\t\t// todo\t\n\t}\n\n\tloadLibrary(){\t\n\t\t\t// todo\n\t}\t\n\n}\n\n\n    \n\n    \n        \nSave Library\nLoad Library\n\n\n\tClear Library\n\n\n\n\t\n\t{{n._name}}\n\t\n\t\n\t\t[x]\n\t\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Save LibraryLoad Library\tClear Library\t\t{{n._name}}\t\t\t\t[x]\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CesiumViewerComponent', 'selector': 'app-cesium-viewer'},{'name': 'CodeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ConsoleComponent', 'selector': 'app-console'},{'name': 'DataComponent', 'selector': 'app-data'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FileLoadDialogComponent', 'selector': 'file-load-dialog'},{'name': 'FlowchartControlsComponent', 'selector': 'app-flowchart-controls'},{'name': 'FlowchartViewerComponent', 'selector': 'app-flowchart-viewer'},{'name': 'GSViewerComponent', 'selector': 'gs-viewer'},{'name': 'GeometryViewerComponent', 'selector': 'app-geometry-viewer'},{'name': 'GraphEdgeComponent', 'selector': 'app-graph-edge'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HelpFundamentals', 'selector': 'app-help-fundamentals'},{'name': 'HelpModel', 'selector': 'app-help-model'},{'name': 'HelpViewerComponent', 'selector': 'app-help-viewer'},{'name': 'InfoViewerComponent', 'selector': 'app-info-viewer'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MobiusAbout', 'selector': 'app-help-about'},{'name': 'MobiusEditorComponent', 'selector': 'app-mobius-editor'},{'name': 'MobiusGalleryComponent', 'selector': 'mobius-gallery'},{'name': 'MobiusViewerComponent', 'selector': 'app-mobius-viewer'},{'name': 'MobiuscesiumComponent', 'selector': 'mobius-cesium'},{'name': 'ModuleViewerComponent', 'selector': 'app-module-viewer'},{'name': 'ModuleboxComponent', 'selector': 'app-modulebox'},{'name': 'NodeLibraryComponent', 'selector': 'app-node-library'},{'name': 'PanelComponent', 'selector': 'app-panel'},{'name': 'ParameterEditorComponent', 'selector': 'app-parameter-editor'},{'name': 'ParameterSettingsDialogComponent', 'selector': 'parameter-settings-dialog'},{'name': 'ParameterViewerComponent', 'selector': 'app-parameter-viewer'},{'name': 'ProcedureEditorComponent', 'selector': 'app-procedure-editor'},{'name': 'ProcedureItemComponent', 'selector': 'app-procedure-item'},{'name': 'PublishComponent', 'selector': 'app-publish'},{'name': 'PublishSettingsComponent', 'selector': 'app-publish-settings'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'TextViewerComponent', 'selector': 'app-text-viewer'},{'name': 'ToolwindowComponent', 'selector': 'app-toolwindow'},{'name': 'ViewerComponent', 'selector': 'app-viewer'},{'name': 'ViewerComponent', 'selector': 'cesium-viewer'},{'name': 'ViewerContainerComponent', 'selector': 'app-viewer-container'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NodeLibraryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NodeLibraryService.html":{"url":"injectables/NodeLibraryService.html","title":"injectable - NodeLibraryService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  NodeLibraryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/global-services/node-library.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                saved_nodes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                delete_library_node\n                            \n                            \n                                    Static\n                                save_library_node\n                            \n                            \n                                    Static\n                                update_nodes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_cs: ConsoleService)\n                    \n                \n                        \n                            \n                                Defined in src/app/global-services/node-library.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _cs\n                                                  \n                                                        \n                                                                    ConsoleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            delete_library_node\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        delete_library_node(nodeID?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/node-library.service.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nodeID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            save_library_node\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        save_library_node(node: IGraphNode)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/node-library.service.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    IGraphNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            update_nodes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        update_nodes()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/global-services/node-library.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            saved_nodes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        saved_nodes:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/global-services/node-library.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        nodes\n                    \n                \n\n                \n                    \n                        getnodes()\n                    \n                \n                            \n                                \n                                    Defined in src/app/global-services/node-library.service.ts:16\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        saved_nodes\n                    \n                \n\n\n                \n                    \n                        setsaved_nodes(nodes: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/global-services/node-library.service.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            nodes\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AllModules as ModuleSet } from \"../../assets/modules/AllModules\";\n\nimport * as CircularJSON from 'circular-json';\nimport {MOBIUS} from './mobius.constants';\n\nimport {ConsoleService} from \"./console.service\";\nimport {IGraphNode, GraphNode} from '../base-classes/node/NodeModule';\n\n\n@Injectable()\nexport class NodeLibraryService {\n\n  private static saved_nodes: any[] = [];\n\n  public static get nodes(): any[]{\n    return NodeLibraryService.saved_nodes;\n  }\n\n  set saved_nodes(nodes: any[]){\n    NodeLibraryService.saved_nodes = nodes;\n  }\n\n  constructor(private _cs: ConsoleService) { NodeLibraryService.update_nodes();  }\n\n  public static update_nodes(): void{ \n\n    NodeLibraryService.saved_nodes = [];\n    \n    let myStorage = window.localStorage;\n    let property = MOBIUS.PROPERTY.NODE;\n    let storageString = myStorage.getItem(property);\n    let nodesStorage = CircularJSON.parse( storageString == null ? CircularJSON.stringify({n: []}) : storageString );\n\n    let nodeData = nodesStorage.n; \n\n    for(let n=0; n \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NodeSubscriber.html":{"url":"classes/NodeSubscriber.html","title":"class - NodeSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  NodeSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/base-classes/subscribers/NodeSubscriber.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IGraphNode } from '../node/NodeModule';\n\n\nexport class NodeSubscriber{\n\t\n\t\n\n\t\n\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NodeUtils.html":{"url":"classes/NodeUtils.html","title":"class - NodeUtils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  NodeUtils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/base-classes/node/NodeUtils.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                add_port\n                            \n                            \n                                    Static\n                                add_procedure\n                            \n                            \n                                    Static\n                                add_procedure_at_position\n                            \n                            \n                                    Static\n                                copy_node\n                            \n                            \n                                    Static\n                                delete_port\n                            \n                            \n                                    Static\n                                delete_port_by_index\n                            \n                            \n                                    Static\n                                delete_procedure\n                            \n                            \n                                    Static\n                                execute_node\n                            \n                            \n                                    Static\n                                get_child_position\n                            \n                            \n                                    Static\n                                get_result\n                            \n                            \n                                    Static\n                                get_variable_list\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            add_port\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        add_port(node: IGraphNode, type: PortTypes, name?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/node/NodeUtils.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    IGraphNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                                    PortTypes\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     IGraphNode\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            add_procedure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        add_procedure(node: IGraphNode, procedure: IProcedure)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/node/NodeUtils.ts:96\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    IGraphNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        procedure\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     IGraphNode\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            add_procedure_at_position\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        add_procedure_at_position(node: IGraphNode, procedure: IProcedure, index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/node/NodeUtils.ts:145\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    IGraphNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        procedure\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     IGraphNode\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            copy_node\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        copy_node(node: IGraphNode, exact?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/node/NodeUtils.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    IGraphNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        exact\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     IGraphNode\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            delete_port\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        delete_port(node: IGraphNode, port: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/node/NodeUtils.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    IGraphNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        port\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     IGraphNode\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            delete_port_by_index\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        delete_port_by_index(node: IGraphNode, type: string, port_index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/node/NodeUtils.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    IGraphNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        port_index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     IGraphNode\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            delete_procedure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        delete_procedure(node: , prod_to_delete?: IProcedure)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/node/NodeUtils.ts:167\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        prod_to_delete\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     IGraphNode\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            execute_node\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        execute_node(node: IGraphNode, code_generator: ICodeGenerator, modules: any, print: Function, globals?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/node/NodeUtils.ts:242\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    IGraphNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        code_generator\n                                                        \n                                                                    ICodeGenerator\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        modules\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        print\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        globals\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            get_child_position\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get_child_position(node: IGraphNode, procedure: IProcedure)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/node/NodeUtils.ts:152\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    IGraphNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        procedure\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            get_result\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get_result(node: IGraphNode)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/node/NodeUtils.ts:320\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    IGraphNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            get_variable_list\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get_variable_list(node: IGraphNode)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/node/NodeUtils.ts:210\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    IGraphNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {InputPort, OutputPort, InputPortTypes, PortTypes} from \"../port/PortModule\";\nimport {IGraphNode} from \"./IGraphNode\";\nimport {GraphNode} from \"./GraphNode\";\nimport {IProcedure, ProcedureTypes} from \"../procedure/ProcedureModule\";\nimport {ProcedureUtils} from '../procedure/ProcedureUtils';\nimport {ICodeGenerator, IModule} from \"../code/CodeModule\";\n\nexport abstract class NodeUtils{\n\n\t//\n\t//\tTakes IGraphNode and creates an exact or duplicate\n\t//\tExact copy will have the same name and node ID (useful when loading from a file)\n\t//\tDuplicates will have different names and node IDs (useful when duplicating or adding from library)\n\t//\n\tpublic static copy_node(node: IGraphNode, exact?: boolean): IGraphNode{\n\n\t\tlet n: IGraphNode = new GraphNode();\n\n\t\tif(exact){\n\t\t\t// do nothing\n\t\t\tn.update_properties(node);\n\t\t}\n\t\telse{\n\t\t\tlet id = n.id;\n\t\t\tn.update_properties(node);\n\t\t\tn.name = node.name +  Math.floor(Math.random()*100);\n\t\t\tn.id = id;\n\t\t\tn.position  = [ Math.floor(Math.random()*100), Math.floor(Math.random()*100) ];\n\n\t\t\tn.inputs.map((inp) => inp.value = ' ');\n\t\t\tn.outputs.map((out) => out.value = ' ');\n\t\t}\n\n\t\treturn n;\n\t}\t\n \n\tpublic static add_port(node: IGraphNode, type: PortTypes, name?: string): IGraphNode{\n\t\tlet default_name = type.toString().substring(0, 3) + node[`${type}s`].length; \n\n\t\tif( name !== undefined ){\n\t\t\tdefault_name = name;\n\t\t}\n\n\t\tlet port: InputPort|OutputPort;\n\t\tif(type == PortTypes.Input){\n\t\t\tport = new InputPort(default_name);\n\t\t}\n\t\telse if(type == PortTypes.Output){\n\t\t\tport = new OutputPort(default_name);\n\t\t}\n\t\telse{\n\t\t\tthrow Error(\"Unrecognised Port Type\");\n\t\t}\n\n\t\tnode[`${type}s`].push(port);\n\t\tnode.type = undefined;\n\t\t\n\t\treturn node;\n\t}\n\n\tpublic static delete_port(node: IGraphNode, port: any): IGraphNode{\n\n\t\tlet prop = \"\";\n\n\t\tif ( port instanceof InputPort ){\n\t\t\tprop = \"inputs\";\n\t\t}\n\t\telse if( port instanceof OutputPort ){\n\t\t\tprop = \"outputs\";\n\t\t}\n\t\telse{\n\t\t\tthrow Error(\"Invalid Port Type\");\n\t\t}\n\n\t\tfor (const [idx, p] of node[prop].entries()) {\n\t\t  \tif(p.id === port.id){\n\t\t\t\tnode[prop].splice(idx, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn node;\n\t}\n\n\tpublic static delete_port_by_index(node: IGraphNode, type: string, port_index: number): IGraphNode{\n\t\tnode[type].splice(port_index, 1);\n\t\tnode.type = undefined;\n\t\treturn node;\n\t}\n\n\n\t//\n\t//\tAdds a given procedure line as child of active procedure \n\t//\tIf there is no active procedure, adds it to the node procedure\n\t//\n\tpublic static add_procedure(node: IGraphNode, procedure: IProcedure): IGraphNode{\n      \ttry{\n\t\t\tlet active_procedure: IProcedure = node.active_procedure;\n\n\t\t\t// TODO: Validate postioning of ElseIf / Else\n\t\t\t// ElseIf / Else can only be placed after an If / ElseIf\n\n\t\t\tif(active_procedure){\n\n\t\t\t\t//\n\t\t\t\t// If the active procedure is an If or ElseIf\n\t\t\t\t// and the next procedure being added is ElseIf / Else\n\t\t\t\t// the next procedure should be a sibling of the active procedure\n\t\t\t\t//\n\t\t\t\tlet if_else_conditional: boolean = (active_procedure.type == ProcedureTypes.IfControl || active_procedure.type == ProcedureTypes.ElseIfControl)\n\t\t\t\t\t\t&& (procedure.type == ProcedureTypes .ElseControl || procedure.type == ProcedureTypes.ElseIfControl);\n\n\t\t\t\t\n\t\t\t\t// Check if the if-else conditional is true or the active procedure can't have children\n\t\t\t\tif( if_else_conditional || !active_procedure.hasChildren ){\n\t\t\t       if(active_procedure.parent){\n\t\t\t           let parent: IProcedure = active_procedure.parent;\n\t\t\t           let position: number = ProcedureUtils.get_child_position(parent, active_procedure);\n\t\t\t           ProcedureUtils.add_child_at_position(parent, procedure, position+1);\n\t\t\t       }\n\t\t\t       else{\n\t\t\t       \t   let position: number = NodeUtils.get_child_position(node, active_procedure);\n\t\t\t           NodeUtils.add_procedure_at_position(node, procedure, position + 1);\n\t\t\t       }\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t    \tactive_procedure = ProcedureUtils.add_child(active_procedure, procedure);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tnode.procedure.push(procedure);\n\t\t\t}\n\n\t      \tnode.active_procedure = procedure;\n      \t}\n      \tcatch(ex){\n      \t\tconsole.log(`Error adding procedure type ${procedure.type} to node ${node.name}`);\n      \t}\n\n      \t// TODO: Lint the Node\n\n\t\treturn node;\n\t}\n\n\tpublic static add_procedure_at_position(node: IGraphNode, procedure: IProcedure, index: number): IGraphNode{\n\t\tnode.type = undefined;\n\t\tnode.procedure.splice(index, 0, procedure);\n\t\tprocedure.parent = undefined;\n\t\treturn node;\n\t}\n\n\tpublic static get_child_position(node: IGraphNode, procedure: IProcedure): number{\n\t\tlet index: number = 0;\n\t\tfor(const prod of node.procedure){\n\t\t\tif (prod.id === procedure.id){\n\t\t\t\treturn index;\n\t\t\t}\n\t\t\tindex++;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t//\n\t// Deletes the active procedure in a node\n\t//\n\tpublic static delete_procedure(node, prod_to_delete?: IProcedure): IGraphNode{\n\t\t\n\t\tif(!node.active_procedure && prod_to_delete == undefined){\n\t\t\tconsole.warn(\"Delete procedure called without active or procedure to delete\");\n\t\t\treturn;\n\t\t}\n\n\t\tif(prod_to_delete == undefined){\n\t\t\tprod_to_delete = node.active_procedure;\n\t\t}\n\n\t\tlet parent: IProcedure = prod_to_delete.parent;\n\n\t\tif(parent){\n\t\t\t// delete procedure from the oarent procedure\n\t\t\tlet position: number = ProcedureUtils.get_child_position(parent, prod_to_delete);\n\t\t\tparent = ProcedureUtils.delete_child(parent, prod_to_delete);\n\t\t\tif(position == 0){\n\t\t\t\tnode.active_procedure = parent;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tnode.active_procedure = parent.children[position];\n\t\t\t}\n\t\t\tconsole.log(`Successfully deleted procedure-child`);\n\t\t}\n\t\telse{\n\t\t\t// delete procedure from the node\n\n\t\t\tlet index:number = 0;\n\t\t\tfor (const prod of node.procedure){\n\t\t\t\tif (prod.id == node.active_procedure.id){\n\t\t\t\t\tnode.procedure.splice(index, 1);\n\t\t\t\t\tnode.active_procedure = index  0){\n\t\t\t\t\tvarList.push(var_name);\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\n\t\treturn varList;\n\t}\n\t\n\tpublic static execute_node(node: IGraphNode, code_generator: ICodeGenerator, modules: any, print: Function, globals?: any): void{\n\n\t\tconsole.log(`${node.name} is executing...`);\n\n\t\t// To store the files in window_scope\n\t\tlet window_params: string[] = [];\n\n\t\t// Params required for the node execution\n\t\tlet params: any[] = [];\n\n\t\t// Count of data being downloaded from file URLs\n\t\tlet live_data_downloads = 0;\n\n\t\tnode.inputs.map(function(i, index){ \n\n\t\t\tif(i.type == InputPortTypes.URL){\n\n\t\t\t\t///\n\t\t\t\t///\t If type of input-port is URL,\n\t\t\t\t///\t fetch data first\n\t\t\t\t///\n\n\t\t\t\tlive_data_downloads++;\n\t\t\t\tlet urlString: any = i.opts.url;\n\t\t\t\tfetch(urlString)\n\t\t\t\t.then((res) => res.text())\n\t\t\t\t.then((out) => {\n\n\t\t\t\t\ti.value = out;\n\t\t\t\t\ttry{\n\t\t\t\t\t\ti.value = JSON.parse(out);\n\t\t\t\t\t}\n\t\t\t\t\tcatch(ex){\n\t\t\t\t\t\tconsole.error(`Error fetching data from ${urlString}`)\n\t\t\t\t\t}\n\n\t\t\t\t\tlive_data_downloads--;\n\n\t\t\t\t\t// when last of all data has downloaded\n\t\t\t\t\tif(live_data_downloads == 0){\n\t\t\t\t\t\toutputProcessing();\n\t\t\t\t\t}\n\n\t\t\t\t})\n\t\t\t\t.catch(err => { alert(\"Oops...Error fetching data from URL.\"); throw err; });\n\t\t\t}\n\t\t\telse{\n\t\t\t\tparams[i.name] = i.value; \n\t\t\t}\n\n\t\t});\n\n\t\t// this code runs only after live_data_downloads = 0;\n\t    function outputProcessing(){\n\t\t\t// use code generator to execute code\n\t\t\tlet result: any  = code_generator.execute_node(node, params, modules, print, globals);\n\n\t\t\t// add results to self node\n\t\t\tfor( let n=0;  n \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OutputPort.html":{"url":"classes/OutputPort.html","title":"class - OutputPort","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  OutputPort\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/base-classes/port/OutputPort.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Port\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _computed\n                            \n                            \n                                    Private\n                                _connected\n                            \n                            \n                                    Private\n                                _default\n                            \n                            \n                                    Private\n                                _disabled\n                            \n                            \n                                _executionAddr\n                            \n                            \n                                    Public\n                                _hasComputed\n                            \n                            \n                                    Public\n                                _hasDefault\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _name\n                            \n                            \n                                    Protected\n                                _opts\n                            \n                            \n                                    Private\n                                _selected\n                            \n                            \n                                    Protected\n                                _type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disable\n                            \n                            \n                                enable\n                            \n                            \n                                getDefaultValue\n                            \n                            \n                                getValue\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isSelected\n                            \n                            \n                                reset\n                            \n                            \n                                    Private\n                                setComputedValue\n                            \n                            \n                                setDefaultValue\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type?: OutputPortTypes)\n                    \n                \n                        \n                            \n                                Defined in src/app/base-classes/port/OutputPort.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                    OutputPortTypes\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _computed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _computed:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _connected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _connected:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _default\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _default:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _disabled:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _executionAddr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _executionAddr:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:109\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _hasComputed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _hasComputed:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _hasDefault\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _hasDefault:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _opts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _opts:     \n\n                    \n                \n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _selected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selected:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _type:     InputPortTypes | OutputPortTypes\n\n                    \n                \n                    \n                        \n                            Type :     InputPortTypes | OutputPortTypes\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disable\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisable()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:181\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enable\n                            \n                            \n                        \n                    \n                \n                \n                    \nenable()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:185\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDefaultValue\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDefaultValue()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:153\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getValue\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetValue()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:110\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDisabled()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:177\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSelected()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:173\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:147\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setComputedValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setComputedValue(value: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:129\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setDefaultValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetDefaultValue(value: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:159\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(portData: IPort, type?: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Port\n\n                                \n                            \n                        \n                            \n                                    Defined in Port:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        portData\n                                                        \n                                                                    IPort\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Port} from \"./Port\";\nimport {OutputPortTypes} from \"./OutputPortTypes\";\n\nexport class OutputPort extends Port{\n\n\tconstructor(name: string, type?: OutputPortTypes){\n\n\t\tsuper(name);\n\n\t\tif(type !== undefined){\n\t\t\tthis._type = type;\n\t\t}\n\t\telse{\n\t\t\tthis._type = OutputPortTypes.Text;\n\t\t}\n\t}\n\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PanelComponent.html":{"url":"components/PanelComponent.html","title":"component - PanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui-components/layout/panel/panel.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-panel\n            \n\n            \n                styleUrls\n                panel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./panel.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _lsubscription\n                            \n                            \n                                active_node\n                            \n                            \n                                active_viewer\n                            \n                            \n                                container\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                maximize\n                            \n                            \n                                minimize\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                restore\n                            \n                            \n                                updateView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                panel_id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_fs: FlowchartService, layoutService: LayoutService, r: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui-components/layout/panel/panel.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _fs\n                                                  \n                                                        \n                                                                    FlowchartService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                    LayoutService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        r\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        panel_id\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui-components/layout/panel/panel.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maximize\n                            \n                            \n                        \n                    \n                \n                \n                    \nmaximize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/layout/panel/panel.component.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minimize\n                            \n                            \n                        \n                    \n                \n                \n                    \nminimize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/layout/panel/panel.component.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/layout/panel/panel.component.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/layout/panel/panel.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            restore\n                            \n                            \n                        \n                    \n                \n                \n                    \nrestore()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/layout/panel/panel.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateView\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateView()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/layout/panel/panel.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _lsubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _lsubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/layout/panel/panel.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active_node\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        active_node:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/ui-components/layout/panel/panel.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active_viewer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        active_viewer:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/layout/panel/panel.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        container:     ViewContainerRef\n\n                    \n                \n                    \n                        \n                            Type :     ViewContainerRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/layout/panel/panel.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/layout/panel/panel.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, Injector,\n         ViewChild, ViewContainerRef, \n         ComponentFactoryResolver} from '@angular/core';\n \nimport { FlowchartService } from '../../../global-services/flowchart.service';    \n\nimport { LayoutService } from '../../../global-services/layout.service';\nimport { Subscription } from 'rxjs/Subscription';\nimport { EViewer } from '../../viewers/EViewer';\n\n\n@Component({\n  selector: 'app-panel',\n  templateUrl: './panel.component.html',\n  styleUrls: ['./panel.component.scss']\n})\nexport class PanelComponent implements OnInit{\n\n  @ViewChild('container', {read: ViewContainerRef}) container: ViewContainerRef;\n  @Input() panel_id: string;\n\n  _lsubscription: Subscription;\n  active_viewer: string;\n\n  active_node;\n  subscriptions = [];\n\n  constructor(private _fs: FlowchartService, \n  \t\t\t      private layoutService: LayoutService, \n              private r: ComponentFactoryResolver) { \n   \n  }\n\n  ngOnInit(){\n    this.updateView();\n\n    this.subscriptions.push(this._fs.node$.subscribe( (node) => this.active_node = node ));\n    this.subscriptions.push(this.layoutService.getMessage().subscribe(message => { \n        this.updateView();\n    }));\n  }\n\n  ngOnDestroy(){\n    this.subscriptions.map(function(s){\n    \ts.unsubscribe()\n    })\n  }\n  \n\n  updateView(){ \n\t  \tlet layout = this.layoutService.getView(this.panel_id); \n\t    let pos = this.container.indexOf(layout.view);\n\n\t    if(this.active_viewer === layout.name){\n\n\t    }\n\t    else{\n\n\t      this.active_viewer = layout.name;\n\t      \n\t      if(pos === -1){\n\t        this.container.insert(layout.view);\n\t      }\n\t       \n\t      this.container.move(layout.view, 0)\n\n\t    }\n  }\n\n  // shifts component to main panel\n  maximize(): void{\n  \tthis.layoutService.maximize(this.panel_id);\n  }\n\n  // reduces size of component\n  minimize(): void{\n  \tthis.layoutService.minimize(this.panel_id);\n  }\n\n  // refreshes size of component\n  restore(): void{\n  \tthis.layoutService.restore(this.panel_id);\n  }\n\n}\n\n    \n\n    \n        \n\t\n\t\t\t{{active_viewer}} \n\t\t\t:: {{active_node?.name}} \n\t\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\taspect_ratio\n\t\t\t\n\t\t\n\t\n\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t{{active_viewer}} \t\t\t:: {{active_node?.name}} \t\t\t\t\t\t\t\t\t\t\t\taspect_ratio\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CesiumViewerComponent', 'selector': 'app-cesium-viewer'},{'name': 'CodeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ConsoleComponent', 'selector': 'app-console'},{'name': 'DataComponent', 'selector': 'app-data'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FileLoadDialogComponent', 'selector': 'file-load-dialog'},{'name': 'FlowchartControlsComponent', 'selector': 'app-flowchart-controls'},{'name': 'FlowchartViewerComponent', 'selector': 'app-flowchart-viewer'},{'name': 'GSViewerComponent', 'selector': 'gs-viewer'},{'name': 'GeometryViewerComponent', 'selector': 'app-geometry-viewer'},{'name': 'GraphEdgeComponent', 'selector': 'app-graph-edge'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HelpFundamentals', 'selector': 'app-help-fundamentals'},{'name': 'HelpModel', 'selector': 'app-help-model'},{'name': 'HelpViewerComponent', 'selector': 'app-help-viewer'},{'name': 'InfoViewerComponent', 'selector': 'app-info-viewer'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MobiusAbout', 'selector': 'app-help-about'},{'name': 'MobiusEditorComponent', 'selector': 'app-mobius-editor'},{'name': 'MobiusGalleryComponent', 'selector': 'mobius-gallery'},{'name': 'MobiusViewerComponent', 'selector': 'app-mobius-viewer'},{'name': 'MobiuscesiumComponent', 'selector': 'mobius-cesium'},{'name': 'ModuleViewerComponent', 'selector': 'app-module-viewer'},{'name': 'ModuleboxComponent', 'selector': 'app-modulebox'},{'name': 'NodeLibraryComponent', 'selector': 'app-node-library'},{'name': 'PanelComponent', 'selector': 'app-panel'},{'name': 'ParameterEditorComponent', 'selector': 'app-parameter-editor'},{'name': 'ParameterSettingsDialogComponent', 'selector': 'parameter-settings-dialog'},{'name': 'ParameterViewerComponent', 'selector': 'app-parameter-viewer'},{'name': 'ProcedureEditorComponent', 'selector': 'app-procedure-editor'},{'name': 'ProcedureItemComponent', 'selector': 'app-procedure-item'},{'name': 'PublishComponent', 'selector': 'app-publish'},{'name': 'PublishSettingsComponent', 'selector': 'app-publish-settings'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'TextViewerComponent', 'selector': 'app-text-viewer'},{'name': 'ToolwindowComponent', 'selector': 'app-toolwindow'},{'name': 'ViewerComponent', 'selector': 'app-viewer'},{'name': 'ViewerComponent', 'selector': 'cesium-viewer'},{'name': 'ViewerContainerComponent', 'selector': 'app-viewer-container'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ParameterEditorComponent.html":{"url":"components/ParameterEditorComponent.html","title":"component - ParameterEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ParameterEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui-components/editors/parameter-editor/parameter-editor.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-parameter-editor\n            \n\n            \n                styleUrls\n                parameter-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./parameter-editor.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                active_node\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Readonly\n                                inputPortOpts\n                            \n                            \n                                    Readonly\n                                outputPortOpts\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFunctionToProcedure\n                            \n                            \n                                delete_port\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openSettingsDialog\n                            \n                            \n                                portHasFunction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_fs: FlowchartService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui-components/editors/parameter-editor/parameter-editor.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _fs\n                                                  \n                                                        \n                                                                    FlowchartService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addFunctionToProcedure\n                            \n                            \n                        \n                    \n                \n                \n                    \naddFunctionToProcedure(inp: InputPort)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/parameter-editor/parameter-editor.component.ts:75\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        inp\n                                                        \n                                                                    InputPort\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete_port\n                            \n                            \n                        \n                    \n                \n                \n                    \ndelete_port(event: , port: InputPort | OutputPort)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/parameter-editor/parameter-editor.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        port\n                                                        \n                                                                    InputPort | OutputPort\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/parameter-editor/parameter-editor.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/parameter-editor/parameter-editor.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openSettingsDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenSettingsDialog(input: InputPort)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/parameter-editor/parameter-editor.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                        \n                                                                    InputPort\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            portHasFunction\n                            \n                            \n                        \n                    \n                \n                \n                    \nportHasFunction(port: InputPort)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/parameter-editor/parameter-editor.component.ts:86\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        port\n                                                        \n                                                                    InputPort\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            active_node\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        active_node:     IGraphNode\n\n                    \n                \n                    \n                        \n                            Type :     IGraphNode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/editors/parameter-editor/parameter-editor.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialog:     MatDialog\n\n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/editors/parameter-editor/parameter-editor.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            inputPortOpts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        inputPortOpts:     InputPortTypes[]\n\n                    \n                \n                    \n                        \n                            Type :     InputPortTypes[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n      InputPortTypes.Input,\n      InputPortTypes.Slider, \n      InputPortTypes.Checkbox,\n      InputPortTypes.FilePicker,\n      InputPortTypes.URL\n    ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/editors/parameter-editor/parameter-editor.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            outputPortOpts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        outputPortOpts:     OutputPortTypes[]\n\n                    \n                \n                    \n                        \n                            Type :     OutputPortTypes[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n      OutputPortTypes.Text, \n      OutputPortTypes.Code, \n      OutputPortTypes.Console, \n      OutputPortTypes.Cesium\n      // OutputPortTypes.Three, \n    ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/editors/parameter-editor/parameter-editor.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/editors/parameter-editor/parameter-editor.component.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Injector, Inject } from '@angular/core';\n\nimport { IGraphNode } from '../../../base-classes/node/NodeModule';\nimport { NodeUtils } from '../../../base-classes/node/NodeUtils';\n\nimport { InputPort, OutputPort, InputPortTypes, OutputPortTypes } from '../../../base-classes/port/PortModule';\n\nimport { FlowchartService } from '../../../global-services/flowchart.service';\n\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport {ParameterSettingsDialogComponent} from './parameter-settings-dialog.component';\nimport {IProcedure, ProcedureFactory, ProcedureTypes} from '../../../base-classes/procedure/ProcedureModule';\n\n@Component({\n  selector: 'app-parameter-editor',\n  templateUrl: './parameter-editor.component.html',\n  styleUrls: ['./parameter-editor.component.scss']\n})\nexport class ParameterEditorComponent{\n\n    readonly inputPortOpts: InputPortTypes[] = [\n      InputPortTypes.Input,\n      InputPortTypes.Slider, \n      InputPortTypes.Checkbox,\n      InputPortTypes.FilePicker,\n      InputPortTypes.URL\n    ]; \n\n    readonly outputPortOpts: OutputPortTypes[] = [\n      OutputPortTypes.Text, \n      OutputPortTypes.Code, \n      OutputPortTypes.Console, \n      OutputPortTypes.Cesium\n      // OutputPortTypes.Three, \n    ]; \n\n    private subscriptions = [];\n    private active_node: IGraphNode;\n\n    constructor(private _fs: FlowchartService, public dialog: MatDialog){}\n\n    ngOnInit(){\n      this.subscriptions.push(this._fs.node$.subscribe( (node) => this.active_node = node ));\n    }\n\n    ngOnDestroy(){\n      this.subscriptions.map(function(s){\n        s.unsubscribe();\n      })\n    }\n\n    /// other functions\n    delete_port(event, port: InputPort|OutputPort): void{\n      event.stopPropagation();\n      NodeUtils.delete_port(this.active_node, port);\n    } \n\n    /// setting dialog\n    openSettingsDialog(input: InputPort): void{\n        let dialogRef = this.dialog.open(ParameterSettingsDialogComponent, {\n            height: '400px',\n            width: '600px',          \n            data: { \n                    inputPortTypes: this.inputPortOpts,\n                    input: input\n                  }\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('The dialog was closed');\n        });\n    }\n\n    // higher order functions\n    addFunctionToProcedure(inp: InputPort): void{\n\n      // get functional graph node\n      let value = inp.getValue().port;\n\n      if(value){\n          let prod: IProcedure = ProcedureFactory.getProcedure(ProcedureTypes.Function, {node: this.active_node, port: inp});\n          NodeUtils.add_procedure(this.active_node, prod);\n      }\n    }\n\n    portHasFunction(port: InputPort): boolean{\n      let value = port.getValue();\n      if(value && value.port !== undefined && value.port.length == 2){\n        return true;\n      }\n      else{\n        return false;\n      }\n    }\n\n\n}\n\n\n\n    \n\n    \n        \n\n\t\n\t\t\n\t\t\n\t\tNo node selected\n\n\t\t\n\t\t\n\t\t\t\n\t\t\t\n\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t  Inputs ({{ active_node.inputs.length }})\n\t\t\t\t\t\t\n\t\t\t\t\t\n\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tType-->\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t         \t    \n\t\t\t\t\t\t         \t    \t{{x}}\n\t\t\t\t\t\t         \t    \n\t\t\t\t\t\t            \n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\n\t\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tsettings\n\t\t\t\t\t\t\t\n\t\t\t\t\t        \n\t\t\t\t\t    \t\tdelete\n    \t\t\t\t\t    \n\t\t\t\t\t\t\n\n\t\t\t\t\t\n\n\t\t\t\t\n\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t  Outputs ({{ active_node.outputs.length }})\n\t\t\t\t\t\t\n\t\t\t\t\t\n\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t         \t    \n\t\t\t\t\t\t         \t    \t{{ x | port_type_name }}\n\t\t\t\t\t\t         \t    \n\t\t\t\t\t\t            \n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t        \n\t\t\t\t\t\t    \t\tdelete\n\t    \t\t\t\t\t    \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\n\t\t\t\n\n\t\t\n\n\t\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\t\tNo node selected\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  Inputs ({{ active_node.inputs.length }})\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tType-->\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t         \t    \t\t\t\t\t\t         \t    \t{{x}}\t\t\t\t\t\t         \t    \t\t\t\t\t\t            \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsettings\t\t\t\t\t\t\t\t\t\t\t\t        \t\t\t\t\t    \t\tdelete    \t\t\t\t\t    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  Outputs ({{ active_node.outputs.length }})\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t         \t    \t\t\t\t\t\t         \t    \t{{ x | port_type_name }}\t\t\t\t\t\t         \t    \t\t\t\t\t\t            \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t        \t\t\t\t\t\t    \t\tdelete\t    \t\t\t\t\t    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CesiumViewerComponent', 'selector': 'app-cesium-viewer'},{'name': 'CodeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ConsoleComponent', 'selector': 'app-console'},{'name': 'DataComponent', 'selector': 'app-data'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FileLoadDialogComponent', 'selector': 'file-load-dialog'},{'name': 'FlowchartControlsComponent', 'selector': 'app-flowchart-controls'},{'name': 'FlowchartViewerComponent', 'selector': 'app-flowchart-viewer'},{'name': 'GSViewerComponent', 'selector': 'gs-viewer'},{'name': 'GeometryViewerComponent', 'selector': 'app-geometry-viewer'},{'name': 'GraphEdgeComponent', 'selector': 'app-graph-edge'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HelpFundamentals', 'selector': 'app-help-fundamentals'},{'name': 'HelpModel', 'selector': 'app-help-model'},{'name': 'HelpViewerComponent', 'selector': 'app-help-viewer'},{'name': 'InfoViewerComponent', 'selector': 'app-info-viewer'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MobiusAbout', 'selector': 'app-help-about'},{'name': 'MobiusEditorComponent', 'selector': 'app-mobius-editor'},{'name': 'MobiusGalleryComponent', 'selector': 'mobius-gallery'},{'name': 'MobiusViewerComponent', 'selector': 'app-mobius-viewer'},{'name': 'MobiuscesiumComponent', 'selector': 'mobius-cesium'},{'name': 'ModuleViewerComponent', 'selector': 'app-module-viewer'},{'name': 'ModuleboxComponent', 'selector': 'app-modulebox'},{'name': 'NodeLibraryComponent', 'selector': 'app-node-library'},{'name': 'PanelComponent', 'selector': 'app-panel'},{'name': 'ParameterEditorComponent', 'selector': 'app-parameter-editor'},{'name': 'ParameterSettingsDialogComponent', 'selector': 'parameter-settings-dialog'},{'name': 'ParameterViewerComponent', 'selector': 'app-parameter-viewer'},{'name': 'ProcedureEditorComponent', 'selector': 'app-procedure-editor'},{'name': 'ProcedureItemComponent', 'selector': 'app-procedure-item'},{'name': 'PublishComponent', 'selector': 'app-publish'},{'name': 'PublishSettingsComponent', 'selector': 'app-publish-settings'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'TextViewerComponent', 'selector': 'app-text-viewer'},{'name': 'ToolwindowComponent', 'selector': 'app-toolwindow'},{'name': 'ViewerComponent', 'selector': 'app-viewer'},{'name': 'ViewerComponent', 'selector': 'cesium-viewer'},{'name': 'ViewerContainerComponent', 'selector': 'app-viewer-container'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ParameterEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ParameterSettingsDialogComponent.html":{"url":"components/ParameterSettingsDialogComponent.html","title":"component - ParameterSettingsDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ParameterSettingsDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui-components/editors/parameter-editor/parameter-settings-dialog.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                parameter-settings-dialog\n            \n\n\n\n\n            \n                templateUrl\n                parameter-settings-dialog.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                input\n                            \n                            \n                                inputPortTypes\n                            \n                            \n                                opts\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                default\n                            \n                            \n                                getDataFromURL\n                            \n                            \n                                handleFileInput\n                            \n                            \n                                onNoClick\n                            \n                            \n                                updateDefaultValue\n                            \n                            \n                                updateSliderOpts\n                            \n                            \n                                updateURL\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: any, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui-components/editors/parameter-editor/parameter-settings-dialog.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \nclear($event: , input: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/parameter-editor/parameter-settings-dialog.component.ts:103\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        input\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            default\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefault(input: InputPort)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/parameter-editor/parameter-settings-dialog.component.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                        \n                                                                    InputPort\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDataFromURL\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDataFromURL($event: , input: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/parameter-editor/parameter-settings-dialog.component.ts:111\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        input\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleFileInput\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleFileInput(fileList: , input: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/parameter-editor/parameter-settings-dialog.component.ts:86\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileList\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        input\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onNoClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonNoClick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/parameter-editor/parameter-settings-dialog.component.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateDefaultValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateDefaultValue($event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/parameter-editor/parameter-settings-dialog.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSliderOpts\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateSliderOpts($event: , prop: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/parameter-editor/parameter-settings-dialog.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        prop\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateURL\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateURL($event: , input: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/parameter-editor/parameter-settings-dialog.component.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        input\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/editors/parameter-editor/parameter-settings-dialog.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/editors/parameter-editor/parameter-settings-dialog.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        input:     InputPort\n\n                    \n                \n                    \n                        \n                            Type :     InputPort\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/editors/parameter-editor/parameter-settings-dialog.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inputPortTypes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        inputPortTypes:     \n\n                    \n                \n                    \n                        \n                            Default value : InputPortTypes\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/editors/parameter-editor/parameter-settings-dialog.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            opts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        opts:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/ui-components/editors/parameter-editor/parameter-settings-dialog.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     InputPortTypes\n\n                    \n                \n                    \n                        \n                            Type :     InputPortTypes\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/editors/parameter-editor/parameter-settings-dialog.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Injector, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { InputPort, InputPortTypes } from '../../../base-classes/port/PortModule';\nimport { HttpClient  } from '@angular/common/http';\n\n//\n// Component for Parameter Settings\n//\n@Component({\n  selector: 'parameter-settings-dialog',\n  templateUrl: 'parameter-settings-dialog.html',\n})\nexport class ParameterSettingsDialogComponent {\n\n  type: InputPortTypes; \n  input: InputPort;\n  inputPortTypes = InputPortTypes;\n  opts;\n\n  constructor(\n    \n    public dialogRef: MatDialogRef, \n        @Inject(MAT_DIALOG_DATA) public data: any, private http: HttpClient) { \n  \t\t\tthis.type = data.input.type;\n  \t\t\tthis.input = data.input;\n  \t}\n\n  \tupdateDefaultValue($event): void{\n\t  \tlet value: string = $event.srcElement.value;\n  \t\tif(value.trim().length > 0){\n\n  \t\t\tif(this.type == InputPortTypes.Slider){\n  \t\t\t\tif (isNaN(parseInt(value))){\n  \t\t\t\t\talert(\"Slider values can only be numbers\");\n  \t\t\t\t  return;\n          }\n  \t\t\t}\n\n  \t\t\tthis.input.setDefaultValue(value);\n\n  \t\t}\n  \t\telse{\n  \t\t\tthis.input.setDefaultValue(undefined);\n  \t\t}\n  \t}\n\n  \tupdateSliderOpts($event, prop: string): void{\n  \t\tlet value: string = $event.srcElement.value;\n  \t\tif(value.trim().length > 0){\n\n  \t\t\tif(isNaN(parseInt(value))){\n  \t\t\t\talert(\"Slider values can only be numbers\");\n  \t\t\t\treturn;\n  \t\t\t}\n  \t\t\telse{\n  \t\t\t\tthis.opts[prop] = value;\n  \t\t\t}\n  \t\t}\n  \t\telse{\n  \t\t\tthis.opts[prop] = 0;\n  \t\t}\n  \t\t\n  \t\tthis.input.opts = this.opts;\n  \t}\n\n  \tdefault(input: InputPort){\n  \t\treturn input.getDefaultValue();\n  \t}\n\n    onNoClick(): void {\n      this.dialogRef.close();\n    }\n    \n    updateURL($event, input){\n      let value;\n      if($event.srcElement){\n        value = $event.srcElement.value;\n        value = value.trim();\n        if(value.length != 0){\n          input.setOpts({url: value});\n        }\n      }\n    }\n\n\n    handleFileInput(fileList, input){\n      let file: File = fileList[0];\n      var reader = new FileReader();\n      reader.onload = (function(reader)\n      {\n          return function()\n          {\n              var contents = reader.result;\n              /*var lines = contents.split('\\n');\n              contents = lines.join(\"\\\\\\n\");*/\n              input.setDefaultValue(contents);\n          }\n      })(reader);\n\n      reader.readAsText(file);\n    }\n\n    clear($event, input){\n      input.setDefaultValue(undefined);\n    }\n\n\n    //\n    // Web URL\n    // \n    getDataFromURL($event, input){\n\n      let urlString: any = input.getOpts().url;\n\n      this.http.get(urlString)\n        .subscribe(data => {\n             console.log(data);\n             input.setDefaultValue(JSON.stringify(data))\n        }\n      );\n\n    }\n\n}\n    \n\n    \n        Input Name: {{input.name}}\nInput Type: {{input.type}}\n\n\n\t\n\t  \n\t  \n      \n\t\n\n\n\n\n\n\n\n\t\n\t  \n\t    \n\t\t\n\t  \n\t\n\n\n\n\t\n\t\t\n\t\t\n\t\t\n\t\t\tDefault File: \n\t\t\tFile Loaded\n\t\t\n\t\n\n\n\n\tURL:\n\t\n\n\n\n\t\n\t\t\n\t\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Input Name: {{input.name}}Input Type: {{input.type}}\t\t  \t        \t\t\t  \t    \t\t\t  \t\t\t\t\t\t\t\t\t\t\tDefault File: \t\t\tFile Loaded\t\t\t\tURL:\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CesiumViewerComponent', 'selector': 'app-cesium-viewer'},{'name': 'CodeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ConsoleComponent', 'selector': 'app-console'},{'name': 'DataComponent', 'selector': 'app-data'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FileLoadDialogComponent', 'selector': 'file-load-dialog'},{'name': 'FlowchartControlsComponent', 'selector': 'app-flowchart-controls'},{'name': 'FlowchartViewerComponent', 'selector': 'app-flowchart-viewer'},{'name': 'GSViewerComponent', 'selector': 'gs-viewer'},{'name': 'GeometryViewerComponent', 'selector': 'app-geometry-viewer'},{'name': 'GraphEdgeComponent', 'selector': 'app-graph-edge'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HelpFundamentals', 'selector': 'app-help-fundamentals'},{'name': 'HelpModel', 'selector': 'app-help-model'},{'name': 'HelpViewerComponent', 'selector': 'app-help-viewer'},{'name': 'InfoViewerComponent', 'selector': 'app-info-viewer'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MobiusAbout', 'selector': 'app-help-about'},{'name': 'MobiusEditorComponent', 'selector': 'app-mobius-editor'},{'name': 'MobiusGalleryComponent', 'selector': 'mobius-gallery'},{'name': 'MobiusViewerComponent', 'selector': 'app-mobius-viewer'},{'name': 'MobiuscesiumComponent', 'selector': 'mobius-cesium'},{'name': 'ModuleViewerComponent', 'selector': 'app-module-viewer'},{'name': 'ModuleboxComponent', 'selector': 'app-modulebox'},{'name': 'NodeLibraryComponent', 'selector': 'app-node-library'},{'name': 'PanelComponent', 'selector': 'app-panel'},{'name': 'ParameterEditorComponent', 'selector': 'app-parameter-editor'},{'name': 'ParameterSettingsDialogComponent', 'selector': 'parameter-settings-dialog'},{'name': 'ParameterViewerComponent', 'selector': 'app-parameter-viewer'},{'name': 'ProcedureEditorComponent', 'selector': 'app-procedure-editor'},{'name': 'ProcedureItemComponent', 'selector': 'app-procedure-item'},{'name': 'PublishComponent', 'selector': 'app-publish'},{'name': 'PublishSettingsComponent', 'selector': 'app-publish-settings'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'TextViewerComponent', 'selector': 'app-text-viewer'},{'name': 'ToolwindowComponent', 'selector': 'app-toolwindow'},{'name': 'ViewerComponent', 'selector': 'app-viewer'},{'name': 'ViewerComponent', 'selector': 'cesium-viewer'},{'name': 'ViewerContainerComponent', 'selector': 'app-viewer-container'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ParameterSettingsDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ParameterViewerComponent.html":{"url":"components/ParameterViewerComponent.html","title":"component - ParameterViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ParameterViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui-components/viewers/parameter-viewer/parameter-viewer.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-parameter-viewer\n            \n\n            \n                styleUrls\n                parameter-viewer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./parameter-viewer.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _editable\n                            \n                            \n                                    Private\n                                active_node\n                            \n                            \n                                el\n                            \n                            \n                                InputPortTypes\n                            \n                            \n                                processing\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                executeFlowchart\n                            \n                            \n                                handleFileInput\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                globals\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_fs: FlowchartService, _ms: MobiusService, _ex: ExecuteService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui-components/viewers/parameter-viewer/parameter-viewer.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _fs\n                                                  \n                                                        \n                                                                    FlowchartService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _ms\n                                                  \n                                                        \n                                                                    MobiusService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _ex\n                                                  \n                                                        \n                                                                    ExecuteService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        globals\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui-components/viewers/parameter-viewer/parameter-viewer.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            executeFlowchart\n                            \n                            \n                        \n                    \n                \n                \n                    \nexecuteFlowchart($event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/viewers/parameter-viewer/parameter-viewer.component.ts:106\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleFileInput\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleFileInput($event: , input: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/viewers/parameter-viewer/parameter-viewer.component.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        input\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/viewers/parameter-viewer/parameter-viewer.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/viewers/parameter-viewer/parameter-viewer.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateURL\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateURL($event: , input: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/viewers/parameter-viewer/parameter-viewer.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        input\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _editable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _editable:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/ui-components/viewers/parameter-viewer/parameter-viewer.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            active_node\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        active_node:     IGraphNode\n\n                    \n                \n                    \n                        \n                            Type :     IGraphNode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/viewers/parameter-viewer/parameter-viewer.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            el\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        el:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/viewers/parameter-viewer/parameter-viewer.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            InputPortTypes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        InputPortTypes:     \n\n                    \n                \n                    \n                        \n                            Default value : InputPortTypes\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/viewers/parameter-viewer/parameter-viewer.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processing\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        processing:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {value: false}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/viewers/parameter-viewer/parameter-viewer.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/viewers/parameter-viewer/parameter-viewer.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Injector, ElementRef, ViewChild, Input } from '@angular/core';\nimport { HttpClient  } from '@angular/common/http';\n\nimport { IGraphNode } from '../../../base-classes/node/NodeModule';\nimport { InputPort, InputPortTypes } from '../../../base-classes/port/PortModule';\n\nimport { MobiusService } from '../../../global-services/mobius.service';\nimport { FlowchartService } from '../../../global-services/flowchart.service';\nimport { ExecuteService } from '../../../global-services/execute.service';\n\n@Component({\n  selector: 'app-parameter-viewer',\n  templateUrl: './parameter-viewer.component.html',\n  styleUrls: ['./parameter-viewer.component.scss']\n})\nexport class ParameterViewerComponent{\n    \n    @Input() globals: boolean;\n    @ViewChild('cesium_param_container') el:ElementRef;\n\n    private subscriptions = [];\n    private active_node: IGraphNode;\n    _editable;\n    InputPortTypes = InputPortTypes;\n\n    constructor(private _fs: FlowchartService, \n                private _ms: MobiusService, \n                private _ex: ExecuteService,\n                private http: HttpClient){}\n\n    ngOnInit(){\n      this.subscriptions.push(this._fs.node$.subscribe( (node) => {\n        this.active_node = node;\n      }));\n    }\n\n    ngOnDestroy(){\n      this.subscriptions.map(function(s){\n        s.unsubscribe();\n      })\n    }\n\n\n    // todo: refactor and remove\n    updateURL($event, input){\n      let value;\n      if($event.srcElement){\n        value = $event.srcElement.value;\n        value = value.trim();\n        if(value.length != 0){\n          input.setOpts({url: value});\n        }\n      }\n    }\n\n    //\n    processing = {value: false};\n    handleFileInput($event, input){\n\n      let fileList = $event.target.files;\n      let file: File = fileList[0];\n      let size = Math.round(file.size/10**6);\n\n      let run_file = true;\n      if(size > 300){\n        run_file = confirm(`The file you are trying to load is ${size}MB and might cause unexpected crashes. Do you want to continue?`);\n      }\n\n      if(run_file){\n        var reader = new FileReader();\n        let fs = this._fs;\n        let ms = this._ms;\n        ms.processing = true;\n        reader.onload = (function(reader)\n        {\n            return function()\n            {\n                let contents = reader.result;\n\n                try{\n                  contents = JSON.parse(contents);//Function('use strict; return ' + value);\n                }\n                catch(ex){\n                  console.error(\"Not JSON\");\n                  // do nothing\n                }\n\n                //fs.freeze = false;\n                input.setComputedValue(contents);\n                ms.processing = false;\n            }\n        })(reader);\n\n        //fs.freeze = true;\n        reader.readAsText(file);\n      }\n      else{\n        // reset\n        //$event.target.files = [];\n        $event.target.value = '';\n      }\n    \n    }\n\n\n    executeFlowchart($event): void{\n\n        $event.stopPropagation();\n\n        this._ms.processing = true;\n\n        let ex = this._ex;\n        setTimeout(function(){\n          ex.execute();\n        }, 400)\n\n    }\n\n}\n\n    \n\n    \n        \n\n\t\n\n\t\t\n\t\t\tNo node selected \n\t\t\n \n \t\t\n\t\t\n\t\t\t{{flowchartService.flowchart.name | simplename }}\n\t\t\t\n\t\t\tParameters\n\t\t\n\n\t\t\n\t\t\n\t\t\t\n\t\t\t\n\n\t\t\t\t\n\n\t\t\t\t\t{{ inp.name }}\n\n\t\t\t\t\t\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t            \t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t \n\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t            \t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t 200\">\n\t\t\t\t\t\t\t\t{{inp.opts.min}}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t{{inp.opts.max}}\n\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t(has default)\n\t\t\t\t\t\t\t(file loaded)\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t(has data)\n\t\t\t\t\t\t\n\t\t\t \n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\n\t\t\t\n\t\t\n\t\t\n\n\t\t\n\t\t\n\t\t\tExecute Flowchart\n\t\t \t\n\t\n\t\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\tNo node selected \t\t  \t\t\t\t\t\t\t{{flowchartService.flowchart.name | simplename }}\t\t\t\t\t\tParameters\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ inp.name }}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t 200\">\t\t\t\t\t\t\t\t{{inp.opts.min}}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{inp.opts.max}}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(has default)\t\t\t\t\t\t\t(file loaded)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(has data)\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tExecute Flowchart\t\t \t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CesiumViewerComponent', 'selector': 'app-cesium-viewer'},{'name': 'CodeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ConsoleComponent', 'selector': 'app-console'},{'name': 'DataComponent', 'selector': 'app-data'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FileLoadDialogComponent', 'selector': 'file-load-dialog'},{'name': 'FlowchartControlsComponent', 'selector': 'app-flowchart-controls'},{'name': 'FlowchartViewerComponent', 'selector': 'app-flowchart-viewer'},{'name': 'GSViewerComponent', 'selector': 'gs-viewer'},{'name': 'GeometryViewerComponent', 'selector': 'app-geometry-viewer'},{'name': 'GraphEdgeComponent', 'selector': 'app-graph-edge'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HelpFundamentals', 'selector': 'app-help-fundamentals'},{'name': 'HelpModel', 'selector': 'app-help-model'},{'name': 'HelpViewerComponent', 'selector': 'app-help-viewer'},{'name': 'InfoViewerComponent', 'selector': 'app-info-viewer'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MobiusAbout', 'selector': 'app-help-about'},{'name': 'MobiusEditorComponent', 'selector': 'app-mobius-editor'},{'name': 'MobiusGalleryComponent', 'selector': 'mobius-gallery'},{'name': 'MobiusViewerComponent', 'selector': 'app-mobius-viewer'},{'name': 'MobiuscesiumComponent', 'selector': 'mobius-cesium'},{'name': 'ModuleViewerComponent', 'selector': 'app-module-viewer'},{'name': 'ModuleboxComponent', 'selector': 'app-modulebox'},{'name': 'NodeLibraryComponent', 'selector': 'app-node-library'},{'name': 'PanelComponent', 'selector': 'app-panel'},{'name': 'ParameterEditorComponent', 'selector': 'app-parameter-editor'},{'name': 'ParameterSettingsDialogComponent', 'selector': 'parameter-settings-dialog'},{'name': 'ParameterViewerComponent', 'selector': 'app-parameter-viewer'},{'name': 'ProcedureEditorComponent', 'selector': 'app-procedure-editor'},{'name': 'ProcedureItemComponent', 'selector': 'app-procedure-item'},{'name': 'PublishComponent', 'selector': 'app-publish'},{'name': 'PublishSettingsComponent', 'selector': 'app-publish-settings'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'TextViewerComponent', 'selector': 'app-text-viewer'},{'name': 'ToolwindowComponent', 'selector': 'app-toolwindow'},{'name': 'ViewerComponent', 'selector': 'app-viewer'},{'name': 'ViewerComponent', 'selector': 'cesium-viewer'},{'name': 'ViewerContainerComponent', 'selector': 'app-viewer-container'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ParameterViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Point.html":{"url":"classes/Point.html","title":"class - Point","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Point\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/geometry-modules/gis_module.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Module } from './Module';\nimport * as THREE from 'three'\n\n//\n//\t\tMobius Classes\n//\n\nclass Point {\n}\n\nclass Polyline {\n    isPlanar():boolean {\n        return true;\n    }\n}\n\nclass Polygon {\n    isPlanar():boolean {\n        return false;\n    }\n}\n\nclass Frame{\n\txAxis: number[];\n\tyAxis: number[];\n}\n\ninterface HasIsPlanar{\n    isPlanar(): boolean;\n}\n\n\nexport class gis_module extends Module{\n\t\n\tpublic srf : any;\n\tpublic sld : any;\n\n\tconstructor(){\n\t\t// name of module, author of module\n\t\tsuper(\"gis\", \"akm\");\n\t}\n\t\n\tgetPoint(): Point{\n\t\tlet pnt: Point = new Point();\n\t\treturn pnt;\n\t}\n\n\tgetPlane(): Polyline{\n\t\tlet pln: Polyline = new Polyline();\n\t\treturn pln;\n\t}\n\n\tisPlanar(entity:T):boolean {\n   \t\treturn entity.isPlanar();\n\t}\n\n\tbyXYPoints(): Frame{\n\t\treturn new Frame();\n\t}\n\n\tmakeCube(size: number): any{\n\t\treturn new THREE.Mesh(new THREE.BoxGeometry(size, size, size));\n\t}\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Polygon.html":{"url":"classes/Polygon.html","title":"class - Polygon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Polygon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/geometry-modules/gis_module.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isPlanar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isPlanar\n                            \n                            \n                        \n                    \n                \n                \n                    \nisPlanar()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/geometry-modules/gis_module.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Module } from './Module';\nimport * as THREE from 'three'\n\n//\n//\t\tMobius Classes\n//\n\nclass Point {\n}\n\nclass Polyline {\n    isPlanar():boolean {\n        return true;\n    }\n}\n\nclass Polygon {\n    isPlanar():boolean {\n        return false;\n    }\n}\n\nclass Frame{\n\txAxis: number[];\n\tyAxis: number[];\n}\n\ninterface HasIsPlanar{\n    isPlanar(): boolean;\n}\n\n\nexport class gis_module extends Module{\n\t\n\tpublic srf : any;\n\tpublic sld : any;\n\n\tconstructor(){\n\t\t// name of module, author of module\n\t\tsuper(\"gis\", \"akm\");\n\t}\n\t\n\tgetPoint(): Point{\n\t\tlet pnt: Point = new Point();\n\t\treturn pnt;\n\t}\n\n\tgetPlane(): Polyline{\n\t\tlet pln: Polyline = new Polyline();\n\t\treturn pln;\n\t}\n\n\tisPlanar(entity:T):boolean {\n   \t\treturn entity.isPlanar();\n\t}\n\n\tbyXYPoints(): Frame{\n\t\treturn new Frame();\n\t}\n\n\tmakeCube(size: number): any{\n\t\treturn new THREE.Mesh(new THREE.BoxGeometry(size, size, size));\n\t}\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Polyline.html":{"url":"classes/Polyline.html","title":"class - Polyline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Polyline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/geometry-modules/gis_module.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isPlanar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isPlanar\n                            \n                            \n                        \n                    \n                \n                \n                    \nisPlanar()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/geometry-modules/gis_module.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Module } from './Module';\nimport * as THREE from 'three'\n\n//\n//\t\tMobius Classes\n//\n\nclass Point {\n}\n\nclass Polyline {\n    isPlanar():boolean {\n        return true;\n    }\n}\n\nclass Polygon {\n    isPlanar():boolean {\n        return false;\n    }\n}\n\nclass Frame{\n\txAxis: number[];\n\tyAxis: number[];\n}\n\ninterface HasIsPlanar{\n    isPlanar(): boolean;\n}\n\n\nexport class gis_module extends Module{\n\t\n\tpublic srf : any;\n\tpublic sld : any;\n\n\tconstructor(){\n\t\t// name of module, author of module\n\t\tsuper(\"gis\", \"akm\");\n\t}\n\t\n\tgetPoint(): Point{\n\t\tlet pnt: Point = new Point();\n\t\treturn pnt;\n\t}\n\n\tgetPlane(): Polyline{\n\t\tlet pln: Polyline = new Polyline();\n\t\treturn pln;\n\t}\n\n\tisPlanar(entity:T):boolean {\n   \t\treturn entity.isPlanar();\n\t}\n\n\tbyXYPoints(): Frame{\n\t\treturn new Frame();\n\t}\n\n\tmakeCube(size: number): any{\n\t\treturn new THREE.Mesh(new THREE.BoxGeometry(size, size, size));\n\t}\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PortTypePipe.html":{"url":"pipes/PortTypePipe.html","title":"pipe - PortTypePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  PortTypePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/port-type-name.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        port_type_name\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getInputTypeName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getInputTypeName(type: InputPortTypes)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/port-type-name.pipe.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    InputPortTypes\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getOutputTypeName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getOutputTypeName(type: OutputPortTypes)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/port-type-name.pipe.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    OutputPortTypes\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(type: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/port-type-name.pipe.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { InputPort, OutputPort, InputPortTypes, OutputPortTypes } from '../base-classes/port/PortModule';\n\n@Pipe({name: 'port_type_name'})\nexport class PortTypePipe implements PipeTransform {\n  transform(type: any): string {\n\n    if (type in InputPortTypes){\n      return this.getInputTypeName(type);\n    }\n    else if(type in OutputPortTypes){\n      return this.getOutputTypeName(type);\n    }\n    else\n      return \"\";\n  }\n\n  private getInputTypeName(type: InputPortTypes): string{\n      let str_rep = undefined;\n      alert(type);\n      switch(type){\n        case InputPortTypes.ColorPicker:\n          str_rep = \"Color\"\n          break;\n        case InputPortTypes.Dropdown:\n          str_rep = \"Dropdown\"\n          break;\n        case InputPortTypes.Input:\n          str_rep = \"SimpleInput\"\n          break;\n        case InputPortTypes.FilePicker:\n          str_rep = \"Load_File\"\n          break;\n        case InputPortTypes.Slider:\n          str_rep = \"Slider\"\n          break;\n        case InputPortTypes.URL:\n          str_rep = \"URL\"\n          break;\n        case InputPortTypes.Checkbox:\n          str_rep = \"Checkbox\"\n          break;\n        default:\n          str_rep = \"Not Identifiable\"\n      }\n\n      return str_rep;\n  }\n\n  private getOutputTypeName(type: OutputPortTypes): string{\n      if(type == OutputPortTypes.Three){\n        return \"Geometry\";\n      }\n      else if(type == OutputPortTypes.Text){\n        return \"Text Viewer\";\n      }\n      else if(type == OutputPortTypes.Code){\n        return \"Code Viewer\";\n      }\n      else if(type == OutputPortTypes.Console){\n        return \"Console\";\n      }\n      else if(type == OutputPortTypes.Cesium){\n        return \"Cesium\";\n      }\n      else{\n        return \"Not Identifiable\"\n      }\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Procedure.html":{"url":"classes/Procedure.html","title":"class - Procedure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Procedure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/base-classes/procedure/Procedure.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        IProcedure\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _children\n                            \n                            \n                                    Private\n                                _disabled\n                            \n                            \n                                    Private\n                                _error\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Protected\n                                _leftComponent\n                            \n                            \n                                    Private\n                                _level\n                            \n                            \n                                    Private\n                                _parent\n                            \n                            \n                                    Private\n                                _printToConsole\n                            \n                            \n                                    Protected\n                                _rightComponent\n                            \n                            \n                                    Private\n                                _selected\n                            \n                            \n                                    Private\n                                _type\n                            \n                            \n                                    Public\n                                hasChildren\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCodeString\n                            \n                            \n                                hasParent\n                            \n                            \n                                reset\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: ProcedureTypes, hasChildren: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/base-classes/procedure/Procedure.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                    ProcedureTypes\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        hasChildren\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _children\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _children:     IProcedure[]\n\n                    \n                \n                    \n                        \n                            Type :     IProcedure[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/base-classes/procedure/Procedure.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _disabled:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/base-classes/procedure/Procedure.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _error:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/base-classes/procedure/Procedure.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/base-classes/procedure/Procedure.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _leftComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _leftComponent:     IComponent\n\n                    \n                \n                    \n                        \n                            Type :     IComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/base-classes/procedure/Procedure.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _level\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _level:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/base-classes/procedure/Procedure.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _parent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _parent:     IProcedure\n\n                    \n                \n                    \n                        \n                            Type :     IProcedure\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/base-classes/procedure/Procedure.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _printToConsole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _printToConsole:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/base-classes/procedure/Procedure.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _rightComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _rightComponent:     IComponent\n\n                    \n                \n                    \n                        \n                            Type :     IComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/base-classes/procedure/Procedure.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _selected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selected:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/base-classes/procedure/Procedure.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _type:     ProcedureTypes\n\n                    \n                \n                    \n                        \n                            Type :     ProcedureTypes\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/base-classes/procedure/Procedure.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasChildren\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasChildren:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/base-classes/procedure/Procedure.ts:23\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCodeString\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCodeString(code_generator: ICodeGenerator)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/procedure/Procedure.ts:124\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        code_generator\n                                                        \n                                                                    ICodeGenerator\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasParent\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasParent()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/procedure/Procedure.ts:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/procedure/Procedure.ts:117\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(prodData: any, parent: IProcedure)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/procedure/Procedure.ts:137\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prodData\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parent\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        enabled\n                    \n                \n\n                \n                    \n                        getenabled()\n                    \n                \n                            \n                                \n                                    Defined in src/app/base-classes/procedure/Procedure.ts:36\n                                \n                            \n\n                \n                    \n                        setenabled(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/base-classes/procedure/Procedure.ts:40\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/base-classes/procedure/Procedure.ts:44\n                                \n                            \n\n                \n                    \n                        setid(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/base-classes/procedure/Procedure.ts:48\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in src/app/base-classes/procedure/Procedure.ts:53\n                                \n                            \n\n                \n                    \n                        settype(value: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/base-classes/procedure/Procedure.ts:57\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        left\n                    \n                \n\n                \n                    \n                        getleft()\n                    \n                \n                            \n                                \n                                    Defined in src/app/base-classes/procedure/Procedure.ts:61\n                                \n                            \n\n                \n                    \n                        setleft(value: any)\n                    \n                \n                            \n                                \n                                    Defined in src/app/base-classes/procedure/Procedure.ts:65\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        right\n                    \n                \n\n                \n                    \n                        getright()\n                    \n                \n                            \n                                \n                                    Defined in src/app/base-classes/procedure/Procedure.ts:69\n                                \n                            \n\n                \n                    \n                        setright(value: any)\n                    \n                \n                            \n                                \n                                    Defined in src/app/base-classes/procedure/Procedure.ts:73\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        children\n                    \n                \n\n                \n                    \n                        getchildren()\n                    \n                \n                            \n                                \n                                    Defined in src/app/base-classes/procedure/Procedure.ts:77\n                                \n                            \n\n                \n                    \n                        setchildren(children: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/base-classes/procedure/Procedure.ts:81\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            children\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n\n                \n                    \n                        geterror()\n                    \n                \n                            \n                                \n                                    Defined in src/app/base-classes/procedure/Procedure.ts:85\n                                \n                            \n\n                \n                    \n                        seterror(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/base-classes/procedure/Procedure.ts:89\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        print\n                    \n                \n\n                \n                    \n                        getprint()\n                    \n                \n                            \n                                \n                                    Defined in src/app/base-classes/procedure/Procedure.ts:93\n                                \n                            \n\n                \n                    \n                        setprint(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/base-classes/procedure/Procedure.ts:97\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {IdGenerator} from '../misc/GUID';\nimport {IProcedure} from \"./IProcedure\";\nimport {ProcedureTypes} from \"./ProcedureTypes\";\nimport {IComponent} from \"./IComponent\";\nimport {ICodeGenerator} from \"../code/CodeModule\";\n\nexport abstract class Procedure implements IProcedure{\n\n\tprivate _id: string; \n\tprivate _error: boolean;\n\tprivate _level: number;\n\n\tprivate _type: ProcedureTypes; \n\tprivate _selected: boolean; \n\tprivate _disabled: boolean = false; \n\tprivate _printToConsole: boolean = false;\n\t\n\tprivate _parent: IProcedure;\n\n\tprotected _leftComponent: IComponent; \n\tprotected _rightComponent: IComponent; \n\n\tpublic hasChildren: boolean;\n\tpublic _children: IProcedure[] = []; \n\n\tconstructor(type: ProcedureTypes, hasChildren: boolean){\n\t\tthis._id = IdGenerator.getId();\n\n\t\tthis._type = type; \n\t\tthis._level = 0;\n\n\t\tthis.hasChildren = hasChildren;\n\t\tthis._error = false;\n\t}\t\n\n\tget enabled(): boolean{\n\t\treturn !this._disabled;\n\t}\n\n\tset enabled(value: boolean){\n\t\tthis._disabled = !value;\n\t}\n\n\tget id(): string{\n\t\treturn this._id;\n\t}\n\n\tset id(value: string){\n\t\tconsole.warn(\"Id of procedure being set manually\");\n\t\tthis._id = value;\n\t}\n\n\tget type(): ProcedureTypes{\n\t\treturn this._type;\n\t}\n\n\tset type(value: ProcedureTypes){\n\t\tthis._type = value;\n\t}\n\n\tget left(){\n\t\treturn this._leftComponent;\n\t}\n\n\tset left(value: any){\n\t\tthis._leftComponent = value;\n\t}\n\n\tget right(){\n\t\treturn this._rightComponent;\n\t}\n\n\tset right(value: any){\n\t\tthis._rightComponent = value;\n\t}\n\n\tget children(): IProcedure[]{\n\t\treturn this._children;\n\t}\n\n\tset children(children: IProcedure[]){\n\t\tthis._children = children;\n\t}\n\n\tget error(): boolean{\n\t\treturn this._error;\n\t}\n\n\tset error(value: boolean){\n\t\tthis._error = value;\n\t}\n\n\tget print(): boolean{\n\t\treturn this._printToConsole;\n\t}\n\n\tset print(value: boolean){\n\t\tthis._printToConsole = value;\n\t}\n\n\n\tget parent(): IProcedure{\n\t\treturn this._parent;\n\t}\n\n\tset parent(parent: IProcedure){\n\t\tif(parent && (parent[\"_level\"]!==undefined)){\n\t\t\tthis._level = parent[\"_level\"] + 1;\n\t\t}\n\t\telse{\n\t\t\tthis._level = 0;\n\t\t}\n\n\t\tthis._parent = parent;\n\t}\n\n\treset(): void{\n\t\tthis._error = false;\n\t\tthis.children.map(function(p){\n\t\t\tp.reset();\n\t\t})\n\t}\n\n\tgetCodeString(code_generator: ICodeGenerator): string{\n\t\treturn code_generator.get_code_procedure(this);\n\t}\n\n\thasParent(): boolean{\n\t\tif(this._parent == undefined){\n\t\t\treturn false;\n\t\t}\n\t\telse{\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tupdate(prodData: any, parent: IProcedure): void{\n\t\tthis._id = prodData._id;\n\t\tthis._disabled = prodData._disabled; \n\n\t\t// todo: be careful\n\t\t//this._leftComponent =  prodData._leftComponent; \n\t\t//this._rightComponent = prodData._rightComponent; \n\n\t\tthis._parent = parent;\n\t\tthis._level = prodData._level;\n\t\tthis._children = [];\n\t\tthis._error = false; \n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProcedureEditorComponent.html":{"url":"components/ProcedureEditorComponent.html","title":"component - ProcedureEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProcedureEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui-components/editors/procedure-editor/procedure-editor.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-procedure-editor\n            \n\n            \n                styleUrls\n                procedure-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./procedure-editor.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                active_node\n                            \n                            \n                                copiedProd\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleCopy\n                            \n                            \n                                handleCut\n                            \n                            \n                                handleCutCopyPaste\n                            \n                            \n                                handleDelete\n                            \n                            \n                                handleMove\n                            \n                            \n                                handlePaste\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onAction\n                            \n                            \n                                validateKeystroke\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:keyup\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor($log: ConsoleService, _fs: FlowchartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui-components/editors/procedure-editor/procedure-editor.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $log\n                                                  \n                                                        \n                                                                    ConsoleService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _fs\n                                                  \n                                                        \n                                                                    FlowchartService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            window:keyup\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nwindow:keyup(event: KeyboardEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/procedure-editor/procedure-editor.component.ts:61\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleCopy\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleCopy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/procedure-editor/procedure-editor.component.ts:206\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleCut\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleCut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/procedure-editor/procedure-editor.component.ts:201\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleCutCopyPaste\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleCutCopyPaste(key: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/procedure-editor/procedure-editor.component.ts:95\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleDelete\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleDelete()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/procedure-editor/procedure-editor.component.ts:179\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleMove\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleMove(key: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/procedure-editor/procedure-editor.component.ts:121\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handlePaste\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandlePaste()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/procedure-editor/procedure-editor.component.ts:210\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/procedure-editor/procedure-editor.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/procedure-editor/procedure-editor.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onAction\n                            \n                            \n                        \n                    \n                \n                \n                    \nonAction(actionString: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/procedure-editor/procedure-editor.component.ts:181\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actionString\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validateKeystroke\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidateKeystroke(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/procedure-editor/procedure-editor.component.ts:86\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     0 | 1\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            active_node\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        active_node:     IGraphNode\n\n                    \n                \n                    \n                        \n                            Type :     IGraphNode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/editors/procedure-editor/procedure-editor.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            copiedProd\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        copiedProd:     IProcedure\n\n                    \n                \n                    \n                        \n                            Type :     IProcedure\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/editors/procedure-editor/procedure-editor.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/editors/procedure-editor/procedure-editor.component.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, HostListener} from '@angular/core';\n\nimport {IGraphNode, NodeUtils} from '../../../base-classes/node/NodeModule';\nimport {IProcedure, ProcedureUtils} from '../../../base-classes/procedure/ProcedureModule';\n\nimport { ConsoleService } from '../../../global-services/console.service';\nimport { FlowchartService } from '../../../global-services/flowchart.service';\n\nexport enum KEY_CODE {\n  CUT = 88,\n  COPY = 67, \n  PASTE = 86,\n  LEFT = 37,\n  UP = 38,\n  RIGHT = 39,\n  DOWN = 40,\n  DELETE = 46,\n  CTRL = 17, \n  SHIFT = 16\n}\n\n/*\n *\tDisplays the drag-drop procedure for a node\n *\n * \tUpdates on:\n * \t- selected_node is changed\n * \t- selected_node is updated\n */\n\n@Component({\n  selector: 'app-procedure-editor',\n  templateUrl: './procedure-editor.component.html',\n  styleUrls: ['./procedure-editor.component.scss']\n})\nexport class ProcedureEditorComponent{\n\n\tprivate subscriptions = [];\n\tprivate active_node: IGraphNode;\n\n\tconstructor(private $log: ConsoleService, private _fs: FlowchartService){}\n\n\tngOnInit(){\n      this.subscriptions.push(this._fs.node$.subscribe( (node) => {\n      \t\tthis.$log.log(\"Active node updated in Procedure Editor\");\n       \t\tthis.active_node = node;\n      }));\n    }\n\n    ngOnDestroy(){\n      this.subscriptions.map(function(s){\n        s.unsubscribe();\n      })\n    }\n\n\n\t// ----- Private Variables\n  \tcopiedProd: IProcedure;\n\n\t// ---- Cut / Copy / Paste Functions\n\t@HostListener('window:keyup', ['$event'])\n\t\tkeyEvent(event: KeyboardEvent) {\n\n\t\t\ttry{\n\t\t\t\tvar key = event.keyCode\n\t\t\t\tvar ctrlDown = event.ctrlKey || event.metaKey // Makey support\n\t\t\t\tvar shiftDown = event.shiftKey;\n\n\t\t\t\t/// key events triggered from typing - return without action\n\t\t\t\tif(!this.validateKeystroke(event)) return;\n\n\t\t\t\t/// return if there is no active procedure\n\t\t\t\tif(this.active_node.active_procedure === undefined) return;\n\n\t\t\t\tif(ctrlDown) this.handleCutCopyPaste(key);\n\t\t\t\telse if(shiftDown) this.handleMove(key);\n\t\t\t\telse if(key == KEY_CODE.DELETE)\tthis.handleDelete();\n\n\t\t\t\tthis.$log.log(`Successfully executed key command: ${KEY_CODE[key]}`);\n\t\t\t}\n\t\t\tcatch(ex){\n\t\t\t\tthis.$log.log(`Error occured during key command: ${KEY_CODE[key]} \\nError: ${ex}`);\n\t\t\t\tconsole.log(ex);\n\t\t\t}\n\t\t}\n\n\tvalidateKeystroke(event){\n\t\tif((event.srcElement.className.indexOf(\"input\") > -1)){\t\n\t\t\tevent.stopPropagation(); \n\t\t\treturn 0;\t\n\t\t};\n\t\t\n\t\treturn 1;\n\t}\n\n\thandleCutCopyPaste(key: number){\n\n\t\t/// \n\t\t/// key events with ctrl\n\t\t/// \n\t\tswitch (key){\n\t\t\tcase KEY_CODE.CUT:\n\t\t\t\tthis.handleCut()\n\t\t\t\tthis.$log.log(`Cut-Copied Procedure with keys: ${this.copiedProd.type}`);\n\t\t\t\tbreak;\n\t\t\tcase KEY_CODE.COPY:\n\t\t\t\tthis.handleCopy();\n\t\t\t\tthis.$log.log(`Copied Procedure with keys: ${this.copiedProd.type}`);\n\t\t\t\tbreak;\n\t\t\tcase KEY_CODE.PASTE:\n\t\t\t\ttry{\n\t\t\t\t\tthis.handlePaste();\n\t\t\t\t\tthis.$log.log(`Pasted Procedure with keys: ${this.copiedProd.type}`);\n\t\t\t\t}\n\t\t\t\tcatch(ex){\n\t\t\t\t\tthis.$log.log(\"Copied Procedure with keys failed because no copied procedure found.\");\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\thandleMove(key: number){\n\t\t/// \n\t\t/// event with shift\n\t\t/// \n\t\tlet selected_procedure: IProcedure = this.active_node.active_procedure;\n\t\tlet parent: IProcedure = selected_procedure.parent;\n\n\t\tif(parent == undefined){\n\t\t\t/// directly inside node\n\n\t\t}\n\t\telse{\n\t\t\t//\n\t\t}\n\n\t\t// if left, \n\t\t\n\t\t// \t  if no parent, nothing happens\n\t\t// \t  \n\t\t// if right, \n\t\t//    if above procedure has children, becomes child of above in last index\n\t\t//    \n\t\t\n\t\tlet position: number;\n\t\tlet procedure_above: IProcedure;\n\t\tif(parent == undefined){\n\t\t\tposition = NodeUtils.get_child_position(this.active_node, selected_procedure);\n\t\t\tprocedure_above = this.active_node.children[position - 1];\n\t\t}\n\t\telse{\n\t\t\tposition = ProcedureUtils.get_child_position(parent, selected_procedure);\n\t\t\tprocedure_above = parent.children[position - 1];\n\t\t}\n\n\t\tswitch (key){\n\t\t\tcase KEY_CODE.LEFT:\n\t\t\t\tif(!this.active_node.active_procedure.parent){ /*do nothing*/ }\n\t\t\t\telse{\n\t\t\t\t\tlet grandparent: IProcedure = parent.parent;\n\t\t\t\t\tif(grandparent){\n\t\t\t\t\t\tProcedureUtils.shift_level_up(this.active_node.active_procedure);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tProcedureUtils.delete_child(parent, selected_procedure);\n\t\t\t\t\t\tlet position: number = NodeUtils.get_child_position(this.active_node, parent);\n\t\t\t\t\t\tNodeUtils.add_procedure_at_position(this.active_node, selected_procedure, position+1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase KEY_CODE.RIGHT:\n\t\t\t\tif(position == 0 || procedure_above === undefined || !procedure_above.hasChildren) return;\n\t\t\t\tNodeUtils.delete_procedure(this.active_node, selected_procedure);\n\t\t\t\tProcedureUtils.add_child(procedure_above, selected_procedure);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\thandleDelete(){ NodeUtils.delete_procedure(this.active_node) };\n\n\tonAction(actionString: string){\n\n\t\tswitch(actionString){\n\t\t\tcase 'cut':\n\t\t\t\tthis.handleCut();\n\t\t\t \tbreak;\n\t\t\tcase 'copy':\n\t\t\t\tthis.handleCopy();\n\t\t\t\tbreak;\n\t\t\tcase 'paste':\n\t\t\t\tthis.handlePaste();\n\t\t\t\tbreak;\n\t\t\tcase 'delete':\n\t\t\t\tthis.handleDelete();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(\"Unknown keyboard action\");\n\t\t}\n\t}\n\n\thandleCut(){\n\t\tthis.copiedProd = ProcedureUtils.copy_procedure(this.active_node.active_procedure);\n\t\tNodeUtils.delete_procedure(this.active_node);\n\t}\n\n\thandleCopy(){\n\t\tthis.copiedProd = ProcedureUtils.copy_procedure(this.active_node.active_procedure);\n\t}\n\n\thandlePaste(){\n\t\ttry{\n\t\t\tNodeUtils.add_procedure(this.active_node, this.copiedProd);\n\t\t\tthis.copiedProd = ProcedureUtils.copy_procedure(this.copiedProd);\n\t\t}\n\t\tcatch(ex){\n\t\t\tconsole.log(\"Error Pasting\");\n\t\t}\n\t}\n\n}\n\n    \n\n    \n        \n\t\n\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t  Procedure ({{active_node?.procedure.length}})\n\t\t\t\t\t\t\n\t\t\t\t\t\n\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t \n\t\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  Procedure ({{active_node?.procedure.length}})\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CesiumViewerComponent', 'selector': 'app-cesium-viewer'},{'name': 'CodeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ConsoleComponent', 'selector': 'app-console'},{'name': 'DataComponent', 'selector': 'app-data'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FileLoadDialogComponent', 'selector': 'file-load-dialog'},{'name': 'FlowchartControlsComponent', 'selector': 'app-flowchart-controls'},{'name': 'FlowchartViewerComponent', 'selector': 'app-flowchart-viewer'},{'name': 'GSViewerComponent', 'selector': 'gs-viewer'},{'name': 'GeometryViewerComponent', 'selector': 'app-geometry-viewer'},{'name': 'GraphEdgeComponent', 'selector': 'app-graph-edge'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HelpFundamentals', 'selector': 'app-help-fundamentals'},{'name': 'HelpModel', 'selector': 'app-help-model'},{'name': 'HelpViewerComponent', 'selector': 'app-help-viewer'},{'name': 'InfoViewerComponent', 'selector': 'app-info-viewer'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MobiusAbout', 'selector': 'app-help-about'},{'name': 'MobiusEditorComponent', 'selector': 'app-mobius-editor'},{'name': 'MobiusGalleryComponent', 'selector': 'mobius-gallery'},{'name': 'MobiusViewerComponent', 'selector': 'app-mobius-viewer'},{'name': 'MobiuscesiumComponent', 'selector': 'mobius-cesium'},{'name': 'ModuleViewerComponent', 'selector': 'app-module-viewer'},{'name': 'ModuleboxComponent', 'selector': 'app-modulebox'},{'name': 'NodeLibraryComponent', 'selector': 'app-node-library'},{'name': 'PanelComponent', 'selector': 'app-panel'},{'name': 'ParameterEditorComponent', 'selector': 'app-parameter-editor'},{'name': 'ParameterSettingsDialogComponent', 'selector': 'parameter-settings-dialog'},{'name': 'ParameterViewerComponent', 'selector': 'app-parameter-viewer'},{'name': 'ProcedureEditorComponent', 'selector': 'app-procedure-editor'},{'name': 'ProcedureItemComponent', 'selector': 'app-procedure-item'},{'name': 'PublishComponent', 'selector': 'app-publish'},{'name': 'PublishSettingsComponent', 'selector': 'app-publish-settings'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'TextViewerComponent', 'selector': 'app-text-viewer'},{'name': 'ToolwindowComponent', 'selector': 'app-toolwindow'},{'name': 'ViewerComponent', 'selector': 'app-viewer'},{'name': 'ViewerComponent', 'selector': 'cesium-viewer'},{'name': 'ViewerContainerComponent', 'selector': 'app-viewer-container'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProcedureEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProcedureFactory.html":{"url":"classes/ProcedureFactory.html","title":"class - ProcedureFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProcedureFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/base-classes/procedure/ProcedureFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getProcedure\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getProcedure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getProcedure(type: ProcedureTypes, data?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/procedure/ProcedureFactory.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    ProcedureTypes\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     IProcedure\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {ProcedureTypes} from \"./ProcedureTypes\"; \nimport {DataProcedure} from \"./DataProcedure\";\nimport {ActionProcedure} from \"./ActionProcedure\";\nimport {IfElseControlProcedure} from \"./IfElseControlProcedure\";\nimport {IfControlProcedure} from \"./IfControlProcedure\";\nimport {ElseControlProcedure} from \"./ElseControlProcedure\";\nimport {ElseIfControlProcedure} from \"./ElseIfControlProcedure\";\nimport {ForLoopControlProcedure} from \"./ForLoopControlProcedure\";\nimport {WhileControlProcedure} from \"./WhileControlProcedure\";\nimport {FunctionProcedure} from \"./FunctionProcedure\";\nimport {StatementProcedure} from \"./StatementProcedure\";\nimport {IProcedure} from \"./IProcedure\";\n\nexport class ProcedureFactory{\n\n\tstatic getProcedure(type: ProcedureTypes, data?: any): IProcedure{\n\n\t\tswitch(type){\n\n\t\t\tcase ProcedureTypes.Data:\n\t\t\t\treturn new DataProcedure(data);\n\n\t\t\tcase ProcedureTypes.Action:\n\t\t\t\treturn new ActionProcedure(data);\n\n\t\t\tcase ProcedureTypes.Function:\n\t\t\t\treturn new FunctionProcedure(data);\n\n\t\t\tcase ProcedureTypes.LoopBreak:\n\t\t\tcase ProcedureTypes.LoopContinue:\n\t\t\tcase ProcedureTypes.Comment:\n\t\t\t\treturn new StatementProcedure(type);\n\n\t\t\tcase ProcedureTypes.IfControl:\n\t\t\t\treturn new IfControlProcedure(data);\n\n\t\t\tcase ProcedureTypes.ElseControl:\n\t\t\t\treturn new ElseControlProcedure(data);\n\n\t\t\tcase ProcedureTypes.ElseIfControl:\n\t\t\t\treturn new ElseIfControlProcedure(data); \n\n\t\t\tcase ProcedureTypes.ForLoopControl:\n\t\t\t\treturn new ForLoopControlProcedure(data);\n\n\t\t\tcase ProcedureTypes.WhileControl:\n\t\t\t\treturn new WhileControlProcedure();\n\n\n\t\t\tdefault: \n\t\t\t\tthrow Error(`Invalid Procedure Type: ${type}`);\n\n\t\t}\n\n\t}\n \n\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProcedureItemComponent.html":{"url":"components/ProcedureItemComponent.html","title":"component - ProcedureItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProcedureItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui-components/editors/procedure-editor/procedure-item.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-procedure-item\n            \n\n            \n                styleUrls\n                procedure-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./procedure-item.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copy\n                            \n                            \n                                cut\n                            \n                            \n                                delete\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onAction\n                            \n                            \n                                onSelect\n                            \n                            \n                                paste\n                            \n                            \n                                trackByFn\n                            \n                            \n                                updateProcedure\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                active_procedure\n                            \n                            \n                                level\n                            \n                            \n                                prod\n                            \n                            \n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        active_procedure\n                    \n                    \n                            \n                            Type:    IProcedure\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui-components/editors/procedure-editor/procedure-item.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        level\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui-components/editors/procedure-editor/procedure-item.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        prod\n                    \n                    \n                            \n                            Type:    IProcedure\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui-components/editors/procedure-editor/procedure-item.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        root\n                    \n                    \n                            \n                            Type:    IGraphNode\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui-components/editors/procedure-editor/procedure-item.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        action\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/ui-components/editors/procedure-editor/procedure-item.component.ts:23\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            copy\n                            \n                            \n                        \n                    \n                \n                \n                    \ncopy($event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/procedure-editor/procedure-item.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cut\n                            \n                            \n                        \n                    \n                \n                \n                    \ncut($event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/procedure-editor/procedure-item.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \ndelete($event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/procedure-editor/procedure-item.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/procedure-editor/procedure-item.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/procedure-editor/procedure-item.component.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onAction\n                            \n                            \n                        \n                    \n                \n                \n                    \nonAction(actionString: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/procedure-editor/procedure-item.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actionString\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSelect\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSelect($event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/procedure-editor/procedure-item.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paste\n                            \n                            \n                        \n                    \n                \n                \n                    \npaste($event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/procedure-editor/procedure-item.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trackByFn\n                            \n                            \n                        \n                    \n                \n                \n                    \ntrackByFn(procedure: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/procedure-editor/procedure-item.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        procedure\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateProcedure\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateProcedure($event: , prod: , comp: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/editors/procedure-editor/procedure-item.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        prod\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        comp\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, \n\t\t Input, Output, \n\t\t EventEmitter,\n\t\t OnInit, OnDestroy,\n\t\t ViewChild, HostListener} from '@angular/core';\n\nimport {IProcedure, ProcedureFactory, ProcedureTypes, ProcedureUtils} from '../../../base-classes/procedure/ProcedureModule';\nimport {NodeUtils, IGraphNode} from '../../../base-classes/node/NodeModule';\n\n@Component({\n  selector: 'app-procedure-item',\n  templateUrl: './procedure-item.component.html', \n  styleUrls: ['procedure-item.component.scss']\n})\nexport class ProcedureItemComponent implements OnInit, OnDestroy{\n\n\t@Input() prod: IProcedure;\n\t@Input() active_procedure: IProcedure;\n\t@Input() level: number;\n\t@Input() root: IGraphNode;\n\n \t//@Output() action = new EventEmitter();\n \t@Output() action = new EventEmitter()\n\n\tngOnInit(){ }  \n\n\tngOnDestroy(){ }\n\n\tupdateProcedure($event, prod, comp){\n\t}\n\n\tonSelect($event): void{\n\t\tthis.root.active_procedure = this.prod;\n\t}\n\n\ttrackByFn(procedure) {\n\t    return procedure.id; // or song.id\n\t}\n\n\tdelete($event): void{\n\t\tthis.onSelect($event);\n\t\tthis.onAction(\"delete\");\n\t}\n\n\tcut($event): void{\n\t\tthis.onSelect($event);\n\t\tthis.onAction(\"cut\");\n\t}\n\n\tcopy($event): void{\n\t\tthis.onSelect($event);\n\t\tthis.onAction(\"copy\");\n\t}\n\n\tpaste($event): void{\n\t\tthis.onSelect($event);\n\t\tthis.onAction(\"paste\");\n\t}\n\n\tonAction(actionString: string){\n\t\tthis.action.emit(actionString);\n\t}\n\n }\n    \n\n    \n        \n\t\n\t\t\n\t\t\n\n\t\t\t\n\t\t\t \n\t\t\t\t\n\t\t\t\t\t\n\n\t\t\t\t\t=\n\n\t\t\t\t\t\n\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t {{prod.type}} ::: \n\t\t\t\t \n\t\t\t\t\n\t\t\t\n\n\t\t\t\n\t\t\t\t\n\t\t\t\t {{prod.type}} \n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\tfor each ( \n\t\t\t\n\t\t\t\t\t\n\t\t\t\n\t\t\t\t\tin  \n\t\t\t\n\t\t\t\t\t \n\t\t\t\t\t)\n\t\t\t\t\n\t\t\t\n\n\t\t\t\n\t\t\t\t\n\t\t\t\t\twhile ::: \n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\n\t\t\t\t\t=\n\n\t\t\t\t\t\n\t\t\t\n\t\t\t\t\t{{prod.right.module.replace(\"_\",  \".\")}}\n\t\t\t\t\t.\n\t\t\t\n\t\t\t\t\t  {{prod.right.fn_name}} \n\t\t\t\n\t\t\t\t\t( 0\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\n\t\t\t\t\t\t\t\t,\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t)\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t {{prod.left.expression}}\n\t\t\t\t\n\t\t\t \n\n\t\t\t\n\t\t\t\t\n\t\t\t\n\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t    \t\tprint\n\t\t\t    \n\t\t\t\t\n\t\t\t\t\n\t\t    \t\tcheck_circle\n\t\t\t    \n\n\t\t\t    \n\t\t    \t\tcontent_cut\n\t\t\t    \n\n\t\t\t    \n\t\t    \t\tcontent_copy\n\t\t\t    \n\n\t\t\t    \n\t\t    \t\tcontent_paste\n\t\t\t    \n\n\t\t\t   \t\n\t\t    \t\tdelete\n\t\t\t    \n\t\t\t    \n\t\t\t\n\t\t\n\n\n\t\n\n\n\t 0 && prod.enabled\">\n\t\t\n\t\t\n\t\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t=\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t {{prod.type}} ::: \t\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t {{prod.type}} \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor each ( \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tin  \t\t\t\t\t\t\t\t \t\t\t\t\t)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile ::: \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t=\t\t\t\t\t\t\t\t\t\t\t\t\t{{prod.right.module.replace(\"_\",  \".\")}}\t\t\t\t\t.\t\t\t\t\t\t\t\t  {{prod.right.fn_name}} \t\t\t\t\t\t\t\t( 0\">\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t,\t\t\t\t\t\t\t \t\t\t\t\t\t\t)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t {{prod.left.expression}}\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t    \t\tprint\t\t\t    \t\t\t\t\t\t\t\t\t\t    \t\tcheck_circle\t\t\t    \t\t\t    \t\t    \t\tcontent_cut\t\t\t    \t\t\t    \t\t    \t\tcontent_copy\t\t\t    \t\t\t    \t\t    \t\tcontent_paste\t\t\t    \t\t\t   \t\t\t    \t\tdelete\t\t\t    \t\t\t    \t\t\t\t\t\t\t 0 && prod.enabled\">\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CesiumViewerComponent', 'selector': 'app-cesium-viewer'},{'name': 'CodeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ConsoleComponent', 'selector': 'app-console'},{'name': 'DataComponent', 'selector': 'app-data'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FileLoadDialogComponent', 'selector': 'file-load-dialog'},{'name': 'FlowchartControlsComponent', 'selector': 'app-flowchart-controls'},{'name': 'FlowchartViewerComponent', 'selector': 'app-flowchart-viewer'},{'name': 'GSViewerComponent', 'selector': 'gs-viewer'},{'name': 'GeometryViewerComponent', 'selector': 'app-geometry-viewer'},{'name': 'GraphEdgeComponent', 'selector': 'app-graph-edge'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HelpFundamentals', 'selector': 'app-help-fundamentals'},{'name': 'HelpModel', 'selector': 'app-help-model'},{'name': 'HelpViewerComponent', 'selector': 'app-help-viewer'},{'name': 'InfoViewerComponent', 'selector': 'app-info-viewer'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MobiusAbout', 'selector': 'app-help-about'},{'name': 'MobiusEditorComponent', 'selector': 'app-mobius-editor'},{'name': 'MobiusGalleryComponent', 'selector': 'mobius-gallery'},{'name': 'MobiusViewerComponent', 'selector': 'app-mobius-viewer'},{'name': 'MobiuscesiumComponent', 'selector': 'mobius-cesium'},{'name': 'ModuleViewerComponent', 'selector': 'app-module-viewer'},{'name': 'ModuleboxComponent', 'selector': 'app-modulebox'},{'name': 'NodeLibraryComponent', 'selector': 'app-node-library'},{'name': 'PanelComponent', 'selector': 'app-panel'},{'name': 'ParameterEditorComponent', 'selector': 'app-parameter-editor'},{'name': 'ParameterSettingsDialogComponent', 'selector': 'parameter-settings-dialog'},{'name': 'ParameterViewerComponent', 'selector': 'app-parameter-viewer'},{'name': 'ProcedureEditorComponent', 'selector': 'app-procedure-editor'},{'name': 'ProcedureItemComponent', 'selector': 'app-procedure-item'},{'name': 'PublishComponent', 'selector': 'app-publish'},{'name': 'PublishSettingsComponent', 'selector': 'app-publish-settings'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'TextViewerComponent', 'selector': 'app-text-viewer'},{'name': 'ToolwindowComponent', 'selector': 'app-toolwindow'},{'name': 'ViewerComponent', 'selector': 'app-viewer'},{'name': 'ViewerComponent', 'selector': 'cesium-viewer'},{'name': 'ViewerContainerComponent', 'selector': 'app-viewer-container'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProcedureItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProcedureUtils.html":{"url":"classes/ProcedureUtils.html","title":"class - ProcedureUtils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProcedureUtils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/base-classes/procedure/ProcedureUtils.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                add_child\n                            \n                            \n                                    Static\n                                add_child_at_position\n                            \n                            \n                                    Static\n                                add_child_from_data\n                            \n                            \n                                    Static\n                                copy_procedure\n                            \n                            \n                                    Static\n                                delete_child\n                            \n                            \n                                    Static\n                                get_child_position\n                            \n                            \n                                    Static\n                                shift_level_up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            add_child\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        add_child(procedure: IProcedure, child: IProcedure)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/procedure/ProcedureUtils.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        procedure\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        child\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     IProcedure\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            add_child_at_position\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        add_child_at_position(procedure: IProcedure, child: IProcedure, index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/procedure/ProcedureUtils.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        procedure\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        child\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     IProcedure\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            add_child_from_data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        add_child_from_data(procedure: IProcedure, child: IProcedure)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/procedure/ProcedureUtils.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        procedure\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        child\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     IProcedure\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            copy_procedure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        copy_procedure(procedure: IProcedure)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/procedure/ProcedureUtils.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        procedure\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     IProcedure\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            delete_child\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        delete_child(procedure: IProcedure, remove: IProcedure)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/procedure/ProcedureUtils.ts:96\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        procedure\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        remove\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     IProcedure\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            get_child_position\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get_child_position(parent: IProcedure, child: IProcedure)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/procedure/ProcedureUtils.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parent\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        child\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            shift_level_up\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        shift_level_up(procedure: IProcedure)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/procedure/ProcedureUtils.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        procedure\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     IProcedure\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {IProcedure} from \"./IProcedure\";\nimport {ProcedureFactory} from \"./ProcedureFactory\";\nimport {Procedure} from \"./Procedure\";\n\nexport abstract class ProcedureUtils{\n\n\tpublic static copy_procedure(procedure: IProcedure): IProcedure{\n\t\tif(!procedure) return;\t\t\n\n\t\tlet n: IProcedure = ProcedureFactory.getProcedure(procedure.type || procedure[\"_type\"]);\n\t\t//todo: bad programming!\n\t\tlet id = n.id;\n\t\tn.update(procedure, procedure.parent);\n\t\t\n\t\t//\n\t\t// TODO: Design Issue?\n\t\t// If it is procedure data, the propery is _children\n\t\t// If it is a procedure object, the property is children\n\t\t//\n\t\tlet child_prop = procedure.children ? \"children\" : \"_children\";\n\t\tif(procedure[child_prop]){\n\t\t\tn.children = procedure[child_prop].map((p)=> {\n\t\t\t\tlet pc:IProcedure = ProcedureUtils.copy_procedure(p);\n\t\t\t\tpc.parent = n;\n\t\t\t\treturn pc;\n\t\t\t});\n\t\t}\n\n\t\tn.id = id;\n\n\t\treturn n;\n\t}\n\n\tpublic static shift_level_up(procedure: IProcedure): IProcedure{\n\t\tif(!procedure || !procedure.parent) throw Error(\"No procedure to shift up\");\n\n\t\tlet parent: IProcedure = procedure.parent;\n\t\tlet grandparent: IProcedure = parent.parent;\n\n\t\tif(!grandparent) return undefined;\n\n\t\tProcedureUtils.delete_child(parent, procedure);\n\t\tProcedureUtils.add_child_at_position( grandparent, procedure, ProcedureUtils.get_child_position(grandparent, parent) + 1 );\n\n\t\treturn procedure;\n\t}\n\n\tpublic static get_child_position(parent: IProcedure, child: IProcedure): number{\n\t\tlet index: number = 0;\n\t\tfor(const prod of parent.children){\n\t\t\tif (prod.id === child.id){\n\t\t\t\treturn index;\n\t\t\t}\n\t\t\tindex++;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\tpublic static add_child(procedure: IProcedure, child: IProcedure): IProcedure{\n\t\ttry{\n\t\t\tif( procedure.hasChildren ){\n\t\t\t\tprocedure.children.push(child);\n\t\t\t\tchild.parent = procedure;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthrow Error(`Illegal addition of child to ${procedure.type} type`);\n\t\t\t}\n\t\t}\n\t\tcatch(ex){\n\t\t\tconsole.log(`Error adding child ${ex}`);\n\t\t}\n\n\t\treturn procedure;\n\t}\n\n\tpublic static add_child_from_data(procedure: IProcedure, child: IProcedure): IProcedure{\n\t\tif( procedure.hasChildren ){\n\t\t\tprocedure.children.push(child);\n\t\t\tchild.parent = procedure;\n\t\t}\n\t\telse{\n\t\t\tthrow Error(\"Cannot add child to this procedure\");\n\t\t}\n\n\t\treturn procedure;\n\t}\n\n\tpublic static add_child_at_position(procedure: IProcedure, child: IProcedure, index: number): IProcedure{\n\t\tprocedure.children.splice(index, 0, child);\n\t\tchild.parent = procedure;\n\n\t\treturn procedure;\n\t}\n\n\tpublic static delete_child(procedure: IProcedure, remove: IProcedure): IProcedure{\n\t\tprocedure.children = procedure.children.filter(function(child: IProcedure){ \n\t\t\treturn !(child === remove)\n\t\t});\n\n\t\treturn procedure;\n\t}\n} \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PublishSettingsComponent.html":{"url":"components/PublishSettingsComponent.html","title":"component - PublishSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PublishSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui-components/controls/publish-settings/publish-settings.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-publish-settings\n            \n\n            \n                styleUrls\n                publish-settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./publish-settings.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                flowchart\n                            \n                            \n                                fw\n                            \n                            \n                                inputPortOpts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addGlobal\n                            \n                            \n                                close\n                            \n                            \n                                deleteGlobal\n                            \n                            \n                                getInputTypeName\n                            \n                            \n                                openSettingsDialog\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, flowchart: IFlowchart, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui-components/controls/publish-settings/publish-settings.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        flowchart\n                                                  \n                                                        \n                                                                    IFlowchart\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addGlobal\n                            \n                            \n                        \n                    \n                \n                \n                    \naddGlobal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/controls/publish-settings/publish-settings.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/controls/publish-settings/publish-settings.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteGlobal\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteGlobal(index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/controls/publish-settings/publish-settings.component.ts:88\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getInputTypeName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetInputTypeName(type: InputPortTypes)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/controls/publish-settings/publish-settings.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    InputPortTypes\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openSettingsDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenSettingsDialog(input: InputPort)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/controls/publish-settings/publish-settings.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                        \n                                                                    InputPort\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/controls/publish-settings/publish-settings.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialog:     MatDialog\n\n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/controls/publish-settings/publish-settings.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/controls/publish-settings/publish-settings.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            flowchart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        flowchart:     IFlowchart\n\n                    \n                \n                    \n                        \n                            Type :     IFlowchart\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/controls/publish-settings/publish-settings.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fw\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fw:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/ui-components/controls/publish-settings/publish-settings.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inputPortOpts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        inputPortOpts:     InputPortTypes[]\n\n                    \n                \n                    \n                        \n                            Type :     InputPortTypes[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n        InputPortTypes.Input,\n        InputPortTypes.Slider, \n        InputPortTypes.FilePicker,\n        InputPortTypes.URL,\n        InputPortTypes.Checkbox\n    ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/controls/publish-settings/publish-settings.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Injector, Inject } from '@angular/core';\n\nimport { IGraphNode } from '../../../base-classes/node/NodeModule';\nimport { InputPort, OutputPort, InputPortTypes, OutputPortTypes } from '../../../base-classes/port/PortModule';\nimport { ParameterSettingsDialogComponent } from '../../editors/parameter-editor/parameter-settings-dialog.component';\n\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { IFlowchart, FlowchartWriter } from '../../../base-classes/flowchart/FlowchartModule';\n\n@Component({\n  selector: 'app-publish-settings',\n  templateUrl: './publish-settings.component.html',\n  styleUrls: ['./publish-settings.component.scss']\n})\nexport class PublishSettingsComponent{\n\n  fw;\n\n  inputPortOpts: InputPortTypes[] = [\n        InputPortTypes.Input,\n        InputPortTypes.Slider, \n        InputPortTypes.FilePicker,\n        InputPortTypes.URL,\n        InputPortTypes.Checkbox\n    ]; \n\n  constructor(public dialogRef: MatDialogRef, \n              @Inject(MAT_DIALOG_DATA) public flowchart: IFlowchart, \n              public dialog: MatDialog) { this.fw = flowchart }\n\n  addGlobal(): void{\n    //TODO: \n  \tlet inputPort = new InputPort(\"global\"  + this.fw._globals.length);\n    this.fw.globals.push(inputPort);\n  }\n\n  save(): void{\n    FlowchartWriter.save_flowchart_as_json(this.fw);\n    this.close();\n  }\n\n  close(): void{\n    this.dialogRef.close();\n  }\n\n  getInputTypeName(type: InputPortTypes): string{\n      if(type == InputPortTypes.ColorPicker){\n        return \"Color\";\n      }\n      else if(type == InputPortTypes.Input){\n        return \"Simple Input\";\n      }\n      else if(type == InputPortTypes.Dropdown){\n        return \"Dropdown\";\n      }\n      else if(type == InputPortTypes.FilePicker){\n        return \"Hello\";\n      }\n      else if(type == InputPortTypes.Slider){\n        return \"Slider\";\n      }\n      else if(type == InputPortTypes.URL){\n        return \"WebURL\";\n      }\n      else if(type == InputPortTypes.Checkbox){\n        return \"Checkbox\";\n      }\n      else{\n        return \"Not Identifiable\";\n      }\n  }\n\n  openSettingsDialog(input: InputPort): void{\n      let dialogRef = this.dialog.open(ParameterSettingsDialogComponent, {\n          height: '400px',\n          width: '600px',          \n          data: { \n                  inputPortTypes: this.inputPortOpts,\n                  input: input\n                }\n      });\n\n      dialogRef.afterClosed().subscribe(result => {\n          console.log('The dialog was closed');\n      });\n  }\n\n  deleteGlobal(index: number): void{\n    // TODO:\n    /*this._globals.splice(index, 1);\n    this.fw.globals = this._globals;*/\n  }\n\n}\n\n    \n\n    \n        \n\n\tFile Settings\n\n\t\n\t\t\n\t\t\n\t\t\tName\n\t\t\t\n\t\t\n\n\t\t\n\t\t\tDescription\n\t\t\t\n\t\t\n\n\t\n\t\n\n\t\n\t\n\t\t\n\t\t\n\t\t\tGlobal Variables Add New \n\t\t\n\t\t\n\t\t\n\t\t\t\n\t\n\t\t\t\t\n\t\t\t\t\t\t{{ inp.getName() }}\n\t\t\t\t\n\t\t\t\n\t\t\t\t\n\t         \t    {{getInputTypeName(x)}}\n\t            \n\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\tsettings\n\t\t\t\t\t\n\t\t\t        \n\t\t\t    \t\tdelete\n\t\t\t\t    \n\t\t\t\t\n\t\n\t\t\t\n\t\t\n\t\n\t -->\n\n\t\n\t\n\t\tVisible Node\n\t\t\n\t\t\n\t\t\tNode to Display{{fw.display_node}}\n\t\t\t\n         \t    \n         \t    \t{{x.name}}{{fw.display_node == i}}         \t    \n         \t   \t\n\t        \n\t\t\n\t\t\n\n\t -->\n\n\t\n\t\tShould this flowchart be editable in the viewer?\n\t\t\n\t\t\n\t\t\t\n\t\t\n\n\t\n\n\t\n\t\n\n\t\n\t\tSave File\n\t\tClose\n\t\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\tFile Settings\t\t\t\t\t\t\t\tName\t\t\t\t\t\t\t\t\t\tDescription\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tGlobal Variables Add New \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ inp.getName() }}\t\t\t\t\t\t\t\t\t\t\t\t         \t    {{getInputTypeName(x)}}\t            \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsettings\t\t\t\t\t\t\t\t        \t\t\t    \t\tdelete\t\t\t\t    \t\t\t\t\t\t\t\t\t\t\t\t -->\t\t\t\tVisible Node\t\t\t\t\t\t\tNode to Display{{fw.display_node}}\t\t\t         \t             \t    \t{{x.name}}{{fw.display_node == i}}         \t             \t   \t\t        \t\t\t\t\t -->\t\t\tShould this flowchart be editable in the viewer?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSave File\t\tClose\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CesiumViewerComponent', 'selector': 'app-cesium-viewer'},{'name': 'CodeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ConsoleComponent', 'selector': 'app-console'},{'name': 'DataComponent', 'selector': 'app-data'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FileLoadDialogComponent', 'selector': 'file-load-dialog'},{'name': 'FlowchartControlsComponent', 'selector': 'app-flowchart-controls'},{'name': 'FlowchartViewerComponent', 'selector': 'app-flowchart-viewer'},{'name': 'GSViewerComponent', 'selector': 'gs-viewer'},{'name': 'GeometryViewerComponent', 'selector': 'app-geometry-viewer'},{'name': 'GraphEdgeComponent', 'selector': 'app-graph-edge'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HelpFundamentals', 'selector': 'app-help-fundamentals'},{'name': 'HelpModel', 'selector': 'app-help-model'},{'name': 'HelpViewerComponent', 'selector': 'app-help-viewer'},{'name': 'InfoViewerComponent', 'selector': 'app-info-viewer'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MobiusAbout', 'selector': 'app-help-about'},{'name': 'MobiusEditorComponent', 'selector': 'app-mobius-editor'},{'name': 'MobiusGalleryComponent', 'selector': 'mobius-gallery'},{'name': 'MobiusViewerComponent', 'selector': 'app-mobius-viewer'},{'name': 'MobiuscesiumComponent', 'selector': 'mobius-cesium'},{'name': 'ModuleViewerComponent', 'selector': 'app-module-viewer'},{'name': 'ModuleboxComponent', 'selector': 'app-modulebox'},{'name': 'NodeLibraryComponent', 'selector': 'app-node-library'},{'name': 'PanelComponent', 'selector': 'app-panel'},{'name': 'ParameterEditorComponent', 'selector': 'app-parameter-editor'},{'name': 'ParameterSettingsDialogComponent', 'selector': 'parameter-settings-dialog'},{'name': 'ParameterViewerComponent', 'selector': 'app-parameter-viewer'},{'name': 'ProcedureEditorComponent', 'selector': 'app-procedure-editor'},{'name': 'ProcedureItemComponent', 'selector': 'app-procedure-item'},{'name': 'PublishComponent', 'selector': 'app-publish'},{'name': 'PublishSettingsComponent', 'selector': 'app-publish-settings'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'TextViewerComponent', 'selector': 'app-text-viewer'},{'name': 'ToolwindowComponent', 'selector': 'app-toolwindow'},{'name': 'ViewerComponent', 'selector': 'app-viewer'},{'name': 'ViewerComponent', 'selector': 'cesium-viewer'},{'name': 'ViewerContainerComponent', 'selector': 'app-viewer-container'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PublishSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectComponent.html":{"url":"components/SelectComponent.html","title":"component - SelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/mobius-cesium/setting/attributes.copmponent.ts\n\n\n\n    \n        Extends\n    \n    \n            DataSubscriber\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-select\n            \n\n            \n                styleUrls\n                attributes.component.css\n            \n\n\n\n            \n                templateUrl\n                ./attributes.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _Properties\n                            \n                            \n                                    Private\n                                data\n                            \n                            \n                                    Private\n                                dataArr\n                            \n                            \n                                    Private\n                                ID\n                            \n                            \n                                    Private\n                                mode\n                            \n                            \n                                    Private\n                                myElement\n                            \n                            \n                                    Private\n                                viewer\n                            \n                            \n                                    Private\n                                _message\n                            \n                            \n                                    Private\n                                _subscription\n                            \n                            \n                                    Protected\n                                dataService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngDoCheck\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                notify\n                            \n                            \n                                notify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector, myElement: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/mobius-cesium/setting/attributes.copmponent.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        myElement\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngDoCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngDoCheck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/mobius-cesium/setting/attributes.copmponent.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/mobius-cesium/setting/attributes.copmponent.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notify\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        notify(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/mobius-cesium/setting/attributes.copmponent.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notify\n                            \n                            \n                        \n                    \n                \n                \n                    \nnotify(message: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DataSubscriber\n\n                                \n                            \n                        \n                            \n                                    Defined in DataSubscriber:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _Properties\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _Properties:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/mobius-cesium/setting/attributes.copmponent.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     JSON\n\n                    \n                \n                    \n                        \n                            Type :     JSON\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/mobius-cesium/setting/attributes.copmponent.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dataArr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataArr:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/mobius-cesium/setting/attributes.copmponent.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ID:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/mobius-cesium/setting/attributes.copmponent.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mode:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/mobius-cesium/setting/attributes.copmponent.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            myElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        myElement:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/mobius-cesium/setting/attributes.copmponent.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            viewer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewer:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/mobius-cesium/setting/attributes.copmponent.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _message:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DataSubscriber\n\n                                \n                            \n                        \n                            \n                                    Defined in DataSubscriber:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DataSubscriber\n\n                                \n                            \n                        \n                            \n                                    Defined in DataSubscriber:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            dataService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataService:     DataService\n\n                    \n                \n                    \n                        \n                            Type :     DataService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DataSubscriber\n\n                                \n                            \n                        \n                            \n                                    Defined in DataSubscriber:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Injector, ElementRef ,NgModule} from \"@angular/core\";\nimport {DataSubscriber} from \"../data/DataSubscriber\";\nimport { DataService } from \"../data/data.service\";\nimport {ViewerComponent} from \"../viewer/viewer.component\";\nimport * as chroma from \"chroma-js\";\n\n@Component({\n  selector: \"app-select\",\n  templateUrl: \"./attributes.component.html\",\n  styleUrls: [\"./attributes.component.css\"],\n})\nexport class SelectComponent extends DataSubscriber implements OnInit {\n  private myElement;\n  private data: JSON;\n  private mode: string;\n  private viewer: object;\n  private dataArr: object;\n  private ID: any;\n  private _Properties: any[];\n\n  constructor(injector: Injector, myElement: ElementRef) {\n  super(injector);\n  }\n  public ngOnInit() {\n    this.data = this.dataService.getGsModel();\n    this.mode = this.dataService.getmode();\n    this.viewer = this.dataService.getViewer();\n    this.dataArr = this.dataService.get_ViData();\n  }\n  public  notify(message: string): void {\n    if(message === \"model_update\" ) {\n      this.data = this.dataService.getGsModel();\n      this.mode = this.dataService.getmode();\n      this.dataArr = this.dataService.get_ViData();\n    }\n  }\n\n  public ngDoCheck() {\n    if(this.viewer !== undefined&&this.dataService.get_SelectedEntity() !== undefined&&this.mode === \"editor\") {\n      if(this.ID !== this.dataService.get_SelectedEntity()._id) {\n        let _Property: any;\n        this.ID = this.dataService.get_SelectedEntity()._id;\n        this._Properties = [];\n        for(const _ColorPro of this.dataArr[\"ColorProperty\"]) {\n          if(_ColorPro !== \"None\") {\n            _Property = [];\n            _Property.Name = _ColorPro;\n            if(this.dataService.get_SelectedEntity().properties[_Property.Name]!==undefined){\n              _Property.Value = this.dataService.get_SelectedEntity().properties[_Property.Name]._value;\n            }else {_Property.Value = ' ';}\n            this._Properties.push(_Property);\n          }\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n\t\n\t  \n\t    ID\n\t    {{ID}}\n\t  \n\t\n\t\n\t  \n\t    {{Property.Name}}\n\t    {{Property.Value}}\n\t  \n\t\n\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t  \t    ID\t    {{ID}}\t  \t\t\t  \t    {{Property.Name}}\t    {{Property.Value}}\t  \t  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CesiumViewerComponent', 'selector': 'app-cesium-viewer'},{'name': 'CodeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ConsoleComponent', 'selector': 'app-console'},{'name': 'DataComponent', 'selector': 'app-data'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FileLoadDialogComponent', 'selector': 'file-load-dialog'},{'name': 'FlowchartControlsComponent', 'selector': 'app-flowchart-controls'},{'name': 'FlowchartViewerComponent', 'selector': 'app-flowchart-viewer'},{'name': 'GSViewerComponent', 'selector': 'gs-viewer'},{'name': 'GeometryViewerComponent', 'selector': 'app-geometry-viewer'},{'name': 'GraphEdgeComponent', 'selector': 'app-graph-edge'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HelpFundamentals', 'selector': 'app-help-fundamentals'},{'name': 'HelpModel', 'selector': 'app-help-model'},{'name': 'HelpViewerComponent', 'selector': 'app-help-viewer'},{'name': 'InfoViewerComponent', 'selector': 'app-info-viewer'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MobiusAbout', 'selector': 'app-help-about'},{'name': 'MobiusEditorComponent', 'selector': 'app-mobius-editor'},{'name': 'MobiusGalleryComponent', 'selector': 'mobius-gallery'},{'name': 'MobiusViewerComponent', 'selector': 'app-mobius-viewer'},{'name': 'MobiuscesiumComponent', 'selector': 'mobius-cesium'},{'name': 'ModuleViewerComponent', 'selector': 'app-module-viewer'},{'name': 'ModuleboxComponent', 'selector': 'app-modulebox'},{'name': 'NodeLibraryComponent', 'selector': 'app-node-library'},{'name': 'PanelComponent', 'selector': 'app-panel'},{'name': 'ParameterEditorComponent', 'selector': 'app-parameter-editor'},{'name': 'ParameterSettingsDialogComponent', 'selector': 'parameter-settings-dialog'},{'name': 'ParameterViewerComponent', 'selector': 'app-parameter-viewer'},{'name': 'ProcedureEditorComponent', 'selector': 'app-procedure-editor'},{'name': 'ProcedureItemComponent', 'selector': 'app-procedure-item'},{'name': 'PublishComponent', 'selector': 'app-publish'},{'name': 'PublishSettingsComponent', 'selector': 'app-publish-settings'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'TextViewerComponent', 'selector': 'app-text-viewer'},{'name': 'ToolwindowComponent', 'selector': 'app-toolwindow'},{'name': 'ViewerComponent', 'selector': 'app-viewer'},{'name': 'ViewerComponent', 'selector': 'cesium-viewer'},{'name': 'ViewerContainerComponent', 'selector': 'app-viewer-container'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingComponent.html":{"url":"components/SettingComponent.html","title":"component - SettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/gs-viewer/setting/setting.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-setting\n            \n\n            \n                styleUrls\n                setting.component.css\n            \n\n\n\n            \n                templateUrl\n                ./setting.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _centersize\n                            \n                            \n                                _centerx\n                            \n                            \n                                _centery\n                            \n                            \n                                _centerz\n                            \n                            \n                                _linepre\n                            \n                            \n                                _pointpre\n                            \n                            \n                                _pointsize\n                            \n                            \n                                alight\n                            \n                            \n                                axisVisible\n                            \n                            \n                                frameVisible\n                            \n                            \n                                gridVisible\n                            \n                            \n                                hue\n                            \n                            \n                                lightness\n                            \n                            \n                                nomalVisible\n                            \n                            \n                                pointVisible\n                            \n                            \n                                raycaster\n                            \n                            \n                                saturation\n                            \n                            \n                                scene\n                            \n                            \n                                shadowVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeaxis\n                            \n                            \n                                changecenter\n                            \n                            \n                                changeframe\n                            \n                            \n                                changegrid\n                            \n                            \n                                changelight\n                            \n                            \n                                changeline\n                            \n                            \n                                changenormal\n                            \n                            \n                                changepoint\n                            \n                            \n                                changepointsize\n                            \n                            \n                                changeshadow\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setting\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/gs-viewer/setting/setting.component.ts:92\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                    DataService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeaxis\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeaxis()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/gs-viewer/setting/setting.component.ts:193\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changecenter\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangecenter(centerx: , centery: , centerz: , centersize: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/gs-viewer/setting/setting.component.ts:129\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        centerx\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        centery\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        centerz\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        centersize\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeframe\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeframe()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/gs-viewer/setting/setting.component.ts:232\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changegrid\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangegrid()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/gs-viewer/setting/setting.component.ts:113\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changelight\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangelight(_hue: , _saturation: , _lightness: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/gs-viewer/setting/setting.component.ts:221\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _hue\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        _saturation\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        _lightness\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeline\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeline(lineprecision: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/gs-viewer/setting/setting.component.ts:146\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lineprecision\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changenormal\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangenormal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/gs-viewer/setting/setting.component.ts:254\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changepoint\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangepoint()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/gs-viewer/setting/setting.component.ts:152\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changepointsize\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangepointsize(pointsize: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/gs-viewer/setting/setting.component.ts:178\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pointsize\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeshadow\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeshadow()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/gs-viewer/setting/setting.component.ts:205\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/gs-viewer/setting/setting.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setting\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetting(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/gs-viewer/setting/setting.component.ts:276\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _centersize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _centersize:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gs-viewer/setting/setting.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _centerx\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _centerx:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gs-viewer/setting/setting.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _centery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _centery:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gs-viewer/setting/setting.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _centerz\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _centerz:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gs-viewer/setting/setting.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _linepre\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _linepre:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gs-viewer/setting/setting.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _pointpre\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _pointpre:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gs-viewer/setting/setting.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _pointsize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _pointsize:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gs-viewer/setting/setting.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alight\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alight:     THREE.HemisphereLight\n\n                    \n                \n                    \n                        \n                            Type :     THREE.HemisphereLight\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gs-viewer/setting/setting.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            axisVisible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        axisVisible:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gs-viewer/setting/setting.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            frameVisible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        frameVisible:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gs-viewer/setting/setting.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridVisible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gridVisible:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gs-viewer/setting/setting.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hue:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gs-viewer/setting/setting.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightness\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lightness:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gs-viewer/setting/setting.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nomalVisible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nomalVisible:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gs-viewer/setting/setting.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pointVisible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pointVisible:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gs-viewer/setting/setting.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            raycaster\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        raycaster:     THREE.Raycaster\n\n                    \n                \n                    \n                        \n                            Type :     THREE.Raycaster\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gs-viewer/setting/setting.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saturation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        saturation:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gs-viewer/setting/setting.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scene\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scene:     THREE.Scene\n\n                    \n                \n                    \n                        \n                            Type :     THREE.Scene\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gs-viewer/setting/setting.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shadowVisible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shadowVisible:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/gs-viewer/setting/setting.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import * as THREE from 'three';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { AngularSplitModule } from 'angular-split';\nimport { ViewerComponent } from '../viewer/viewer.component';\nimport {DataService} from '../data/data.service';\n\n@Component({\n  selector: 'app-setting',\n  templateUrl: './setting.component.html',\n  styleUrls: ['./setting.component.css']\n})\nexport class SettingComponent implements OnInit {\n\n  scene:THREE.Scene;\n  alight:THREE.HemisphereLight;\n  gridVisible: boolean; \n  axisVisible: boolean; \n  shadowVisible: boolean; \n  hue:number;\n  saturation:number;\n  lightness:number;\n  frameVisible:boolean;\n  _centerx:number;\n  _centery:number;\n  _centerz:number;\n  _centersize:number;\n  raycaster:THREE.Raycaster;\n  _linepre:number;\n  _pointpre:number;\n  _pointsize:number;\n  nomalVisible:boolean;\n  pointVisible:boolean;\n\n  ngOnInit(){\n    if(this.hue == undefined) {\n        this.hue = 0;\n    } else {\n      this.hue=this.dataService.hue;\n    }\n    if(this.saturation == undefined) {\n        this.saturation = 0.01;\n    } else {\n      this.saturation=this.dataService.saturation;\n    }\n    if(this.lightness == undefined) {\n        this.lightness = 0.47;\n    } else {\n      this.lightness=this.dataService.lightness;\n    }\n    this.gridVisible=this.dataService.grid;\n    this.axisVisible=this.dataService.axis;\n    this.shadowVisible=this.dataService.shadow;\n    this.frameVisible=this.dataService.frame;\n    this.pointVisible=this.dataService.point;\n    if(this._centerx==undefined){\n      this._centerx=0;\n    }else{\n      this._centerx=this.dataService.centerx;\n    }\n     if(this._centery==undefined){\n      this._centery=0;\n    }else{\n      this._centery=this.dataService.centery;\n    }\n    if(this._centerz==undefined){\n      this._centerz=0;\n    }else{\n      this._centerz=this.dataService.centerz;\n    }\n    if(this._centersize==undefined){\n      this._centersize=100;\n    }else{\n      this._centersize=this.dataService.centersize;\n    }\n    this.raycaster=this.dataService.getraycaster();\n    if(this._linepre==undefined){\n      this._linepre=0.05;\n    }else{\n      this._linepre=this.raycaster.linePrecision;\n    }\n    if(this._pointpre==undefined){\n      this._pointpre=1;\n    }else{\n      this._pointpre=this.raycaster.params.Points.threshold;\n    }\n    if(this._pointsize==undefined){\n      this._pointsize=1;\n    }else{\n      this._pointsize=this.dataService.pointsize;\n    }\n    \n  }\n\n  constructor(private dataService: DataService){\n\n    // avoid manipulating the scene here\n    // shift to dataservice\n    this.scene = this.dataService.getScene();\n    this.alight=this.dataService.getalight();\n    this.hue=this.dataService.hue;\n    this.saturation=this.dataService.saturation;\n    this.lightness=this.dataService.lightness;\n    this._centerx=this.dataService.centerx;\n    this._centery=this.dataService.centery;\n    this._centerz=this.dataService.centerz;\n    this._centersize=this.dataService.centersize;\n    this.raycaster=this.dataService.getraycaster();\n    this._linepre=this.raycaster.linePrecision;\n    this._pointpre=this.raycaster.params.Points.threshold;\n    this._pointsize=this.dataService.pointsize;\n  }\n\n  changegrid(){\n    this.gridVisible = !this.gridVisible;\n    if(this.gridVisible){\n      var gridhelper=new THREE.GridHelper( 100, 100);\n      gridhelper.name=\"GridHelper\";\n      var vector=new THREE.Vector3(0,1,0);\n      gridhelper.lookAt(vector);\n      this.scene.add( gridhelper);\n\n    }else{\n      this.scene.remove(this.scene.getObjectByName(\"GridHelper\"));\n    }\n    this.dataService.addgrid(this.gridVisible);\n  }\n\n\n  changecenter(centerx,centery,centerz,centersize){\n    if(this.gridVisible){\n      var gridhelper=this.scene.getObjectByName(\"GridHelper\");\n      gridhelper=new THREE.GridHelper(centersize,centersize);\n      gridhelper.position.set(centerx,centery,centerz);\n      console.log(gridhelper)\n      this._centerx=centerx;\n      this._centery=centery;\n      this._centerz=centerz;\n      this._centersize=centersize;\n      this.dataService.getcenterx(centerx);\n      this.dataService.getcentery(centery);\n      this.dataService.getcenterz(centerz);\n      this.dataService.getcentersize(centersize);\n    }\n  }\n\n  changeline(lineprecision){\n    this._linepre=lineprecision;\n    this.raycaster.linePrecision=lineprecision;\n    this.dataService.addraycaster(this.raycaster);\n  }\n\n  changepoint(){\n    this.pointVisible = !this.pointVisible;\n    var children:any=[];\n    for(var i=0;i\n    \n\n    \n        \n   grid\n   axis\n   shadow\n   frame\n   nomal -->\n   point\n  \n  Grid Center\n  X\n  &nbsp;&nbsp;&nbsp;&nbsp;Y\n  &nbsp;&nbsp;&nbsp;&nbsp;Z\n  &nbsp;&nbsp;&nbsp;&nbsp;Size\n  &nbsp;&nbsp;&nbsp;&nbsp;Get\n  Set -->\n  &nbsp;&nbsp;&nbsp;&nbsp;Raycaster Precision&nbsp;&nbsp;-->\n  Line Precision\n  {{linepre.value.toPrecision(2)}}\n  Point Precision\n  {{pointpre.value.toPrecision(2)}} -->\n  Points Size&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n  {{pointsize.value.toPrecision(2)}}\n\n  Hemisphere Light&nbsp;&nbsp;\n  hue&nbsp;&nbsp;&nbsp;\n  {{slider.value.toPrecision(2)}}\n  saturation\n  {{slider1.value.toPrecision(2)}}\n  lightness\n  {{slider2.value.toPrecision(2)}}\n  opacity&nbsp;&nbsp;&nbsp;\n  {{slider3.value.toPrecision(2)}} -->\n  &nbsp;&nbsp;&nbsp;&nbsp;Backeground Color&nbsp;&nbsp;\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;R\n  {{slider4.value.toPrecision(2)}}\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;G\n  {{slider5.value.toPrecision(2)}}\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;B\n  {{slider6.value.toPrecision(2)}} -->\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   grid   axis   shadow   frame   nomal -->   point    Grid Center  X      Y      Z      Size      Get  Set -->      Raycaster Precision  -->  Line Precision  {{linepre.value.toPrecision(2)}}  Point Precision  {{pointpre.value.toPrecision(2)}} -->  Points Size        {{pointsize.value.toPrecision(2)}}  Hemisphere Light    hue     {{slider.value.toPrecision(2)}}  saturation  {{slider1.value.toPrecision(2)}}  lightness  {{slider2.value.toPrecision(2)}}  opacity     {{slider3.value.toPrecision(2)}} -->      Backeground Color           R  {{slider4.value.toPrecision(2)}}         G  {{slider5.value.toPrecision(2)}}         B  {{slider6.value.toPrecision(2)}} -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CesiumViewerComponent', 'selector': 'app-cesium-viewer'},{'name': 'CodeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ConsoleComponent', 'selector': 'app-console'},{'name': 'DataComponent', 'selector': 'app-data'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FileLoadDialogComponent', 'selector': 'file-load-dialog'},{'name': 'FlowchartControlsComponent', 'selector': 'app-flowchart-controls'},{'name': 'FlowchartViewerComponent', 'selector': 'app-flowchart-viewer'},{'name': 'GSViewerComponent', 'selector': 'gs-viewer'},{'name': 'GeometryViewerComponent', 'selector': 'app-geometry-viewer'},{'name': 'GraphEdgeComponent', 'selector': 'app-graph-edge'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HelpFundamentals', 'selector': 'app-help-fundamentals'},{'name': 'HelpModel', 'selector': 'app-help-model'},{'name': 'HelpViewerComponent', 'selector': 'app-help-viewer'},{'name': 'InfoViewerComponent', 'selector': 'app-info-viewer'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MobiusAbout', 'selector': 'app-help-about'},{'name': 'MobiusEditorComponent', 'selector': 'app-mobius-editor'},{'name': 'MobiusGalleryComponent', 'selector': 'mobius-gallery'},{'name': 'MobiusViewerComponent', 'selector': 'app-mobius-viewer'},{'name': 'MobiuscesiumComponent', 'selector': 'mobius-cesium'},{'name': 'ModuleViewerComponent', 'selector': 'app-module-viewer'},{'name': 'ModuleboxComponent', 'selector': 'app-modulebox'},{'name': 'NodeLibraryComponent', 'selector': 'app-node-library'},{'name': 'PanelComponent', 'selector': 'app-panel'},{'name': 'ParameterEditorComponent', 'selector': 'app-parameter-editor'},{'name': 'ParameterSettingsDialogComponent', 'selector': 'parameter-settings-dialog'},{'name': 'ParameterViewerComponent', 'selector': 'app-parameter-viewer'},{'name': 'ProcedureEditorComponent', 'selector': 'app-procedure-editor'},{'name': 'ProcedureItemComponent', 'selector': 'app-procedure-item'},{'name': 'PublishComponent', 'selector': 'app-publish'},{'name': 'PublishSettingsComponent', 'selector': 'app-publish-settings'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'TextViewerComponent', 'selector': 'app-text-viewer'},{'name': 'ToolwindowComponent', 'selector': 'app-toolwindow'},{'name': 'ViewerComponent', 'selector': 'app-viewer'},{'name': 'ViewerComponent', 'selector': 'cesium-viewer'},{'name': 'ViewerContainerComponent', 'selector': 'app-viewer-container'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ShortNamePipe.html":{"url":"pipes/ShortNamePipe.html","title":"pipe - ShortNamePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  ShortNamePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/short-name.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        shortname\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: string, length: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/short-name.pipe.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        length\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n/*\n * Shortens a name to a certain length and appends \"...\" infront of it\n * Usage:\n *   value | length:number\n * Example:\n *   {{ \"some_very_long_string\" | length:7 }}\n *   formats to: some_ve...\n*/\n@Pipe({name: 'shortname'})\nexport class ShortNamePipe implements PipeTransform {\n  transform(value: string, length: number): string {\n  \t\tif(value.length > length-3){\n  \t\t\treturn value.slice(0, length-3) + \"...\"\n  \t\t}else{\n  \t\t\treturn value;\n  \t\t}\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SimpleNamePipe.html":{"url":"pipes/SimpleNamePipe.html","title":"pipe - SimpleNamePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  SimpleNamePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/simple-name.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        simplename\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/simple-name.pipe.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n/*\n * Shortens a name to a certain length and appends \"...\" infront of it\n * Usage:\n *   value | length:number\n * Example:\n *   {{ \"some_very_long_string\" | length:7 }}\n *   formats to: some_ve...\n*/\n@Pipe({name: 'simplename'})\nexport class SimpleNamePipe implements PipeTransform {\n  transform(value: string): string {\n  \t\tif (value.endsWith(\".mob\")){\n  \t\t\tvalue = value.substr(0, value.length - 4);\n  \t\t}\n  \t\tvalue = value.split(\"_\").join(\" \");\n  \t\tvalue = value.split(\"-\").join(\" \");\n  \t\treturn value;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatementProcedure.html":{"url":"classes/StatementProcedure.html","title":"class - StatementProcedure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatementProcedure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/base-classes/procedure/StatementProcedure.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Procedure\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _children\n                            \n                            \n                                    Private\n                                _disabled\n                            \n                            \n                                    Private\n                                _error\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Protected\n                                _leftComponent\n                            \n                            \n                                    Private\n                                _level\n                            \n                            \n                                    Private\n                                _parent\n                            \n                            \n                                    Private\n                                _printToConsole\n                            \n                            \n                                    Protected\n                                _rightComponent\n                            \n                            \n                                    Private\n                                _selected\n                            \n                            \n                                    Private\n                                _type\n                            \n                            \n                                    Public\n                                hasChildren\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                update\n                            \n                            \n                                getCodeString\n                            \n                            \n                                hasParent\n                            \n                            \n                                reset\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: ProcedureTypes)\n                    \n                \n                        \n                            \n                                Defined in src/app/base-classes/procedure/StatementProcedure.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                    ProcedureTypes\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _children\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _children:     IProcedure[]\n\n                    \n                \n                    \n                        \n                            Type :     IProcedure[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _disabled:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _error:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _leftComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _leftComponent:     IComponent\n\n                    \n                \n                    \n                        \n                            Type :     IComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _level\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _level:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _parent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _parent:     IProcedure\n\n                    \n                \n                    \n                        \n                            Type :     IProcedure\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _printToConsole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _printToConsole:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _rightComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _rightComponent:     IComponent\n\n                    \n                \n                    \n                        \n                            Type :     IComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _selected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selected:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _type:     ProcedureTypes\n\n                    \n                \n                    \n                        \n                            Type :     ProcedureTypes\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasChildren\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasChildren:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:23\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(prodData: any, parent: IProcedure)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/procedure/StatementProcedure.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prodData\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parent\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCodeString\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCodeString(code_generator: ICodeGenerator)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:124\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        code_generator\n                                                        \n                                                                    ICodeGenerator\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasParent\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasParent()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:117\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(prodData: any, parent: IProcedure)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:137\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prodData\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parent\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Procedure} from \"./Procedure\";\nimport {IProcedure} from \"./IProcedure\";\nimport {ProcedureTypes} from \"./ProcedureTypes\";\nimport {IComponent} from \"./IComponent\";\n\nexport class StatementProcedure extends Procedure{\n\n\tconstructor(type: ProcedureTypes){\n\t\tsuper(type, false); \n\n\t\tlet exp: string;\n\t\tif(type == ProcedureTypes.LoopBreak){\n\t\t\texp = \"break\";\n\t\t}\n\t\telse if(type == ProcedureTypes.LoopContinue){\n\t\t\texp = \"continue\";\n\t\t}\n\t\telse if(type == ProcedureTypes.Comment){\n\t\t\texp = \"Comment: Add notes\";\n\t\t}\n\n\t\tlet left: IComponent = { expression: exp, \n\t\t\t\t\t\t\t\t isAction: false, \n\t\t\t\t\t\t\t\t module: undefined, \n\t\t\t\t\t\t\t\t category: undefined, \n\t\t\t\t\t\t\t\t fn_name: undefined,\n\t\t\t\t\t\t\t\t params: undefined\n\t\t\t\t\t\t\t\t}\n\n\t\tsuper.left = (left);\n\t\tsuper.right = (undefined);\n\n\t}\n\n\tupdate(prodData: any, parent: IProcedure): void{\n\t\tsuper.update(prodData, parent);\n\t\tthis._leftComponent.expression = prodData._leftComponent.expression;\n\t}\n\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextViewerComponent.html":{"url":"components/TextViewerComponent.html","title":"component - TextViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui-components/viewers/text-viewer/text-viewer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-text-viewer\n            \n\n            \n                styleUrls\n                text-viewer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./text-viewer.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _outResults\n                            \n                            \n                                    Private\n                                active_node\n                            \n                            \n                                    Private\n                                port\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getText\n                            \n                            \n                                isJSON\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                render_node\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_fs: FlowchartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui-components/viewers/text-viewer/text-viewer.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _fs\n                                                  \n                                                        \n                                                                    FlowchartService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getText(output: OutputPort)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/viewers/text-viewer/text-viewer.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        output\n                                                        \n                                                                    OutputPort\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isJSON\n                            \n                            \n                        \n                    \n                \n                \n                    \nisJSON(output: OutputPort)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/viewers/text-viewer/text-viewer.component.ts:104\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        output\n                                                        \n                                                                    OutputPort\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/viewers/text-viewer/text-viewer.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/viewers/text-viewer/text-viewer.component.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render_node\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender_node(node: IGraphNode)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/viewers/text-viewer/text-viewer.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    IGraphNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _outResults\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _outResults:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/ui-components/viewers/text-viewer/text-viewer.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            active_node\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        active_node:     IGraphNode\n\n                    \n                \n                    \n                        \n                            Type :     IGraphNode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/viewers/text-viewer/text-viewer.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            port\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        port:     IPort\n\n                    \n                \n                    \n                        \n                            Type :     IPort\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/viewers/text-viewer/text-viewer.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/viewers/text-viewer/text-viewer.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Injector, OnInit } from '@angular/core';\n\nimport { IGraphNode } from '../../../base-classes/node/NodeModule';\nimport { IPort, OutputPort } from '../../../base-classes/port/PortModule';\n\nimport CircularJSON from 'circular-json';\nimport * as js_beautify from 'js-beautify';\n\nimport { FlowchartService } from '../../../global-services/flowchart.service';\n\n@Component({\n  selector: 'app-text-viewer',\n  templateUrl: './text-viewer.component.html',\n  styleUrls: ['./text-viewer.component.scss']\n})\nexport class TextViewerComponent implements OnInit {\n\n\tprivate subscriptions = [];\n\tprivate active_node: IGraphNode;\n\tprivate port: IPort;\n\t_outResults;\n\n\tconstructor(private _fs: FlowchartService){}\n\n\tngOnInit(){\n\t\tthis.subscriptions.push(this._fs.node$.subscribe( (node) => { this.active_node = node; this.render_node(node) } ));\n\t}\n\n\tngOnDestroy(){\n\t\tthis.subscriptions.map(function(s){\n\t  \ts.unsubscribe();\n\t\t})\n\t}\n\n\n\trender_node(node: IGraphNode) :void{\n\n\t\ttry{\n\t\t\tlet self = this;\n\t\t\tthis._outResults = node.outputs.map(function(output){\n\t\t\t\tlet name = output.name;\n\t\t\t\tlet isJSON = self.isJSON(output);\n\t\t\t\tlet text = self.getText(output);\n\t\t\t\tlet value = output.value;\n\t\t\t\tlet outObj = {name: name, isJSON: isJSON, text: text, value: value}\n\t\t\t\treturn outObj;\n\t\t\t})\n\t\t}\n\t\tcatch(ex){\n\n\t\t}\n\t}\n\n\tprivate getText(output: OutputPort): string{\n\t\ttry{\n\t\t\tlet val = output.value;\n\n\t\t\tif(val){\n\t\t\t\tlet result = val;\n\n\t\t\t\tif(Array.isArray(val)){\n\t\t\t\t\tresult = \"Array(\" + val.length + \" items)\"\n\t\t\t\t}\n\t\t\t\telse if(typeof(val) == \"object\"){\n\t\t\t\t\tlet strRep: string = val.toString();\n\t\t\t\t\tif(strRep !== \"[object Object]\"){\n\t\t\t\t\t\tresult = strRep.replace(/\\n/g, '');\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tlet keys = Object.keys(val);\n\t\t\t\t\t\tresult = \"JSON Object\"\n\t\t\t\t\t\tresult += output.name;\n\t\t\t\t\t\tresult += \"\" + keys.map(function(k){\n\t\t\t\t\t\t\tlet type: string = typeof(val[k]);\n\t\t\t\t\t\t\tif (Array.isArray(val[k])){\n\t\t\t\t\t\t\t\ttype = \"array(\" + val[k].length + \" items)\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if(type == \"string\"){\n\t\t\t\t\t\t\t\ttype = \"\\\"\" + val[k] + \"\\\"\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if(type == \"number\"){\n\t\t\t\t\t\t\t\ttype = val[k];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if(type == \"object\"){\n\t\t\t\t\t\t\t\ttype = \"\" + type + \"\";\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn \"\" + k + \" :: \"+  type + \"\";\n\t\t\t\t\t\t}).join(\"\") + \"\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\telse{\n\t\t\t\treturn \"no-value-available\";\n\t\t\t}\n\t\t}\n\t\tcatch(ex){\n\t\t\treturn \"error-generating-input\";\n\t\t}\n\t}\n\n\tisJSON(output: OutputPort): boolean{\n\t\tlet val = output.value;\n\t\treturn (typeof(val) == \"object\" && val.toString() == \"[object Object]\");\n\t}\n\n}\n\n    \n\n    \n        \n\tNo Node Selected\n\n\n\n\tSelected Node: {{_selectedNode.getName()}}\n\t -->\n\t\n\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t  {{ output.name }}\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t  \n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t{{output.value}}\n\n\t\t\t\t\n\n\t\t\t\t -->\n\t\t\t\t\n\t\t\t\t -->\n\n\t\t\t\n\t\t\t\n\t\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\tNo Node Selected\tSelected Node: {{_selectedNode.getName()}}\t -->\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {{ output.name }}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t\t\t\t\t{{output.value}}\t\t\t\t\t\t\t\t -->\t\t\t\t\t\t\t\t -->\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CesiumViewerComponent', 'selector': 'app-cesium-viewer'},{'name': 'CodeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ConsoleComponent', 'selector': 'app-console'},{'name': 'DataComponent', 'selector': 'app-data'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FileLoadDialogComponent', 'selector': 'file-load-dialog'},{'name': 'FlowchartControlsComponent', 'selector': 'app-flowchart-controls'},{'name': 'FlowchartViewerComponent', 'selector': 'app-flowchart-viewer'},{'name': 'GSViewerComponent', 'selector': 'gs-viewer'},{'name': 'GeometryViewerComponent', 'selector': 'app-geometry-viewer'},{'name': 'GraphEdgeComponent', 'selector': 'app-graph-edge'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HelpFundamentals', 'selector': 'app-help-fundamentals'},{'name': 'HelpModel', 'selector': 'app-help-model'},{'name': 'HelpViewerComponent', 'selector': 'app-help-viewer'},{'name': 'InfoViewerComponent', 'selector': 'app-info-viewer'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MobiusAbout', 'selector': 'app-help-about'},{'name': 'MobiusEditorComponent', 'selector': 'app-mobius-editor'},{'name': 'MobiusGalleryComponent', 'selector': 'mobius-gallery'},{'name': 'MobiusViewerComponent', 'selector': 'app-mobius-viewer'},{'name': 'MobiuscesiumComponent', 'selector': 'mobius-cesium'},{'name': 'ModuleViewerComponent', 'selector': 'app-module-viewer'},{'name': 'ModuleboxComponent', 'selector': 'app-modulebox'},{'name': 'NodeLibraryComponent', 'selector': 'app-node-library'},{'name': 'PanelComponent', 'selector': 'app-panel'},{'name': 'ParameterEditorComponent', 'selector': 'app-parameter-editor'},{'name': 'ParameterSettingsDialogComponent', 'selector': 'parameter-settings-dialog'},{'name': 'ParameterViewerComponent', 'selector': 'app-parameter-viewer'},{'name': 'ProcedureEditorComponent', 'selector': 'app-procedure-editor'},{'name': 'ProcedureItemComponent', 'selector': 'app-procedure-item'},{'name': 'PublishComponent', 'selector': 'app-publish'},{'name': 'PublishSettingsComponent', 'selector': 'app-publish-settings'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'TextViewerComponent', 'selector': 'app-text-viewer'},{'name': 'ToolwindowComponent', 'selector': 'app-toolwindow'},{'name': 'ViewerComponent', 'selector': 'app-viewer'},{'name': 'ViewerComponent', 'selector': 'cesium-viewer'},{'name': 'ViewerContainerComponent', 'selector': 'app-viewer-container'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewerContainerComponent.html":{"url":"components/ViewerContainerComponent.html","title":"component - ViewerContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ViewerContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui-components/viewers/viewer-container/viewer-container.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-viewer-container\n            \n\n            \n                styleUrls\n                viewer-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./viewer-container.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                active_node\n                            \n                            \n                                active_viewer\n                            \n                            \n                                    Static\n                                ComponentMap\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                            \n                                vc\n                            \n                            \n                                views\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createView\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                set_view\n                            \n                            \n                                showConsole\n                            \n                            \n                                showHelp\n                            \n                            \n                                update_viewer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                viewer_mode\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_fs: FlowchartService, injector: Injector, r: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui-components/viewers/viewer-container/viewer-container.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _fs\n                                                  \n                                                        \n                                                                    FlowchartService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        r\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        viewer_mode\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui-components/viewers/viewer-container/viewer-container.component.ts:34\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createView\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createView(component_name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/viewers/viewer-container/viewer-container.component.ts:120\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        component_name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/viewers/viewer-container/viewer-container.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/viewers/viewer-container/viewer-container.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set_view\n                            \n                            \n                        \n                    \n                \n                \n                    \nset_view(node: IGraphNode)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/viewers/viewer-container/viewer-container.component.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    IGraphNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showConsole\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowConsole()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/viewers/viewer-container/viewer-container.component.ts:112\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showHelp\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowHelp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/viewers/viewer-container/viewer-container.component.ts:116\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update_viewer\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate_viewer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui-components/viewers/viewer-container/viewer-container.component.ts:102\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            active_node\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        active_node:     IGraphNode\n\n                    \n                \n                    \n                        \n                            Type :     IGraphNode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/viewers/viewer-container/viewer-container.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active_viewer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        active_viewer:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"info-viewer\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/viewers/viewer-container/viewer-container.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            ComponentMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ComponentMap:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\t\t\"three-viewer\" : GeometryViewerComponent,\n\t\t\"cesium-viewer\" : CesiumViewerComponent,\n\t\t\"text-viewer\": TextViewerComponent, \n\t\t\"code-viewer\": CodeViewerComponent, \n\t\t\"console-viewer\": ConsoleComponent, \n\t\t\"help-viewer\": HelpViewerComponent, \n\t\t\"info-viewer\": InfoViewerComponent \n\t}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/viewers/viewer-container/viewer-container.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/viewers/viewer-container/viewer-container.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            vc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        vc:     ViewContainerRef\n\n                    \n                \n                    \n                        \n                            Type :     ViewContainerRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/viewers/viewer-container/viewer-container.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            views\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        views:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui-components/viewers/viewer-container/viewer-container.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Injector, Input, \n\t\t ViewChild, ViewContainerRef, \n\t\t ComponentFactoryResolver } from '@angular/core';\n\nimport {GeometryViewerComponent} from '../geometry-viewer/geometry-viewer.component';\nimport {CesiumViewerComponent} from '../cesium-viewer/cesium-viewer.component';\nimport {TextViewerComponent} from '../text-viewer/text-viewer.component';\nimport {CodeViewerComponent} from '../code-viewer/code-viewer.component';\nimport {ConsoleComponent} from '../../console/console.component';\nimport {HelpViewerComponent} from '../../help/help-viewer/help-viewer.component';\nimport {InfoViewerComponent} from '../../help/info-viewer/info-viewer.component';\n\nimport { IGraphNode } from '../../../base-classes/node/NodeModule';\nimport { FlowchartService } from '../../../global-services/flowchart.service';\n\n@Component({\n  selector: 'app-viewer-container',\n  templateUrl: './viewer-container.component.html',\n  styleUrls: ['./viewer-container.component.scss']\n})\nexport class ViewerContainerComponent implements OnInit {\n\n\tstatic ComponentMap = {\n\t\t\"three-viewer\" : GeometryViewerComponent,\n\t\t\"cesium-viewer\" : CesiumViewerComponent,\n\t\t\"text-viewer\": TextViewerComponent, \n\t\t\"code-viewer\": CodeViewerComponent, \n\t\t\"console-viewer\": ConsoleComponent, \n\t\t\"help-viewer\": HelpViewerComponent, \n\t\t\"info-viewer\": InfoViewerComponent \n\t}\n\n\t@ViewChild('vc', {read: ViewContainerRef}) vc: ViewContainerRef;\n\t@Input() viewer_mode: boolean = false;\n\n\n    private subscriptions = [];\n    private active_node: IGraphNode;\n\n    views = [];\n\tactive_viewer: string = \"info-viewer\";\n\n    constructor(private _fs: FlowchartService, \n    \t\t\tprivate injector: Injector, \n    \t\t\tprivate r: ComponentFactoryResolver){}\n\n    ngOnInit(){\n      this.subscriptions.push(this._fs.node$.subscribe( (node) => this.set_view(node) ));\n    }\n\n    ngOnDestroy(){\n      this.subscriptions.map(function(s){\n        s.unsubscribe();\n      })\n    }\n\n    set_view(node: IGraphNode){\n    \t\n    \tlet portType;\n    \tif(node){\n\t\t\tthis.active_node = node;\n\t\t\tportType = parseInt((this.active_node.outputs[0].type).toString());\n\t\t}\n\t\telse{\n\t\t\tthis.active_node = undefined;\n\t\t\tportType = 3;\n\t\t}\n\n\t\tlet viewer_name: string;\n\t\tswitch(portType){\n\t\t\t// case 0: \n\t\t\t// \tthis.active_viewer = \"three-viewer\"\n\t\t\t// \tbreak;\n\t\t\tcase 1: \n\t\t\t\tviewer_name = \"code-viewer\";\n\t\t\t\tbreak;\n\t\t\tcase 2: \n\t\t\t\tviewer_name = \"text-viewer\";\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tviewer_name = \"console-viewer\";\n\t\t\t\tbreak;\n\t\t\tcase 4: \n\t\t\t\tviewer_name = \"cesium-viewer\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tviewer_name = \"console-viewer\";\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// if same as before, don't update\n\t\tif(this.active_viewer == viewer_name){\n\t\t\treturn;\n\t\t}\n\t\telse{\n\t\t\tthis.active_viewer = viewer_name;\n\t\t\tthis.update_viewer();\n\t\t}\n\n    }\n\n    update_viewer(){\n\t\t// update the view\n\t\tif( !this.views[this.active_viewer] ){\n\t\t\tthis.views[this.active_viewer] = this.createView(this.active_viewer);\n\t\t}\n\n\t\tthis.vc.detach();\n\t\tthis.vc.insert(this.views[ this.active_viewer ]);\n    }\n\n\tshowConsole(){\n\t\tthis.active_viewer = \"console-viewer\";\n\t}\n\n\tshowHelp(){\n\t\tthis.active_viewer = \"help-viewer\";\n\t}\n\n\tprivate createView(component_name: string){\n\n\t\tlet component = ViewerContainerComponent.ComponentMap[component_name];\n\t\tlet factory = this.r.resolveComponentFactory(component);\n   \t\tlet componentRef = factory.create(this.injector);\n   \t\tif(component_name == \"cesium-viewer\"){\n   \t\t\tcomponentRef.instance[\"mode\"] = this.viewer_mode ? \"viewer\" : \"editor\";\n   \t\t}\n    \tlet view = componentRef.hostView;\n    \treturn view;\n\t}\n\n}\n\n    \n\n    \n          \n\t\n\t\n\t\t\n\t\t\t\n\t\t\t  3d_rotation\n\t\t\t -->\n\t\t\t\n\t\t\t  public\n\t\t\t\n\t\t\t\n\t\t\t  description\n\t\t\t\n\t\t\t\n\t\t\t  text_format\n\t\t\t -->\n\t\t\t\n\t\t\t  info_outline\n\t\t\t\n\t\t\t\n\t\t\t  help_outline\n\t\t\t\n\t\t\t\n\t\t\t  info\n\t\t\t\n\t\t\n\n\t\t\n\t\t\t\n\t\t\t  code\n\t\t\t\n\t\t\n\t\t\n\t\n\n\t\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  \t\t\t\t\t\t\t\t\t\t  3d_rotation\t\t\t -->\t\t\t\t\t\t  public\t\t\t\t\t\t\t\t\t  description\t\t\t\t\t\t\t\t\t  text_format\t\t\t -->\t\t\t\t\t\t  info_outline\t\t\t\t\t\t\t\t\t  help_outline\t\t\t\t\t\t\t\t\t  info\t\t\t\t\t\t\t\t\t\t\t\t\t  code\t\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CesiumViewerComponent', 'selector': 'app-cesium-viewer'},{'name': 'CodeViewerComponent', 'selector': 'app-code-viewer'},{'name': 'ConsoleComponent', 'selector': 'app-console'},{'name': 'DataComponent', 'selector': 'app-data'},{'name': 'DisplayComponent', 'selector': 'app-display'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FileLoadDialogComponent', 'selector': 'file-load-dialog'},{'name': 'FlowchartControlsComponent', 'selector': 'app-flowchart-controls'},{'name': 'FlowchartViewerComponent', 'selector': 'app-flowchart-viewer'},{'name': 'GSViewerComponent', 'selector': 'gs-viewer'},{'name': 'GeometryViewerComponent', 'selector': 'app-geometry-viewer'},{'name': 'GraphEdgeComponent', 'selector': 'app-graph-edge'},{'name': 'GroupsComponent', 'selector': 'app-groups'},{'name': 'HelpFundamentals', 'selector': 'app-help-fundamentals'},{'name': 'HelpModel', 'selector': 'app-help-model'},{'name': 'HelpViewerComponent', 'selector': 'app-help-viewer'},{'name': 'InfoViewerComponent', 'selector': 'app-info-viewer'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MobiusAbout', 'selector': 'app-help-about'},{'name': 'MobiusEditorComponent', 'selector': 'app-mobius-editor'},{'name': 'MobiusGalleryComponent', 'selector': 'mobius-gallery'},{'name': 'MobiusViewerComponent', 'selector': 'app-mobius-viewer'},{'name': 'MobiuscesiumComponent', 'selector': 'mobius-cesium'},{'name': 'ModuleViewerComponent', 'selector': 'app-module-viewer'},{'name': 'ModuleboxComponent', 'selector': 'app-modulebox'},{'name': 'NodeLibraryComponent', 'selector': 'app-node-library'},{'name': 'PanelComponent', 'selector': 'app-panel'},{'name': 'ParameterEditorComponent', 'selector': 'app-parameter-editor'},{'name': 'ParameterSettingsDialogComponent', 'selector': 'parameter-settings-dialog'},{'name': 'ParameterViewerComponent', 'selector': 'app-parameter-viewer'},{'name': 'ProcedureEditorComponent', 'selector': 'app-procedure-editor'},{'name': 'ProcedureItemComponent', 'selector': 'app-procedure-item'},{'name': 'PublishComponent', 'selector': 'app-publish'},{'name': 'PublishSettingsComponent', 'selector': 'app-publish-settings'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'SettingComponent', 'selector': 'app-setting'},{'name': 'TextViewerComponent', 'selector': 'app-text-viewer'},{'name': 'ToolwindowComponent', 'selector': 'app-toolwindow'},{'name': 'ViewerComponent', 'selector': 'app-viewer'},{'name': 'ViewerComponent', 'selector': 'cesium-viewer'},{'name': 'ViewerContainerComponent', 'selector': 'app-viewer-container'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ViewerContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WhileControlProcedure.html":{"url":"classes/WhileControlProcedure.html","title":"class - WhileControlProcedure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  WhileControlProcedure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/base-classes/procedure/WhileControlProcedure.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Procedure\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _children\n                            \n                            \n                                    Private\n                                _disabled\n                            \n                            \n                                    Private\n                                _error\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Protected\n                                _leftComponent\n                            \n                            \n                                    Private\n                                _level\n                            \n                            \n                                    Private\n                                _parent\n                            \n                            \n                                    Private\n                                _printToConsole\n                            \n                            \n                                    Protected\n                                _rightComponent\n                            \n                            \n                                    Private\n                                _selected\n                            \n                            \n                                    Private\n                                _type\n                            \n                            \n                                    Public\n                                hasChildren\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                update\n                            \n                            \n                                getCodeString\n                            \n                            \n                                hasParent\n                            \n                            \n                                reset\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data?: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/base-classes/procedure/WhileControlProcedure.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _children\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _children:     IProcedure[]\n\n                    \n                \n                    \n                        \n                            Type :     IProcedure[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _disabled:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _error:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _leftComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _leftComponent:     IComponent\n\n                    \n                \n                    \n                        \n                            Type :     IComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _level\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _level:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _parent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _parent:     IProcedure\n\n                    \n                \n                    \n                        \n                            Type :     IProcedure\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _printToConsole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _printToConsole:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _rightComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _rightComponent:     IComponent\n\n                    \n                \n                    \n                        \n                            Type :     IComponent\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _selected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selected:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _type:     ProcedureTypes\n\n                    \n                \n                    \n                        \n                            Type :     ProcedureTypes\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasChildren\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasChildren:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:23\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(prodData: any, parent: IProcedure)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/base-classes/procedure/WhileControlProcedure.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prodData\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parent\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCodeString\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCodeString(code_generator: ICodeGenerator)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:124\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        code_generator\n                                                        \n                                                                    ICodeGenerator\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasParent\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasParent()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:117\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(prodData: any, parent: IProcedure)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Procedure\n\n                                \n                            \n                        \n                            \n                                    Defined in Procedure:137\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prodData\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parent\n                                                        \n                                                                    IProcedure\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {ProcedureTypes} from \"./ProcedureTypes\";\nimport {IComponent} from \"./IComponent\";\nimport {Procedure} from \"./Procedure\";\nimport {IProcedure} from \"./IProcedure\";\n\nexport class WhileControlProcedure extends Procedure{\n\n\tconstructor(data ?: {condition: string}){\n\t\tsuper(ProcedureTypes.WhileControl, true);\n\n\t\tif(data == undefined){\n\t\t\tdata = {condition: \"conditional_expression\"}\n\t\t}\n\n\t\tlet left: IComponent = { expression: undefined, \n\t\t\t\t\t\t\t\t isAction: false, \n\t\t\t\t\t\t\t\t module: undefined, \n\t\t\t\t\t\t\t\t category: undefined, \n\t\t\t\t\t\t\t\t fn_name: undefined,\n\t\t\t\t\t\t\t\t params: undefined\n\t\t\t\t\t\t\t\t}\n\t\tlet right: IComponent = {\n\t\t\t\t\t\t\t     expression: data.condition, \n\t\t\t\t\t\t\t\t isAction: false, \n\t\t\t\t\t\t\t\t module: undefined, \n\t\t\t\t\t\t\t\t category: undefined, \n\t\t\t\t\t\t\t\t fn_name: undefined,\n\t\t\t\t\t\t\t\t params: undefined\n\t\t\t\t\t\t\t\t}\n\t\tsuper.left = (left);\n\t\tsuper.right = (right);\n\n\n\t}\n\n\tupdate(prodData: any, parent: IProcedure): void{\n\t\tsuper.update(prodData, parent);\n\n\t\tthis._leftComponent.expression = prodData._leftComponent.expression;\n\t\tthis._rightComponent.expression = prodData._rightComponent.expression;\n\t}\n\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/base-classes/code/CodeFactory.ts\n            \n            \n                class\n            \n            \n                CodeFactory\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/base-classes/code/CodeGenerator.ts\n            \n            \n                class\n            \n            \n                CodeGenerator\n            \n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                    src/app/base-classes/code/ICodeGenerator.ts\n            \n            \n                interface\n            \n            \n                ICodeGenerator\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                    src/app/base-classes/code/computation-modules/IModule.ts\n            \n            \n                interface\n            \n            \n                IModule\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/base-classes/code/computation-modules/ModuleUtils.ts\n            \n            \n                class\n            \n            \n                ModuleUtils\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                    src/app/base-classes/code/generators/javascript_generator.ts\n            \n            \n                class\n            \n            \n                CodeGeneratorJS\n            \n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                    src/app/base-classes/flowchart/Flowchart.ts\n            \n            \n                class\n            \n            \n                Flowchart\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                    src/app/base-classes/flowchart/FlowchartConnectionUtils.ts\n            \n            \n                class\n            \n            \n                FlowchartConnectionUtils\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/base-classes/flowchart/FlowchartReader.ts\n            \n            \n                class\n            \n            \n                FlowchartReader\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/base-classes/flowchart/FlowchartUtils.ts\n            \n            \n                class\n            \n            \n                FlowchartUtils\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                    src/app/base-classes/flowchart/FlowchartWriter.ts\n            \n            \n                class\n            \n            \n                FlowchartWriter\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/base-classes/flowchart/IFlowchart.ts\n            \n            \n                interface\n            \n            \n                IFlowchart\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                    src/app/base-classes/misc/GUID.ts\n            \n            \n                class\n            \n            \n                IdGenerator\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/base-classes/node/GraphNode.ts\n            \n            \n                class\n            \n            \n                GraphNode\n            \n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                    src/app/base-classes/node/IEdge.ts\n            \n            \n                interface\n            \n            \n                IEdge\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/base-classes/node/IGraphNode.ts\n            \n            \n                interface\n            \n            \n                IGraphNode\n            \n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                    src/app/base-classes/node/NodeUtils.ts\n            \n            \n                class\n            \n            \n                NodeUtils\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                    src/app/base-classes/port/IPort.ts\n            \n            \n                interface\n            \n            \n                IPort\n            \n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                    src/app/base-classes/port/InputPort.ts\n            \n            \n                class\n            \n            \n                InputPort\n            \n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                    src/app/base-classes/port/OutputPort.ts\n            \n            \n                class\n            \n            \n                OutputPort\n            \n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                    src/app/base-classes/port/Port.ts\n            \n            \n                class\n            \n            \n                FileUtils\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/base-classes/port/Port.ts\n            \n            \n                class\n            \n            \n                Port\n            \n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                    src/app/base-classes/procedure/ActionProcedure.ts\n            \n            \n                class\n            \n            \n                ActionProcedure\n            \n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                    src/app/base-classes/procedure/DataProcedure.ts\n            \n            \n                class\n            \n            \n                DataProcedure\n            \n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                    src/app/base-classes/procedure/ElseControlProcedure.ts\n            \n            \n                class\n            \n            \n                ElseControlProcedure\n            \n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                    src/app/base-classes/procedure/ElseIfControlProcedure.ts\n            \n            \n                class\n            \n            \n                ElseIfControlProcedure\n            \n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                    src/app/base-classes/procedure/ForLoopControlProcedure.ts\n            \n            \n                class\n            \n            \n                ForLoopControlProcedure\n            \n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                    src/app/base-classes/procedure/FunctionProcedure.ts\n            \n            \n                class\n            \n            \n                FunctionProcedure\n            \n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                    src/app/base-classes/procedure/IComponent.ts\n            \n            \n                interface\n            \n            \n                IComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/app/base-classes/procedure/IProcedure.ts\n            \n            \n                interface\n            \n            \n                IProcedure\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                    src/app/base-classes/procedure/IfControlProcedure.ts\n            \n            \n                class\n            \n            \n                IfControlProcedure\n            \n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                    src/app/base-classes/procedure/IfElseControlProcedure.ts\n            \n            \n                class\n            \n            \n                IfElseControlProcedure\n            \n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                    src/app/base-classes/procedure/Procedure.ts\n            \n            \n                class\n            \n            \n                Procedure\n            \n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                    src/app/base-classes/procedure/ProcedureFactory.ts\n            \n            \n                class\n            \n            \n                ProcedureFactory\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/base-classes/procedure/ProcedureUtils.ts\n            \n            \n                class\n            \n            \n                ProcedureUtils\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/app/base-classes/procedure/StatementProcedure.ts\n            \n            \n                class\n            \n            \n                StatementProcedure\n            \n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                    src/app/base-classes/procedure/WhileControlProcedure.ts\n            \n            \n                class\n            \n            \n                WhileControlProcedure\n            \n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                    src/app/base-classes/subscribers/NodeSubscriber.ts\n            \n            \n                class\n            \n            \n                NodeSubscriber\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/constants.ts\n            \n            \n                class\n            \n            \n                Constants\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/geometry-modules/Module.ts\n            \n            \n                class\n            \n            \n                Module\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/app/geometry-modules/Module.ts\n            \n            \n                interface\n            \n            \n                IModule\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/geometry-modules/gis_module.ts\n            \n            \n                class\n            \n            \n                Frame\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/geometry-modules/gis_module.ts\n            \n            \n                class\n            \n            \n                Point\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/geometry-modules/gis_module.ts\n            \n            \n                class\n            \n            \n                Polygon\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/geometry-modules/gis_module.ts\n            \n            \n                class\n            \n            \n                Polyline\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/geometry-modules/gis_module.ts\n            \n            \n                class\n            \n            \n                gis_module\n            \n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                    src/app/geometry-modules/gis_module.ts\n            \n            \n                interface\n            \n            \n                HasIsPlanar\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/global-services/code.service.ts\n            \n            \n                injectable\n            \n            \n                CodeService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/global-services/console.service.ts\n            \n            \n                injectable\n            \n            \n                ConsoleService\n            \n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                    src/app/global-services/execute.service.ts\n            \n            \n                injectable\n            \n            \n                ExecuteService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/global-services/file.service.ts\n            \n            \n                class\n            \n            \n                FileService\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/global-services/flowchart.service.ts\n            \n            \n                injectable\n            \n            \n                FlowchartService\n            \n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                    src/app/global-services/layout.service.ts\n            \n            \n                injectable\n            \n            \n                LayoutService\n            \n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                    src/app/global-services/mobius.constants.ts\n            \n            \n                variable\n            \n            \n                MOBIUS\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/global-services/mobius.service.ts\n            \n            \n                injectable\n            \n            \n                MobiusService\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/app/global-services/module.service.ts\n            \n            \n                injectable\n            \n            \n                ModuleService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/global-services/node-library.service.ts\n            \n            \n                injectable\n            \n            \n                NodeLibraryService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/global-services/selected-node.service.ts\n            \n            \n                injectable\n            \n            \n                ActiveNodeService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/gs-viewer/data/DataSubscriber.ts\n            \n            \n                class\n            \n            \n                DataSubscriber\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/gs-viewer/data/data.service.ts\n            \n            \n                injectable\n            \n            \n                DataService\n            \n            \n                0 %\n                (0/110)\n            \n        \n        \n            \n                \n                    src/app/gs-viewer/gs-viewer.component.ts\n            \n            \n                component\n            \n            \n                GSViewerComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/app/gs-viewer/setting/setting.component.ts\n            \n            \n                component\n            \n            \n                SettingComponent\n            \n            \n                0 %\n                (0/33)\n            \n        \n        \n            \n                \n                    src/app/gs-viewer/toolwindow/groups.component.ts\n            \n            \n                component\n            \n            \n                GroupsComponent\n            \n            \n                0 %\n                (0/55)\n            \n        \n        \n            \n                \n                    src/app/gs-viewer/toolwindow/toolwindow.component.ts\n            \n            \n                component\n            \n            \n                ToolwindowComponent\n            \n            \n                0 %\n                (0/65)\n            \n        \n        \n            \n                \n                    src/app/gs-viewer/viewer/viewer.component.ts\n            \n            \n                component\n            \n            \n                ViewerComponent\n            \n            \n                0 %\n                (0/67)\n            \n        \n        \n            \n                \n                    src/app/mobius-cesium/data/DataSubscriber.ts\n            \n            \n                class\n            \n            \n                DataSubscriber\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/mobius-cesium/data/data.service.ts\n            \n            \n                injectable\n            \n            \n                DataService\n            \n            \n                0 %\n                (0/55)\n            \n        \n        \n            \n                \n                    src/app/mobius-cesium/mobius-cesium.component.ts\n            \n            \n                component\n            \n            \n                MobiuscesiumComponent\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                    src/app/mobius-cesium/setting/attributes.copmponent.ts\n            \n            \n                component\n            \n            \n                SelectComponent\n            \n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                    src/app/mobius-cesium/setting/display.copmponent.ts\n            \n            \n                component\n            \n            \n                DisplayComponent\n            \n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                    src/app/mobius-cesium/setting/publish.component.ts\n            \n            \n                component\n            \n            \n                PublishComponent\n            \n            \n                0 %\n                (0/35)\n            \n        \n        \n            \n                \n                    src/app/mobius-cesium/setting/setting.component.ts\n            \n            \n                component\n            \n            \n                SettingComponent\n            \n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                    src/app/mobius-cesium/setting/visualise.component.ts\n            \n            \n                component\n            \n            \n                DataComponent\n            \n            \n                0 %\n                (0/45)\n            \n        \n        \n            \n                \n                    src/app/mobius-cesium/viewer/viewer.component.ts\n            \n            \n                component\n            \n            \n                ViewerComponent\n            \n            \n                0 %\n                (0/36)\n            \n        \n        \n            \n                \n                    src/app/mobius-cesium/viewer/viewer.component.ts\n            \n            \n                class\n            \n            \n                FileUtils\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/pipes/port-type-name.pipe.ts\n            \n            \n                pipe\n            \n            \n                PortTypePipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/pipes/short-name.pipe.ts\n            \n            \n                pipe\n            \n            \n                ShortNamePipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/pipes/simple-name.pipe.ts\n            \n            \n                pipe\n            \n            \n                SimpleNamePipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/ui-components/console/console.component.ts\n            \n            \n                component\n            \n            \n                ConsoleComponent\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                    src/app/ui-components/controls/flowchart-controls/flowchart-controls.component.ts\n            \n            \n                component\n            \n            \n                FlowchartControlsComponent\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                    src/app/ui-components/controls/main-menu/menu.component.ts\n            \n            \n                component\n            \n            \n                MenuComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/ui-components/controls/modulebox/modulebox.component.ts\n            \n            \n                component\n            \n            \n                ModuleboxComponent\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                    src/app/ui-components/controls/modulebox/modulebox.component.ts\n            \n            \n                variable\n            \n            \n                getStringForProcedureType\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/ui-components/controls/publish-settings/publish-settings.component.ts\n            \n            \n                component\n            \n            \n                PublishSettingsComponent\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                    src/app/ui-components/dialogs/file-load-dialog.component.ts\n            \n            \n                component\n            \n            \n                FileLoadDialogComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/ui-components/editors/editor/editor.component.ts\n            \n            \n                component\n            \n            \n                EditorComponent\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                    src/app/ui-components/editors/flowchart-viewer/flowchart-viewer.component.ts\n            \n            \n                component\n            \n            \n                FlowchartViewerComponent\n            \n            \n                0 %\n                (0/54)\n            \n        \n        \n            \n                \n                    src/app/ui-components/editors/flowchart-viewer/flowchart-viewer.component.ts\n            \n            \n                class\n            \n            \n                FlowchartRenderUtils\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/ui-components/editors/parameter-editor/parameter-editor.component.ts\n            \n            \n                component\n            \n            \n                ParameterEditorComponent\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                    src/app/ui-components/editors/parameter-editor/parameter-settings-dialog.component.ts\n            \n            \n                component\n            \n            \n                ParameterSettingsDialogComponent\n            \n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                    src/app/ui-components/editors/procedure-editor/procedure-editor.component.ts\n            \n            \n                component\n            \n            \n                ProcedureEditorComponent\n            \n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                    src/app/ui-components/editors/procedure-editor/procedure-item.component.ts\n            \n            \n                component\n            \n            \n                ProcedureItemComponent\n            \n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                    src/app/ui-components/graph/graph-edge/graph-edge.component.ts\n            \n            \n                component\n            \n            \n                GraphEdgeComponent\n            \n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                    src/app/ui-components/help/help-viewer/help-viewer.component.ts\n            \n            \n                component\n            \n            \n                HelpViewerComponent\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                    src/app/ui-components/help/info-viewer/help.template.ts\n            \n            \n                component\n            \n            \n                HelpFundamentals\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/ui-components/help/info-viewer/help.template.ts\n            \n            \n                component\n            \n            \n                HelpModel\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/ui-components/help/info-viewer/help.template.ts\n            \n            \n                component\n            \n            \n                MobiusAbout\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/ui-components/help/info-viewer/info-viewer.component.ts\n            \n            \n                component\n            \n            \n                InfoViewerComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/ui-components/layout/panel/panel.component.ts\n            \n            \n                component\n            \n            \n                PanelComponent\n            \n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                    src/app/ui-components/main/mobius-editor/mobius-editor.component.ts\n            \n            \n                component\n            \n            \n                MobiusEditorComponent\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                    src/app/ui-components/main/mobius-gallery/mobius-gallery.component.ts\n            \n            \n                component\n            \n            \n                MobiusGalleryComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/ui-components/main/mobius-landing/landing.component.ts\n            \n            \n                component\n            \n            \n                LandingComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/ui-components/main/mobius-viewer/mobius-viewer.component.ts\n            \n            \n                component\n            \n            \n                MobiusViewerComponent\n            \n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                    src/app/ui-components/viewers/cesium-viewer/cesium-viewer.component.ts\n            \n            \n                component\n            \n            \n                CesiumViewerComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/app/ui-components/viewers/cesium-viewer/cesium-viewer.component.ts\n            \n            \n                class\n            \n            \n                FileUtils\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/ui-components/viewers/code-viewer/code-viewer.component.ts\n            \n            \n                component\n            \n            \n                CodeViewerComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/ui-components/viewers/geometry-viewer/geometry-viewer.component.ts\n            \n            \n                component\n            \n            \n                GeometryViewerComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/app/ui-components/viewers/module-viewer/module-viewer.component.ts\n            \n            \n                component\n            \n            \n                ModuleViewerComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/ui-components/viewers/node-library/node-library.component.ts\n            \n            \n                component\n            \n            \n                NodeLibraryComponent\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                    src/app/ui-components/viewers/parameter-viewer/parameter-viewer.component.ts\n            \n            \n                component\n            \n            \n                ParameterViewerComponent\n            \n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                    src/app/ui-components/viewers/text-viewer/text-viewer.component.ts\n            \n            \n                component\n            \n            \n                TextViewerComponent\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                    src/app/ui-components/viewers/viewer-container/viewer-container.component.ts\n            \n            \n                component\n            \n            \n                ViewerContainerComponent\n            \n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                    src/assets/modules/AllModules.ts\n            \n            \n                variable\n            \n            \n                AllModules\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/assets/modules/AllModules.ts\n            \n            \n                variable\n            \n            \n                SPACER\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^5.2.10\n        \n            @angular/cdk : ^5.2.5\n        \n            @angular/common : ^5.2.10\n        \n            @angular/compiler : ^5.2.10\n        \n            @angular/core : ^5.2.10\n        \n            @angular/forms : ^5.2.10\n        \n            @angular/material : ^5.0.0-rc.2\n        \n            @angular/platform-browser : ^5.2.10\n        \n            @angular/platform-browser-dynamic : ^5.2.10\n        \n            @angular/router : ^5.2.10\n        \n            @mapbox/togeojson : ^0.16.0\n        \n            @turf/turf : ^5.1.6\n        \n            @types/three : ^0.84.27\n        \n            angular-split : ^1.0.0-rc.0\n        \n            angular-tree-component : ^6.0.0\n        \n            cesium : ^1.43.0\n        \n            chroma-js : ^1.3.6\n        \n            circular-json : ^0.4.0\n        \n            coordinate-convert : ^1.2.4\n        \n            core-js : ^2.5.5\n        \n            gs-json : ^0.1.69\n        \n            gs-modelling : ^0.1.82\n        \n            hammerjs : ^2.0.8\n        \n            js-beautify : ^1.7.4\n        \n            mathjs : ^4.1.2\n        \n            mobius-array : 0.0.8\n        \n            mobius-csv : 0.0.6\n        \n            mobius-geojson : 0.0.14\n        \n            mobius-math : 0.0.6\n        \n            mobius-string : 0.0.9\n        \n            mobius-turf : ^0.1.16\n        \n            ng2-ace-editor : ^0.3.4\n        \n            ngx-json-viewer : ^2.2.0\n        \n            ngx-pagination : ^3.0.3\n        \n            papaparse : ^4.4.0\n        \n            rxjs : ^5.5.2\n        \n            shpjs : ^3.4.2\n        \n            three : ^0.88.0\n        \n            three-orbit-controls : ^82.1.0\n        \n            turf-modelling : ^0.1.9\n        \n            typescript-compiler : ^1.4.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EConsoleMessageType   (src/.../console.service.ts)\n                        \n                        \n                            EViewer   (src/.../EViewer.ts)\n                        \n                        \n                            InputPortTypes   (src/.../InputPortTypes.ts)\n                        \n                        \n                            KEY_CODE   (src/.../procedure-editor.component.ts)\n                        \n                        \n                            LogLevel   (src/.../console.service.ts)\n                        \n                        \n                            MODULE_KEY   (src/.../AllModules.ts)\n                        \n                        \n                            OutputPortTypes   (src/.../OutputPortTypes.ts)\n                        \n                        \n                            PortTypes   (src/.../PortTypes.ts)\n                        \n                        \n                            ProcedureTypes   (src/.../ProcedureTypes.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/global-services/console.service.ts\n    \n        \n            \n                \n                    \n                        \n                        EConsoleMessageType\n                    \n                \n                        \n                            \n                                 Print\n                            \n                        \n                        \n                            \n                                Value: print\n                            \n                        \n                        \n                            \n                                 Error\n                            \n                        \n                        \n                            \n                                Value: error\n                            \n                        \n                        \n                            \n                                 General\n                            \n                        \n                        \n                            \n                                Value: general\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        LogLevel\n                    \n                \n                        \n                            \n                                 All\n                            \n                        \n                        \n                            \n                                Value: 0\n                            \n                        \n                        \n                            \n                                 Debug\n                            \n                        \n                        \n                            \n                                Value: 1\n                            \n                        \n                        \n                            \n                                 Info\n                            \n                        \n                        \n                            \n                                Value: 2\n                            \n                        \n                        \n                            \n                                 Warn\n                            \n                        \n                        \n                            \n                                Value: 3\n                            \n                        \n                        \n                            \n                                 Error\n                            \n                        \n                        \n                            \n                                Value: 4\n                            \n                        \n                        \n                            \n                                 Fatal\n                            \n                        \n                        \n                            \n                                Value: 5\n                            \n                        \n                        \n                            \n                                 Off\n                            \n                        \n                        \n                            \n                                Value: 6\n                            \n                        \n            \n        \n\n    src/app/ui-components/viewers/EViewer.ts\n    \n        \n            \n                \n                    \n                        \n                        EViewer\n                    \n                \n                        \n                            \n                                 Viewer\n                            \n                        \n                        \n                            \n                                Value: Output\n                            \n                        \n                        \n                            \n                                 Flowchart\n                            \n                        \n                        \n                            \n                                Value: Flowchart\n                            \n                        \n                        \n                            \n                                 Editor\n                            \n                        \n                        \n                            \n                                Value: Procedure\n                            \n                        \n                        \n                            \n                                 Parameter\n                            \n                        \n                        \n                            \n                                Value: Parameters\n                            \n                        \n            \n        \n\n    src/app/base-classes/port/InputPortTypes.ts\n    \n        \n            \n                \n                    \n                        \n                        InputPortTypes\n                    \n                \n                        \n                            \n                                 Input\n                            \n                        \n                        \n                            \n                                Value: Input\n                            \n                        \n                        \n                            \n                                 ColorPicker\n                            \n                        \n                        \n                            \n                                Value: ColorPicker\n                            \n                        \n                        \n                            \n                                 Dropdown\n                            \n                        \n                        \n                            \n                                Value: Dropdown\n                            \n                        \n                        \n                            \n                                 FilePicker\n                            \n                        \n                        \n                            \n                                Value: Filepicker\n                            \n                        \n                        \n                            \n                                 URL\n                            \n                        \n                        \n                            \n                                Value: URL\n                            \n                        \n                        \n                            \n                                 Slider\n                            \n                        \n                        \n                            \n                                Value: Slider\n                            \n                        \n                        \n                            \n                                 Checkbox\n                            \n                        \n                        \n                            \n                                Value: Checkbox\n                            \n                        \n            \n        \n\n    src/app/ui-components/editors/procedure-editor/procedure-editor.component.ts\n    \n        \n            \n                \n                    \n                        \n                        KEY_CODE\n                    \n                \n                        \n                            \n                                 CUT\n                            \n                        \n                        \n                            \n                                Value: 88\n                            \n                        \n                        \n                            \n                                 COPY\n                            \n                        \n                        \n                            \n                                Value: 67\n                            \n                        \n                        \n                            \n                                 PASTE\n                            \n                        \n                        \n                            \n                                Value: 86\n                            \n                        \n                        \n                            \n                                 LEFT\n                            \n                        \n                        \n                            \n                                Value: 37\n                            \n                        \n                        \n                            \n                                 UP\n                            \n                        \n                        \n                            \n                                Value: 38\n                            \n                        \n                        \n                            \n                                 RIGHT\n                            \n                        \n                        \n                            \n                                Value: 39\n                            \n                        \n                        \n                            \n                                 DOWN\n                            \n                        \n                        \n                            \n                                Value: 40\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n                        \n                            \n                                Value: 46\n                            \n                        \n                        \n                            \n                                 CTRL\n                            \n                        \n                        \n                            \n                                Value: 17\n                            \n                        \n                        \n                            \n                                 SHIFT\n                            \n                        \n                        \n                            \n                                Value: 16\n                            \n                        \n            \n        \n\n    src/assets/modules/AllModules.ts\n    \n        \n            \n                \n                    \n                        \n                        MODULE_KEY\n                    \n                \n                        \n                            \n                                 MATH\n                            \n                        \n                        \n                            \n                                Value: math\n                            \n                        \n                        \n                            \n                                 ARRAY\n                            \n                        \n                        \n                            \n                                Value: arr\n                            \n                        \n                        \n                            \n                                 TURF\n                            \n                        \n                        \n                            \n                                Value: geo\n                            \n                        \n                        \n                            \n                                 STRING\n                            \n                        \n                        \n                            \n                                Value: str\n                            \n                        \n                        \n                            \n                                 GEOJSON\n                            \n                        \n                        \n                            \n                                Value: geo\n                            \n                        \n                        \n                            \n                                 CSV\n                            \n                        \n                        \n                            \n                                Value: io\n                            \n                        \n            \n        \n\n    src/app/base-classes/port/OutputPortTypes.ts\n    \n        \n            \n                \n                    \n                        \n                        OutputPortTypes\n                    \n                \n                        \n                            \n                                 Three\n                            \n                        \n                        \n                            \n                                 Code\n                            \n                        \n                        \n                            \n                                 Text\n                            \n                        \n                        \n                            \n                                 Console\n                            \n                        \n                        \n                            \n                                 Cesium\n                            \n                        \n            \n        \n\n    src/app/base-classes/port/PortTypes.ts\n    \n        \n            \n                \n                    \n                        \n                        PortTypes\n                    \n                \n                        \n                            \n                                 Input\n                            \n                        \n                        \n                            \n                                Value: input\n                            \n                        \n                        \n                            \n                                 Output\n                            \n                        \n                        \n                            \n                                Value: output\n                            \n                        \n            \n        \n\n    src/app/base-classes/procedure/ProcedureTypes.ts\n    \n        \n            \n                \n                    \n                        \n                        ProcedureTypes\n                    \n                \n                        \n                            \n                                 Data\n                            \n                        \n                        \n                            \n                                Value: Data\n                            \n                        \n                        \n                            \n                                 Action\n                            \n                        \n                        \n                            \n                                Value: Action\n                            \n                        \n                        \n                            \n                                 IfControl\n                            \n                        \n                        \n                            \n                                Value: If\n                            \n                        \n                        \n                            \n                                 ElseControl\n                            \n                        \n                        \n                            \n                                Value: Else\n                            \n                        \n                        \n                            \n                                 ElseIfControl\n                            \n                        \n                        \n                            \n                                Value: ElseIf\n                            \n                        \n                        \n                            \n                                 WhileControl\n                            \n                        \n                        \n                            \n                                Value: While\n                            \n                        \n                        \n                            \n                                 ForLoopControl\n                            \n                        \n                        \n                            \n                                Value: For Loop\n                            \n                        \n                        \n                            \n                                 Function\n                            \n                        \n                        \n                            \n                                Value: Function\n                            \n                        \n                        \n                            \n                                 LoopBreak\n                            \n                        \n                        \n                            \n                                Value: Loop Break\n                            \n                        \n                        \n                            \n                                 LoopContinue\n                            \n                        \n                        \n                            \n                                Value: Loop Continue\n                            \n                        \n                        \n                            \n                                 Comment\n                            \n                        \n                        \n                            \n                                Value: Comment\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/gis_module.html":{"url":"classes/gis_module.html","title":"class - gis_module","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  gis_module\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/geometry-modules/gis_module.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Module\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sld\n                            \n                            \n                                    Public\n                                srf\n                            \n                            \n                                    Private\n                                author\n                            \n                            \n                                    Private\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                byXYPoints\n                            \n                            \n                                getPlane\n                            \n                            \n                                getPoint\n                            \n                            \n                                isPlanar\n                            \n                            \n                                makeCube\n                            \n                            \n                                getAllMethodNames\n                            \n                            \n                                getAuthor\n                            \n                            \n                                getName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/geometry-modules/gis_module.ts:36\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sld\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sld:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/geometry-modules/gis_module.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            srf\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        srf:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/geometry-modules/gis_module.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            author\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        author:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Module\n\n                                \n                            \n                        \n                            \n                                    Defined in Module:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Module\n\n                                \n                            \n                        \n                            \n                                    Defined in Module:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            byXYPoints\n                            \n                            \n                        \n                    \n                \n                \n                    \nbyXYPoints()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/geometry-modules/gis_module.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Frame\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPlane\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPlane()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/geometry-modules/gis_module.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Polyline\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPoint\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPoint()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/geometry-modules/gis_module.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Point\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isPlanar\n                            \n                            \n                        \n                    \n                \n                \n                    \nisPlanar(entity: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/geometry-modules/gis_module.ts:53\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            makeCube\n                            \n                            \n                        \n                    \n                \n                \n                    \nmakeCube(size: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/geometry-modules/gis_module.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        size\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAllMethodNames\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAllMethodNames()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Module\n\n                                \n                            \n                        \n                            \n                                    Defined in Module:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Set\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAuthor\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAuthor()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Module\n\n                                \n                            \n                        \n                            \n                                    Defined in Module:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetName()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Module\n\n                                \n                            \n                        \n                            \n                                    Defined in Module:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Module } from './Module';\nimport * as THREE from 'three'\n\n//\n//\t\tMobius Classes\n//\n\nclass Point {\n}\n\nclass Polyline {\n    isPlanar():boolean {\n        return true;\n    }\n}\n\nclass Polygon {\n    isPlanar():boolean {\n        return false;\n    }\n}\n\nclass Frame{\n\txAxis: number[];\n\tyAxis: number[];\n}\n\ninterface HasIsPlanar{\n    isPlanar(): boolean;\n}\n\n\nexport class gis_module extends Module{\n\t\n\tpublic srf : any;\n\tpublic sld : any;\n\n\tconstructor(){\n\t\t// name of module, author of module\n\t\tsuper(\"gis\", \"akm\");\n\t}\n\t\n\tgetPoint(): Point{\n\t\tlet pnt: Point = new Point();\n\t\treturn pnt;\n\t}\n\n\tgetPlane(): Polyline{\n\t\tlet pln: Polyline = new Polyline();\n\t\treturn pln;\n\t}\n\n\tisPlanar(entity:T):boolean {\n   \t\treturn entity.isPlanar();\n\t}\n\n\tbyXYPoints(): Frame{\n\t\treturn new Frame();\n\t}\n\n\tmakeCube(size: number): any{\n\t\treturn new THREE.Mesh(new THREE.BoxGeometry(size, size, size));\n\t}\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMobius\nMobius is a customizable, visual programming environment for non-developers. To start using Mobius, all you need to do is:\n\nCreate an account\nAdd the function libraries you require\nCreate some default nodes (optional)\nSend a link to your personal Mobius Environment\n\nMobius Components\n\nAn Editor: To create projects\nA Gallery: Gallery to display projects created with Mobius, in your environment\n\nStyle Guidelines\nhttps://angular.io/guide/styleguide#general-naming-guidelines\nCurrent Structure\nMobius starts of in the editor route\nThe main folder - consists of the components referred to by the routes\nMain folder consists of:\n\nmobius-editor\nmobius-gallery\nmobius-landing\nmobius-viewer\n\nMobius Editor\nThe entire UI is placed in split-containers. The plugin used for this is angular-split. \nMainly, there are four components here - \n\napp_panel with panel_id='top'\napp_panel with panel_id='middle'\napp_panel with panel_id='bottom'\napp_panel with panel_id='main'\n\napp_panel is the same component. It has a uniform header, displaying the name of the currently selected node and the name of the component it contains - like the flowchart viewer, editor etc. The definition for this component can be found in the layout folder\nPanel Component\nPanel Component contains two things\n\nHeader: with the active node name and a button to maximize the panel\nng-container: to dynamically insert a component (flowchart, procedure etc)\n\nThis component was built like this to enable switching and maximizing of the panel components. \nThis component listens to the layout service and updates it's contents based on\nwhich viewer is supposed to displayed in which container. \nFor example, if the layout service changes to house to flowchart viewer in \nthe panelcomponent with name ='bottom', this component will then change to \nupdate ng-container to contain the flowchart viewer\n.. this maynot be the right approach?\nMain Components in Panel Component\nViewer Container\nViewer container contains all the viewers capable of rendering outputs. Currently, it also contains the helpviewer and module library viewer, but this needs to be shifted out\nThis also uses an ng-container to dynamically substitute the viewers\nFuture Feature:\nThis should allow for the user to add / remove different types of viewers to better visualize the data being generated by the nodes. \n!This is can all be packaged as a separate mode\nDifferent kinds of viewers available:\n\nCesiumViewerComponent\nCodeViewerComponent\nConsoleComponent\nEditorComponent\nGeometryViewerComponent\nHelpFundamentals\nHelpModel\nHelpViewerComponent\nInfoViewerComponent\nTextViewerComponent\n\nFlowchartViewerComponent (different module)\nFlowchart viewer component contains the following components: \n\nFlowchartControls\nGraphEdge\nGraphNode\n\nThis renders the nodes and edges in the graph. \n[these flowchart controls should actually be mobius file functions]\nThe flowchartControls component contains the following functionality-\n\nload_file\nnew_file\nnew_flowchart\npublish_settings\nopen_picker\nsave_file\nadd_node (anomaly - should be shifted to flowchart)\n\n(fileloaddialog component, )\nEditorComponent (different module)\nThe editor component allows you to edit the inputs and procedure code associated with a single node. it always operates on a single node. it is like manipulating the contents of a node.\nThe components used in the editorcomponent are - \n\napp-modulebox (put this functionality in a service and remove the component )\nthe functions and procedure lines that can be added\n(add input/output, add variable, add for loop, add while loop, add functions .... )\n\napp-parametereditor\nto modify input / output: acts on a single node; \nallows you to add / delete; updates names of i/o, update type of i/ol update settings for io\n\napp-procedureeditor\nrearrange different lines\ncut copy paste delete ask for help\n(use monaco editor here?)\nfill in the blanks for the procedure lines\n\n\nParameterViewer Component (should be incorporated into the flowchart)\n(shouldn't this be incorporated into the flowchart?)\n\nexecutes the flowchart\nsets the values in the node (shows the sliders etc)\n\nthere should a mobius module that maps from flowchart component to the procedure component and vice versa\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                GNU GENERAL PUBLIC LICENSE\n                   Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n                        Preamble  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n                   TERMS AND CONDITIONS\nDefinitions.\n\"This License\" refers to version 3 of the GNU General Public License.\n\"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\nTo \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\nA \"covered work\" means either the unmodified Program or a work based\non the Program.\nTo \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\nTo \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\nAn interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\nThe \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\nA \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\nThe \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\nThe \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\nThe Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\nThe Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\nAll rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\nYou may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\nConveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\nNo covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\nWhen you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\nYou may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\nYou may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\nYou may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n\nThis requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.\nA compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\nYou may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.\nA separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\nA \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\nIf you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\nThe requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\nCorresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\nWhen you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\nNotwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.\nAll other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\nIf you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\nAdditional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\nYou may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\nHowever, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\nMoreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\nTermination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\nYou are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\nEach time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\nAn \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\nYou may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\nA \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\nA contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\nEach contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\nIn the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\nIf you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\nIf, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\nA patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\nNothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\nIf conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nUse with the GNU Affero General Public License.\nNotwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\nRevised Versions of this License.\nThe Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\nEach version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\nIf the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\nLater license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\nTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\nIf the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n           END OF TERMS AND CONDITIONS\n\n  How to Apply These Terms to Your New ProgramsIf you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\nTo do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n{one line to give the program's name and a brief idea of what it does.}\nCopyright (C) {year}  {name of author}\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see http://www.gnu.org/licenses/.\n\n\nAlso add information on how to contact you by electronic and paper mail.\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n{project}  Copyright (C) {year}  {fullname}\nThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.The hypothetical commands show w' andshow c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\nhttp://www.gnu.org/licenses/.\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\nhttp://www.gnu.org/philosophy/why-not-lgpl.html.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CustomMaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GSViewer\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MobiusCesium\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_GSViewer\n\n\n\ncluster_GSViewer_declarations\n\n\n\ncluster_GSViewer_exports\n\n\n\ncluster_GSViewer_providers\n\n\n\ncluster_MobiusCesium\n\n\n\ncluster_MobiusCesium_declarations\n\n\n\ncluster_MobiusCesium_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCesiumViewerComponent\n\nCesiumViewerComponent\n\nAppModule -->\n\nCesiumViewerComponent->AppModule\n\n\n\n\n\nCodeViewerComponent\n\nCodeViewerComponent\n\nAppModule -->\n\nCodeViewerComponent->AppModule\n\n\n\n\n\nConsoleComponent\n\nConsoleComponent\n\nAppModule -->\n\nConsoleComponent->AppModule\n\n\n\n\n\nEditorComponent\n\nEditorComponent\n\nAppModule -->\n\nEditorComponent->AppModule\n\n\n\n\n\nFileLoadDialogComponent\n\nFileLoadDialogComponent\n\nAppModule -->\n\nFileLoadDialogComponent->AppModule\n\n\n\n\n\nFlowchartControlsComponent\n\nFlowchartControlsComponent\n\nAppModule -->\n\nFlowchartControlsComponent->AppModule\n\n\n\n\n\nFlowchartViewerComponent\n\nFlowchartViewerComponent\n\nAppModule -->\n\nFlowchartViewerComponent->AppModule\n\n\n\n\n\nGeometryViewerComponent\n\nGeometryViewerComponent\n\nAppModule -->\n\nGeometryViewerComponent->AppModule\n\n\n\n\n\nGraphEdgeComponent\n\nGraphEdgeComponent\n\nAppModule -->\n\nGraphEdgeComponent->AppModule\n\n\n\n\n\nHelpFundamentals\n\nHelpFundamentals\n\nAppModule -->\n\nHelpFundamentals->AppModule\n\n\n\n\n\nHelpModel\n\nHelpModel\n\nAppModule -->\n\nHelpModel->AppModule\n\n\n\n\n\nHelpViewerComponent\n\nHelpViewerComponent\n\nAppModule -->\n\nHelpViewerComponent->AppModule\n\n\n\n\n\nInfoViewerComponent\n\nInfoViewerComponent\n\nAppModule -->\n\nInfoViewerComponent->AppModule\n\n\n\n\n\nLandingComponent\n\nLandingComponent\n\nAppModule -->\n\nLandingComponent->AppModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nAppModule -->\n\nMenuComponent->AppModule\n\n\n\n\n\nMobiusAbout\n\nMobiusAbout\n\nAppModule -->\n\nMobiusAbout->AppModule\n\n\n\n\n\nMobiusEditorComponent\n\nMobiusEditorComponent\n\nAppModule -->\n\nMobiusEditorComponent->AppModule\n\n\n\n\n\nMobiusGalleryComponent\n\nMobiusGalleryComponent\n\nAppModule -->\n\nMobiusGalleryComponent->AppModule\n\n\n\n\n\nMobiusViewerComponent\n\nMobiusViewerComponent\n\nAppModule -->\n\nMobiusViewerComponent->AppModule\n\n\n\n\n\nModuleViewerComponent\n\nModuleViewerComponent\n\nAppModule -->\n\nModuleViewerComponent->AppModule\n\n\n\n\n\nModuleboxComponent\n\nModuleboxComponent\n\nAppModule -->\n\nModuleboxComponent->AppModule\n\n\n\n\n\nNodeLibraryComponent\n\nNodeLibraryComponent\n\nAppModule -->\n\nNodeLibraryComponent->AppModule\n\n\n\n\n\nPanelComponent\n\nPanelComponent\n\nAppModule -->\n\nPanelComponent->AppModule\n\n\n\n\n\nParameterEditorComponent\n\nParameterEditorComponent\n\nAppModule -->\n\nParameterEditorComponent->AppModule\n\n\n\n\n\nParameterSettingsDialogComponent\n\nParameterSettingsDialogComponent\n\nAppModule -->\n\nParameterSettingsDialogComponent->AppModule\n\n\n\n\n\nParameterViewerComponent\n\nParameterViewerComponent\n\nAppModule -->\n\nParameterViewerComponent->AppModule\n\n\n\n\n\nPortTypePipe\n\nPortTypePipe\n\nAppModule -->\n\nPortTypePipe->AppModule\n\n\n\n\n\nProcedureEditorComponent\n\nProcedureEditorComponent\n\nAppModule -->\n\nProcedureEditorComponent->AppModule\n\n\n\n\n\nProcedureItemComponent\n\nProcedureItemComponent\n\nAppModule -->\n\nProcedureItemComponent->AppModule\n\n\n\n\n\nPublishSettingsComponent\n\nPublishSettingsComponent\n\nAppModule -->\n\nPublishSettingsComponent->AppModule\n\n\n\n\n\nShortNamePipe\n\nShortNamePipe\n\nAppModule -->\n\nShortNamePipe->AppModule\n\n\n\n\n\nSimpleNamePipe\n\nSimpleNamePipe\n\nAppModule -->\n\nSimpleNamePipe->AppModule\n\n\n\n\n\nTextViewerComponent\n\nTextViewerComponent\n\nAppModule -->\n\nTextViewerComponent->AppModule\n\n\n\n\n\nViewerContainerComponent\n\nViewerContainerComponent\n\nAppModule -->\n\nViewerContainerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCustomMaterialModule\n\nCustomMaterialModule\n\nAppModule -->\n\nCustomMaterialModule->AppModule\n\n\n\n\n\nGSViewer\n\nGSViewer\n\nAppModule -->\n\nGSViewer->AppModule\n\n\n\n\n\nGSViewerComponent \n\nGSViewerComponent \n\nGSViewerComponent  -->\n\nGSViewer->GSViewerComponent \n\n\n\n\n\nMobiusCesium\n\nMobiusCesium\n\nAppModule -->\n\nMobiusCesium->AppModule\n\n\n\n\n\nMobiuscesiumComponent \n\nMobiuscesiumComponent \n\nMobiuscesiumComponent  -->\n\nMobiusCesium->MobiuscesiumComponent \n\n\n\n\n\nCodeService\n\nCodeService\n\nAppModule -->\n\nCodeService->AppModule\n\n\n\n\n\nConsoleService\n\nConsoleService\n\nAppModule -->\n\nConsoleService->AppModule\n\n\n\n\n\nExecuteService\n\nExecuteService\n\nAppModule -->\n\nExecuteService->AppModule\n\n\n\n\n\nFlowchartService\n\nFlowchartService\n\nAppModule -->\n\nFlowchartService->AppModule\n\n\n\n\n\nLayoutService\n\nLayoutService\n\nAppModule -->\n\nLayoutService->AppModule\n\n\n\n\n\nMobiusService\n\nMobiusService\n\nAppModule -->\n\nMobiusService->AppModule\n\n\n\n\n\nModuleService\n\nModuleService\n\nAppModule -->\n\nModuleService->AppModule\n\n\n\n\n\nNodeLibraryService\n\nNodeLibraryService\n\nAppModule -->\n\nNodeLibraryService->AppModule\n\n\n\n\n\nGSViewerComponent\n\nGSViewerComponent\n\nGSViewer -->\n\nGSViewerComponent->GSViewer\n\n\n\n\n\nGroupsComponent\n\nGroupsComponent\n\nGSViewer -->\n\nGroupsComponent->GSViewer\n\n\n\n\n\nSettingComponent\n\nSettingComponent\n\nGSViewer -->\n\nSettingComponent->GSViewer\n\n\n\nMobiusCesium -->\n\nSettingComponent->MobiusCesium\n\n\n\n\n\nToolwindowComponent\n\nToolwindowComponent\n\nGSViewer -->\n\nToolwindowComponent->GSViewer\n\n\n\n\n\nViewerComponent\n\nViewerComponent\n\nGSViewer -->\n\nViewerComponent->GSViewer\n\n\n\nMobiusCesium -->\n\nViewerComponent->MobiusCesium\n\n\n\n\n\nDataService\n\nDataService\n\nGSViewer -->\n\nDataService->GSViewer\n\n\n\nMobiusCesium -->\n\nDataService->MobiusCesium\n\n\n\n\n\nDataComponent\n\nDataComponent\n\nMobiusCesium -->\n\nDataComponent->MobiusCesium\n\n\n\n\n\nDisplayComponent\n\nDisplayComponent\n\nMobiusCesium -->\n\nDisplayComponent->MobiusCesium\n\n\n\n\n\nMobiuscesiumComponent\n\nMobiuscesiumComponent\n\nMobiusCesium -->\n\nMobiuscesiumComponent->MobiusCesium\n\n\n\n\n\nPublishComponent\n\nPublishComponent\n\nMobiusCesium -->\n\nPublishComponent->MobiusCesium\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\nMobiusCesium -->\n\nSelectComponent->MobiusCesium\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            4 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        44 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        11 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        3 pipes\n                    \n                \n            \n            \n                \n                    \n                        \n                        43 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        10 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AllModules   (src/.../AllModules.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            getStringForProcedureType   (src/.../modulebox.component.ts)\n                        \n                        \n                            MOBIUS   (src/.../mobius.constants.ts)\n                        \n                        \n                            SPACER   (src/.../AllModules.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/assets/modules/AllModules.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AllModules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AllModules:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SPACER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        SPACER:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"_\"\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/ui-components/controls/modulebox/modulebox.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getStringForProcedureType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getStringForProcedureType:     \n\n                    \n                \n                    \n                        \n                            Default value : function(type: ProcedureTypes): string{\n\tlet value:string = \"\";\n\n\tswitch(type){\n\n\t\tcase ProcedureTypes.Data: \n\t\t\tvalue = \"Variable\";\n\t\t\tbreak;\n\n\t\tcase ProcedureTypes.Action: \n\t\t\tvalue = \"Function\";\n\t\t\tbreak;\n\n\t\tcase ProcedureTypes.IfControl: \n\t\t\tvalue = \"If\";\n\t\t\tbreak;\n\n\t\tcase ProcedureTypes.ElseControl: \n\t\t\tvalue = \"Else\";\n\t\t\tbreak;\n\n\t\tcase ProcedureTypes.ElseIfControl: \n\t\t\tvalue = \"Else-If\";\n\t\t\tbreak;\n\n\t\tcase ProcedureTypes.ForLoopControl: \n\t\t\tvalue = \"For-loop\";\n\t\t\tbreak;\n\n\t\tcase ProcedureTypes.WhileControl: \n\t\t\tvalue = \"While-loop\";\n\t\t\tbreak;\n\n\t\tcase ProcedureTypes.LoopBreak: \n\t\t\tvalue = \"Break\";\n\t\t\tbreak;\n\n\t\tcase ProcedureTypes.LoopContinue: \n\t\t\tvalue = \"Continue\";\n\t\t\tbreak;\n\n\t\tcase ProcedureTypes.Comment: \n\t\t\tvalue = \"Comment\";\n\t\t\tbreak;\n\t}\n\n\treturn value;\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/global-services/mobius.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MOBIUS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MOBIUS:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tPROPERTY: {\n\t\tNODE: \"MOBIUS_NODES\",\n\t\tFLOWCHART: \"MOBIUS_FC\"\n\t}\n}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
